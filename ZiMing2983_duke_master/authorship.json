[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"# duke project template","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"3. After that, locate the `src/main/java/duke.java` file, right-click it, and choose `Run duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZiMing2983":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZiMing2983":3,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"E | 0 | class | 2023-10-30T00:00 | 2023-10-31T00:00","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"D | 1 | work | 2023-11-01T00:00","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"ZiMing2983":2}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileRead;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.parser.DukeParser;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":" * The Duke class represents a task management application.","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":" * Users can interact with it through a command-line interface.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"public class Duke {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  private final DukeParser dukeParser;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"  public final UserInterface userInterface;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"  private final FileRead fileRead;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"  private final FileStorage fileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"  private final List\u003cTask\u003e taskList;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"   * Initializes the Duke application by creating instances of the user interface,","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   * file storage, file reader, task list, and parser.","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"  public Duke() {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"    userInterface \u003d new UserInterface();  // Initialize the user interface","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"    fileStorage \u003d new FileStorage();","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"    fileRead \u003d new FileRead();             // Initialize the file reader","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"    taskList \u003d new ArrayList\u003c\u003e();          // Initialize the task list","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"    dukeParser \u003d new DukeParser();         // Initialize the parser","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"   * The main method of the Duke application. It creates an instance of the Duke","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"   * class and starts the application.","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"   * @param args Command-line arguments (not used in this application).","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"  public static void main(String[] args) {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"    Duke duke \u003d new Duke();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"    duke.start();","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"   * Starts the Duke application, greets the user, and handles user input.","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"  public void start() {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"    fileRead.getSavedTask(taskList);","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"    // Greet the user","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"    userInterface.messageDisplay.hello();","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"    while (true) {","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"      String userInput \u003d this.userInterface.userInput.getUserInput();","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"      System.out.println(UserInterface.MessageDisplay.LINE_BREAK);","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"      if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"        break;","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"      } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"        dukeParser.parseUserInput(fileStorage,userInterface.messageDisplay, taskList, userInput);","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"      }","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"    userInterface.userInput.closeScanner();","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"    userInterface.messageDisplay.goodbye();","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"  public List\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"    return taskList;","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":74}},{"path":"src/main/java/duke/command/AddDeadLineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":" * Represents a command to add a Deadline task to the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"public class AddDeadLineCommand extends AddTaskCommand {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  // The due date and time for Deadline Task","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  private final LocalDateTime taskDueDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs an `AddDeadLineCommand` with the specified task name and due date.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName    The name of the deadline task.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskDueDate The due date and time of the deadline task.","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"  public AddDeadLineCommand(String taskName, LocalDateTime taskDueDate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"    super(taskName);","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"    this.taskDueDate \u003d taskDueDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command by creating a `DeadlineTask` and adding it to the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks to which the new Deadline task will be added.","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(FileStorage fileStorage,MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"    // Create a `DeadlineTask` with the specified task name and task due date","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"    Task task \u003d new DeadlineTask(taskName, taskDueDate);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    // Add the created `DeadlineTask` to the task list","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"    addTask(fileStorage,display, taskList, task);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":44}},{"path":"src/main/java/duke/command/AddEventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":" * Represents a command to add an event task to the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"public class AddEventCommand extends AddTaskCommand {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  // The start date and time of the event task","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  private final LocalDateTime taskFromDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"  // The end date and time of the event task","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  private final LocalDateTime taskToDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs an `AddEventCommand` with the specified task name, start date, and end date.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName     The name of the event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskFromDate The start date and time of the event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskToDate   The end date and time of the event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"  public AddEventCommand(String taskName, LocalDateTime taskFromDate, LocalDateTime taskToDate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"    super(taskName);","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"    this.taskFromDate \u003d taskFromDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"    this.taskToDate \u003d taskToDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command by creating an `EventTask` and adding it to the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks to which the new Event task will be added.","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(FileStorage fileStorage, MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"    // Create an `EventTask` with the specified name, start date, and end date","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"    Task task \u003d new EventTask(taskName, taskFromDate, taskToDate);","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"    // Add the created `EventTask` to the task list","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"    addTask(fileStorage,display, taskList, task);","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":48}},{"path":"src/main/java/duke/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":" * Represents an `AddTaskCommand` that adds tasks to the Duke application.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"abstract class AddTaskCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  // The name of the task to be added","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  protected final String taskName;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs an `AddTaskCommand` with the specified task name.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName The name of the task to be added.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"  public AddTaskCommand(String taskName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    this.taskName \u003d taskName;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   * Adds a task to the task list and prompts the user with a successfully added message.","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks to which the new task will be added.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"   * @param task     The task to be added.","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"  protected void addTask(FileStorage fileStorage, MessageDisplay display, List\u003cTask\u003e taskList, Task task) {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    taskList.add(task);","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"    int itemIndex \u003d Task.getTotalTasks() - 1;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"    storeDuke(fileStorage, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"    display.addedMessage(taskList, itemIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":41}},{"path":"src/main/java/duke/command/AddTodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":" * Represents a command to add a todo task to the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"public class AddTodoCommand extends AddTaskCommand {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs an `AddTodoCommand` with the specified task name.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName The name of the todo task.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"  public AddTodoCommand(String taskName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"    super(taskName);","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command by creating a `TodoTask` and adding it to the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks to which the new todo task will be added.","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(FileStorage fileStorage, MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"    // Create a `TodoTask` with the specified name","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"    Task task \u003d new TodoTask(taskName);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"    // Add the created todo task to the task list","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    addTask(fileStorage,display, taskList, task);","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":38}},{"path":"src/main/java/duke/command/CheckTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":" * Represents a command for checking tasks on a specific date.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"abstract class CheckTaskCommand {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command to check tasks on the specified date.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   * @param display     The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList    The list of tasks to check for the specified date.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   * @param checkedDate The date for which tasks should be checked.","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"  public abstract void execute(MessageDisplay display, List\u003cTask\u003e taskList, LocalDate checkedDate) throws DukeException;","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"  public abstract void execute(MessageDisplay display, List\u003cTask\u003e taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":26}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.dukeexceptions.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":" * Represents a base command in the Duke application.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"abstract class Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks that the command will operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DukeException If an error occurs while executing the command.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"  public abstract void execute(FileStorage fileStorage,MessageDisplay display, List\u003cTask\u003e taskList) throws DukeException;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"   * Stores the task list for future loading of tasks.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks to be stored.","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  public void storeDuke(FileStorage fileStorage, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"    fileStorage.store(taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":32}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `DeleteCommand` to delete a task from the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  // The index of the task to be deleted.","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  private final int itemIndex;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a `DeleteCommand` with the specified item index to delete.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   * @param itemIndex The index of the task to be deleted.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"  public DeleteCommand(int itemIndex) {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    this.itemIndex \u003d itemIndex;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command by removing the specified task from the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks from which the task will be deleted.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(FileStorage fileStorage, MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"    // Reduce the size of the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    Task.removeTask();","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"    // Remove the task from the task list","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"    Task deletedTask \u003d taskList.remove(itemIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"    // Display a message indicating the deleted task","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"    display.deleteMessage(deletedTask);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":42}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `ListCommand` to list and display user\u0027s tasks.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"public class ListCommand extends CheckTaskCommand {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"   * Displays the list of user tasks.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of user tasks to be displayed.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"  public static void printList(MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"    if (taskList.isEmpty()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"      display.print(\"There\u0027s nothing in your list\");","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"      return;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"    display.print(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"    for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"      System.out.println((i + 1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"    System.out.println(display.LINE_BREAK);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command to check tasks on the specified date.","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"   * @param display     The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList    The list of tasks to check for the specified date.","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"   * @param checkedDate The date for which tasks should be checked.","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(MessageDisplay display, List\u003cTask\u003e taskList, LocalDate checkedDate) {","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command by displaying the list of user tasks.","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of user tasks to be displayed.","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"    // Call the printList method to display the tasks","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"    printList(display, taskList);","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":56}},{"path":"src/main/java/duke/command/MarkAsCompletedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `MarkAsCompletedCommand` to mark a task as completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"public class MarkAsCompletedCommand extends ModifyTaskCommand {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a `MarkAsCompletedCommand` with the specified item index.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   * @param itemIndex The index of the task to mark as completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  public MarkAsCompletedCommand(int itemIndex) {","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"    super(itemIndex);","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command by marking the specified task as completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks in which the task will be marked as completed.","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(FileStorage fileStorage, MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"    // Get the task to mark as completed from the task list","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"    Task task \u003d taskList.get(itemIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"    if (task.isCompleted()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"      // If the task is already completed, prompt the user","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"      display.alreadyMark(task.getTaskName());","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"      // Mark the task as completed and display a completion message","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"      task.markAsCompleted();","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"      storeDuke(fileStorage, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"      display.completeMessage(taskList, itemIndex);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":43}},{"path":"src/main/java/duke/command/MarkAsInCompletedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `MarkAsInCompletedCommand` to mark a task as incomplete.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"public class MarkAsInCompletedCommand extends ModifyTaskCommand {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a `MarkAsInCompletedCommand` with the specified item index.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   * @param itemIndex The index of the task to mark as incomplete.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  public MarkAsInCompletedCommand(int itemIndex) {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"    super(itemIndex);","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command by marking the specified task as incomplete.","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks in which the task will be marked as incomplete.","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(FileStorage fileStorage, MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"    // Get the task to mark as incomplete from the task list using the index.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"    Task task \u003d taskList.get(itemIndex);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"    if (!task.isCompleted()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"      // If the task is not completed, display a message","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"      display.notMark(task.getTaskName());","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"      // Mark the task as not completed and display a message to prompt the user.","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"      task.markAsNotCompleted();","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"      storeDuke(fileStorage, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"      display.unCompleteMessage(taskList, itemIndex);","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":43}},{"path":"src/main/java/duke/command/ModifyTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"abstract class ModifyTaskCommand extends Command {","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"  protected final int itemIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"  public ModifyTaskCommand(int itemIndex) {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"    this.itemIndex \u003d itemIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(FileStorage fileStorage, MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"ZiMing2983":20}},{"path":"src/main/java/duke/command/OnCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":" * Represents an `OnCommand` to list and display user\u0027s tasks as of a specific date.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"public class OnCommand extends CheckTaskCommand {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"   * Displays the list of user tasks as of the specified date.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * @param display   The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList  The list of user tasks to be checked.","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   * @param checkDate The specific date for which tasks should be displayed.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"  public static void checkTasks(MessageDisplay display, List\u003cTask\u003e taskList, LocalDate checkDate) {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"    // Check if there are no tasks in the list","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    if (Task.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"      display.print(\"There\u0027s nothing in your list\");","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"      return;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"    // Display the date and the tasks as of that date","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"    display.print(String.format(\"Here are the tasks in your list as of %s\", checkDate.toString()));","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"    for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"      // Check if the task should be displayed based on the date","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"      if (taskList.get(i).checkDate(checkDate)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"        System.out.println((i + 1) + \".\" + taskList.get(i).toString());","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"      }","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    System.out.println(display.LINE_BREAK);","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"   * Executes the command by displaying the list of user tasks as of a specified date.","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"   * @param display     The message display interface to show messages to the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList    The list of user tasks to be checked.","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"   * @param checkedDate The specific date for which tasks should be displayed.","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(MessageDisplay display, List\u003cTask\u003e taskList, LocalDate checkedDate) {","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"    // Call the checkTasks method to display the tasks as of the specified date","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"    checkTasks(display, taskList, checkedDate);","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"   * @param display","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"  public void execute(MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":59}},{"path":"src/main/java/duke/dukeexceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The DukeException class is a custom exception class for the Duke application.","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * It extends the base Exception class and is used to represent exceptional conditions","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" * specific to the Duke application.","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new DukeException with the specified error message.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"   * @param message The error message associated with the exception.","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  public DukeException(String message) {","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"    super(message);","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":20}},{"path":"src/main/java/duke/dukeexceptions/EmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The EmptyCommandException class is to indicate that the user","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * did not provide any command when interacting with the Duke application.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class EmptyCommandException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a message that informs the user","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * that no command was provided and asks them to try again.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  public EmptyCommandException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"    super(\"You did not provide any command. Please try again.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":18}},{"path":"src/main/java/duke/dukeexceptions/EmptyDeadlineArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The EmptyDeadlineArgumentException class is used to indicate that the user","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * did not provide any details for a deadline task.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class EmptyDeadlineArgumentException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new EmptyDeadlineArgumentException to informs the user","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * that no details were provided for the deadline task and provides","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   * an example format for how the information should be provided.","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  public EmptyDeadlineArgumentException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    super(\"You did not provide any details on your deadline task.\"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"        + \" Please provide in the format of \u003cdeadline + Task Name + /by + by time\u003e.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":20}},{"path":"src/main/java/duke/dukeexceptions/EmptyEventArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The EmptyEventArgumentException class is used to indicate that the user","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * did not provide any details for an event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class EmptyEventArgumentException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new EmptyEventArgumentException to informs the user","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * that no details were provided for the event task and provides","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   * an example format for how the information should be provided.","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  public EmptyEventArgumentException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    super(\"You did not provide any details on your event task. \"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"        + \"Please provide in the format of \"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"        + \"\u003cevent + Task Name + /from + From time + /to + To time\u003e.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":21}},{"path":"src/main/java/duke/dukeexceptions/EmptyOnArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The EmptyOnArgumentException class is used to indicate that","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * the user did not provide a specific date when checking for tasks on a particular date.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class EmptyOnArgumentException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new EmptyOnArgumentException with a predefined error message.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * This message informs the user that they need to provide a specific date in a particular format","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   * to check if a task exists on that date.","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  public EmptyOnArgumentException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    super(\"Please provide the specific date that you want to check\"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"        + \" if a task exists in the format of \u003con task date\u003e\");","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":20}},{"path":"src/main/java/duke/dukeexceptions/EmptyTodoArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The EmptyTodoArgumentException class is used to indicate that the user","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * did not provide any details for a to-do task.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class EmptyTodoArgumentException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new EmptyTodoArgumentException to informs the user","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * that no details were provided for the to-do task and provides","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   * an example format for how the information should be provided.","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  public EmptyTodoArgumentException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    super(\"You did not provide any details on your to-do task.\"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"        + \" Please provide in the format of \u003cTodo + Task Name\u003e.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":20}},{"path":"src/main/java/duke/dukeexceptions/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The InvalidCommandException class is used to indicate that the user","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * entered an invalid or unrecognized command.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new InvalidCommandException to informs the user","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * that the command they entered is not recognized by the Duke application.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  public InvalidCommandException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"    super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":18}},{"path":"src/main/java/duke/dukeexceptions/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The InvalidDateFormatException class is used to indicate that the user","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * provided a date in an invalid format.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class InvalidDateFormatException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new InvalidDateFormatException to informs the user","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * that the date format they provided is invalid and provides an example format.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  public InvalidDateFormatException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"    super(\"Please provide date in the format of yyyy-mm-dd hh:mm:ss\");","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":18}},{"path":"src/main/java/duke/dukeexceptions/InvalidNumberFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The InvalidNumberFormatException class is used to indicate that the user","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * provided an invalid number or numeric input.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class InvalidNumberFormatException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new InvalidNumberFormatException with a specified error message.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   * @param message The error message indicating the provided value is not a valid number.","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  public InvalidNumberFormatException(String message) {","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    super(message + \" is not a valid number! Please try again.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new InvalidNumberFormatException with","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"   * a generic error message for an invalid number.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"  public InvalidNumberFormatException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"    super(\"Invalid Number! Please try again.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":28}},{"path":"src/main/java/duke/dukeexceptions/InvalidTaskFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The InvalidTaskFormatException class is used to indicate that the user","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * provided a task in an invalid format.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class InvalidTaskFormatException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new InvalidTaskFormatException with a specified task type.","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskType The type of task (e.g., \"deadline\" or \"event\") for which the format is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DukeException if the task type is unknown or unsupported.","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  public InvalidTaskFormatException(String taskType) throws DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"    super(getErrorMessage(taskType));","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"   * Generates an error message based on the provided task type.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskType The type of task (e.g., \"deadline\" or \"event\") for which the format is invalid.","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"   * @return The error message indicating the invalid task format.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DukeException if the task type is unknown or unsupported.","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"  private static String getErrorMessage(String taskType) throws DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"    switch (taskType) {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"      case \"deadline\":","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"        return \"Invalid format for Deadline task. Please provide in the format of \"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"            + \"\u003cdeadline + Task Name + /by + yyyy-MM-dd HH:mm\u003e\";","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"      case \"event\":","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"        return \"Invalid format for Event task. Please provide in the format of \"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"            + \"\u003cevent + Duke.Task.Task Name + /from + \"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"            + \"yyyy-MM-dd HH:mm:ss + /to + yyyy-MM-dd HH:mm\u003e\";","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"      default:","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"        throw new DukeException(\"Unknown task type: \" + taskType);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":42}},{"path":"src/main/java/duke/dukeexceptions/TaskNotFoundException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.dukeexceptions;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * The TaskNotFoundException class is used to indicate that","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" * the Duke application cannot find a specified task.","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"public class TaskNotFoundException extends DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a new TaskNotFoundException to informs the user","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * that the Duke application couldn\u0027t find the specified task.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  public TaskNotFoundException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"    super(\"OOPS!!! I\u0027m sorry, but I can\u0027t find this task!\");","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":18}},{"path":"src/main/java/duke/filehandler/FileCorruptedException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.filehandler;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * Represents an `FileCorruptedException` for a corrupted Duke data file.","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"class FileCorruptedException extends duke.filehandler.FileException {","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"  public FileCorruptedException() {","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"    super(\"File is corrupted, proceed to start a new session without data loading.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":13}},{"path":"src/main/java/duke/filehandler/FileException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.filehandler;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `FileException` class for file-related exceptions in Duke.","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"abstract class FileException extends Exception {","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"  public FileException(String message) {","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"    super(message);","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":13}},{"path":"src/main/java/duke/filehandler/FileHandler.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.filehandler;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `FileHandler` class for handling files in Duke.","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"abstract class FileHandler {","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"  // The default file path for Duke data","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"  String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":12}},{"path":"src/main/java/duke/filehandler/FileRead.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.filehandler;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.dukeexceptions.InvalidNumberFormatException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.parser.DukeParser;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.DeadlineTask;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.EventTask;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.TodoTask;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `FileRead` class for reading and loading saved tasks from Duke\u0027s data file.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"public class FileRead extends FileHandler {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"   * Reads and loads saved tasks from a file into the task list.","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks to load the saved tasks into.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  public void getSavedTask(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"    try {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"      // Create a FileReader to open the file","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"      FileReader fileReader \u003d new FileReader(filePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"      // Create a BufferedReader to read the file efficiently","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"      BufferedReader bufferedReader \u003d new BufferedReader(fileReader);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"      String inputs;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"      // Read each line from the file until the end is reached","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"      while ((inputs \u003d bufferedReader.readLine()) !\u003d null) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"        String[] input \u003d inputs.replaceAll(\" \", \"\").split(\"\\\\|\");","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"        if (input.length \u003c\u003d 2 || input.length \u003e 5) {","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"          throw new FileCorruptedException();","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"        String taskType \u003d input[0];","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"        boolean isCompleted;","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"        try {","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"          int temp \u003d DukeParser.parseInteger(input[1]);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"          isCompleted \u003d temp \u003d\u003d 1;","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"        } catch (NumberFormatException | InvalidNumberFormatException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"          throw new FileCorruptedException();","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"        String taskName \u003d input[2];","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"        Task task;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"        switch (taskType) {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"          case \"T\":","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"            if (input.length !\u003d 3) {","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"              throw new FileCorruptedException();","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"            task \u003d new TodoTask(taskName, isCompleted);","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"          case \"D\":","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"            if (input.length !\u003d 4) {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"              throw new FileCorruptedException();","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"            try {","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"              LocalDateTime taskDueDate \u003d DukeParser.parseDateTimeOrDate(input[3]);","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"              task \u003d new DeadlineTask(taskName, isCompleted, taskDueDate);","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"              throw new FileCorruptedException();","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"          case \"E\":","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"            if (input.length !\u003d 5) {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"              throw new FileCorruptedException();","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"            try {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"ZiMing2983"},"content":"              LocalDateTime taskFrom \u003d DukeParser.parseDateTimeOrDate(input[3]);","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"ZiMing2983"},"content":"              LocalDateTime taskTo \u003d DukeParser.parseDateTimeOrDate(input[4]);","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"ZiMing2983"},"content":"              task \u003d new EventTask(taskName, isCompleted, taskFrom, taskTo);","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"ZiMing2983"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"ZiMing2983"},"content":"              throw new FileCorruptedException();","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ZiMing2983"},"content":"            break;","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"ZiMing2983"},"content":"          default:","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"ZiMing2983"},"content":"            throw new FileCorruptedException();","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"ZiMing2983"},"content":"        taskList.add(task);","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"ZiMing2983"},"content":"      }","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"ZiMing2983"},"content":"      // Close the BufferedReader and FileReader to release system resources","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"ZiMing2983"},"content":"      bufferedReader.close();","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"ZiMing2983"},"content":"      fileReader.close();","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"ZiMing2983"},"content":"    } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"ZiMing2983"},"content":"      System.out.println(\"No saved tasks found, proceed to start.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"ZiMing2983"},"content":"    } catch (FileCorruptedException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"ZiMing2983"},"content":"      System.out.printf(\"%s\\n%s\\n\", e.getMessage(),","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"ZiMing2983"},"content":"          duke.userinterface.UserInterface.MessageDisplay.LINE_BREAK);","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"ZiMing2983"},"content":"    } catch (IOException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"ZiMing2983"},"content":"      e.printStackTrace(); // Handle any exceptions that may occur","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":100}},{"path":"src/main/java/duke/filehandler/FileStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.filehandler;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import java.io.File;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `FileStorage` class for storing the user\u0027s task list as a Duke\u0027s data file.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"public class FileStorage extends FileHandler {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   * Stores the list of tasks in a file.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks to be stored in the file.","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"  public void store(List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"    File outputFile \u003d new File(filePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    try {","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"      // Check if the file exists, and create it if it doesn\u0027t","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"      if (!outputFile.exists()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"        outputFile.getParentFile().mkdirs();","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"        outputFile.createNewFile();","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"      }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"      // Open the file for writing","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"      try (FileOutputStream fileOutputStream \u003d new FileOutputStream(outputFile, false);","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"           PrintWriter printWriter \u003d new PrintWriter(fileOutputStream)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"        // Append output to the file","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"        for (Task task : taskList) {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"          printWriter.println(task.toFile());","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"      }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"    } catch (Exception e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"      e.printStackTrace();","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":42}},{"path":"src/main/java/duke/parser/DukeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.command.AddDeadLineCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import duke.command.AddEventCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import duke.command.AddTodoCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import duke.command.DeleteCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import duke.command.ListCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"import duke.command.MarkAsCompletedCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"import duke.command.MarkAsInCompletedCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"import duke.command.OnCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"import duke.dukeexceptions.*;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"import duke.userinterface.UserInterface.MessageDisplay;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"import duke.filehandler.FileStorage;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":" * The `DukeParser` class is responsible for parsing user input and converting it into","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":" * commands and parameters for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"public class DukeParser {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"  private static final int FROM_KEYWORD_LENGTH \u003d 5;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  private static final int TO_KEYWORD_LENGTH \u003d 3;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"  private static final int BY_KEYWORD_LENGTH \u003d 3;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"  // Date and time format for parsing","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"  private static final DateTimeFormatter dateTimeFormatter;","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"  private static final DateTimeFormatter dateFormatter;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"  static {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"    dateFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"    dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"   * Parses a date and time string and returns a `LocalDateTime` object.","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"   * @param dateTimeString The date and time string to be parsed.","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"   * @return A `LocalDateTime` object representing the parsed date and time.","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DateTimeParseException if the string cannot be parsed as a valid date and time.","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"  private static LocalDateTime parseDateTime(String dateTimeString) throws DateTimeParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"    return LocalDateTime.parse(dateTimeString, dateTimeFormatter);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"   * Parses a date string and returns a `LocalDate` object.","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"   * @param dateString The date string to be parsed.","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"   * @return A `LocalDate` object representing the parsed date.","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DateTimeParseException if the string cannot be parsed as a valid date.","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"  private static LocalDate parseDate(String dateString) throws DateTimeParseException {","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"    return LocalDate.parse(dateString, dateFormatter);","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"   * Parses a date and time string or a date string and returns a `LocalDateTime` object.","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"   * @param dateTimeString The date and time string to be parsed.","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"   * @return A `LocalDateTime` object representing the parsed date and time.","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DateTimeParseException if the string cannot be parsed as a valid date and time.","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"  public static LocalDateTime parseDateTimeOrDate(String dateTimeString) {","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"    if (dateTimeString.contains(\"T\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"      return parseDateTime(dateTimeString.replaceAll(\"T\",\" \"));","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"    } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"ZiMing2983"},"content":"      return parseDate(dateTimeString).atStartOfDay();","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"ZiMing2983"},"content":"   * Parses an integer from a string and returns it.","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"ZiMing2983"},"content":"   * @param integer The string containing the integer.","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"ZiMing2983"},"content":"   * @return The parsed integer.","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"ZiMing2983"},"content":"   * @throws InvalidNumberFormatException if the string is not a valid integer.","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"ZiMing2983"},"content":"  public static Integer parseInteger(String integer) throws InvalidNumberFormatException {","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"ZiMing2983"},"content":"    try {","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"ZiMing2983"},"content":"      return Integer.parseInt(integer);","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"ZiMing2983"},"content":"    } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"ZiMing2983"},"content":"      throw new InvalidNumberFormatException(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"ZiMing2983"},"content":"   * Parse the user\u0027s input into commands and parameters for execution.","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"ZiMing2983"},"content":"   * @param display   The message display for showing output.","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList  The list of tasks to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"ZiMing2983"},"content":"   * @param userInput The user\u0027s input string of commands.","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"ZiMing2983"},"content":"  public void parseUserInput(FileStorage fileStorage,MessageDisplay display, List\u003cTask\u003e taskList, String userInput) {","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"ZiMing2983"},"content":"    try {","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"ZiMing2983"},"content":"      String[] inputs \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"ZiMing2983"},"content":"      if (inputs.length \u003d\u003d 0 || userInput.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"ZiMing2983"},"content":"        throw new EmptyCommandException();","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"ZiMing2983"},"content":"      }","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"ZiMing2983"},"content":"      String command \u003d inputs[0];","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"ZiMing2983"},"content":"      executeCommand(fileStorage,display, taskList, command, userInput);","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"ZiMing2983"},"content":"    } catch (DukeException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"ZiMing2983"},"content":"      System.out.printf(\"%s\\n%s\\n\", e.getMessage(), MessageDisplay.LINE_BREAK);","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"ZiMing2983"},"content":"   * Execute the user\u0027s command.","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"ZiMing2983"},"content":"   * @param display   The message display for showing output.","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList  The list of tasks to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"ZiMing2983"},"content":"   * @param command   The parsed user command.","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"ZiMing2983"},"content":"   * @param userInput The user\u0027s remaining string of commands excluding the command string.","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"ZiMing2983"},"content":"  private void executeCommand(FileStorage fileStorage,MessageDisplay display, List\u003cTask\u003e taskList, String command, String userInput) throws DukeException {","lastModifiedDate":"2023-10-30"},{"lineNumber":125,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"ZiMing2983"},"content":"    String arguments \u003d userInput.substring(command.length()).trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"ZiMing2983"},"content":"    switch (command) {","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"ZiMing2983"},"content":"      case \"list\":","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"ZiMing2983"},"content":"        executeListCommand(display, taskList);","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"ZiMing2983"},"content":"        break;","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"ZiMing2983"},"content":"      case \"todo\":","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"ZiMing2983"},"content":"        executeTodoCommand(fileStorage,display, taskList, arguments);","lastModifiedDate":"2023-10-30"},{"lineNumber":133,"author":{"gitId":"ZiMing2983"},"content":"        break;","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"ZiMing2983"},"content":"      case \"deadline\":","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"ZiMing2983"},"content":"        executeDeadlineCommand(fileStorage,display, taskList, arguments);","lastModifiedDate":"2023-10-30"},{"lineNumber":136,"author":{"gitId":"ZiMing2983"},"content":"        break;","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"ZiMing2983"},"content":"      case \"event\":","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"ZiMing2983"},"content":"        executeEventCommand(fileStorage,display, taskList, arguments);","lastModifiedDate":"2023-10-30"},{"lineNumber":139,"author":{"gitId":"ZiMing2983"},"content":"        break;","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"ZiMing2983"},"content":"      case \"on\":","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"ZiMing2983"},"content":"        executeOnCommand(display, taskList, arguments);","lastModifiedDate":"2023-10-29"},{"lineNumber":142,"author":{"gitId":"ZiMing2983"},"content":"        break;","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"ZiMing2983"},"content":"      case \"delete\":","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"ZiMing2983"},"content":"      case \"mark\":","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"ZiMing2983"},"content":"      case \"unmark\":","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"ZiMing2983"},"content":"        modifyTask(fileStorage,display, taskList, userInput);","lastModifiedDate":"2023-10-30"},{"lineNumber":147,"author":{"gitId":"ZiMing2983"},"content":"        break;","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"ZiMing2983"},"content":"      default:","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"ZiMing2983"},"content":"        throw new InvalidCommandException();","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"ZiMing2983"},"content":"   * Execute the user\u0027s \"list\" command.","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display for showing output.","lastModifiedDate":"2023-10-30"},{"lineNumber":157,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":158,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"ZiMing2983"},"content":"  private void executeListCommand(MessageDisplay display, List\u003cTask\u003e taskList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"ZiMing2983"},"content":"    new ListCommand().execute(display, taskList);","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"ZiMing2983"},"content":"   * Execute the \"todo\" task command.","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"ZiMing2983"},"content":"   * @param display  The message display for showing output.","lastModifiedDate":"2023-10-30"},{"lineNumber":168,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList The list of tasks to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":169,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName The name of the todo task.","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DukeException if there\u0027s an issue with the command or input.","lastModifiedDate":"2023-10-30"},{"lineNumber":171,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"ZiMing2983"},"content":"  private void executeTodoCommand(FileStorage fileStorage, MessageDisplay display, List\u003cTask\u003e taskList, String taskName) throws DukeException {","lastModifiedDate":"2023-10-30"},{"lineNumber":173,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":174,"author":{"gitId":"ZiMing2983"},"content":"    if (taskName.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":175,"author":{"gitId":"ZiMing2983"},"content":"      throw new EmptyTodoArgumentException();","lastModifiedDate":"2023-10-24"},{"lineNumber":176,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":177,"author":{"gitId":"ZiMing2983"},"content":"    new AddTodoCommand(taskName).execute(fileStorage,display, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":178,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":179,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":181,"author":{"gitId":"ZiMing2983"},"content":"   * Execute the \"deadline\" task command.","lastModifiedDate":"2023-10-24"},{"lineNumber":182,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":183,"author":{"gitId":"ZiMing2983"},"content":"   * @param display   The message display for showing output.","lastModifiedDate":"2023-10-30"},{"lineNumber":184,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList  The list of tasks to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":185,"author":{"gitId":"ZiMing2983"},"content":"   * @param arguments The user\u0027s input string after the deadline task command.","lastModifiedDate":"2023-10-24"},{"lineNumber":186,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DukeException if there\u0027s an issue with the command or input.","lastModifiedDate":"2023-10-30"},{"lineNumber":187,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":188,"author":{"gitId":"ZiMing2983"},"content":"  private void executeDeadlineCommand(FileStorage fileStorage,MessageDisplay display, List\u003cTask\u003e taskList, String arguments) throws DukeException {","lastModifiedDate":"2023-10-30"},{"lineNumber":189,"author":{"gitId":"ZiMing2983"},"content":"    // Check for empty arguments","lastModifiedDate":"2023-10-24"},{"lineNumber":190,"author":{"gitId":"ZiMing2983"},"content":"    if (arguments.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":191,"author":{"gitId":"ZiMing2983"},"content":"      throw new EmptyDeadlineArgumentException();","lastModifiedDate":"2023-10-24"},{"lineNumber":192,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":193,"author":{"gitId":"ZiMing2983"},"content":"    // Find the positions of \"/by\"","lastModifiedDate":"2023-10-24"},{"lineNumber":194,"author":{"gitId":"ZiMing2983"},"content":"    int byIndex \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2023-10-24"},{"lineNumber":195,"author":{"gitId":"ZiMing2983"},"content":"    // Check if \"/by\" exists","lastModifiedDate":"2023-10-30"},{"lineNumber":196,"author":{"gitId":"ZiMing2983"},"content":"    if (byIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-24"},{"lineNumber":197,"author":{"gitId":"ZiMing2983"},"content":"      throw new InvalidTaskFormatException(\"deadline\");","lastModifiedDate":"2023-10-24"},{"lineNumber":198,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":199,"author":{"gitId":"ZiMing2983"},"content":"    // Extract task name, by date","lastModifiedDate":"2023-10-24"},{"lineNumber":200,"author":{"gitId":"ZiMing2983"},"content":"    String taskName \u003d arguments.substring(0, byIndex).trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":201,"author":{"gitId":"ZiMing2983"},"content":"    String taskDueDateString \u003d arguments.substring(byIndex + BY_KEYWORD_LENGTH).trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":202,"author":{"gitId":"ZiMing2983"},"content":"    // Check if date fields are empty","lastModifiedDate":"2023-10-24"},{"lineNumber":203,"author":{"gitId":"ZiMing2983"},"content":"    if (taskDueDateString.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":204,"author":{"gitId":"ZiMing2983"},"content":"      throw new InvalidTaskFormatException(\"deadline\");","lastModifiedDate":"2023-10-24"},{"lineNumber":205,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":206,"author":{"gitId":"ZiMing2983"},"content":"    try {","lastModifiedDate":"2023-10-24"},{"lineNumber":207,"author":{"gitId":"ZiMing2983"},"content":"      // Parse date and time \u0026 Add Deadline Task","lastModifiedDate":"2023-10-24"},{"lineNumber":208,"author":{"gitId":"ZiMing2983"},"content":"      LocalDateTime taskDueDate \u003d parseDateTimeOrDate(taskDueDateString);","lastModifiedDate":"2023-10-24"},{"lineNumber":209,"author":{"gitId":"ZiMing2983"},"content":"      new AddDeadLineCommand(taskName, taskDueDate).execute(fileStorage,display, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":210,"author":{"gitId":"ZiMing2983"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":211,"author":{"gitId":"ZiMing2983"},"content":"      throw new InvalidTaskFormatException(\"deadline\");","lastModifiedDate":"2023-10-24"},{"lineNumber":212,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":213,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":214,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":215,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":216,"author":{"gitId":"ZiMing2983"},"content":"   * Execute the \"event\" task command.","lastModifiedDate":"2023-10-24"},{"lineNumber":217,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":218,"author":{"gitId":"ZiMing2983"},"content":"   * @param display   The message display for showing output.","lastModifiedDate":"2023-10-30"},{"lineNumber":219,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList  The list of tasks to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":220,"author":{"gitId":"ZiMing2983"},"content":"   * @param arguments The user\u0027s input string after the event task command.","lastModifiedDate":"2023-10-24"},{"lineNumber":221,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DukeException if there\u0027s an issue with the command or input.","lastModifiedDate":"2023-10-30"},{"lineNumber":222,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":223,"author":{"gitId":"ZiMing2983"},"content":"  private void executeEventCommand(FileStorage fileStorage,MessageDisplay display, List\u003cTask\u003e taskList, String arguments) throws DukeException {","lastModifiedDate":"2023-10-30"},{"lineNumber":224,"author":{"gitId":"ZiMing2983"},"content":"    // Check for empty arguments","lastModifiedDate":"2023-10-24"},{"lineNumber":225,"author":{"gitId":"ZiMing2983"},"content":"    if (arguments.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":226,"author":{"gitId":"ZiMing2983"},"content":"      throw new EmptyEventArgumentException();","lastModifiedDate":"2023-10-24"},{"lineNumber":227,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":228,"author":{"gitId":"ZiMing2983"},"content":"    // Find the positions of \"/from\" and \"/to\"","lastModifiedDate":"2023-10-24"},{"lineNumber":229,"author":{"gitId":"ZiMing2983"},"content":"    int fromIndex \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2023-10-24"},{"lineNumber":230,"author":{"gitId":"ZiMing2983"},"content":"    int toIndex \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2023-10-24"},{"lineNumber":231,"author":{"gitId":"ZiMing2983"},"content":"    // Check if both \"/from\" and \"/to\" exist","lastModifiedDate":"2023-10-24"},{"lineNumber":232,"author":{"gitId":"ZiMing2983"},"content":"    if (fromIndex \u003d\u003d -1 || toIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-24"},{"lineNumber":233,"author":{"gitId":"ZiMing2983"},"content":"      throw new InvalidTaskFormatException(\"event\");","lastModifiedDate":"2023-10-24"},{"lineNumber":234,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":235,"author":{"gitId":"ZiMing2983"},"content":"    // Extract task name, from date, and to date","lastModifiedDate":"2023-10-24"},{"lineNumber":236,"author":{"gitId":"ZiMing2983"},"content":"    String taskName;","lastModifiedDate":"2023-10-24"},{"lineNumber":237,"author":{"gitId":"ZiMing2983"},"content":"    String taskFromDateString;","lastModifiedDate":"2023-10-24"},{"lineNumber":238,"author":{"gitId":"ZiMing2983"},"content":"    String taskToDateString;","lastModifiedDate":"2023-10-24"},{"lineNumber":239,"author":{"gitId":"ZiMing2983"},"content":"    taskFromDateString \u003d arguments.substring(fromIndex + FROM_KEYWORD_LENGTH, toIndex).trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":240,"author":{"gitId":"ZiMing2983"},"content":"    taskName \u003d arguments.substring(0, fromIndex).trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":241,"author":{"gitId":"ZiMing2983"},"content":"    taskToDateString \u003d arguments.substring(toIndex + TO_KEYWORD_LENGTH).trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":242,"author":{"gitId":"ZiMing2983"},"content":"    // Check if date fields are empty","lastModifiedDate":"2023-10-24"},{"lineNumber":243,"author":{"gitId":"ZiMing2983"},"content":"    if (taskFromDateString.isEmpty() || taskToDateString.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":244,"author":{"gitId":"ZiMing2983"},"content":"      throw new InvalidTaskFormatException(\"event\");","lastModifiedDate":"2023-10-24"},{"lineNumber":245,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":246,"author":{"gitId":"ZiMing2983"},"content":"    try {","lastModifiedDate":"2023-10-24"},{"lineNumber":247,"author":{"gitId":"ZiMing2983"},"content":"      LocalDateTime taskFromDateTime \u003d parseDateTimeOrDate(taskFromDateString);","lastModifiedDate":"2023-10-24"},{"lineNumber":248,"author":{"gitId":"ZiMing2983"},"content":"      LocalDateTime taskToDateTime \u003d parseDateTimeOrDate(taskToDateString);","lastModifiedDate":"2023-10-24"},{"lineNumber":249,"author":{"gitId":"ZiMing2983"},"content":"      new AddEventCommand(taskName, taskFromDateTime, taskToDateTime).execute(fileStorage,display, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":250,"author":{"gitId":"ZiMing2983"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":251,"author":{"gitId":"ZiMing2983"},"content":"      throw new InvalidTaskFormatException(\"event\");","lastModifiedDate":"2023-10-24"},{"lineNumber":252,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":253,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":254,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":255,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":256,"author":{"gitId":"ZiMing2983"},"content":"   * Execute the \"On\" task command.","lastModifiedDate":"2023-10-24"},{"lineNumber":257,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":258,"author":{"gitId":"ZiMing2983"},"content":"   * @param display   The message display for showing output.","lastModifiedDate":"2023-10-30"},{"lineNumber":259,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList  The list of tasks to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":260,"author":{"gitId":"ZiMing2983"},"content":"   * @param arguments The user\u0027s input string after the On command.","lastModifiedDate":"2023-10-24"},{"lineNumber":261,"author":{"gitId":"ZiMing2983"},"content":"   * @throws DukeException if there\u0027s an issue with the command or input.","lastModifiedDate":"2023-10-30"},{"lineNumber":262,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":263,"author":{"gitId":"ZiMing2983"},"content":"  private void executeOnCommand(MessageDisplay display, List\u003cTask\u003e taskList, String arguments) throws DukeException {","lastModifiedDate":"2023-10-29"},{"lineNumber":264,"author":{"gitId":"ZiMing2983"},"content":"    // Extract specified date","lastModifiedDate":"2023-10-24"},{"lineNumber":265,"author":{"gitId":"ZiMing2983"},"content":"    String dateString \u003d arguments.trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":266,"author":{"gitId":"ZiMing2983"},"content":"    // Check if date fields are empty","lastModifiedDate":"2023-10-24"},{"lineNumber":267,"author":{"gitId":"ZiMing2983"},"content":"    if (dateString.isEmpty()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":268,"author":{"gitId":"ZiMing2983"},"content":"      throw new EmptyOnArgumentException();","lastModifiedDate":"2023-10-24"},{"lineNumber":269,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":270,"author":{"gitId":"ZiMing2983"},"content":"    try {","lastModifiedDate":"2023-10-24"},{"lineNumber":271,"author":{"gitId":"ZiMing2983"},"content":"      // Parse date","lastModifiedDate":"2023-10-24"},{"lineNumber":272,"author":{"gitId":"ZiMing2983"},"content":"      LocalDate date \u003d parseDate(dateString);","lastModifiedDate":"2023-10-24"},{"lineNumber":273,"author":{"gitId":"ZiMing2983"},"content":"      new OnCommand().execute(display, taskList, date);","lastModifiedDate":"2023-10-29"},{"lineNumber":274,"author":{"gitId":"ZiMing2983"},"content":"    } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":275,"author":{"gitId":"ZiMing2983"},"content":"      throw new InvalidDateFormatException();","lastModifiedDate":"2023-10-24"},{"lineNumber":276,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":277,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":278,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":279,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":280,"author":{"gitId":"ZiMing2983"},"content":"   * Execute \"mark,\" \"unmark,\" and \"delete\" commands that modify a task\u0027s status.","lastModifiedDate":"2023-10-24"},{"lineNumber":281,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":282,"author":{"gitId":"ZiMing2983"},"content":"   * @param display   The message display for showing output.","lastModifiedDate":"2023-10-30"},{"lineNumber":283,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskList  The list of tasks to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":284,"author":{"gitId":"ZiMing2983"},"content":"   * @param userInput User\u0027s input string after a mark, unmark, or delete command.","lastModifiedDate":"2023-10-24"},{"lineNumber":285,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":286,"author":{"gitId":"ZiMing2983"},"content":"  public void modifyTask(FileStorage fileStorage,MessageDisplay display, List\u003cTask\u003e taskList, String userInput) {","lastModifiedDate":"2023-10-30"},{"lineNumber":287,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":288,"author":{"gitId":"ZiMing2983"},"content":"    try {","lastModifiedDate":"2023-10-24"},{"lineNumber":289,"author":{"gitId":"ZiMing2983"},"content":"      int itemIndex \u003d extractItemIndex(userInput);","lastModifiedDate":"2023-10-24"},{"lineNumber":290,"author":{"gitId":"ZiMing2983"},"content":"      if (itemIndex \u003d\u003d -1) {","lastModifiedDate":"2023-10-24"},{"lineNumber":291,"author":{"gitId":"ZiMing2983"},"content":"        return;","lastModifiedDate":"2023-10-24"},{"lineNumber":292,"author":{"gitId":"ZiMing2983"},"content":"      }","lastModifiedDate":"2023-10-24"},{"lineNumber":293,"author":{"gitId":"ZiMing2983"},"content":"      switch (parseCommandFromInput(userInput)) {","lastModifiedDate":"2023-10-24"},{"lineNumber":294,"author":{"gitId":"ZiMing2983"},"content":"        case \"mark\":","lastModifiedDate":"2023-10-24"},{"lineNumber":295,"author":{"gitId":"ZiMing2983"},"content":"          new MarkAsCompletedCommand(itemIndex).execute(fileStorage,display, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":296,"author":{"gitId":"ZiMing2983"},"content":"          break;","lastModifiedDate":"2023-10-24"},{"lineNumber":297,"author":{"gitId":"ZiMing2983"},"content":"        case \"unmark\":","lastModifiedDate":"2023-10-24"},{"lineNumber":298,"author":{"gitId":"ZiMing2983"},"content":"          new MarkAsInCompletedCommand(itemIndex).execute(fileStorage,display, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":299,"author":{"gitId":"ZiMing2983"},"content":"          break;","lastModifiedDate":"2023-10-24"},{"lineNumber":300,"author":{"gitId":"ZiMing2983"},"content":"        case \"delete\":","lastModifiedDate":"2023-10-24"},{"lineNumber":301,"author":{"gitId":"ZiMing2983"},"content":"          new DeleteCommand(itemIndex).execute(fileStorage,display, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":302,"author":{"gitId":"ZiMing2983"},"content":"          break;","lastModifiedDate":"2023-10-24"},{"lineNumber":303,"author":{"gitId":"ZiMing2983"},"content":"        default:","lastModifiedDate":"2023-10-24"},{"lineNumber":304,"author":{"gitId":"ZiMing2983"},"content":"          // Handle exception case where the command is neither mark nor unmark","lastModifiedDate":"2023-10-24"},{"lineNumber":305,"author":{"gitId":"ZiMing2983"},"content":"          throw new InvalidNumberFormatException();","lastModifiedDate":"2023-10-24"},{"lineNumber":306,"author":{"gitId":"ZiMing2983"},"content":"      }","lastModifiedDate":"2023-10-24"},{"lineNumber":307,"author":{"gitId":"ZiMing2983"},"content":"    } catch (InvalidNumberFormatException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":308,"author":{"gitId":"ZiMing2983"},"content":"      // Handle the case where the integer part is not a valid number","lastModifiedDate":"2023-10-24"},{"lineNumber":309,"author":{"gitId":"ZiMing2983"},"content":"      System.out.printf(\"%s\\n%s\\n\", e.getMessage(), MessageDisplay.LINE_BREAK);","lastModifiedDate":"2023-10-30"},{"lineNumber":310,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":311,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":312,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":313,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":314,"author":{"gitId":"ZiMing2983"},"content":"   * Parse command from user\u0027s input string.","lastModifiedDate":"2023-10-24"},{"lineNumber":315,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":316,"author":{"gitId":"ZiMing2983"},"content":"   * @param userInput User\u0027s input string","lastModifiedDate":"2023-10-24"},{"lineNumber":317,"author":{"gitId":"ZiMing2983"},"content":"   * @return The parsed command from the input.","lastModifiedDate":"2023-10-30"},{"lineNumber":318,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":319,"author":{"gitId":"ZiMing2983"},"content":"  private String parseCommandFromInput(String userInput) {","lastModifiedDate":"2023-10-24"},{"lineNumber":320,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":321,"author":{"gitId":"ZiMing2983"},"content":"    int spaceIndex \u003d userInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-10-24"},{"lineNumber":322,"author":{"gitId":"ZiMing2983"},"content":"    return userInput.substring(0, spaceIndex);","lastModifiedDate":"2023-10-24"},{"lineNumber":323,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":324,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":325,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":326,"author":{"gitId":"ZiMing2983"},"content":"   * Extract the item index from mark, unmark, delete commands that modify a task\u0027s status.","lastModifiedDate":"2023-10-24"},{"lineNumber":327,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":328,"author":{"gitId":"ZiMing2983"},"content":"   * @param userInput User\u0027s input string.","lastModifiedDate":"2023-10-24"},{"lineNumber":329,"author":{"gitId":"ZiMing2983"},"content":"   * @return The extracted item index.","lastModifiedDate":"2023-10-30"},{"lineNumber":330,"author":{"gitId":"ZiMing2983"},"content":"   * @throws InvalidNumberFormatException if the input format is incorrect.","lastModifiedDate":"2023-10-30"},{"lineNumber":331,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":332,"author":{"gitId":"ZiMing2983"},"content":"  private int extractItemIndex(String userInput) throws InvalidNumberFormatException {","lastModifiedDate":"2023-10-24"},{"lineNumber":333,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":334,"author":{"gitId":"ZiMing2983"},"content":"    try {","lastModifiedDate":"2023-10-24"},{"lineNumber":335,"author":{"gitId":"ZiMing2983"},"content":"      int spaceIndex \u003d userInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-10-24"},{"lineNumber":336,"author":{"gitId":"ZiMing2983"},"content":"      String integerPart \u003d userInput.substring(spaceIndex + 1).trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":337,"author":{"gitId":"ZiMing2983"},"content":"      int itemIndex \u003d parseInteger(integerPart) - 1;","lastModifiedDate":"2023-10-24"},{"lineNumber":338,"author":{"gitId":"ZiMing2983"},"content":"      if (itemIndex \u003c 0 || itemIndex \u003e\u003d Task.getTotalTasks()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":339,"author":{"gitId":"ZiMing2983"},"content":"        // Handle exception case where the item index is out of bounds or does not exist","lastModifiedDate":"2023-10-24"},{"lineNumber":340,"author":{"gitId":"ZiMing2983"},"content":"        throw new TaskNotFoundException();","lastModifiedDate":"2023-10-24"},{"lineNumber":341,"author":{"gitId":"ZiMing2983"},"content":"      }","lastModifiedDate":"2023-10-24"},{"lineNumber":342,"author":{"gitId":"ZiMing2983"},"content":"      return itemIndex;","lastModifiedDate":"2023-10-24"},{"lineNumber":343,"author":{"gitId":"ZiMing2983"},"content":"    } catch (TaskNotFoundException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":344,"author":{"gitId":"ZiMing2983"},"content":"      // Handle the case where the task is not found by index","lastModifiedDate":"2023-10-30"},{"lineNumber":345,"author":{"gitId":"ZiMing2983"},"content":"      System.out.printf(\"%s\\n%s\\n\", e.getMessage(), MessageDisplay.LINE_BREAK);","lastModifiedDate":"2023-10-30"},{"lineNumber":346,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":347,"author":{"gitId":"ZiMing2983"},"content":"    return -1;","lastModifiedDate":"2023-10-24"},{"lineNumber":348,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":349,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":350,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":350}},{"path":"src/main/java/duke/task/DeadlineTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `DeadlineTask` class that extends `Task` and represents a task with a deadline.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"public class DeadlineTask extends Task {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"  private final LocalDateTime taskDueDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a `DeadlineTask` with the specified task name and due date.","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName    The name of the deadline task.","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskDueDate The due date and time of the deadline task.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"  public DeadlineTask(String taskName, LocalDateTime taskDueDate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"    super(\u0027D\u0027, taskName);","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"    this.taskDueDate \u003d taskDueDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a `DeadlineTask` with the specified task name, completion status, and due date.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName    The name of the deadline task.","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"   * @param completed   `true` if the task is completed, `false` otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskDueDate The due date and time of the deadline task.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"  public DeadlineTask(String taskName, boolean completed, LocalDateTime taskDueDate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"    super(\u0027D\u0027, taskName, completed);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    this.taskDueDate \u003d taskDueDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"   * Gets the formatted due date of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"   * @return The due date of the task as a formatted string.","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"  private String getTaskDueDateString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"    return dateTimetoString(taskDueDate);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"   * Gets the due date of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"   * @return The due date of the task as a LocalDate Object.","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"  private LocalDate getTaskDueDate() {","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"    return taskDueDate.toLocalDate();","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"   * Checks if a given date matches the due date of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"   * @param checkedDate The date to be checked.","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"   * @return `true` if the checked date matches the due date of the task, `false` otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"  public boolean checkDate(LocalDate checkedDate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"    return checkedDate.equals(getTaskDueDate());","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"   * Converts the `DeadlineTask` to a string for display.","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"   * @return A string representation of the `DeadlineTask`.","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"ZiMing2983"},"content":"  public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"ZiMing2983"},"content":"    return super.toString() + String.format(\" (by: %s)\", getTaskDueDateString());","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"ZiMing2983"},"content":"   * Converts the `DeadlineTask` to a string for saving to Duke Data File.","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"ZiMing2983"},"content":"   * @return A string representation of the `DeadlineTask` for saving to Duke Data File.","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"ZiMing2983"},"content":"  public String toFile() {","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"ZiMing2983"},"content":"    return super.toFile() + \" | \" + taskDueDate.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":92}},{"path":"src/main/java/duke/task/EventTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":" * Represents an `EventTask` class that extends `Task` and represents a task with an event.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"public class EventTask extends Task {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"  private final LocalDateTime taskFrom;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"  private final LocalDateTime taskTo;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs an `EventTask` with the specified task name, start date, and end date.","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName The name of the event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskFrom The start date and time of the event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskTo   The end date and time of the event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"  public EventTask(String taskName, LocalDateTime taskFrom, LocalDateTime taskTo) {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    super(\u0027E\u0027, taskName);","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"    this.taskFrom \u003d taskFrom;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"    this.taskTo \u003d taskTo;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs an `EventTask` with the specified task name,","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"   * completion status, start date, and end date.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName  The name of the event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"   * @param completed `true` if the task is completed, `false` otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskFrom  The start date and time of the event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskTo    The end date and time of the event task.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"  public EventTask(String taskName, boolean completed, LocalDateTime taskFrom, LocalDateTime taskTo) {","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"    super(\u0027E\u0027, taskName, completed);","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    this.taskFrom \u003d taskFrom;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"    this.taskTo \u003d taskTo;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"   * Gets the formatted start date and time of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"   * @return The start date and time of the task as a formatted string.","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"  private String getTaskFromString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"    return dateTimetoString(taskFrom);","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"   * Gets the formatted end date and time of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"   * @return The end date and time of the task as a formatted string.","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"  private String getTaskToString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"    return dateTimetoString(taskTo);","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"   * Gets the start date of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"   * @return The start date of the task as a LocalDate Object.","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"  private LocalDate getTaskFromDate() {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"    return taskFrom.toLocalDate();","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"ZiMing2983"},"content":"   * Gets the end date of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"ZiMing2983"},"content":"   * @return The end date of the task as a LocalDate Object.","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"ZiMing2983"},"content":"  private LocalDate getTaskToDate() {","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ZiMing2983"},"content":"    return taskTo.toLocalDate();","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"ZiMing2983"},"content":"   * Checks if a given date matches the start or end date of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"ZiMing2983"},"content":"   * @param checkedDate The date to be checked.","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"ZiMing2983"},"content":"   * @return `true` if the checked date matches either","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"ZiMing2983"},"content":"   * the start or end date of the task, `false` otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"ZiMing2983"},"content":"  public boolean checkDate(LocalDate checkedDate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"ZiMing2983"},"content":"    return checkedDate.equals(getTaskFromDate()) || checkedDate.equals(getTaskToDate());","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"ZiMing2983"},"content":"   * Converts the `EventTask` to a string for display.","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"ZiMing2983"},"content":"   * @return A string representation of the `EventTask`.","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"ZiMing2983"},"content":"  public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"ZiMing2983"},"content":"    return super.toString() + String.format(\" (from: %s to: %s)\", getTaskFromString(), getTaskToString());","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"ZiMing2983"},"content":"   * Converts the `EventTask` to a string for saving to Duke Data File.","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"ZiMing2983"},"content":"   * @return A string representation of the `EventTask` for saving to Duke Data File.","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"ZiMing2983"},"content":"  @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":114,"author":{"gitId":"ZiMing2983"},"content":"  public String toFile() {","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"ZiMing2983"},"content":"    return super.toFile() + \" | \" + taskFrom.toString() + \" | \" + taskTo.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":119}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":" * Represents an abstract `Task` class for tasks in Duke.","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"public abstract class Task {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"  private static int totalTasks \u003d 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"  private final String taskName;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  private final Character taskType;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  private boolean completed;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a `Task` with the specified task type and name, initializing it as not completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskType The type of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName The name of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"  public Task(Character taskType, String taskName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"    this.taskType \u003d taskType;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"    this.taskName \u003d taskName;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"    this.completed \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"    totalTasks++;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a `Task` with the specified task type, name, and completion status.","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskType    The type of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName    The name of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"   * @param isCompleted `true` if the task is completed, `false` otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"  public Task(Character taskType, String taskName, boolean isCompleted) {","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"    this.taskType \u003d taskType;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    this.taskName \u003d taskName;","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"    this.completed \u003d isCompleted;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"    totalTasks++;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"   * Gets the total number of tasks.","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"   * @return The total number of tasks.","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"  public static int getTotalTasks() {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"    return totalTasks;","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"   * Reduces the total count of tasks to represent removing a task.","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"  public static void removeTask() {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"    totalTasks--;","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"   * Marks the task as completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"  public void markAsCompleted() {","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"    this.completed \u003d true;","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"   * Marks the task as not completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"  public void markAsNotCompleted() {","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"ZiMing2983"},"content":"    this.completed \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"ZiMing2983"},"content":"   * Gets the name of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"ZiMing2983"},"content":"   * @return The name of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"ZiMing2983"},"content":"  public String getTaskName() {","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"ZiMing2983"},"content":"    return taskName;","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"ZiMing2983"},"content":"   * Gets the type of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"ZiMing2983"},"content":"   * @return The type of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"ZiMing2983"},"content":"  public Character getTaskType() {","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"ZiMing2983"},"content":"    return taskType;","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"ZiMing2983"},"content":"   * Checks if the task is completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"ZiMing2983"},"content":"   * @return `true` if the task is completed, `false` otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"ZiMing2983"},"content":"  public boolean isCompleted() {","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"ZiMing2983"},"content":"    return completed;","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"ZiMing2983"},"content":"   * Checks if the task matches a specific date.","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"ZiMing2983"},"content":"   * @param checkedDate The date to compare with the task\u0027s date (if applicable).","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"ZiMing2983"},"content":"   * @return `true` if the task matches the date, `false` otherwise.","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"ZiMing2983"},"content":"  public boolean checkDate(LocalDate checkedDate) {","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"ZiMing2983"},"content":"    return false; // Override this method in subclasses if the task has a date.","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"ZiMing2983"},"content":"   * Converts the `Task` to a string for display.","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"ZiMing2983"},"content":"   * @return A string representation of the `Task`.","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"ZiMing2983"},"content":"  public String toString() {","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"ZiMing2983"},"content":"    String taskName \u003d getTaskName();","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"ZiMing2983"},"content":"    Character taskType \u003d getTaskType();","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"ZiMing2983"},"content":"    char taskComplete \u003d isCompleted() ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"ZiMing2983"},"content":"    return \"[\" + taskType + \"]\" + \"[\" + taskComplete + \"] \" + taskName;","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"ZiMing2983"},"content":"   * Converts the date and time to a formatted string.","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"ZiMing2983"},"content":"   * @param dateTime The date and time to format.","lastModifiedDate":"2023-10-24"},{"lineNumber":137,"author":{"gitId":"ZiMing2983"},"content":"   * @return The formatted date and time as a string.","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"ZiMing2983"},"content":"  public String dateTimetoString(LocalDateTime dateTime) {","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"ZiMing2983"},"content":"    String dayOfWeek \u003d dateTime.getDayOfWeek().toString().substring(0, 3);","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"ZiMing2983"},"content":"    String day \u003d String.valueOf(dateTime.getDayOfMonth());","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"ZiMing2983"},"content":"    String dayOfMonth \u003d dateTime.getMonth().toString().substring(0, 3);","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"ZiMing2983"},"content":"    String year \u003d String.valueOf(dateTime.getYear());","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"ZiMing2983"},"content":"    String hour \u003d String.valueOf(dateTime.getHour());","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"ZiMing2983"},"content":"    String minutes \u003d String.valueOf(dateTime.getMinute());","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"ZiMing2983"},"content":"    return dayOfWeek + \" \" + day + \" \" + dayOfMonth + \" \" + year + \" \" + hour + \":\" + minutes;","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"ZiMing2983"},"content":"   * Converts the `Task` to a string for saving to a file.","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"ZiMing2983"},"content":"   * @return A string representation of the `Task` for saving to a file.","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"ZiMing2983"},"content":"  public String toFile() {","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"ZiMing2983"},"content":"    String taskName \u003d getTaskName();","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"ZiMing2983"},"content":"    Character taskType \u003d getTaskType();","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"ZiMing2983"},"content":"    int taskComplete \u003d isCompleted() ? 1 : 0;","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"ZiMing2983"},"content":"    return taskType + \" | \" + taskComplete + \" | \" + taskName;","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":163}},{"path":"src/main/java/duke/task/TodoTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" * Represents a `TodoTask` class for tasks in Duke.","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"public class TodoTask extends Task {","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a `TodoTask` with the specified task name, initializing it as not completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName The name of the todo task.","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  public TodoTask(String taskName) {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"    super(\u0027T\u0027, taskName);","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   * Constructs a `TodoTask` with the specified task name and completion status.","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"   *","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"   * @param taskName  The name of the todo task.","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"   * @param completed `true` if the todo task is completed, `false` otherwise.","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"  public TodoTask(String taskName, boolean completed) {","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"    super(\u0027T\u0027, taskName, completed);","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":29}},{"path":"src/main/java/duke/userinterface/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.userinterface;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import java.util.List;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":" * Represents the user interface for the Duke application.","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"public class UserInterface {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  public UserInterface.UserInput userInput;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  public UserInterface.MessageDisplay messageDisplay;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"   * The UserInterface class represents the user interface of the Duke application.","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"   * It provides components for user input and message display.","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"  public UserInterface() {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"    userInput \u003d new UserInterface.UserInput();","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    messageDisplay \u003d new UserInterface.MessageDisplay();","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"   * Represents the user input part of the user interface.","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"  public static class UserInput {","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"    public UserInput() {","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"      scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"     * Get user input from the console.","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"     * @return The user\u0027s input.","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"      return scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"     * Close the scanner when done.","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"      scanner.close();","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"  /**","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"   * Represents the message display part of the user interface.","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"   */","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"  public static class MessageDisplay {","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"    public static final String LINE_BREAK \u003d \"****************************************\";","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"        \"╭━━━╮╱╱╱╱╱╭╮\\n\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"            \"┃╭━╮┃╱╱╱╱╱┃┃\\n\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"            \"┃╰━━┳━━┳━━┫╰━┳━━┳━╮\\n\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"            \"╰━━╮┃╭╮┃╭╮┃╭╮┃╭╮┃╭╮╮\\n\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"            \"┃╰━╯┃╰╯┃╰╯┃┃┃┃╰╯┃┃┃┃\\n\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"            \"╰━━━┻━━┫╭━┻╯╰┻━━┻╯╰╯\\n\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"            \"╱╱╱╱╱╱╱┃┃\\n\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"            \"╱╱╱╱╱╱╱╰╯\\n\";","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"ZiMing2983"},"content":"     * Print a message with a line break.","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"ZiMing2983"},"content":"     * @param line The message to print.","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"ZiMing2983"},"content":"    public void print(String line) {","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"ZiMing2983"},"content":"      System.out.printf(\"%s\\n%s\\n\", line, LINE_BREAK);","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when a task is added.","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"ZiMing2983"},"content":"     * @param userInputList The list of user tasks.","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"ZiMing2983"},"content":"     * @param itemNumber    The index of the added task.","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"ZiMing2983"},"content":"    public void addedMessage(List\u003cTask\u003e userInputList, int itemNumber) {","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"ZiMing2983"},"content":"      int totalTasks \u003d Task.getTotalTasks();","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"ZiMing2983"},"content":"      System.out.printf(\"Got it. I\u0027ve added this task:\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"ZiMing2983"},"content":"              + \"   %s\\nNow you have %d tasks in the list.\\n%s%n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"ZiMing2983"},"content":"          userInputList.get(itemNumber).toString(), totalTasks, LINE_BREAK);","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when attempting to mark a task that is already marked as completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"ZiMing2983"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":103,"author":{"gitId":"ZiMing2983"},"content":"    public void alreadyMark(String taskName) {","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":105,"author":{"gitId":"ZiMing2983"},"content":"      print(taskName + \" is already marked!\");","lastModifiedDate":"2023-10-24"},{"lineNumber":106,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when attempting to unmark a task that is not marked as completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":110,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"ZiMing2983"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-10-24"},{"lineNumber":112,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"ZiMing2983"},"content":"    public void notMark(String taskName) {","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"ZiMing2983"},"content":"      print(\"You did not complete \" + taskName + \" before!\");","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":117,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":119,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when a task is marked as completed.","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"ZiMing2983"},"content":"     * @param userInputList The list of user tasks.","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"ZiMing2983"},"content":"     * @param itemNumber    The index of the completed task.","lastModifiedDate":"2023-10-24"},{"lineNumber":123,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":124,"author":{"gitId":"ZiMing2983"},"content":"    public void completeMessage(List\u003cTask\u003e userInputList, int itemNumber) {","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":126,"author":{"gitId":"ZiMing2983"},"content":"      System.out.printf(\"That\u0027s some progress! I\u0027ve marked this task as done:\\n   %s\\n%s\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":127,"author":{"gitId":"ZiMing2983"},"content":"          userInputList.get(itemNumber).toString(), LINE_BREAK);","lastModifiedDate":"2023-10-24"},{"lineNumber":128,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":129,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":130,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when a task is unmarked.","lastModifiedDate":"2023-10-24"},{"lineNumber":132,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":133,"author":{"gitId":"ZiMing2983"},"content":"     * @param userInputList The list of user tasks.","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"ZiMing2983"},"content":"     * @param itemNumber    The index of the unmarked task.","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":136,"author":{"gitId":"ZiMing2983"},"content":"    public void unCompleteMessage(List\u003cTask\u003e userInputList, int itemNumber) {","lastModifiedDate":"2023-10-29"},{"lineNumber":137,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"ZiMing2983"},"content":"      System.out.printf(\"Okay, you can do it at a later time:\\n   %s\\n%s\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"ZiMing2983"},"content":"          userInputList.get(itemNumber).toString(), LINE_BREAK);","lastModifiedDate":"2023-10-24"},{"lineNumber":140,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":141,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":142,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":143,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when a task is deleted.","lastModifiedDate":"2023-10-24"},{"lineNumber":144,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":145,"author":{"gitId":"ZiMing2983"},"content":"     * @param task The deleted task.","lastModifiedDate":"2023-10-24"},{"lineNumber":146,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":147,"author":{"gitId":"ZiMing2983"},"content":"    public void deleteMessage(Task task) {","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":149,"author":{"gitId":"ZiMing2983"},"content":"      System.out.printf(\"Noted. I\u0027ve removed this task:\\n   %s\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":150,"author":{"gitId":"ZiMing2983"},"content":"              + \"Now you have %s tasks in the list.\\n%s\\n\",","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"ZiMing2983"},"content":"          task.toString(), Task.getTotalTasks(), LINE_BREAK);","lastModifiedDate":"2023-10-24"},{"lineNumber":152,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":153,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":154,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":155,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a welcome message with the Duke LOGO.","lastModifiedDate":"2023-10-24"},{"lineNumber":156,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"ZiMing2983"},"content":"    public void hello() {","lastModifiedDate":"2023-10-24"},{"lineNumber":158,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":159,"author":{"gitId":"ZiMing2983"},"content":"      print(LOGO + \"hello, I\u0027m Sophon:). \\nHow can I assist you today?\");","lastModifiedDate":"2023-10-24"},{"lineNumber":160,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":161,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":162,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-10-24"},{"lineNumber":163,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a goodbye message.","lastModifiedDate":"2023-10-24"},{"lineNumber":164,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-10-24"},{"lineNumber":165,"author":{"gitId":"ZiMing2983"},"content":"    public void goodbye() {","lastModifiedDate":"2023-10-24"},{"lineNumber":166,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":167,"author":{"gitId":"ZiMing2983"},"content":"      print(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-10-24"},{"lineNumber":168,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":169,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":170,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-24"},{"lineNumber":171,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":172,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"ZiMing2983":172}},{"path":"src/test/java/duke/command/AddDeadLineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.Duke;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"public class AddDeadLineCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  Duke duke;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  String taskName;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  LocalDateTime taskDueDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"  AddDeadLineCommand command;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"  @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"  public void setUp() {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"    duke \u003d new duke.Duke();","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    taskName \u003d \"Test Deadline\";","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"    taskDueDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"    command \u003d new AddDeadLineCommand(taskName, taskDueDate);","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  @AfterEach","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"  public void tearDown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"    duke \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"    taskName \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"    taskDueDate \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"    command \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"  @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"  public void testConstructor() {","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    assertEquals(taskName, command.taskName);","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"  @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"  public void testExecute() {","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"    command.execute(duke.userInterface.messageDisplay, duke.taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"    assertEquals(taskName, duke.taskList.get(0).getTaskName());","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ZiMing2983":50}},{"path":"src/test/java/duke/command/AddEventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.Duke;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"public class AddEventCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  Duke duke;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  String taskName;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  LocalDateTime taskFromDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"  LocalDateTime taskToDate;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  AddEventCommand command;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"  @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"  public void setUp() {","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    duke \u003d new duke.Duke();","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"    taskName \u003d \"Test Event\";","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"    taskFromDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"    taskToDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"    command \u003d new AddEventCommand(taskName, taskFromDate, taskToDate);","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"  @AfterEach","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"  public void tearDown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"    duke \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"    taskName \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    taskFromDate \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"    taskToDate \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"    command \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"  @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"  public void testConstructor() {","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"    assertEquals(taskName, command.taskName);","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"  @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"  public void testExecute() {","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"    command.execute(duke.userInterface.messageDisplay, duke.taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"    assertEquals(taskName, duke.taskList.get(0).getTaskName());","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ZiMing2983":54}},{"path":"src/test/java/duke/command/AddTodoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.Duke;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"public class AddTodoCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"  Duke duke;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  String taskName;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  AddTodoCommand command;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"  @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"  public void setUp() {","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"    duke \u003d new duke.Duke();","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"    taskName \u003d \"Test Event\";","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"    command \u003d new AddTodoCommand(taskName);","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"  @AfterEach","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"  public void tearDown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"    duke \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"    command \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"    taskName \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"  @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"  public void testConstructor() {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    assertEquals(taskName, command.taskName);","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"  @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"  public void testExecute() {","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"    command.execute(duke.userInterface.messageDisplay, duke.taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"    assertEquals(taskName, duke.taskList.get(0).getTaskName());","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ZiMing2983":45}},{"path":"src/test/java/duke/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"package duke.command;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"import duke.Duke;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"  Duke duke;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"  AddTodoCommand add1;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"  AddTodoCommand add2;","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"  DeleteCommand command;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"  int taskIndex;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"  @BeforeEach","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"  public void setUp() {","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"    duke \u003d new duke.Duke();","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"    taskIndex \u003d 1;","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"    add1 \u003d new AddTodoCommand(\"Test Event 1\");","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    add2 \u003d new AddTodoCommand(\"Test Event 2\");","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"    command \u003d new DeleteCommand(taskIndex);","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"  @org.junit.jupiter.api.AfterEach","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"  public void tearDown() {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"    duke \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"  @Test","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"  public void testExecute() {","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"    add1.execute(duke.userInterface.messageDisplay, duke.taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"    add2.execute(duke.userInterface.messageDisplay, duke.taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"    assertEquals(duke.taskList.size(), 2);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"    command.execute(duke.userInterface.messageDisplay, duke.taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    assertEquals(duke.taskList.size(), 1);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"  }","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"ZiMing2983":43}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"Test","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"List","lastModifiedDate":"2023-09-23"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"Todo","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"Deadline","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"Deadline project submission","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"deadline homework /by","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"Event","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"Event CCA","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"event project meeting /from 2pm /to","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"Mark test","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"Mark 0","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"Unmark test","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"Unmark 0","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"Delete test","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"Delete 0","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"todo gym","lastModifiedDate":"2023-09-23"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"deadline homework /by June 6th","lastModifiedDate":"2023-09-23"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"event project meeting /from saturday 2pm /to 4pm","lastModifiedDate":"2023-09-23"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"todo join sports club","lastModifiedDate":"2023-09-23"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"todo borrow book","lastModifiedDate":"2023-09-23"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"Unmark 1","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"mark 1","lastModifiedDate":"2023-09-23"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"mark 4","lastModifiedDate":"2023-09-23"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"Delete 5","lastModifiedDate":"2023-09-23"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"Delete 1","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"List","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"Bye","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"ZiMing2983":27}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"java -classpath ..\\bin duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZiMing2983":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"if [ -e \"./Data\" ]","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"then","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    rm ./Data","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"fi","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"if ! javac -cp ../src/main/java/ -Xlint:none -d ../bin ../src/main/java/Duke/*.java","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"ZiMing2983":5,"-":37}}]
