[{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"/**","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":" * The Duke class represents a task management application.","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":" * Users can interact with it through a command-line interface.","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":" */","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"class Duke {","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"    // An array to store user tasks","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"    Task[] userInputArray \u003d new Task[100];","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"    private final UserInterface userInterface;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"    private final MessageDisplay messageDisplay;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"    // Initializes user interface and message display.","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"    public Duke() {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"        userInterface \u003d new UserInterface();","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"        messageDisplay \u003d new MessageDisplay();","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"        Duke duke \u003d new Duke();","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"        duke.start();","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"     * Starts the Duke application, greeting the user and handling user input.","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"    public void start() {","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"        // Greet the user and ask for input","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"        messageDisplay.Hello();","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"        while (true) {","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"            String userInput \u003d userInterface.getUserInput();","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"            if (userInput.equals(\"bye\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"                break;","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"            } else {","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"                checkCommand(userInput);","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"        userInterface.closeScanner();","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"        messageDisplay.Goodbye();","lastModifiedDate":"2023-09-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"     * Validates if the user input is a valid command.","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"     * @param userInput The user\u0027s input string.","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"    public void checkCommand(String userInput) {","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"        try {","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"            String[] inputs \u003d userInput.split(\"\\\\s+\");","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"            if (inputs.length \u003d\u003d 0 || userInput.isEmpty()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"                throw new EmptyCommandException();","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"            String command \u003d inputs[0];","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"            String arguments \u003d userInput.substring(command.length()).trim();","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"            switch (command) {","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"                case \"list\": {","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"                    messageDisplay.UserInputList(userInputArray);","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"                    break;","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"                case \"todo\": {","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"                    if (arguments.isEmpty()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"                        throw new EmptyArgumentException();","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"                    } else {","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"                        storeUserTask(\u0027T\u0027, arguments);","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"                    }","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"                    break;","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"                case \"deadline\": {","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"                    if (!arguments.contains(\"/by\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"                        throw new InvalidTaskFormatException(\"deadline\");","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"ZiMing2983"},"content":"                    } else {","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"ZiMing2983"},"content":"                        storeUserTask(\u0027D\u0027, arguments);","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"ZiMing2983"},"content":"                    }","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"ZiMing2983"},"content":"                    break;","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"ZiMing2983"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"ZiMing2983"},"content":"                case \"event\": {","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"ZiMing2983"},"content":"                    if (!arguments.contains(\"/from\") || !arguments.contains(\"/to\")) {","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"ZiMing2983"},"content":"                        throw new InvalidTaskFormatException(\"event\");","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"ZiMing2983"},"content":"                    } else {","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"ZiMing2983"},"content":"                        storeUserTask(\u0027E\u0027, arguments);","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"ZiMing2983"},"content":"                    }","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"ZiMing2983"},"content":"                    break;","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"ZiMing2983"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"ZiMing2983"},"content":"                case \"mark\":","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"ZiMing2983"},"content":"                case \"unmark\": {","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"ZiMing2983"},"content":"                    toggleStatus(userInput);","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"ZiMing2983"},"content":"                    break;","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"ZiMing2983"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"ZiMing2983"},"content":"                default:","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"ZiMing2983"},"content":"                    throw new InvalidCommandException();","lastModifiedDate":"2023-09-16"},{"lineNumber":95,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"ZiMing2983"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"ZiMing2983"},"content":"            System.out.printf(\"%s\\n%s\\n%s\", MessageDisplay.LINE_BREAK, e.getMessage(), MessageDisplay.LINE_BREAK);","lastModifiedDate":"2023-09-16"},{"lineNumber":98,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":99,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"ZiMing2983"},"content":"     * Stores a task in the userInputArray and displays a message.","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"ZiMing2983"},"content":"     * @param taskType  The type of the task (\u0027T\u0027, \u0027D\u0027, or \u0027E\u0027).","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"ZiMing2983"},"content":"     * @param arguments The task arguments.","lastModifiedDate":"2023-09-16"},{"lineNumber":106,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":107,"author":{"gitId":"ZiMing2983"},"content":"    private void storeUserTask(Character taskType, String arguments) {","lastModifiedDate":"2023-09-16"},{"lineNumber":108,"author":{"gitId":"ZiMing2983"},"content":"        Task task \u003d createTask(taskType, arguments);","lastModifiedDate":"2023-09-16"},{"lineNumber":109,"author":{"gitId":"ZiMing2983"},"content":"        if (task !\u003d null) {","lastModifiedDate":"2023-09-16"},{"lineNumber":110,"author":{"gitId":"ZiMing2983"},"content":"            int itemIndex \u003d Task.getTotalTasks() - 1;","lastModifiedDate":"2023-09-16"},{"lineNumber":111,"author":{"gitId":"ZiMing2983"},"content":"            userInputArray[itemIndex] \u003d task;","lastModifiedDate":"2023-09-16"},{"lineNumber":112,"author":{"gitId":"ZiMing2983"},"content":"            messageDisplay.addedMessage(userInputArray, itemIndex);","lastModifiedDate":"2023-09-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2019-07-29"},{"lineNumber":114,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":115,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":116,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":117,"author":{"gitId":"ZiMing2983"},"content":"     * Creates a task based on the task type and arguments.","lastModifiedDate":"2023-09-16"},{"lineNumber":118,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":119,"author":{"gitId":"ZiMing2983"},"content":"     * @param taskType  The type of the task (\u0027T\u0027, \u0027D\u0027, or \u0027E\u0027).","lastModifiedDate":"2023-09-16"},{"lineNumber":120,"author":{"gitId":"ZiMing2983"},"content":"     * @param arguments The remaining command from user input.","lastModifiedDate":"2023-09-16"},{"lineNumber":121,"author":{"gitId":"ZiMing2983"},"content":"     * @return The created task or null if the creation fails.","lastModifiedDate":"2023-09-16"},{"lineNumber":122,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":123,"author":{"gitId":"ZiMing2983"},"content":"    private Task createTask(Character taskType, String arguments) {","lastModifiedDate":"2023-09-16"},{"lineNumber":124,"author":{"gitId":"ZiMing2983"},"content":"        Task task \u003d null;","lastModifiedDate":"2023-09-16"},{"lineNumber":125,"author":{"gitId":"ZiMing2983"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-16"},{"lineNumber":126,"author":{"gitId":"ZiMing2983"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-09-16"},{"lineNumber":127,"author":{"gitId":"ZiMing2983"},"content":"                task \u003d new Task(\u0027T\u0027, arguments);","lastModifiedDate":"2023-09-16"},{"lineNumber":128,"author":{"gitId":"ZiMing2983"},"content":"                break;","lastModifiedDate":"2023-09-16"},{"lineNumber":129,"author":{"gitId":"ZiMing2983"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-09-16"},{"lineNumber":130,"author":{"gitId":"ZiMing2983"},"content":"                task \u003d createDeadlineTask(arguments);","lastModifiedDate":"2023-09-16"},{"lineNumber":131,"author":{"gitId":"ZiMing2983"},"content":"                break;","lastModifiedDate":"2023-09-16"},{"lineNumber":132,"author":{"gitId":"ZiMing2983"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-09-16"},{"lineNumber":133,"author":{"gitId":"ZiMing2983"},"content":"                task \u003d createEventTask(arguments);","lastModifiedDate":"2023-09-16"},{"lineNumber":134,"author":{"gitId":"ZiMing2983"},"content":"                break;","lastModifiedDate":"2023-09-16"},{"lineNumber":135,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":136,"author":{"gitId":"ZiMing2983"},"content":"        return task;","lastModifiedDate":"2023-09-16"},{"lineNumber":137,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":138,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":139,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":140,"author":{"gitId":"ZiMing2983"},"content":"     * Creates a deadline task based on the arguments.","lastModifiedDate":"2023-09-16"},{"lineNumber":141,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":142,"author":{"gitId":"ZiMing2983"},"content":"     * @param arguments The task arguments that contains task name, by time for an event task.","lastModifiedDate":"2023-09-16"},{"lineNumber":143,"author":{"gitId":"ZiMing2983"},"content":"     * @return The created deadline task or null if the creation fails.","lastModifiedDate":"2023-09-16"},{"lineNumber":144,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":145,"author":{"gitId":"ZiMing2983"},"content":"    private Task createDeadlineTask(String arguments) {","lastModifiedDate":"2023-09-16"},{"lineNumber":146,"author":{"gitId":"ZiMing2983"},"content":"        int byIndex \u003d arguments.indexOf(\"/by\");","lastModifiedDate":"2023-09-16"},{"lineNumber":147,"author":{"gitId":"ZiMing2983"},"content":"        String TaskName \u003d arguments.substring(0, byIndex).trim();","lastModifiedDate":"2023-09-16"},{"lineNumber":148,"author":{"gitId":"ZiMing2983"},"content":"        String date \u003d arguments.substring(byIndex + 3).trim();","lastModifiedDate":"2023-09-16"},{"lineNumber":149,"author":{"gitId":"ZiMing2983"},"content":"        return new DeadlineTask(\u0027D\u0027, TaskName, date);","lastModifiedDate":"2023-09-16"},{"lineNumber":150,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":151,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":152,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":153,"author":{"gitId":"ZiMing2983"},"content":"     * Creates an event task based on the arguments.","lastModifiedDate":"2023-09-16"},{"lineNumber":154,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":155,"author":{"gitId":"ZiMing2983"},"content":"     * @param arguments The task arguments that contains task name, from time, to time for an event task.","lastModifiedDate":"2023-09-16"},{"lineNumber":156,"author":{"gitId":"ZiMing2983"},"content":"     * @return The created event task or null if the creation fails.","lastModifiedDate":"2023-09-16"},{"lineNumber":157,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-16"},{"lineNumber":158,"author":{"gitId":"ZiMing2983"},"content":"    private Task createEventTask(String arguments) {","lastModifiedDate":"2023-09-16"},{"lineNumber":159,"author":{"gitId":"ZiMing2983"},"content":"        int fromIndex \u003d arguments.indexOf(\"/from\");","lastModifiedDate":"2023-09-16"},{"lineNumber":160,"author":{"gitId":"ZiMing2983"},"content":"        int toIndex \u003d arguments.indexOf(\"/to\");","lastModifiedDate":"2023-09-16"},{"lineNumber":161,"author":{"gitId":"ZiMing2983"},"content":"        String TaskName \u003d arguments.substring(0, fromIndex).trim();","lastModifiedDate":"2023-09-16"},{"lineNumber":162,"author":{"gitId":"ZiMing2983"},"content":"        String from \u003d arguments.substring(fromIndex + 5, toIndex).trim();","lastModifiedDate":"2023-09-16"},{"lineNumber":163,"author":{"gitId":"ZiMing2983"},"content":"        String to \u003d arguments.substring(toIndex + 3).trim();","lastModifiedDate":"2023-09-16"},{"lineNumber":164,"author":{"gitId":"ZiMing2983"},"content":"        return new EventTask(\u0027E\u0027, TaskName, from, to);","lastModifiedDate":"2023-09-16"},{"lineNumber":165,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":166,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":167,"author":{"gitId":"ZiMing2983"},"content":"    //Toggle the complete status of a task","lastModifiedDate":"2023-09-16"},{"lineNumber":168,"author":{"gitId":"ZiMing2983"},"content":"    public void toggleStatus(String userInput) throws InvalidNumberFormatException {","lastModifiedDate":"2023-09-16"},{"lineNumber":169,"author":{"gitId":"ZiMing2983"},"content":"        int spaceIndex \u003d userInput.indexOf(\u0027 \u0027);","lastModifiedDate":"2023-09-10"},{"lineNumber":170,"author":{"gitId":"ZiMing2983"},"content":"        String integerPart \u003d userInput.substring(spaceIndex + 1);","lastModifiedDate":"2023-09-10"},{"lineNumber":171,"author":{"gitId":"ZiMing2983"},"content":"        String commandBeforeSpace \u003d userInput.substring(0, spaceIndex);","lastModifiedDate":"2023-09-10"},{"lineNumber":172,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":173,"author":{"gitId":"ZiMing2983"},"content":"        try {","lastModifiedDate":"2023-09-10"},{"lineNumber":174,"author":{"gitId":"ZiMing2983"},"content":"            int itemIndex \u003d Integer.parseInt(integerPart) - 1;","lastModifiedDate":"2023-09-10"},{"lineNumber":175,"author":{"gitId":"ZiMing2983"},"content":"            if (itemIndex \u003c 0 || itemIndex \u003e\u003d Task.getTotalTasks()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":176,"author":{"gitId":"ZiMing2983"},"content":"                // Handle exception case where the item index is out of bounds","lastModifiedDate":"2023-09-11"},{"lineNumber":177,"author":{"gitId":"ZiMing2983"},"content":"                throw new InvalidTaskException();","lastModifiedDate":"2023-09-16"},{"lineNumber":178,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":179,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":180,"author":{"gitId":"ZiMing2983"},"content":"            if (commandBeforeSpace.equals(\"mark\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":181,"author":{"gitId":"ZiMing2983"},"content":"                if (userInputArray[itemIndex].isCompleted()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":182,"author":{"gitId":"ZiMing2983"},"content":"                    messageDisplay.alreadyMark(userInputArray[itemIndex].getTaskName());","lastModifiedDate":"2023-09-16"},{"lineNumber":183,"author":{"gitId":"ZiMing2983"},"content":"                } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":184,"author":{"gitId":"ZiMing2983"},"content":"                    userInputArray[itemIndex].markAsCompleted();","lastModifiedDate":"2023-09-10"},{"lineNumber":185,"author":{"gitId":"ZiMing2983"},"content":"                    messageDisplay.completeMessage(userInputArray, itemIndex);","lastModifiedDate":"2023-09-10"},{"lineNumber":186,"author":{"gitId":"ZiMing2983"},"content":"                }","lastModifiedDate":"2023-09-11"},{"lineNumber":187,"author":{"gitId":"ZiMing2983"},"content":"            } else if (commandBeforeSpace.equals(\"unmark\")) {","lastModifiedDate":"2023-09-10"},{"lineNumber":188,"author":{"gitId":"ZiMing2983"},"content":"                if (!userInputArray[itemIndex].isCompleted()) {","lastModifiedDate":"2023-09-10"},{"lineNumber":189,"author":{"gitId":"ZiMing2983"},"content":"                    messageDisplay.notMark(userInputArray[itemIndex].getTaskName());","lastModifiedDate":"2023-09-16"},{"lineNumber":190,"author":{"gitId":"ZiMing2983"},"content":"                } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":191,"author":{"gitId":"ZiMing2983"},"content":"                    userInputArray[itemIndex].markAsNotCompleted();","lastModifiedDate":"2023-09-10"},{"lineNumber":192,"author":{"gitId":"ZiMing2983"},"content":"                    messageDisplay.unCompleteMessage(userInputArray, itemIndex);","lastModifiedDate":"2023-09-10"},{"lineNumber":193,"author":{"gitId":"ZiMing2983"},"content":"                }","lastModifiedDate":"2023-09-10"},{"lineNumber":194,"author":{"gitId":"ZiMing2983"},"content":"            } else {","lastModifiedDate":"2023-09-11"},{"lineNumber":195,"author":{"gitId":"ZiMing2983"},"content":"                // Handle exception case where the command is neither mark nor unmark","lastModifiedDate":"2023-09-11"},{"lineNumber":196,"author":{"gitId":"ZiMing2983"},"content":"                throw new InvalidNumberFormatException();","lastModifiedDate":"2023-09-16"},{"lineNumber":197,"author":{"gitId":"ZiMing2983"},"content":"            }","lastModifiedDate":"2023-09-11"},{"lineNumber":198,"author":{"gitId":"ZiMing2983"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":199,"author":{"gitId":"ZiMing2983"},"content":"            throw new InvalidNumberFormatException(e.getMessage());","lastModifiedDate":"2023-09-16"},{"lineNumber":200,"author":{"gitId":"ZiMing2983"},"content":"        } catch (InvalidNumberFormatException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":201,"author":{"gitId":"ZiMing2983"},"content":"            // Handle the case where the integer part is not a valid number","lastModifiedDate":"2023-09-11"},{"lineNumber":202,"author":{"gitId":"ZiMing2983"},"content":"            System.out.printf(\"%s\\n%s\\n%s\", MessageDisplay.LINE_BREAK, e.getMessage(), MessageDisplay.LINE_BREAK);","lastModifiedDate":"2023-09-16"},{"lineNumber":203,"author":{"gitId":"ZiMing2983"},"content":"        } catch (InvalidTaskException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":204,"author":{"gitId":"ZiMing2983"},"content":"            System.out.printf(\"%s\\n%s\\n%s\", MessageDisplay.LINE_BREAK, e.getMessage(), MessageDisplay.LINE_BREAK);","lastModifiedDate":"2023-09-16"},{"lineNumber":205,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2023-09-10"},{"lineNumber":208,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"ZiMing2983":203,"-":5}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"class DukeException extends Exception {","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"        super(message);","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"class EmptyCommandException extends DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"    public EmptyCommandException() {","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"        super(\"You did not provide any command. Please try again.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"class InvalidCommandException extends DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"    public InvalidCommandException() {","lastModifiedDate":"2023-09-16"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"class InvalidTaskException extends DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"    public InvalidTaskException() {","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"        super(\"OOPS!!! I\u0027m sorry, but I can\u0027t find this task!\");","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"class EmptyArgumentException extends DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"    public EmptyArgumentException() {","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"        super(\"You did not provide any details on your todo. Please provide in the format of \u003cevent + Task Name\u003e.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"class TaskCreationException extends DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"    public TaskCreationException(String message) {","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"        super(\"Error creating task: \" + message);","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"class InvalidNumberFormatException extends DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"    public InvalidNumberFormatException(String message) {","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"        super(message + \" is not a valid number! Please Try again.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"    public InvalidNumberFormatException() {","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"        super(\"Invalid Number! Please Try again.\");","lastModifiedDate":"2023-09-16"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"class InvalidTaskFormatException extends DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"    public InvalidTaskFormatException(String taskType) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"        super(getErrorMessage(taskType));","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"    private static String getErrorMessage(String taskType) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"        switch (taskType) {","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"                return \"Invalid format for Deadline task. Please provide in the format of \u003cdeadline + Task Name + /by + by time\u003e\";","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"            case \"event\":","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"                return \"Invalid format for Event task. Please provide in the format of \u003cevent + Task Name + /from + From time + /to + To time\u003e\";","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"            default:","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"                throw new DukeException(\"Unknown task type: \" + taskType);","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"ZiMing2983":62}},{"path":"src/main/java/MessageDisplay.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"public class MessageDisplay {","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"    public static final String LINE_BREAK \u003d \"****************************************\";","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"            \"╭━━━╮╱╱╱╱╱╭╮\\n\" +","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"            \"┃╭━╮┃╱╱╱╱╱┃┃\\n\" +","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"            \"┃╰━━┳━━┳━━┫╰━┳━━┳━╮\\n\" +","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"            \"╰━━╮┃╭╮┃╭╮┃╭╮┃╭╮┃╭╮╮\\n\" +","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"            \"┃╰━╯┃╰╯┃╰╯┃┃┃┃╰╯┃┃┃┃\\n\" +","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"            \"╰━━━┻━━┫╭━┻╯╰┻━━┻╯╰╯\\n\" +","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"            \"╱╱╱╱╱╱╱┃┃\\n\" +","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"            \"╱╱╱╱╱╱╱╰╯\\n\";","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"    public void print(String line) {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"        System.out.printf(\"%s\\n%s\\n%s\\n\", LINE_BREAK, line, LINE_BREAK);","lastModifiedDate":"2023-09-16"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a welcome message with the Duke LOGO.","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"    public void Hello() {","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"        print(LOGO + \"Hello, I\u0027m Sophon:). \\nHow can I assist you today?\");","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a goodbye message.","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"    public void Goodbye() {","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"        print(\"Bye! Hope to see you again soon!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when a task is added.","lastModifiedDate":"2023-09-11"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    public void addedMessage(Task[] userInputArray, int itemNumber) {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"        int totalTasks \u003d Task.getTotalTasks();","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"        System.out.printf(\"%s\\nGot it. I\u0027ve added this task:\\n   %s\\nNow you have %d tasks in the list.\\n%s%n\", LINE_BREAK, userInputArray[itemNumber].toString(), totalTasks, LINE_BREAK);","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when attempting to mark a task that is already marked as completed.","lastModifiedDate":"2023-09-11"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-11"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"    public void alreadyMark(String taskName) {","lastModifiedDate":"2023-09-10"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"        print(taskName + \" is already marked!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when attempting to unmark a task that is not marked as completed.","lastModifiedDate":"2023-09-11"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"     * @param taskName The name of the task.","lastModifiedDate":"2023-09-11"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"    public void notMark(String taskName) {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"        print(\"You did not complete \" + taskName + \" before!\");","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when a task is marked as completed.","lastModifiedDate":"2023-09-11"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"     * @param userInputArray The array of user tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"     * @param itemNumber     The index of the completed task.","lastModifiedDate":"2023-09-11"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"    public void completeMessage(Task[] userInputArray, int itemNumber) {","lastModifiedDate":"2023-09-10"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"        System.out.printf(\"%s\\nThat\u0027s some progress! I\u0027ve marked this task as done:\\n   %s\\n%s\", LINE_BREAK, userInputArray[itemNumber].toString(), LINE_BREAK);","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"     * Displays a message when a task is unmarked.","lastModifiedDate":"2023-09-11"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"     * @param userInputArray The array of user tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"     * @param itemNumber     The index of the unmarked task.","lastModifiedDate":"2023-09-11"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"    public void unCompleteMessage(Task[] userInputArray, int itemNumber) {","lastModifiedDate":"2023-09-10"},{"lineNumber":75,"author":{"gitId":"ZiMing2983"},"content":"        System.out.printf(\"%s\\nOkay, you can do it at a later time:\\n   %s\\n%s\", LINE_BREAK, userInputArray[itemNumber].toString(), LINE_BREAK);","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":77,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":78,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-11"},{"lineNumber":79,"author":{"gitId":"ZiMing2983"},"content":"     * Displays the list of user tasks.","lastModifiedDate":"2023-09-11"},{"lineNumber":80,"author":{"gitId":"ZiMing2983"},"content":"     *","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"ZiMing2983"},"content":"     * @param userInputArray The array of user tasks.","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"ZiMing2983"},"content":"     */","lastModifiedDate":"2023-09-11"},{"lineNumber":83,"author":{"gitId":"ZiMing2983"},"content":"    public void UserInputList(Task[] userInputArray) {","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"ZiMing2983"},"content":"        if (Task.getTotalTasks() \u003d\u003d 0) {","lastModifiedDate":"2023-09-10"},{"lineNumber":85,"author":{"gitId":"ZiMing2983"},"content":"            print(\"There\u0027s nothing in your list\");","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"ZiMing2983"},"content":"            return;","lastModifiedDate":"2023-09-10"},{"lineNumber":87,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":88,"author":{"gitId":"ZiMing2983"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"ZiMing2983"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-09-10"},{"lineNumber":90,"author":{"gitId":"ZiMing2983"},"content":"        for (int i \u003d 0; i \u003c Task.getTotalTasks(); i++) {","lastModifiedDate":"2023-09-10"},{"lineNumber":91,"author":{"gitId":"ZiMing2983"},"content":"            System.out.println((i + 1) + \".\" + userInputArray[i].toString());","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"ZiMing2983"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":93,"author":{"gitId":"ZiMing2983"},"content":"        System.out.println(LINE_BREAK);","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":95,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"ZiMing2983":96}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"public class Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"    private static int totalTasks \u003d 0;","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"    private final String taskName;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"    private final Character taskType;","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"    private boolean completed;","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"    public Task(Character taskType, String taskName) {","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"        this.taskType \u003d taskType;","lastModifiedDate":"2023-09-16"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"        totalTasks++;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"     * Method to mark the task as completed","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"ZiMing2983"},"content":"     **/","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"ZiMing2983"},"content":"    public void markAsCompleted() {","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"ZiMing2983"},"content":"        this.completed \u003d true;","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"ZiMing2983"},"content":"     * Method to mark the task as not completed","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"ZiMing2983"},"content":"     **/","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"ZiMing2983"},"content":"    public void markAsNotCompleted() {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"ZiMing2983"},"content":"        this.completed \u003d false;","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"ZiMing2983"},"content":"     * Getter method to get the task name","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"ZiMing2983"},"content":"     **/","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"ZiMing2983"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-09-10"},{"lineNumber":34,"author":{"gitId":"ZiMing2983"},"content":"        return taskName;","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"ZiMing2983"},"content":"     * Getter method to get the task type","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"ZiMing2983"},"content":"     **/","lastModifiedDate":"2023-09-16"},{"lineNumber":40,"author":{"gitId":"ZiMing2983"},"content":"    public Character getTaskType() {","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"ZiMing2983"},"content":"        return taskType;","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"ZiMing2983"},"content":"     * Getter method to check if the task is completed","lastModifiedDate":"2023-09-16"},{"lineNumber":46,"author":{"gitId":"ZiMing2983"},"content":"     **/","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"ZiMing2983"},"content":"    public boolean isCompleted() {","lastModifiedDate":"2023-09-10"},{"lineNumber":48,"author":{"gitId":"ZiMing2983"},"content":"        return completed;","lastModifiedDate":"2023-09-10"},{"lineNumber":49,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":51,"author":{"gitId":"ZiMing2983"},"content":"    /**","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"ZiMing2983"},"content":"     * Getter method to get the total number of tasks","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"ZiMing2983"},"content":"     **/","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"ZiMing2983"},"content":"    public static int getTotalTasks() {","lastModifiedDate":"2023-09-10"},{"lineNumber":55,"author":{"gitId":"ZiMing2983"},"content":"        return totalTasks;","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"ZiMing2983"},"content":"    public String toString() {","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"ZiMing2983"},"content":"        String taskName \u003d getTaskName();","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"ZiMing2983"},"content":"        Character taskType \u003d getTaskType();","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"ZiMing2983"},"content":"        char taskComplete \u003d isCompleted() ? \u0027X\u0027 : \u0027 \u0027;","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"ZiMing2983"},"content":"        return \"[\" + taskType + \"]\" + \"[\" + taskComplete + \"] \" + taskName;","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"ZiMing2983"},"content":"class DeadlineTask extends Task {","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"ZiMing2983"},"content":"    private final String taskDueDate;","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"ZiMing2983"},"content":"    public DeadlineTask(Character taskType, String taskName, String taskDueDate) {","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"ZiMing2983"},"content":"        super(taskType, taskName);","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"ZiMing2983"},"content":"        this.taskDueDate \u003d taskDueDate;","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"ZiMing2983"},"content":"    public String getTaskDueDate() {","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"ZiMing2983"},"content":"        return taskDueDate;","lastModifiedDate":"2023-09-16"},{"lineNumber":77,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":78,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":79,"author":{"gitId":"ZiMing2983"},"content":"    @Override","lastModifiedDate":"2023-09-16"},{"lineNumber":80,"author":{"gitId":"ZiMing2983"},"content":"    public String toString() {","lastModifiedDate":"2023-09-16"},{"lineNumber":81,"author":{"gitId":"ZiMing2983"},"content":"        return super.toString() + String.format(\" (by: %s)\", getTaskDueDate());","lastModifiedDate":"2023-09-16"},{"lineNumber":82,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":83,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-16"},{"lineNumber":84,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":85,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":86,"author":{"gitId":"ZiMing2983"},"content":"class EventTask extends Task {","lastModifiedDate":"2023-09-16"},{"lineNumber":87,"author":{"gitId":"ZiMing2983"},"content":"    private final String taskFrom;","lastModifiedDate":"2023-09-16"},{"lineNumber":88,"author":{"gitId":"ZiMing2983"},"content":"    private final String taskTo;","lastModifiedDate":"2023-09-16"},{"lineNumber":89,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":90,"author":{"gitId":"ZiMing2983"},"content":"    public EventTask(Character taskType, String taskName, String taskFrom, String taskTo) {","lastModifiedDate":"2023-09-16"},{"lineNumber":91,"author":{"gitId":"ZiMing2983"},"content":"        super(taskType, taskName);","lastModifiedDate":"2023-09-16"},{"lineNumber":92,"author":{"gitId":"ZiMing2983"},"content":"        this.taskFrom \u003d taskFrom;","lastModifiedDate":"2023-09-16"},{"lineNumber":93,"author":{"gitId":"ZiMing2983"},"content":"        this.taskTo \u003d taskTo;","lastModifiedDate":"2023-09-16"},{"lineNumber":94,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":95,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":96,"author":{"gitId":"ZiMing2983"},"content":"    public String getTaskFrom() {","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"ZiMing2983"},"content":"        return taskFrom;","lastModifiedDate":"2023-09-16"},{"lineNumber":98,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":99,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":100,"author":{"gitId":"ZiMing2983"},"content":"    public String getTaskTo() {","lastModifiedDate":"2023-09-16"},{"lineNumber":101,"author":{"gitId":"ZiMing2983"},"content":"        return taskTo;","lastModifiedDate":"2023-09-16"},{"lineNumber":102,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":103,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":104,"author":{"gitId":"ZiMing2983"},"content":"    @Override","lastModifiedDate":"2023-09-16"},{"lineNumber":105,"author":{"gitId":"ZiMing2983"},"content":"    public String toString() {","lastModifiedDate":"2023-09-16"},{"lineNumber":106,"author":{"gitId":"ZiMing2983"},"content":"        return super.toString() + String.format(\" (from: %s to: %s)\", getTaskFrom(), getTaskTo());","lastModifiedDate":"2023-09-16"},{"lineNumber":107,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":108,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"ZiMing2983":108}},{"path":"src/main/java/UserInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"public class UserInterface {","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"    private final Scanner scanner;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"    public UserInterface() {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"ZiMing2983"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"ZiMing2983"},"content":"        return scanner.nextLine().trim().toLowerCase();","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"ZiMing2983"},"content":"    public void closeScanner() {","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"ZiMing2983"},"content":"        scanner.close();","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"ZiMing2983"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"ZiMing2983"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"ZiMing2983":17}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"ZiMing2983"},"content":"Read book","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"ZiMing2983"},"content":"Gym","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"ZiMing2983"},"content":"Study","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"ZiMing2983"},"content":"Mark 1","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"ZiMing2983"},"content":"Unmark 1","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"ZiMing2983"},"content":"Unmark 1","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"ZiMing2983"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"ZiMing2983"},"content":"Bye","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"ZiMing2983":8}}]
