[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"checkstyle {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"    toolVersion \u003d \u002710.2\u0027","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    mainClass.set(\"seedu.duke.Duke\")","lastModifiedDate":"2023-08-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeebinrong":5,"-":42}},{"path":"src/main/java/seedu/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import java.util.List;","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.WonkyMode;","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeUnhandledException;","lastModifiedDate":"2023-08-27"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.io.WonkyLogger;","lastModifiedDate":"2023-09-07"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.io.WonkyScanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.io.WonkyStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":" * The main class for the Wonky chatbot application.","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"public class Duke {","lastModifiedDate":"2023-08-27"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"     * The main method that starts the Wonky chatbot application.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"    public static void main(String[] args) throws DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"        WonkyMode mode \u003d checkMode(args);","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"            initialise(mode);","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"            throw e;","lastModifiedDate":"2023-08-27"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"            throw new DukeUnhandledException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"        System.exit(0);","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"     * Performs startup operations for the Wonky chatbot application based on the specified mode.","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"     * @param mode The mode in which the application should operate.","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException If there is an error during startup.","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"    public static void initialise(WonkyMode mode) throws DukeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"        WonkyStorage.startUp(mode);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"        WonkyLogger.startUp(mode);","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"        WonkyScanner.startUp();","lastModifiedDate":"2023-08-27"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"     * Checks the mode to start the Wonky chatbot application based on the input args.","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"yeebinrong"},"content":"     * @param args The command line arguments.","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"yeebinrong"},"content":"    public static WonkyMode checkMode(String[] args) {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"yeebinrong"},"content":"        List\u003cString\u003e argList \u003d Arrays.asList(args);","lastModifiedDate":"2023-09-16"},{"lineNumber":53,"author":{"gitId":"yeebinrong"},"content":"        if (argList.size() \u003e 0) {","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"yeebinrong"},"content":"            try {","lastModifiedDate":"2023-09-16"},{"lineNumber":55,"author":{"gitId":"yeebinrong"},"content":"                return WonkyMode.getEnum(argList.get(0));","lastModifiedDate":"2023-09-16"},{"lineNumber":56,"author":{"gitId":"yeebinrong"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"yeebinrong"},"content":"                return WonkyMode.NORMAL;","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":59,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"yeebinrong"},"content":"        return WonkyMode.NORMAL;","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yeebinrong":62}},{"path":"src/main/java/seedu/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":" * Represents the list of available commands in Duke.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"public enum Command {","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"    BYE(\"bye\"),","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"    DEADLINE(\"deadline\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"    DELETE(\"delete\"),","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"    EVENT(\"event\"),","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"    LIST(\"list\"),","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"    TODO(\"todo\"),","lastModifiedDate":"2023-09-16"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"    MARK(\"mark\"),","lastModifiedDate":"2023-09-16"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"    UNMARK(\"unmark\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"    FIND(\"find\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"    STASH(\"stash\"),","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"    HELP(\"help\");","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"    private String command;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"     * Constructs the Command enum.","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"     * @param command the string representation of the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"    Command(String command) {","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"     * Returns the string representation of the command.","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"     * @return the string representation of the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"    public String getLitr() {","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"        return command;","lastModifiedDate":"2023-09-06"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"     * Returns the Command enum value of the given string.","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"     * @param cmd the string representation of the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"     * @return the Command enum value of the given string.","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"    public static Command getEnum(String cmd) {","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"        return Command.valueOf(cmd.toUpperCase());","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"yeebinrong":48}},{"path":"src/main/java/seedu/duke/commands/CommandArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":" * The CommandArgument class represents a command with its arguments.","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":" * It contains methods to get the command, its string representation, the arguments as a string,","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":" * the arguments as a list, and the number of arguments.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":" * It also contains a method to set the arguments for the command.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"public class CommandArgument {","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"    private Command command;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"    private String arguments;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"     * Constructs the CommandArgument class.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"     * @param command the command to be executed.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"     * @param arguments the arguments for the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"    public CommandArgument(Command command, String arguments) {","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"        this.arguments \u003d arguments;","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"     * Returns the command to be executed.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"     * @return the command to be executed","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"    public Command getCmd() {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"        return command;","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"     * Returns the string representation of the command to be executed.","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"     * @return the string representation of the command to be executed.","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"    public String getCmdLitr() {","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"        return command.getLitr();","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"     * Returns the string representation of the arguments for the command.","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"yeebinrong"},"content":"     * @return the string representation of the arguments for the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"yeebinrong"},"content":"    public String getArgStr() {","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"yeebinrong"},"content":"        return arguments;","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"yeebinrong"},"content":"     * Returns a list of the arguments for the command.","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"yeebinrong"},"content":"     * @return a list of the arguments for the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"yeebinrong"},"content":"    public List\u003cString\u003e getArgList() {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"yeebinrong"},"content":"        return Arrays.asList(arguments.split(\"\\\\|\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"yeebinrong"},"content":"     * Returns the number of arguments for the command.","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"yeebinrong"},"content":"     * @return the number of arguments for the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"yeebinrong"},"content":"    public int getArgCount() {","lastModifiedDate":"2023-10-13"},{"lineNumber":70,"author":{"gitId":"yeebinrong"},"content":"        if (arguments.isEmpty()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"yeebinrong"},"content":"            return 0;","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"yeebinrong"},"content":"        int count \u003d Arrays.asList(arguments.split(\"\\\\|\")).size();","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"yeebinrong"},"content":"        if (arguments.charAt(arguments.length() - 1) \u003d\u003d \u0027|\u0027) {","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"yeebinrong"},"content":"            count +\u003d 1;","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"yeebinrong"},"content":"        return count;","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"yeebinrong"},"content":"     * Sets the arguments for the command.","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"yeebinrong"},"content":"     * @param newArg the new arguments for the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"yeebinrong"},"content":"    public void setArg(String newArg) {","lastModifiedDate":"2023-10-27"},{"lineNumber":86,"author":{"gitId":"yeebinrong"},"content":"        arguments \u003d newArg;","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yeebinrong":88}},{"path":"src/main/java/seedu/duke/commands/WonkyDateTime.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"import java.time.format.FormatStyle;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"import java.time.temporal.TemporalAdjusters;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":" * A class that maps strings to LocalDateTime objects.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"public class WonkyDateTime {","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"     * A mapping of strings to LocalDateTime objects. The strings are used to represent specific dates and times.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"    private static final Map\u003cString, LocalDateTime\u003e STR_TO_DATE_TIME_MAPPING \u003d new HashMap\u003cString, LocalDateTime\u003e() {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"        {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"            put(\"today\", LocalDateTime.now());","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"            put(\"tomorrow\", LocalDateTime.now().plusDays(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"            put(\"tmr\", LocalDateTime.now().plusDays(1));","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"            put(\"mon\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.MONDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"            put(\"monday\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.MONDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"            put(\"tues\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.TUESDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"            put(\"tuesday\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.TUESDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"            put(\"wed\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.WEDNESDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"            put(\"wednesday\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.WEDNESDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"            put(\"thur\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.THURSDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"            put(\"thursday\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.THURSDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"            put(\"fri\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.FRIDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"            put(\"friday\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.FRIDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"            put(\"sat\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.SATURDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"            put(\"saturday\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.SATURDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"            put(\"sun\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.SUNDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"            put(\"sunday\", LocalDateTime.now().with(TemporalAdjusters.next(DayOfWeek.SUNDAY)));","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"    };","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"    private static FormatStyle formatStyle \u003d FormatStyle.MEDIUM;","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"    private static DateTimeFormatter defaultFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"    private LocalDateTime dateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"     * Constructs a WonkyDateTime object with the specified LocalDateTime.","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"yeebinrong"},"content":"     * @param dateTime the LocalDateTime to be used by the WonkyDateTime object.","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"yeebinrong"},"content":"    public WonkyDateTime(LocalDateTime dateTime) {","lastModifiedDate":"2023-10-27"},{"lineNumber":52,"author":{"gitId":"yeebinrong"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"yeebinrong"},"content":"     * Returns the LocalDateTime object used by the WonkyDateTime object.","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"yeebinrong"},"content":"     * @return the LocalDateTime object used by the WonkyDateTime object.","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"yeebinrong"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"yeebinrong"},"content":"        return dateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"yeebinrong"},"content":"     * Sets the format style used by the getStyledDateTimeStr() method.","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"yeebinrong"},"content":"     * @param format the format style to be used by the getStyledDateTimeStr() method.","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"yeebinrong"},"content":"    public static void setFormatStyle(FormatStyle format) {","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"yeebinrong"},"content":"        formatStyle \u003d format;","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"yeebinrong"},"content":"     * Returns the format style used by the getStyledDateTimeStr() method.","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"yeebinrong"},"content":"     * @return the format style used by the getStyledDateTimeStr() method.","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"yeebinrong"},"content":"    public static FormatStyle getFormatStyle() {","lastModifiedDate":"2023-10-27"},{"lineNumber":79,"author":{"gitId":"yeebinrong"},"content":"        return formatStyle;","lastModifiedDate":"2023-10-27"},{"lineNumber":80,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"yeebinrong"},"content":"     * Returns the default DateTimeFormatter used by the getDateTimeStr() method.","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"yeebinrong"},"content":"     * @return the default DateTimeFormatter used by the getDateTimeStr() method.","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"yeebinrong"},"content":"    public static DateTimeFormatter getDtf() {","lastModifiedDate":"2023-10-27"},{"lineNumber":88,"author":{"gitId":"yeebinrong"},"content":"        return defaultFormat;","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":90,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":91,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"yeebinrong"},"content":"     * Returns a string representation of the LocalDateTime object used by the WonkyDateTime object, formatted","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"yeebinrong"},"content":"     * according to the format style set by the setFormatStyle() method.","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"yeebinrong"},"content":"     * @return a string representation of the LocalDateTime object used by the WonkyDateTime object.","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"yeebinrong"},"content":"    public String getStyledDateTimeStr() {","lastModifiedDate":"2023-10-27"},{"lineNumber":98,"author":{"gitId":"yeebinrong"},"content":"        return dateTime.format(DateTimeFormatter.ofLocalizedDateTime(formatStyle));","lastModifiedDate":"2023-10-27"},{"lineNumber":99,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":100,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":101,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"yeebinrong"},"content":"     * Returns a string representation of the LocalDateTime object used by the WonkyDateTime object, formatted","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"yeebinrong"},"content":"     * according to the default format \"yyyy-MM-dd HH:mm\".","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"yeebinrong"},"content":"     * @return a string representation of the LocalDateTime object used by the WonkyDateTime object.","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"yeebinrong"},"content":"    public String getDateTimeStr() {","lastModifiedDate":"2023-10-27"},{"lineNumber":108,"author":{"gitId":"yeebinrong"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":110,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"yeebinrong"},"content":"     * Returns the LocalDateTime object mapped to the specified string in the STR_TO_DATE_TIME_MAPPING map.","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"yeebinrong"},"content":"     * @param str the string to be mapped to a LocalDateTime object.","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"yeebinrong"},"content":"     * @return the LocalDateTime object mapped to the specified string in the STR_TO_DATE_TIME_MAPPING map.","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"yeebinrong"},"content":"    public static LocalDateTime getMappedDateTimeStr(String str) {","lastModifiedDate":"2023-10-27"},{"lineNumber":118,"author":{"gitId":"yeebinrong"},"content":"        return STR_TO_DATE_TIME_MAPPING.get(str);","lastModifiedDate":"2023-10-27"},{"lineNumber":119,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":120,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"yeebinrong":120}},{"path":"src/main/java/seedu/duke/commands/WonkyMode.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.commands;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":" * Represents the different modes that the program can run in.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"public enum WonkyMode {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"    NORMAL(\"normal\"),","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"    TEST(\"test\");","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"    private String mode;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"     * Constructs a WonkyMode object with the specified mode.","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"     * @param mode the mode of the WonkyMode object.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"    WonkyMode(String mode) {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"        this.mode \u003d mode;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"     * Returns the mode of the WonkyMode object.","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"     * @return the mode of the WonkyMode object.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"    public String getLitr() {","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"        return mode;","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"     * Returns the WonkyMode object that corresponds to the specified mode.","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"     * @param mode the mode to search for.","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"     * @return the WonkyMode object that corresponds to the specified mode.","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"    public static WonkyMode getEnum(String mode) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"        return WonkyMode.valueOf(mode.toUpperCase());","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yeebinrong":39}},{"path":"src/main/java/seedu/duke/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":" * DukeException is an abstract class that extends the Exception class.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":" * It is used to handle exceptions that are specific to the Duke application.","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"    public DukeException(Exception err) {","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"        super(err);","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yeebinrong":11}},{"path":"src/main/java/seedu/duke/exceptions/DukeLoggerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":" * DukeLoggerException class is a custom exception class that extends DukeException.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":" * It is thrown when there is an error in the DukeLogger class.","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"public class DukeLoggerException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"    public DukeLoggerException(Exception err) {","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"        super(err);","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yeebinrong":11}},{"path":"src/main/java/seedu/duke/exceptions/DukeManagerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":" * Represents an exception that occurs within the DukeManager class.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"public class DukeManagerException extends DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"     * Constructs a DukeManagerException with the specified error message.","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"     * @param err the error message.","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"    public DukeManagerException(String err) {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"        super(new Exception(err));","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"     * Constructs a DukeManagerException with the specified cause.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"     * @param err the cause of the exception.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"    public DukeManagerException(Exception err) {","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"        super(err);","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"yeebinrong":24}},{"path":"src/main/java/seedu/duke/exceptions/DukeScannerException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":" * DukeScannerException class is a custom exception class that extends DukeException.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":" * It is thrown when there is an error in scanning user input.","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"public class DukeScannerException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"    public DukeScannerException(Exception err) {","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"        super(err);","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yeebinrong":11}},{"path":"src/main/java/seedu/duke/exceptions/DukeStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":" * Represents an exception that occurs when there is an error with Duke\u0027s storage system.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"public class DukeStorageException extends DukeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"    public DukeStorageException(Exception err) {","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"        super(err);","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yeebinrong":10}},{"path":"src/main/java/seedu/duke/exceptions/DukeUnhandledException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.exceptions;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":" * DukeUnhandledException is a custom exception class that extends DukeException.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":" * It is thrown when an unhandled exception occurs in the Duke program.","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"public class DukeUnhandledException extends DukeException {","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"    public DukeUnhandledException(Exception err) {","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"        super(err);","lastModifiedDate":"2023-08-27"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yeebinrong":11}},{"path":"src/main/java/seedu/duke/io/WonkyLogger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.io;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"import java.util.List;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"import java.util.Random;","lastModifiedDate":"2023-09-07"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.WonkyMode;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeLoggerException;","lastModifiedDate":"2023-09-07"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.task.Task;","lastModifiedDate":"2023-09-07"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":" * The WonkyLogger class provides logging and printing functionality for the Wonky Bot application.","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":" * It includes methods for logging errors and warnings, printing lists of tasks, and initializing the application.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":" * The class also includes constants for error and warning messages, and a logo for the application.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"public class WonkyLogger {","lastModifiedDate":"2023-09-07"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"    private static final String LOGO \u003d","lastModifiedDate":"2023-09-07"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"        \"\\t__          __         _            ____        _   \\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\\\ \\\\        / /        | |          |  _ \\\\      | |  \\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t \\\\ \\\\  /\\\\  / /__  _ __ | | ___   _  | |_) | ___ | |_ \\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t  \\\\ \\\\/  \\\\/ / _ \\\\| \u0027_ \\\\| |/ / | | | |  _ \u003c / _ \\\\| __|\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t   \\\\  /\\\\  / (_) | | | |   \u003c| |_| | | |_) | (_) | |_ \\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t    \\\\/  \\\\/ \\\\___/|_| |_|_|\\\\_\\\\\\\\__, | |____/ \\\\___/ \\\\__|\\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t                             __/ |                  \\n\"","lastModifiedDate":"2023-09-07"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t                            |___/                  \\n\";","lastModifiedDate":"2023-09-07"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"    private static final List\u003cString\u003e UNKNOWN_CMD_MSGS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-09-07"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"        Arrays.asList(","lastModifiedDate":"2023-09-07"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"            \"Oops! I do not understand the command [%s].\",","lastModifiedDate":"2023-09-07"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"            \"Sorry, the command [%s] you entered does not exist.\",","lastModifiedDate":"2023-09-07"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"            \"My vocabulary of command(s) does not include [%s].\"","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"        )","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"    );","lastModifiedDate":"2023-09-07"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"    private static final List\u003cString\u003e MISMATCH_ARG_MSGS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-09-07"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"        Arrays.asList(","lastModifiedDate":"2023-09-07"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"            \"Oops! Seems like your argument(s) for command [%s] are wrong.\",","lastModifiedDate":"2023-09-16"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"            \"Sorry, the argument(s) for this command [%s] are incorrect.\",","lastModifiedDate":"2023-09-16"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"            \"Please check your argument(s) for this command [%s].\"","lastModifiedDate":"2023-09-16"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"        )","lastModifiedDate":"2023-09-07"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"    );","lastModifiedDate":"2023-09-07"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"    private static final List\u003cString\u003e SUGGEST_CMD_MSGS \u003d new ArrayList\u003c\u003e(","lastModifiedDate":"2023-09-07"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"        Arrays.asList(","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"yeebinrong"},"content":"            \"Did you mean to type command [%s] instead?\"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"yeebinrong"},"content":"        )","lastModifiedDate":"2023-09-07"},{"lineNumber":50,"author":{"gitId":"yeebinrong"},"content":"    );","lastModifiedDate":"2023-09-07"},{"lineNumber":51,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":52,"author":{"gitId":"yeebinrong"},"content":"    private static final String EXPECTED_ARG_MSG \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"yeebinrong"},"content":"        \"Did you input the wrong argument(s)? Expected [%d] argument(s) for the command.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"yeebinrong"},"content":"    private static final String EXPECTED_TYPE_MSG \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"yeebinrong"},"content":"        \"There is mistake with the argument. Expected [%s] instead of [%s].\";","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"yeebinrong"},"content":"    private static final String ADD_TO_LIST_MSG \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"yeebinrong"},"content":"        \"I have added %s task [%s] to our list!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":60,"author":{"gitId":"yeebinrong"},"content":"    private static final String MARK_TYPO_MSG \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":61,"author":{"gitId":"yeebinrong"},"content":"        \"Did you mark/unmark the wrong task? %s is already set to [%s].\";","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"yeebinrong"},"content":"    private static final String TASK_MARKED_MSG \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"yeebinrong"},"content":"        \"Your task [%s] is marked as [%s].\";","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"yeebinrong"},"content":"    private static final String DELETE_INVALID_MSG \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"yeebinrong"},"content":"        \"Did you make a mistake trying to delete task [%d]? A task can\u0027t be be less than 1.\";","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"yeebinrong"},"content":"    private static final String DELETE_TYPO_MSG \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"yeebinrong"},"content":"        \"Did you want to delete the wrong task? There is no task no. [%d].\";","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"yeebinrong"},"content":"    private static final String TASK_DELETED_MSG \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"yeebinrong"},"content":"        \"Your task [%s] is deleted!\";","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"yeebinrong"},"content":"    private static final String HELP_TEXT \u003d","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"yeebinrong"},"content":"        \"Below are the list of commands you can use!\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tlist\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tLists all the tasks.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"yeebinrong"},"content":"        + \"\\thelp\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tPrints the list of commands you can use!\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tbye\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tExits the application.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"yeebinrong"},"content":"        + \"\\ttodo {desc}\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tAdds a todo task to the list.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tdeadline {desc}|{by}\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tAdds a deadline task to the list.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tevent {desc}|{from}|{to}\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tAdds an event task to the list.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tmark {taskNo}\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tMarks a task as done.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tunmark {taskNo}\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tUnmarks a task as done.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tdelete {taskNo}\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tDeletes a task from the list.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tfind {desc}\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tFinds tasks containing the given description.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tstash list\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tShows the list of current stashes.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tstash clear\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tClears all of current stashes.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tstash add {stashName}\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tAdds the current lists of tasks to a stash.\\n\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"yeebinrong"},"content":"        + \"\\tstash pop {stashName}\\n\"","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"yeebinrong"},"content":"        + \"\\t\\tPops the stash to the current list of tasks.\\n\\n\";","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"yeebinrong"},"content":"    private static final Random RND \u003d new Random();","lastModifiedDate":"2023-09-07"},{"lineNumber":104,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":105,"author":{"gitId":"yeebinrong"},"content":"    private static boolean hasError \u003d false;","lastModifiedDate":"2023-10-13"},{"lineNumber":106,"author":{"gitId":"yeebinrong"},"content":"    private static WonkyMode mode \u003d WonkyMode.NORMAL;","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"yeebinrong"},"content":"    private static boolean isLoading \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":109,"author":{"gitId":"yeebinrong"},"content":"    private static void printlnWithWonky(String toPrint) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":110,"author":{"gitId":"yeebinrong"},"content":"        assert toPrint !\u003d null : \"String to print should not be null\";","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"yeebinrong"},"content":"        if (!isLoading) {","lastModifiedDate":"2023-10-13"},{"lineNumber":112,"author":{"gitId":"yeebinrong"},"content":"            println(\"Wonky: \" + toPrint);","lastModifiedDate":"2023-09-07"},{"lineNumber":113,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":114,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":116,"author":{"gitId":"yeebinrong"},"content":"    private static void printWarnWithWonky(String toPrint) throws DukeLoggerException {","lastModifiedDate":"2023-10-13"},{"lineNumber":117,"author":{"gitId":"yeebinrong"},"content":"        assert toPrint !\u003d null : \"String to print should not be null\";","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"yeebinrong"},"content":"        hasError \u003d true;","lastModifiedDate":"2023-10-13"},{"lineNumber":119,"author":{"gitId":"yeebinrong"},"content":"        if (isLoading) {","lastModifiedDate":"2023-10-13"},{"lineNumber":120,"author":{"gitId":"yeebinrong"},"content":"            println(\"Wonky: Uhoh seems like there was an issue when loading the storage. \" + toPrint);","lastModifiedDate":"2023-10-13"},{"lineNumber":121,"author":{"gitId":"yeebinrong"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":122,"author":{"gitId":"yeebinrong"},"content":"            println(\"Wonky: \" + toPrint);","lastModifiedDate":"2023-10-13"},{"lineNumber":123,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":124,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":125,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":126,"author":{"gitId":"yeebinrong"},"content":"    private static void println(String toPrint) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":127,"author":{"gitId":"yeebinrong"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":128,"author":{"gitId":"yeebinrong"},"content":"            System.out.println(\"\\t\" + toPrint);","lastModifiedDate":"2023-09-07"},{"lineNumber":129,"author":{"gitId":"yeebinrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":130,"author":{"gitId":"yeebinrong"},"content":"            throw new DukeLoggerException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":131,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":133,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":134,"author":{"gitId":"yeebinrong"},"content":"    private static void printListTitle(int size) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":135,"author":{"gitId":"yeebinrong"},"content":"        assert size \u003e\u003d 0 : \"Size should not be negative\";","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"yeebinrong"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-09-07"},{"lineNumber":137,"author":{"gitId":"yeebinrong"},"content":"            printlnWithWonky(\"Hooray you have no pending tasks!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":138,"author":{"gitId":"yeebinrong"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":139,"author":{"gitId":"yeebinrong"},"content":"            printlnWithWonky(\"Below are the list of tasks you have added!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":140,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":141,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":142,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":143,"author":{"gitId":"yeebinrong"},"content":"    private static void printFindTitle(int size, String searchStr) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"yeebinrong"},"content":"        assert size \u003e\u003d 0 : \"Size should not be negative\";","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"yeebinrong"},"content":"        if (size \u003d\u003d 0) {","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"yeebinrong"},"content":"            printlnWithWonky(\"No tasks containing [\" + searchStr + \"] found!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"yeebinrong"},"content":"        } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"yeebinrong"},"content":"            printlnWithWonky(\"Below are the list of tasks containing [\" + searchStr + \"] found!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":153,"author":{"gitId":"yeebinrong"},"content":"     * Prints the list of tasks.","lastModifiedDate":"2023-10-31"},{"lineNumber":154,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":155,"author":{"gitId":"yeebinrong"},"content":"     * @param tasks The list of tasks to print.","lastModifiedDate":"2023-10-31"},{"lineNumber":156,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException If there is an error with the logger.","lastModifiedDate":"2023-10-31"},{"lineNumber":157,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":158,"author":{"gitId":"yeebinrong"},"content":"    public static void printListCommand(List\u003cTask\u003e tasks) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":159,"author":{"gitId":"yeebinrong"},"content":"        printListTitle(tasks.size());","lastModifiedDate":"2023-09-07"},{"lineNumber":160,"author":{"gitId":"yeebinrong"},"content":"        if (!isLoading) {","lastModifiedDate":"2023-10-13"},{"lineNumber":161,"author":{"gitId":"yeebinrong"},"content":"            for (int i \u003d 0; i \u003c tasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-09-16"},{"lineNumber":162,"author":{"gitId":"yeebinrong"},"content":"                task(tasks.get(i).getStatusMsg(i + 1));","lastModifiedDate":"2023-11-03"},{"lineNumber":163,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":164,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":165,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":168,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for the start of the application.","lastModifiedDate":"2023-11-03"},{"lineNumber":169,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":170,"author":{"gitId":"yeebinrong"},"content":"     * @param modeToSet","lastModifiedDate":"2023-10-31"},{"lineNumber":171,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":172,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":173,"author":{"gitId":"yeebinrong"},"content":"    public static void startUp(WonkyMode modeToSet) throws DukeLoggerException {","lastModifiedDate":"2023-09-16"},{"lineNumber":174,"author":{"gitId":"yeebinrong"},"content":"        mode \u003d modeToSet;","lastModifiedDate":"2023-09-16"},{"lineNumber":175,"author":{"gitId":"yeebinrong"},"content":"        if (hasError) {","lastModifiedDate":"2023-10-13"},{"lineNumber":176,"author":{"gitId":"yeebinrong"},"content":"            println(\"\");","lastModifiedDate":"2023-10-13"},{"lineNumber":177,"author":{"gitId":"yeebinrong"},"content":"            printlnWithWonky(\"Initialisation completed with warnings.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":178,"author":{"gitId":"yeebinrong"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":179,"author":{"gitId":"yeebinrong"},"content":"            printlnWithWonky(\"Initialisation completed successfully.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":180,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":181,"author":{"gitId":"yeebinrong"},"content":"        println(\"\");","lastModifiedDate":"2023-10-13"},{"lineNumber":182,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(\"Hello from\\n\" + LOGO);","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(\"I\u0027m Wonky the Fairy.\");","lastModifiedDate":"2023-09-07"},{"lineNumber":184,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(\"What can I do for you?\");","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":188,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for the initialisation of the storage.","lastModifiedDate":"2023-11-03"},{"lineNumber":189,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":190,"author":{"gitId":"yeebinrong"},"content":"     * @param isNew","lastModifiedDate":"2023-10-31"},{"lineNumber":191,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":192,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":193,"author":{"gitId":"yeebinrong"},"content":"    public static void initialiseStorage(boolean isNew) throws DukeLoggerException {","lastModifiedDate":"2023-10-13"},{"lineNumber":194,"author":{"gitId":"yeebinrong"},"content":"        if (isNew) {","lastModifiedDate":"2023-10-13"},{"lineNumber":195,"author":{"gitId":"yeebinrong"},"content":"            println(\"Wonky: Initialising...\");","lastModifiedDate":"2023-10-13"},{"lineNumber":196,"author":{"gitId":"yeebinrong"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":197,"author":{"gitId":"yeebinrong"},"content":"            println(\"Wonky: Initialising and loading data from storage...\");","lastModifiedDate":"2023-10-13"},{"lineNumber":198,"author":{"gitId":"yeebinrong"},"content":"            println(\" \");","lastModifiedDate":"2023-10-13"},{"lineNumber":199,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":200,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":202,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":203,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for a task.","lastModifiedDate":"2023-11-03"},{"lineNumber":204,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":205,"author":{"gitId":"yeebinrong"},"content":"     * @param task","lastModifiedDate":"2023-10-31"},{"lineNumber":206,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":207,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":208,"author":{"gitId":"yeebinrong"},"content":"    private static void task(String task) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":209,"author":{"gitId":"yeebinrong"},"content":"        println(\"\\t\" + task);","lastModifiedDate":"2023-09-07"},{"lineNumber":210,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":211,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":212,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":213,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for a task added to the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":214,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":215,"author":{"gitId":"yeebinrong"},"content":"     * @param task","lastModifiedDate":"2023-10-31"},{"lineNumber":216,"author":{"gitId":"yeebinrong"},"content":"     * @param desc","lastModifiedDate":"2023-10-31"},{"lineNumber":217,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":218,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":219,"author":{"gitId":"yeebinrong"},"content":"    public static void addedToList(String task, String desc) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":220,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(String.format(ADD_TO_LIST_MSG, task, desc));","lastModifiedDate":"2023-09-07"},{"lineNumber":221,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":222,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for the bye command.","lastModifiedDate":"2023-11-03"},{"lineNumber":225,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":226,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":227,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":228,"author":{"gitId":"yeebinrong"},"content":"    public static void bye() throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":229,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(\"Bye! Thank you for using Wonky Bot. Hope to see you again soon!\");","lastModifiedDate":"2023-09-07"},{"lineNumber":230,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":231,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":232,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":233,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for an unknown command.","lastModifiedDate":"2023-11-03"},{"lineNumber":234,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":235,"author":{"gitId":"yeebinrong"},"content":"     * @param cmd","lastModifiedDate":"2023-10-31"},{"lineNumber":236,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":237,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":238,"author":{"gitId":"yeebinrong"},"content":"    public static void unknownCommand(String cmd) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":239,"author":{"gitId":"yeebinrong"},"content":"        printWarnWithWonky(","lastModifiedDate":"2023-10-13"},{"lineNumber":240,"author":{"gitId":"yeebinrong"},"content":"            String.format(","lastModifiedDate":"2023-09-07"},{"lineNumber":241,"author":{"gitId":"yeebinrong"},"content":"                randomFromArray(UNKNOWN_CMD_MSGS),","lastModifiedDate":"2023-09-07"},{"lineNumber":242,"author":{"gitId":"yeebinrong"},"content":"                cmd","lastModifiedDate":"2023-09-07"},{"lineNumber":243,"author":{"gitId":"yeebinrong"},"content":"            )","lastModifiedDate":"2023-09-07"},{"lineNumber":244,"author":{"gitId":"yeebinrong"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":245,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":246,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":247,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":248,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for a mismatched argument.","lastModifiedDate":"2023-11-03"},{"lineNumber":249,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":250,"author":{"gitId":"yeebinrong"},"content":"     * @param cmd","lastModifiedDate":"2023-10-31"},{"lineNumber":251,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"yeebinrong"},"content":"    public static void mismatchArgs(String cmd) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":254,"author":{"gitId":"yeebinrong"},"content":"        printWarnWithWonky(","lastModifiedDate":"2023-10-13"},{"lineNumber":255,"author":{"gitId":"yeebinrong"},"content":"            String.format(","lastModifiedDate":"2023-09-07"},{"lineNumber":256,"author":{"gitId":"yeebinrong"},"content":"                randomFromArray(MISMATCH_ARG_MSGS),","lastModifiedDate":"2023-09-07"},{"lineNumber":257,"author":{"gitId":"yeebinrong"},"content":"                cmd","lastModifiedDate":"2023-09-07"},{"lineNumber":258,"author":{"gitId":"yeebinrong"},"content":"            )","lastModifiedDate":"2023-09-07"},{"lineNumber":259,"author":{"gitId":"yeebinrong"},"content":"        );","lastModifiedDate":"2023-09-07"},{"lineNumber":260,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":261,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":262,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":263,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for a mismatched argument with the expected argument count.","lastModifiedDate":"2023-11-03"},{"lineNumber":264,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":265,"author":{"gitId":"yeebinrong"},"content":"     * @param cmd","lastModifiedDate":"2023-10-31"},{"lineNumber":266,"author":{"gitId":"yeebinrong"},"content":"     * @param expectedArgCount","lastModifiedDate":"2023-10-31"},{"lineNumber":267,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":269,"author":{"gitId":"yeebinrong"},"content":"    public static void mismatchArgs(String cmd, int expectedArgCount) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":270,"author":{"gitId":"yeebinrong"},"content":"        mismatchArgs(cmd);","lastModifiedDate":"2023-09-07"},{"lineNumber":271,"author":{"gitId":"yeebinrong"},"content":"        printWarnWithWonky(String.format(EXPECTED_ARG_MSG, expectedArgCount));","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":273,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":274,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":275,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for an expected integer argument type.","lastModifiedDate":"2023-11-03"},{"lineNumber":276,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":277,"author":{"gitId":"yeebinrong"},"content":"     * @param val","lastModifiedDate":"2023-10-31"},{"lineNumber":278,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":279,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":280,"author":{"gitId":"yeebinrong"},"content":"    public static void expectedInteger(String val) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":281,"author":{"gitId":"yeebinrong"},"content":"        printWarnWithWonky(String.format(EXPECTED_TYPE_MSG, \"Integer\", val));","lastModifiedDate":"2023-10-27"},{"lineNumber":282,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":283,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":284,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":285,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for an expected date argument type.","lastModifiedDate":"2023-11-03"},{"lineNumber":286,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":287,"author":{"gitId":"yeebinrong"},"content":"     * @param val","lastModifiedDate":"2023-10-31"},{"lineNumber":288,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":289,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":290,"author":{"gitId":"yeebinrong"},"content":"    public static void expectedDateTime(String val) throws DukeLoggerException {","lastModifiedDate":"2023-10-30"},{"lineNumber":291,"author":{"gitId":"yeebinrong"},"content":"        printWarnWithWonky(String.format(EXPECTED_TYPE_MSG, \"yyyy-MM-dd HH:mm\", val));","lastModifiedDate":"2023-10-27"},{"lineNumber":292,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":293,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":294,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":295,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message to suggest a command.","lastModifiedDate":"2023-11-03"},{"lineNumber":296,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":297,"author":{"gitId":"yeebinrong"},"content":"     * @param cmd","lastModifiedDate":"2023-10-31"},{"lineNumber":298,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":299,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"yeebinrong"},"content":"    public static void suggestCommand(String cmd) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":301,"author":{"gitId":"yeebinrong"},"content":"        if (Objects.nonNull(cmd)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":302,"author":{"gitId":"yeebinrong"},"content":"            printWarnWithWonky(","lastModifiedDate":"2023-10-13"},{"lineNumber":303,"author":{"gitId":"yeebinrong"},"content":"                String.format(","lastModifiedDate":"2023-09-07"},{"lineNumber":304,"author":{"gitId":"yeebinrong"},"content":"                    randomFromArray(SUGGEST_CMD_MSGS),","lastModifiedDate":"2023-09-07"},{"lineNumber":305,"author":{"gitId":"yeebinrong"},"content":"                    cmd","lastModifiedDate":"2023-09-07"},{"lineNumber":306,"author":{"gitId":"yeebinrong"},"content":"                )","lastModifiedDate":"2023-09-07"},{"lineNumber":307,"author":{"gitId":"yeebinrong"},"content":"            );","lastModifiedDate":"2023-09-07"},{"lineNumber":308,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":309,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":310,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":311,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":312,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for a typo in marking a task.","lastModifiedDate":"2023-11-03"},{"lineNumber":313,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":314,"author":{"gitId":"yeebinrong"},"content":"     * @param desc","lastModifiedDate":"2023-10-31"},{"lineNumber":315,"author":{"gitId":"yeebinrong"},"content":"     * @param isDoneLitr","lastModifiedDate":"2023-10-31"},{"lineNumber":316,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":317,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":318,"author":{"gitId":"yeebinrong"},"content":"    public static void markTypo(String desc, String isDoneLitr) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":319,"author":{"gitId":"yeebinrong"},"content":"        printWarnWithWonky(String.format(MARK_TYPO_MSG, desc, isDoneLitr));","lastModifiedDate":"2023-10-13"},{"lineNumber":320,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":321,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":322,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":323,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for marking a task.","lastModifiedDate":"2023-11-03"},{"lineNumber":324,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":325,"author":{"gitId":"yeebinrong"},"content":"     * @param desc","lastModifiedDate":"2023-10-31"},{"lineNumber":326,"author":{"gitId":"yeebinrong"},"content":"     * @param isDoneLitr","lastModifiedDate":"2023-10-31"},{"lineNumber":327,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":328,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":329,"author":{"gitId":"yeebinrong"},"content":"    public static void taskMarked(String desc, String isDoneLitr) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":330,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(String.format(TASK_MARKED_MSG, desc, isDoneLitr));","lastModifiedDate":"2023-09-07"},{"lineNumber":331,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":332,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":333,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":334,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for a typo in deleting a task.","lastModifiedDate":"2023-11-03"},{"lineNumber":335,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":336,"author":{"gitId":"yeebinrong"},"content":"     * @param idx","lastModifiedDate":"2023-10-31"},{"lineNumber":337,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":338,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":339,"author":{"gitId":"yeebinrong"},"content":"    public static void deleteTypo(int idx) throws DukeLoggerException {","lastModifiedDate":"2023-09-16"},{"lineNumber":340,"author":{"gitId":"yeebinrong"},"content":"        String msg \u003d DELETE_TYPO_MSG;","lastModifiedDate":"2023-09-16"},{"lineNumber":341,"author":{"gitId":"yeebinrong"},"content":"        if (idx \u003c\u003d 0) {","lastModifiedDate":"2023-09-16"},{"lineNumber":342,"author":{"gitId":"yeebinrong"},"content":"            msg \u003d DELETE_INVALID_MSG;","lastModifiedDate":"2023-09-16"},{"lineNumber":343,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":344,"author":{"gitId":"yeebinrong"},"content":"        printWarnWithWonky(String.format(msg, idx));","lastModifiedDate":"2023-10-13"},{"lineNumber":345,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":346,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":347,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":348,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for deleting a task.","lastModifiedDate":"2023-11-03"},{"lineNumber":349,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":350,"author":{"gitId":"yeebinrong"},"content":"     * @param desc","lastModifiedDate":"2023-10-31"},{"lineNumber":351,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":352,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":353,"author":{"gitId":"yeebinrong"},"content":"    public static void taskDeleted(String desc) throws DukeLoggerException {","lastModifiedDate":"2023-09-16"},{"lineNumber":354,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(String.format(TASK_DELETED_MSG, desc));","lastModifiedDate":"2023-09-16"},{"lineNumber":355,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":356,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":357,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":358,"author":{"gitId":"yeebinrong"},"content":"     * Returns isLoading.","lastModifiedDate":"2023-11-03"},{"lineNumber":359,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":360,"author":{"gitId":"yeebinrong"},"content":"     * @param bool","lastModifiedDate":"2023-10-31"},{"lineNumber":361,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":362,"author":{"gitId":"yeebinrong"},"content":"    public static void setIsLoading(boolean bool) {","lastModifiedDate":"2023-10-13"},{"lineNumber":363,"author":{"gitId":"yeebinrong"},"content":"        isLoading \u003d bool;","lastModifiedDate":"2023-10-13"},{"lineNumber":364,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":365,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":366,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":367,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for the bye command not supposed to be in storage.","lastModifiedDate":"2023-11-03"},{"lineNumber":368,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":369,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-10-31"},{"lineNumber":370,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":371,"author":{"gitId":"yeebinrong"},"content":"    public static void byeInStorage() throws DukeLoggerException {","lastModifiedDate":"2023-10-13"},{"lineNumber":372,"author":{"gitId":"yeebinrong"},"content":"        printWarnWithWonky(\"Bye command should not be stored.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":373,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":374,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":375,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":376,"author":{"gitId":"yeebinrong"},"content":"     * Returns mode.","lastModifiedDate":"2023-11-03"},{"lineNumber":377,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":378,"author":{"gitId":"yeebinrong"},"content":"     * @return","lastModifiedDate":"2023-10-31"},{"lineNumber":379,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":380,"author":{"gitId":"yeebinrong"},"content":"    public static WonkyMode getMode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":381,"author":{"gitId":"yeebinrong"},"content":"        return mode;","lastModifiedDate":"2023-10-31"},{"lineNumber":382,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":383,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":384,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":385,"author":{"gitId":"yeebinrong"},"content":"     * Returns isLoading.","lastModifiedDate":"2023-11-03"},{"lineNumber":386,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":387,"author":{"gitId":"yeebinrong"},"content":"     * @return","lastModifiedDate":"2023-10-31"},{"lineNumber":388,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":389,"author":{"gitId":"yeebinrong"},"content":"    public static boolean getLoading() {","lastModifiedDate":"2023-10-31"},{"lineNumber":390,"author":{"gitId":"yeebinrong"},"content":"        return isLoading;","lastModifiedDate":"2023-10-31"},{"lineNumber":391,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":392,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":393,"author":{"gitId":"yeebinrong"},"content":"    private static String randomFromArray(List\u003cString\u003e choices) {","lastModifiedDate":"2023-10-31"},{"lineNumber":394,"author":{"gitId":"yeebinrong"},"content":"        if (WonkyMode.TEST.equals(mode)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":395,"author":{"gitId":"yeebinrong"},"content":"            return choices.get(0);","lastModifiedDate":"2023-10-31"},{"lineNumber":396,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":397,"author":{"gitId":"yeebinrong"},"content":"        return choices.get(RND.nextInt(choices.size()));","lastModifiedDate":"2023-10-31"},{"lineNumber":398,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":399,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":400,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":401,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for a list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":402,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":403,"author":{"gitId":"yeebinrong"},"content":"     * @param foundTasks","lastModifiedDate":"2023-11-03"},{"lineNumber":404,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-11-03"},{"lineNumber":405,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":406,"author":{"gitId":"yeebinrong"},"content":"    public static void printFoundTasks(List\u003cTask\u003e foundTasks, String searchStr) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":407,"author":{"gitId":"yeebinrong"},"content":"        printFindTitle(foundTasks.size(), searchStr);","lastModifiedDate":"2023-11-03"},{"lineNumber":408,"author":{"gitId":"yeebinrong"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i +\u003d 1) {","lastModifiedDate":"2023-11-03"},{"lineNumber":409,"author":{"gitId":"yeebinrong"},"content":"            task(foundTasks.get(i).getStatusMsg(i + 1));","lastModifiedDate":"2023-11-03"},{"lineNumber":410,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":411,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":412,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":413,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":414,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for no tasks found.","lastModifiedDate":"2023-11-03"},{"lineNumber":415,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":416,"author":{"gitId":"yeebinrong"},"content":"     * @param searchStr","lastModifiedDate":"2023-11-03"},{"lineNumber":417,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-11-03"},{"lineNumber":418,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":419,"author":{"gitId":"yeebinrong"},"content":"    public static void noTasksFound(String searchStr) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":420,"author":{"gitId":"yeebinrong"},"content":"        printFindTitle(0, searchStr);","lastModifiedDate":"2023-11-03"},{"lineNumber":421,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":422,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":423,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":424,"author":{"gitId":"yeebinrong"},"content":"     * Prints log message for a list of stashed tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":425,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":426,"author":{"gitId":"yeebinrong"},"content":"     * @param stashList","lastModifiedDate":"2023-11-03"},{"lineNumber":427,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-11-03"},{"lineNumber":428,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":429,"author":{"gitId":"yeebinrong"},"content":"    public static void printStashList(List\u003cString\u003e stashList) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":430,"author":{"gitId":"yeebinrong"},"content":"        if (stashList.size() \u003e 0) {","lastModifiedDate":"2023-11-03"},{"lineNumber":431,"author":{"gitId":"yeebinrong"},"content":"            printlnWithWonky(\"Below are the list of stashes you have!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":432,"author":{"gitId":"yeebinrong"},"content":"            for (int i \u003d 0; i \u003c stashList.size(); i +\u003d 1) {","lastModifiedDate":"2023-11-03"},{"lineNumber":433,"author":{"gitId":"yeebinrong"},"content":"                println(\"\\t\" + (i + 1) + \". \" + stashList.get(i));","lastModifiedDate":"2023-11-03"},{"lineNumber":434,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":435,"author":{"gitId":"yeebinrong"},"content":"        } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":436,"author":{"gitId":"yeebinrong"},"content":"            printlnWithWonky(\"You do not have any stashes!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":437,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":438,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":439,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":440,"author":{"gitId":"yeebinrong"},"content":"    public static void stashCleared() throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":441,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(\"Your stashes have been cleared!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":442,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":443,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":444,"author":{"gitId":"yeebinrong"},"content":"    public static void invalidStashCommand(String string) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":445,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(\"You have entered an invalid stash command [\" + string + \"]!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":446,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":447,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":448,"author":{"gitId":"yeebinrong"},"content":"    public static void invalidStashName(String stashName) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":449,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(\"You have entered an invalid stash name [\" + stashName + \"]!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":450,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":451,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":452,"author":{"gitId":"yeebinrong"},"content":"    public static void stashPopped(String stashName) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":453,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(\"I have popped this stash [\" + stashName + \"]!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":454,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":455,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":456,"author":{"gitId":"yeebinrong"},"content":"    public static void stashAdded(String stashName) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":457,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(\"I have added [\" + stashName + \"] to your stashes!\");","lastModifiedDate":"2023-11-03"},{"lineNumber":458,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":459,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":460,"author":{"gitId":"yeebinrong"},"content":"    public static void printHelpCommand() throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":461,"author":{"gitId":"yeebinrong"},"content":"        printlnWithWonky(HELP_TEXT);","lastModifiedDate":"2023-11-03"},{"lineNumber":462,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":463,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-09-07"}],"authorContributionMap":{"yeebinrong":463}},{"path":"src/main/java/seedu/duke/io/WonkyScanner.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.io;","lastModifiedDate":"2023-09-07"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import java.util.List;","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-08-27"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-08-27"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.CommandArgument;","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeScannerException;","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.task.WonkyManager;","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":" * This class is responsible for scanning user input and processing it into commands to be executed by the program.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"public class WonkyScanner {","lastModifiedDate":"2023-08-27"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"    private static Command currCommand;","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"    private static Scanner in;","lastModifiedDate":"2023-08-27"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"    private static boolean isActive \u003d true;","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"     * Initializes the scanner and processes user input until the program is exited.","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException If there is an error with the scanner or executing a command.","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"    public static void startUp() throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"        if (Objects.isNull(in)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"            in \u003d new Scanner(System.in);","lastModifiedDate":"2023-08-27"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"        assert in !\u003d null : \"Scanner should be initialized\";","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"        while (isActive \u0026\u0026 in.hasNextLine()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"            String nextLine \u003d in.nextLine().trim();","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"            processNextLine(nextLine);","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-16"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"     * Exits the program.","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException If there is an error with the logger or scanner.","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"    public static void bye() throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"        assert isActive : \"Program should be active when bye is called\";","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"        if (WonkyLogger.getLoading()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"            WonkyLogger.byeInStorage();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"yeebinrong"},"content":"        } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"yeebinrong"},"content":"            isActive \u003d false;","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"yeebinrong"},"content":"            shutdown();","lastModifiedDate":"2023-09-16"},{"lineNumber":51,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":52,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-16"},{"lineNumber":54,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"yeebinrong"},"content":"     * Returns a suggested command based on a user\u0027s input with a typo.","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"yeebinrong"},"content":"     * @param invalidCmd The user\u0027s input with a typo.","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"yeebinrong"},"content":"     * @return The suggested command, or null if there is no suggestion.","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"yeebinrong"},"content":"    public static String typoSuggestion(String invalidCmd) {","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"yeebinrong"},"content":"        for (Command cmd : Command.values()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":62,"author":{"gitId":"yeebinrong"},"content":"            String cmdStr \u003d cmd.getLitr();","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"yeebinrong"},"content":"            if (cmdStr.length() \u003d\u003d invalidCmd.length()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":64,"author":{"gitId":"yeebinrong"},"content":"                int matches \u003d 0;","lastModifiedDate":"2023-09-16"},{"lineNumber":65,"author":{"gitId":"yeebinrong"},"content":"                for (int i \u003d 0; i \u003c cmdStr.length(); i +\u003d 1) {","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"yeebinrong"},"content":"                    if (cmdStr.charAt(i) \u003d\u003d invalidCmd.charAt(i)) {","lastModifiedDate":"2023-09-16"},{"lineNumber":67,"author":{"gitId":"yeebinrong"},"content":"                        matches +\u003d 1;","lastModifiedDate":"2023-09-16"},{"lineNumber":68,"author":{"gitId":"yeebinrong"},"content":"                    }","lastModifiedDate":"2023-09-16"},{"lineNumber":69,"author":{"gitId":"yeebinrong"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":70,"author":{"gitId":"yeebinrong"},"content":"                if (matches \u003d\u003d cmdStr.length() - 1) {","lastModifiedDate":"2023-09-16"},{"lineNumber":71,"author":{"gitId":"yeebinrong"},"content":"                    return cmdStr.toLowerCase();","lastModifiedDate":"2023-09-16"},{"lineNumber":72,"author":{"gitId":"yeebinrong"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":73,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-09-16"},{"lineNumber":74,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-16"},{"lineNumber":75,"author":{"gitId":"yeebinrong"},"content":"        return null;","lastModifiedDate":"2023-09-16"},{"lineNumber":76,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":77,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":78,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"yeebinrong"},"content":"     * Processes a user\u0027s input into a command to be executed.","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"yeebinrong"},"content":"     * @param nextLine The user\u0027s input.","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"yeebinrong"},"content":"     * @return True if the input was successfully processed, false otherwise.","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException If there is an error with the logger, scanner, or executing a command.","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":85,"author":{"gitId":"yeebinrong"},"content":"    public static boolean processNextLine(String nextLine) throws DukeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"yeebinrong"},"content":"        try {","lastModifiedDate":"2023-08-27"},{"lineNumber":87,"author":{"gitId":"yeebinrong"},"content":"            final List\u003cString\u003e splitLn \u003d Arrays.asList(nextLine.split(\" \", 2));","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"yeebinrong"},"content":"            final String inputCmd \u003d splitLn.get(0);","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"yeebinrong"},"content":"            try {","lastModifiedDate":"2023-08-27"},{"lineNumber":90,"author":{"gitId":"yeebinrong"},"content":"                currCommand \u003d Command.getEnum(inputCmd);","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"yeebinrong"},"content":"                String currArgument \u003d \"\";","lastModifiedDate":"2023-09-07"},{"lineNumber":92,"author":{"gitId":"yeebinrong"},"content":"                if (splitLn.size() \u003d\u003d 2) {","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"yeebinrong"},"content":"                    currArgument \u003d splitLn.get(1);","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"yeebinrong"},"content":"                }","lastModifiedDate":"2023-09-07"},{"lineNumber":95,"author":{"gitId":"yeebinrong"},"content":"                if (Objects.nonNull(currCommand)) {","lastModifiedDate":"2023-09-06"},{"lineNumber":96,"author":{"gitId":"yeebinrong"},"content":"                    WonkyManager.executeCommand(new CommandArgument(currCommand, currArgument));","lastModifiedDate":"2023-09-16"},{"lineNumber":97,"author":{"gitId":"yeebinrong"},"content":"                }","lastModifiedDate":"2023-08-27"},{"lineNumber":98,"author":{"gitId":"yeebinrong"},"content":"            } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-08-27"},{"lineNumber":99,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.unknownCommand(inputCmd);","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.suggestCommand(typoSuggestion(inputCmd));","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"yeebinrong"},"content":"            } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-06"},{"lineNumber":102,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.mismatchArgs(inputCmd);","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.suggestCommand(typoSuggestion(inputCmd));","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-08-27"},{"lineNumber":105,"author":{"gitId":"yeebinrong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":106,"author":{"gitId":"yeebinrong"},"content":"            throw e;","lastModifiedDate":"2023-10-27"},{"lineNumber":107,"author":{"gitId":"yeebinrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"yeebinrong"},"content":"            throw new DukeScannerException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"yeebinrong"},"content":"        return true;","lastModifiedDate":"2023-08-27"},{"lineNumber":111,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":112,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":113,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"yeebinrong"},"content":"     * Closes the scanner and logs a goodbye message.","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException If there is an error with the logger or scanner.","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"yeebinrong"},"content":"    public static void shutdown() throws DukeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"yeebinrong"},"content":"        WonkyLogger.bye();","lastModifiedDate":"2023-09-16"},{"lineNumber":120,"author":{"gitId":"yeebinrong"},"content":"        if (Objects.nonNull(in)) {","lastModifiedDate":"2023-08-27"},{"lineNumber":121,"author":{"gitId":"yeebinrong"},"content":"            in.close();","lastModifiedDate":"2023-08-27"},{"lineNumber":122,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-08-27"},{"lineNumber":123,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":124,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"yeebinrong"},"content":"     * Returns the isActive boolean used by this WonkyScanner.","lastModifiedDate":"2023-10-31"},{"lineNumber":127,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":128,"author":{"gitId":"yeebinrong"},"content":"     * @return the isActive boolean used by this WonkyScanner.","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"yeebinrong"},"content":"    public static boolean getActive() {","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"yeebinrong"},"content":"        return isActive;","lastModifiedDate":"2023-10-31"},{"lineNumber":132,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":134,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":135,"author":{"gitId":"yeebinrong"},"content":"     * Returns the Scanner object used by this WonkyScanner.","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"yeebinrong"},"content":"     * @return the Scanner object used by this WonkyScanner.","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"yeebinrong"},"content":"    public static Scanner getScanner() {","lastModifiedDate":"2023-10-31"},{"lineNumber":140,"author":{"gitId":"yeebinrong"},"content":"        return in;","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yeebinrong":142}},{"path":"src/main/java/seedu/duke/io/WonkyStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.io;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import java.io.File;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.CommandArgument;","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.WonkyMode;","lastModifiedDate":"2023-10-13"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeStorageException;","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.task.WonkyManager;","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":" * Handles the storage of user input commands.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"public class WonkyStorage {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"    private static final String STORAGE_PATH \u003d \"./storage.txt\";","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"    private static final File STORAGE_FILE \u003d new File(STORAGE_PATH);","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"    private static final File STASH_FOLDER \u003d new File(\"./stash/\");","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"     * Initializes the storage file and loads previous commands if in normal mode.","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"     * @param mode the current mode of the program.","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if there is an error initializing the storage file or loading previous commands.","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"    public static void startUp(WonkyMode mode) throws DukeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"        if (WonkyMode.NORMAL.equals(mode)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"            try {","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"                if (!STORAGE_FILE.isFile()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"                    STORAGE_FILE.createNewFile();","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"                    WonkyLogger.initialiseStorage(true);","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"                } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"                    WonkyLogger.setIsLoading(true);","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"                    WonkyLogger.initialiseStorage(false);","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"                    Scanner fileScanner \u003d new Scanner(STORAGE_FILE);","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"                    while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"                        String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"                        WonkyScanner.processNextLine(line);","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"                    }","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"                    fileScanner.close();","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"yeebinrong"},"content":"                    WonkyLogger.setIsLoading(false);","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"yeebinrong"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"yeebinrong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"yeebinrong"},"content":"                throw new DukeStorageException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"yeebinrong"},"content":"    public static void save(List\u003cCommandArgument\u003e cmdArgs) throws DukeException {","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"yeebinrong"},"content":"        save(cmdArgs, STORAGE_FILE);","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"yeebinrong"},"content":"     * Saves the given list of command arguments to the storage file.","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"yeebinrong"},"content":"     * @param cmdArgs the list of command arguments to save.","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if there is an error saving the command arguments to the storage file.","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"yeebinrong"},"content":"    public static void save(List\u003cCommandArgument\u003e cmdArgs, File fileToStore) throws DukeException {","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"yeebinrong"},"content":"        assert cmdArgs !\u003d null : \"Command arguments list should not be null\";","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"yeebinrong"},"content":"        assert fileToStore !\u003d null : \"Storage file should not be null\";","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"yeebinrong"},"content":"        if (WonkyMode.NORMAL.equals(WonkyLogger.getMode())) {","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"yeebinrong"},"content":"            try (","lastModifiedDate":"2023-10-13"},{"lineNumber":71,"author":{"gitId":"yeebinrong"},"content":"                BufferedWriter writer \u003d new BufferedWriter(new FileWriter(fileToStore, false));","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"yeebinrong"},"content":"            ) {","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"yeebinrong"},"content":"                for (CommandArgument cmdArg : cmdArgs) {","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"yeebinrong"},"content":"                    if (","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"yeebinrong"},"content":"                        !Command.BYE.equals(cmdArg.getCmd())","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"yeebinrong"},"content":"                            \u0026\u0026 !Command.LIST.equals(cmdArg.getCmd())","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"yeebinrong"},"content":"                            \u0026\u0026 !Command.FIND.equals(cmdArg.getCmd())","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"yeebinrong"},"content":"                            \u0026\u0026 !Command.STASH.equals(cmdArg.getCmd())","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"yeebinrong"},"content":"                            \u0026\u0026 !Command.HELP.equals(cmdArg.getCmd())","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"yeebinrong"},"content":"                    ) {","lastModifiedDate":"2023-10-13"},{"lineNumber":81,"author":{"gitId":"yeebinrong"},"content":"                        writer.write(cmdArg.getCmdLitr() + \" \" + cmdArg.getArgStr());","lastModifiedDate":"2023-10-13"},{"lineNumber":82,"author":{"gitId":"yeebinrong"},"content":"                        writer.newLine();","lastModifiedDate":"2023-10-13"},{"lineNumber":83,"author":{"gitId":"yeebinrong"},"content":"                    }","lastModifiedDate":"2023-10-13"},{"lineNumber":84,"author":{"gitId":"yeebinrong"},"content":"                }","lastModifiedDate":"2023-10-13"},{"lineNumber":85,"author":{"gitId":"yeebinrong"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":86,"author":{"gitId":"yeebinrong"},"content":"                throw new DukeStorageException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":88,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":89,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":90,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"yeebinrong"},"content":"    public static List\u003cString\u003e getStashList() {","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"yeebinrong"},"content":"        if (STASH_FOLDER.exists() \u0026\u0026 STASH_FOLDER.isDirectory()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"yeebinrong"},"content":"            return Arrays.asList(STASH_FOLDER.list());","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"yeebinrong"},"content":"        return Arrays.asList();","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"yeebinrong"},"content":"     * Clears the all the stashed files.","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"yeebinrong"},"content":"    public static void clearStash() {","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"yeebinrong"},"content":"        if (STASH_FOLDER.exists() \u0026\u0026 STASH_FOLDER.isDirectory()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"yeebinrong"},"content":"            for (File file : STASH_FOLDER.listFiles()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"yeebinrong"},"content":"                file.delete();","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"yeebinrong"},"content":"     * Pops the given stash file and executes the commands in it.","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"yeebinrong"},"content":"     * @param stashName","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"yeebinrong"},"content":"    public static void popStash(String stashName) throws DukeException {","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"yeebinrong"},"content":"        if (STASH_FOLDER.exists() \u0026\u0026 STASH_FOLDER.isDirectory()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"yeebinrong"},"content":"            File stashFile \u003d new File(STASH_FOLDER, stashName);","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"yeebinrong"},"content":"            if (stashFile.exists() \u0026\u0026 stashFile.isFile()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"yeebinrong"},"content":"                try {","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"yeebinrong"},"content":"                    WonkyLogger.setIsLoading(true);","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"yeebinrong"},"content":"                    WonkyManager.resetCmdArgs();","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"yeebinrong"},"content":"                    Scanner fileScanner \u003d new Scanner(stashFile);","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"yeebinrong"},"content":"                    while (fileScanner.hasNextLine()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"yeebinrong"},"content":"                        String line \u003d fileScanner.nextLine();","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"yeebinrong"},"content":"                        WonkyScanner.processNextLine(line);","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"yeebinrong"},"content":"                    }","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"yeebinrong"},"content":"                    fileScanner.close();","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"yeebinrong"},"content":"                    stashFile.delete();","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"yeebinrong"},"content":"                    WonkyLogger.setIsLoading(false);","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"yeebinrong"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":131,"author":{"gitId":"yeebinrong"},"content":"                    throw new DukeStorageException(e);","lastModifiedDate":"2023-11-03"},{"lineNumber":132,"author":{"gitId":"yeebinrong"},"content":"                }","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"yeebinrong"},"content":"     * Adds the given list of command arguments to the given stash file.","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"yeebinrong"},"content":"     * @param stashName","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"yeebinrong"},"content":"     * @param cmdArgs","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"yeebinrong"},"content":"    public static void addStash(String stashName, List\u003cCommandArgument\u003e cmdArgs) throws DukeException {","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"yeebinrong"},"content":"        if (!STASH_FOLDER.exists()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"yeebinrong"},"content":"            STASH_FOLDER.mkdir();","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"yeebinrong"},"content":"        File stashFile \u003d new File(STASH_FOLDER, stashName);","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"yeebinrong"},"content":"        if (!stashFile.isFile()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"yeebinrong"},"content":"            try {","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"yeebinrong"},"content":"                stashFile.createNewFile();","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"yeebinrong"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"yeebinrong"},"content":"                throw new DukeStorageException(e);","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":155,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":156,"author":{"gitId":"yeebinrong"},"content":"        save(cmdArgs, stashFile);","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"yeebinrong":158}},{"path":"src/main/java/seedu/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.WonkyDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":" * Inherits from the Task class.","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"    protected WonkyDateTime by;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"     * Constructs the Deadline class.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"     * @param by The deadline of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"    public Deadline(String description, WonkyDateTime by) {","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"        super(Command.DEADLINE, \"D\", description);","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"     * Returns the status message of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"     * Overrides the getStatusMsg method in the Task class.","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"     * @param idx The index of the task in the task list.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"     * @return The status message of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"    @Override","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"    public String getStatusMsg(int idx) {","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"        return super.getStatusMsg(idx) + \" |   by: \" + by.getStyledDateTimeStr();","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yeebinrong":36}},{"path":"src/main/java/seedu/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.WonkyDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":" * Represents an event task that has a start and end time.","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":" * Inherits from the Task class.","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"    protected WonkyDateTime from;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"    protected WonkyDateTime to;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"     * Constructs the Event class.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"     * @param description Description of the event task.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"     * @param from Start time of the event task.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"     * @param to End time of the event task.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"    public Event(String description, WonkyDateTime from, WonkyDateTime to) {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"        super(Command.EVENT, \"E\", description);","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"     * Returns the status message of the event task.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"     * @param idx Index of the event task.","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"     * @return Status message of the event task.","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"    public String getStatusMsg(int idx) {","lastModifiedDate":"2023-09-16"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"        return super.getStatusMsg(idx)","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"            + \" | from: \" + from.getStyledDateTimeStr()","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"            + \" | to: \" + to.getStyledDateTimeStr();","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"yeebinrong":40}},{"path":"src/main/java/seedu/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeLoggerException;","lastModifiedDate":"2023-09-07"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.io.WonkyLogger;","lastModifiedDate":"2023-09-07"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":" * Represents a task with a description and a completion status.","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":" * Abstract class that is extended by various types of tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"public abstract class Task {","lastModifiedDate":"2023-08-27"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"     * The command associated with the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"    protected Command command;","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"     * The description of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"    protected String description;","lastModifiedDate":"2023-08-27"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"     * The completion status of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-08-27"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"     * The letter associated with the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"    protected String letter;","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"     * The message format for the status of the task.","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"     * Contains the index, letter, completion status and description of the task.","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"    private final String statusMsg \u003d \"%s. [%s][%s] %s\";","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"     * Constructs a new task with the given command, letter and description.","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"     * @param command The command associated with the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"     * @param letter The letter associated with the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"    public Task(Command command, String letter, String description) {","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"        this.command \u003d command;","lastModifiedDate":"2023-09-06"},{"lineNumber":48,"author":{"gitId":"yeebinrong"},"content":"        this.letter \u003d letter;","lastModifiedDate":"2023-09-16"},{"lineNumber":49,"author":{"gitId":"yeebinrong"},"content":"        this.description \u003d description.trim();","lastModifiedDate":"2023-09-16"},{"lineNumber":50,"author":{"gitId":"yeebinrong"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-08-27"},{"lineNumber":51,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":52,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":53,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"yeebinrong"},"content":"     * Returns the status message of the task with the given index.","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"yeebinrong"},"content":"     * @param idx The index of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"yeebinrong"},"content":"     * @return The status message of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"yeebinrong"},"content":"    public String getStatusMsg(int idx) {","lastModifiedDate":"2023-09-16"},{"lineNumber":60,"author":{"gitId":"yeebinrong"},"content":"        return String.format(statusMsg, String.valueOf(idx), letter, isDone ? \"X\" : \" \", description);","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-08-27"},{"lineNumber":62,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":63,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"yeebinrong"},"content":"     * Returns the command associated with the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"yeebinrong"},"content":"     * @return The command associated with the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"yeebinrong"},"content":"    public Command getCommand() {","lastModifiedDate":"2023-09-06"},{"lineNumber":69,"author":{"gitId":"yeebinrong"},"content":"        return command;","lastModifiedDate":"2023-09-06"},{"lineNumber":70,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":71,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":72,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"yeebinrong"},"content":"     * Sets the completion status of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"yeebinrong"},"content":"     * @param toSet The completion status to set.","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException If there is an error with the logger.","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"yeebinrong"},"content":"    public void setDone(boolean toSet) throws DukeLoggerException {","lastModifiedDate":"2023-09-07"},{"lineNumber":79,"author":{"gitId":"yeebinrong"},"content":"        String isDoneLitr \u003d toSet ? \"done\" : \"not done\";","lastModifiedDate":"2023-09-07"},{"lineNumber":80,"author":{"gitId":"yeebinrong"},"content":"        if (isDone \u003d\u003d toSet) {","lastModifiedDate":"2023-09-07"},{"lineNumber":81,"author":{"gitId":"yeebinrong"},"content":"            WonkyLogger.markTypo(description, isDoneLitr);","lastModifiedDate":"2023-09-07"},{"lineNumber":82,"author":{"gitId":"yeebinrong"},"content":"        } else {","lastModifiedDate":"2023-09-07"},{"lineNumber":83,"author":{"gitId":"yeebinrong"},"content":"            WonkyLogger.taskMarked(description, isDoneLitr);","lastModifiedDate":"2023-09-07"},{"lineNumber":84,"author":{"gitId":"yeebinrong"},"content":"            isDone \u003d toSet;","lastModifiedDate":"2023-09-07"},{"lineNumber":85,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":86,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":87,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"yeebinrong"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"yeebinrong"},"content":"     * @return the description of the task","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"yeebinrong"},"content":"    public String getDescription() {","lastModifiedDate":"2023-10-31"},{"lineNumber":94,"author":{"gitId":"yeebinrong"},"content":"        return description;","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":96,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":97,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"yeebinrong"},"content":"     * Returns the isDone of the task.","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"yeebinrong"},"content":"     * @return the isDone of the task","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"yeebinrong"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"yeebinrong"},"content":"        return isDone;","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yeebinrong":105}},{"path":"src/main/java/seedu/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-09-06"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":" * Represents a Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":" * Inherits from the Task class.","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"     * Constructs the Todo class.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"     * @param description Description of the Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-06"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"        super(Command.TODO, \"T\", description);","lastModifiedDate":"2023-09-16"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"     * Returns the status message of the Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"     * @param idx Index of the Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"     * @return Status message of the Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"    @Override","lastModifiedDate":"2023-09-06"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"    public String getStatusMsg(int idx) {","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"        return super.getStatusMsg(idx);","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-09-06"}],"authorContributionMap":{"yeebinrong":30}},{"path":"src/main/java/seedu/duke/task/WonkyManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-08-27"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-03"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-07"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"import java.util.List;","lastModifiedDate":"2023-09-06"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-09-06"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.CommandArgument;","lastModifiedDate":"2023-09-16"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.WonkyDateTime;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-09-06"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeLoggerException;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeManagerException;","lastModifiedDate":"2023-09-07"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.io.WonkyLogger;","lastModifiedDate":"2023-09-07"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.io.WonkyScanner;","lastModifiedDate":"2023-09-07"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.io.WonkyStorage;","lastModifiedDate":"2023-10-13"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-06"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":" * The WonkyManager class is responsible for managing the tasks in the Duke application.","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":" * It contains methods for executing commands, modifying tasks, and parsing commands into tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"public class WonkyManager {","lastModifiedDate":"2023-08-27"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-08-27"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"    // Constants for command argument validation.","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"    private static final String EMPTY_LITR \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"    private static final int ZERO_ARGS \u003d 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"    private static final int ONE_ARGS \u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"    private static final int TWO_ARGS \u003d 2;","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"    private static final int TODO_ARGS \u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"    private static final int DEADLINE_ARGS \u003d 2;","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"    private static final int EVENT_ARGS \u003d 3;","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"    // Constants for command argument indices.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"    private static final int DESC_IDX \u003d 0;","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"    private static final int BY_IDX \u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"    private static final int FROM_IDX \u003d 1;","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"    private static final int TO_IDX \u003d 2;","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"    private static final int ZERO_IDX \u003d 0;","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"    private static final int ONE_IDX \u003d 1;","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"    // Lists for storing command arguments and tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"    private static List\u003cCommandArgument\u003e cmdArgs \u003d new ArrayList\u003cCommandArgument\u003e();","lastModifiedDate":"2023-09-16"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"    private static List\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-09-07"},{"lineNumber":48,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":49,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"yeebinrong"},"content":"     * Executes the given command argument.","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"yeebinrong"},"content":"     * @param cmdArg the command argument to execute.","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if there is an error executing the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"yeebinrong"},"content":"     * @throws IOException","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"yeebinrong"},"content":"    public static void executeCommand(CommandArgument cmdArg) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":57,"author":{"gitId":"yeebinrong"},"content":"        switch (cmdArg.getCmd()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":58,"author":{"gitId":"yeebinrong"},"content":"        case BYE:","lastModifiedDate":"2023-09-07"},{"lineNumber":59,"author":{"gitId":"yeebinrong"},"content":"            if (validateArgs(cmdArg, ZERO_ARGS)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"yeebinrong"},"content":"                WonkyScanner.bye();","lastModifiedDate":"2023-09-16"},{"lineNumber":61,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-09-16"},{"lineNumber":63,"author":{"gitId":"yeebinrong"},"content":"        case LIST:","lastModifiedDate":"2023-09-07"},{"lineNumber":64,"author":{"gitId":"yeebinrong"},"content":"            if (validateArgs(cmdArg, ZERO_ARGS)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.printListCommand(tasks);","lastModifiedDate":"2023-09-16"},{"lineNumber":66,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-09-07"},{"lineNumber":68,"author":{"gitId":"yeebinrong"},"content":"        case HELP:","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"yeebinrong"},"content":"            if (validateArgs(cmdArg, ZERO_ARGS)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.printHelpCommand();","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"yeebinrong"},"content":"        case FIND:","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"yeebinrong"},"content":"            if (validateArgs(cmdArg, ONE_ARGS)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"yeebinrong"},"content":"                findTasks(cmdArg);","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"yeebinrong"},"content":"        case STASH:","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"yeebinrong"},"content":"            validateAndExecuteStash(cmdArg);","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-11-03"},{"lineNumber":81,"author":{"gitId":"yeebinrong"},"content":"        case DELETE:","lastModifiedDate":"2023-11-03"},{"lineNumber":82,"author":{"gitId":"yeebinrong"},"content":"            //Fallthrough","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"yeebinrong"},"content":"        case MARK:","lastModifiedDate":"2023-11-03"},{"lineNumber":84,"author":{"gitId":"yeebinrong"},"content":"            //Fallthrough","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"yeebinrong"},"content":"        case UNMARK:","lastModifiedDate":"2023-11-03"},{"lineNumber":86,"author":{"gitId":"yeebinrong"},"content":"            if (validateArgs(cmdArg, ONE_ARGS)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":87,"author":{"gitId":"yeebinrong"},"content":"                modifyTask(cmdArg);","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"yeebinrong"},"content":"        case TODO:","lastModifiedDate":"2023-11-03"},{"lineNumber":91,"author":{"gitId":"yeebinrong"},"content":"            //Fallthrough","lastModifiedDate":"2023-11-03"},{"lineNumber":92,"author":{"gitId":"yeebinrong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-11-03"},{"lineNumber":93,"author":{"gitId":"yeebinrong"},"content":"            //Fallthrough","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"yeebinrong"},"content":"        case EVENT:","lastModifiedDate":"2023-11-03"},{"lineNumber":95,"author":{"gitId":"yeebinrong"},"content":"            parseCmdToTask(cmdArg);","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"yeebinrong"},"content":"        default:","lastModifiedDate":"2023-11-03"},{"lineNumber":98,"author":{"gitId":"yeebinrong"},"content":"            throw new DukeManagerException(\"Unhandled command to be added: \" + cmdArg.getCmdLitr());","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":100,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"yeebinrong"},"content":"    private static void validateAndExecuteStash(CommandArgument cmdArg) throws DukeException {","lastModifiedDate":"2023-11-03"},{"lineNumber":103,"author":{"gitId":"yeebinrong"},"content":"        List\u003cString\u003e cmdList \u003d cmdArg.getArgList();","lastModifiedDate":"2023-11-03"},{"lineNumber":104,"author":{"gitId":"yeebinrong"},"content":"        List\u003cString\u003e stashList \u003d WonkyStorage.getStashList();","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"yeebinrong"},"content":"        if (validateArgs(cmdArg, ONE_ARGS, false)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"yeebinrong"},"content":"            String firstArg \u003d cmdList.get(ZERO_IDX).trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"yeebinrong"},"content":"            if (firstArg.equals(\"list\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":108,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.printStashList(stashList);","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"yeebinrong"},"content":"            } else if (firstArg.equals(\"clear\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":110,"author":{"gitId":"yeebinrong"},"content":"                WonkyStorage.clearStash();","lastModifiedDate":"2023-11-03"},{"lineNumber":111,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.stashCleared();","lastModifiedDate":"2023-11-03"},{"lineNumber":112,"author":{"gitId":"yeebinrong"},"content":"            } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.invalidStashCommand(firstArg);","lastModifiedDate":"2023-11-03"},{"lineNumber":114,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"yeebinrong"},"content":"        } else if (validateArgs(cmdArg, TWO_ARGS, false)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"yeebinrong"},"content":"            String firstArg \u003d cmdList.get(ZERO_IDX).trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"yeebinrong"},"content":"            String stashName \u003d cmdList.get(ONE_IDX).trim();","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"yeebinrong"},"content":"            if (firstArg.equals(\"add\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":119,"author":{"gitId":"yeebinrong"},"content":"                WonkyStorage.addStash(stashName, cmdArgs);","lastModifiedDate":"2023-11-03"},{"lineNumber":120,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.stashAdded(stashName);","lastModifiedDate":"2023-11-03"},{"lineNumber":121,"author":{"gitId":"yeebinrong"},"content":"            } else if (!stashList.contains(stashName)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":122,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.invalidStashName(stashName);","lastModifiedDate":"2023-11-03"},{"lineNumber":123,"author":{"gitId":"yeebinrong"},"content":"            } else if (firstArg.equals(\"pop\")) {","lastModifiedDate":"2023-11-03"},{"lineNumber":124,"author":{"gitId":"yeebinrong"},"content":"                WonkyStorage.popStash(stashName);","lastModifiedDate":"2023-11-03"},{"lineNumber":125,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.stashPopped(stashName);","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"yeebinrong"},"content":"            } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.invalidStashCommand(firstArg);","lastModifiedDate":"2023-11-03"},{"lineNumber":128,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":131,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":132,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"yeebinrong"},"content":"     * Finds tasks that contain the given string in their description.","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":135,"author":{"gitId":"yeebinrong"},"content":"     * @param cmdArg the command argument specifying the string to find.","lastModifiedDate":"2023-11-03"},{"lineNumber":136,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeLoggerException","lastModifiedDate":"2023-11-03"},{"lineNumber":137,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":138,"author":{"gitId":"yeebinrong"},"content":"    private static void findTasks(CommandArgument cmdArg) throws DukeLoggerException {","lastModifiedDate":"2023-11-03"},{"lineNumber":139,"author":{"gitId":"yeebinrong"},"content":"        List\u003cTask\u003e foundTasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":140,"author":{"gitId":"yeebinrong"},"content":"        String searchStr \u003d cmdArg.getArgList().get(0);","lastModifiedDate":"2023-11-03"},{"lineNumber":141,"author":{"gitId":"yeebinrong"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-11-03"},{"lineNumber":142,"author":{"gitId":"yeebinrong"},"content":"            if (task.description.contains(searchStr)) {","lastModifiedDate":"2023-11-03"},{"lineNumber":143,"author":{"gitId":"yeebinrong"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-11-03"},{"lineNumber":144,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":145,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":146,"author":{"gitId":"yeebinrong"},"content":"        if (foundTasks.size() \u003e 0) {","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"yeebinrong"},"content":"            WonkyLogger.printFoundTasks(foundTasks, searchStr);","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"yeebinrong"},"content":"        } else {","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"yeebinrong"},"content":"            WonkyLogger.noTasksFound(searchStr);","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":154,"author":{"gitId":"yeebinrong"},"content":"     * Modifies the task specified in the given command argument.","lastModifiedDate":"2023-10-30"},{"lineNumber":155,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":156,"author":{"gitId":"yeebinrong"},"content":"     * @param cmdArg the command argument specifying the task to modify.","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if there is an error modifying the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":159,"author":{"gitId":"yeebinrong"},"content":"    public static void modifyTask(CommandArgument cmdArg) throws DukeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":160,"author":{"gitId":"yeebinrong"},"content":"        List\u003cString\u003e argList \u003d cmdArg.getArgList();","lastModifiedDate":"2023-09-16"},{"lineNumber":161,"author":{"gitId":"yeebinrong"},"content":"        try {","lastModifiedDate":"2023-09-07"},{"lineNumber":162,"author":{"gitId":"yeebinrong"},"content":"            int taskIdx \u003d Integer.parseInt(argList.get(0)) - 1;","lastModifiedDate":"2023-09-16"},{"lineNumber":163,"author":{"gitId":"yeebinrong"},"content":"            assert taskIdx \u003e\u003d 0 : \"taskIdx cannot be negative!\";","lastModifiedDate":"2023-11-03"},{"lineNumber":164,"author":{"gitId":"yeebinrong"},"content":"            assert taskIdx \u003c tasks.size() : \"taskIdx cannot be larger than tasks size!\";","lastModifiedDate":"2023-11-03"},{"lineNumber":165,"author":{"gitId":"yeebinrong"},"content":"            switch (cmdArg.getCmd()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":166,"author":{"gitId":"yeebinrong"},"content":"            case MARK:","lastModifiedDate":"2023-09-07"},{"lineNumber":167,"author":{"gitId":"yeebinrong"},"content":"                tasks.get(taskIdx).setDone(true);","lastModifiedDate":"2023-09-16"},{"lineNumber":168,"author":{"gitId":"yeebinrong"},"content":"                break;","lastModifiedDate":"2023-09-07"},{"lineNumber":169,"author":{"gitId":"yeebinrong"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-07"},{"lineNumber":170,"author":{"gitId":"yeebinrong"},"content":"                tasks.get(taskIdx).setDone(false);","lastModifiedDate":"2023-09-16"},{"lineNumber":171,"author":{"gitId":"yeebinrong"},"content":"                break;","lastModifiedDate":"2023-09-16"},{"lineNumber":172,"author":{"gitId":"yeebinrong"},"content":"            case DELETE:","lastModifiedDate":"2023-09-16"},{"lineNumber":173,"author":{"gitId":"yeebinrong"},"content":"                try {","lastModifiedDate":"2023-09-16"},{"lineNumber":174,"author":{"gitId":"yeebinrong"},"content":"                    Task taskToDelete \u003d tasks.get(taskIdx);","lastModifiedDate":"2023-09-16"},{"lineNumber":175,"author":{"gitId":"yeebinrong"},"content":"                    tasks.remove(taskIdx);","lastModifiedDate":"2023-09-16"},{"lineNumber":176,"author":{"gitId":"yeebinrong"},"content":"                    WonkyLogger.taskDeleted(taskToDelete.description);","lastModifiedDate":"2023-09-16"},{"lineNumber":177,"author":{"gitId":"yeebinrong"},"content":"                } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-16"},{"lineNumber":178,"author":{"gitId":"yeebinrong"},"content":"                    WonkyLogger.deleteTypo(taskIdx + 1);","lastModifiedDate":"2023-09-16"},{"lineNumber":179,"author":{"gitId":"yeebinrong"},"content":"                    break;","lastModifiedDate":"2023-09-16"},{"lineNumber":180,"author":{"gitId":"yeebinrong"},"content":"                }","lastModifiedDate":"2023-09-16"},{"lineNumber":181,"author":{"gitId":"yeebinrong"},"content":"                break;","lastModifiedDate":"2023-09-06"},{"lineNumber":182,"author":{"gitId":"yeebinrong"},"content":"            default:","lastModifiedDate":"2023-09-07"},{"lineNumber":183,"author":{"gitId":"yeebinrong"},"content":"                throw new DukeManagerException(\"Unhandled modify task operation: \" + cmdArg.getCmdLitr());","lastModifiedDate":"2023-09-16"},{"lineNumber":184,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":185,"author":{"gitId":"yeebinrong"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-09-07"},{"lineNumber":186,"author":{"gitId":"yeebinrong"},"content":"            WonkyLogger.expectedInteger(argList.get(0));","lastModifiedDate":"2023-09-07"},{"lineNumber":187,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":188,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":189,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":190,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":191,"author":{"gitId":"yeebinrong"},"content":"     * Parses the given command argument into a task and adds it to the task list.","lastModifiedDate":"2023-10-30"},{"lineNumber":192,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":193,"author":{"gitId":"yeebinrong"},"content":"     * @param cmdArg the command argument to parse.","lastModifiedDate":"2023-11-03"},{"lineNumber":194,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if there is an error parsing the command or adding the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":195,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":196,"author":{"gitId":"yeebinrong"},"content":"    private static void parseCmdToTask(CommandArgument cmdArg) throws DukeException {","lastModifiedDate":"2023-09-16"},{"lineNumber":197,"author":{"gitId":"yeebinrong"},"content":"        List\u003cString\u003e argList \u003d cmdArg.getArgList();","lastModifiedDate":"2023-09-16"},{"lineNumber":198,"author":{"gitId":"yeebinrong"},"content":"        switch (cmdArg.getCmd()) {","lastModifiedDate":"2023-09-16"},{"lineNumber":199,"author":{"gitId":"yeebinrong"},"content":"        case TODO:","lastModifiedDate":"2023-09-06"},{"lineNumber":200,"author":{"gitId":"yeebinrong"},"content":"            if (validateArgs(cmdArg, TODO_ARGS)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":201,"author":{"gitId":"yeebinrong"},"content":"                addTask(new Todo(argList.get(DESC_IDX)));","lastModifiedDate":"2023-09-07"},{"lineNumber":202,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":203,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-09-06"},{"lineNumber":204,"author":{"gitId":"yeebinrong"},"content":"        case DEADLINE:","lastModifiedDate":"2023-09-06"},{"lineNumber":205,"author":{"gitId":"yeebinrong"},"content":"            if (validateArgs(cmdArg, DEADLINE_ARGS)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":206,"author":{"gitId":"yeebinrong"},"content":"                addTask(","lastModifiedDate":"2023-09-07"},{"lineNumber":207,"author":{"gitId":"yeebinrong"},"content":"                    new Deadline(","lastModifiedDate":"2023-09-07"},{"lineNumber":208,"author":{"gitId":"yeebinrong"},"content":"                        argList.get(DESC_IDX),","lastModifiedDate":"2023-09-07"},{"lineNumber":209,"author":{"gitId":"yeebinrong"},"content":"                        parseToDate(argList.get(BY_IDX).trim())","lastModifiedDate":"2023-10-27"},{"lineNumber":210,"author":{"gitId":"yeebinrong"},"content":"                    )","lastModifiedDate":"2023-09-07"},{"lineNumber":211,"author":{"gitId":"yeebinrong"},"content":"                );","lastModifiedDate":"2023-09-07"},{"lineNumber":212,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":213,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-09-06"},{"lineNumber":214,"author":{"gitId":"yeebinrong"},"content":"        case EVENT:","lastModifiedDate":"2023-09-06"},{"lineNumber":215,"author":{"gitId":"yeebinrong"},"content":"            if (validateArgs(cmdArg, EVENT_ARGS)) {","lastModifiedDate":"2023-10-13"},{"lineNumber":216,"author":{"gitId":"yeebinrong"},"content":"                addTask(","lastModifiedDate":"2023-09-07"},{"lineNumber":217,"author":{"gitId":"yeebinrong"},"content":"                    new Event(","lastModifiedDate":"2023-09-07"},{"lineNumber":218,"author":{"gitId":"yeebinrong"},"content":"                        argList.get(DESC_IDX),","lastModifiedDate":"2023-09-07"},{"lineNumber":219,"author":{"gitId":"yeebinrong"},"content":"                        parseToDate(argList.get(FROM_IDX).trim()),","lastModifiedDate":"2023-10-27"},{"lineNumber":220,"author":{"gitId":"yeebinrong"},"content":"                        parseToDate(argList.get(TO_IDX).trim())","lastModifiedDate":"2023-10-27"},{"lineNumber":221,"author":{"gitId":"yeebinrong"},"content":"                    )","lastModifiedDate":"2023-09-07"},{"lineNumber":222,"author":{"gitId":"yeebinrong"},"content":"                );","lastModifiedDate":"2023-09-07"},{"lineNumber":223,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":224,"author":{"gitId":"yeebinrong"},"content":"            break;","lastModifiedDate":"2023-09-06"},{"lineNumber":225,"author":{"gitId":"yeebinrong"},"content":"        default:","lastModifiedDate":"2023-09-06"},{"lineNumber":226,"author":{"gitId":"yeebinrong"},"content":"            throw new DukeManagerException(\"Unhandled task to be added: \" + cmdArg.getCmdLitr());","lastModifiedDate":"2023-09-16"},{"lineNumber":227,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":228,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":229,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":230,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":231,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":232,"author":{"gitId":"yeebinrong"},"content":"     * Adds the given task to the task list.","lastModifiedDate":"2023-10-30"},{"lineNumber":233,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":234,"author":{"gitId":"yeebinrong"},"content":"     * @param toAdd the task to add.","lastModifiedDate":"2023-11-03"},{"lineNumber":235,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if there is an error adding the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":236,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":237,"author":{"gitId":"yeebinrong"},"content":"    private static void addTask(Task toAdd) throws DukeException {","lastModifiedDate":"2023-09-07"},{"lineNumber":238,"author":{"gitId":"yeebinrong"},"content":"        tasks.add(toAdd);","lastModifiedDate":"2023-09-07"},{"lineNumber":239,"author":{"gitId":"yeebinrong"},"content":"        WonkyLogger.addedToList(toAdd.command.getLitr(), toAdd.description);","lastModifiedDate":"2023-09-07"},{"lineNumber":240,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-06"},{"lineNumber":241,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":242,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":243,"author":{"gitId":"yeebinrong"},"content":"     * Validates that the given command argument has the expected number of arguments.","lastModifiedDate":"2023-10-30"},{"lineNumber":244,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":245,"author":{"gitId":"yeebinrong"},"content":"     * @param cmdArg the command argument to validate.","lastModifiedDate":"2023-11-03"},{"lineNumber":246,"author":{"gitId":"yeebinrong"},"content":"     * @param expectedSize the expected number of arguments.","lastModifiedDate":"2023-11-03"},{"lineNumber":247,"author":{"gitId":"yeebinrong"},"content":"     * @return true if the command argument is valid, false otherwise.","lastModifiedDate":"2023-11-03"},{"lineNumber":248,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if there is an error validating the command argument.","lastModifiedDate":"2023-11-03"},{"lineNumber":249,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":250,"author":{"gitId":"yeebinrong"},"content":"    private static boolean validateArgs(CommandArgument cmdArg, int expectedSize) throws DukeException {","lastModifiedDate":"2023-10-13"},{"lineNumber":251,"author":{"gitId":"yeebinrong"},"content":"        return validateArgs(cmdArg, expectedSize, true);","lastModifiedDate":"2023-11-03"},{"lineNumber":252,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":253,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":254,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":255,"author":{"gitId":"yeebinrong"},"content":"     * Validates that the given command argument has the expected number of arguments.","lastModifiedDate":"2023-11-03"},{"lineNumber":256,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":257,"author":{"gitId":"yeebinrong"},"content":"     * @param cmdArg the command argument to validate.","lastModifiedDate":"2023-11-03"},{"lineNumber":258,"author":{"gitId":"yeebinrong"},"content":"     * @param expectedSize the expected number of arguments.","lastModifiedDate":"2023-11-03"},{"lineNumber":259,"author":{"gitId":"yeebinrong"},"content":"     * @return true if the command argument is valid, false otherwise.","lastModifiedDate":"2023-11-03"},{"lineNumber":260,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if there is an error validating the command argument.","lastModifiedDate":"2023-11-03"},{"lineNumber":261,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":262,"author":{"gitId":"yeebinrong"},"content":"    private static boolean validateArgs(","lastModifiedDate":"2023-11-03"},{"lineNumber":263,"author":{"gitId":"yeebinrong"},"content":"        CommandArgument cmdArg, int expectedSize, boolean logError","lastModifiedDate":"2023-11-03"},{"lineNumber":264,"author":{"gitId":"yeebinrong"},"content":"    ) throws DukeException {","lastModifiedDate":"2023-11-03"},{"lineNumber":265,"author":{"gitId":"yeebinrong"},"content":"        List\u003cString\u003e argList \u003d cmdArg.getArgList();","lastModifiedDate":"2023-10-13"},{"lineNumber":266,"author":{"gitId":"yeebinrong"},"content":"        int argCount \u003d cmdArg.getArgCount();","lastModifiedDate":"2023-10-13"},{"lineNumber":267,"author":{"gitId":"yeebinrong"},"content":"        if (WonkyLogger.getLoading()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":268,"author":{"gitId":"yeebinrong"},"content":"            cmdArgs.add(cmdArg);","lastModifiedDate":"2023-10-27"},{"lineNumber":269,"author":{"gitId":"yeebinrong"},"content":"            WonkyStorage.save(cmdArgs);","lastModifiedDate":"2023-10-27"},{"lineNumber":270,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"yeebinrong"},"content":"        if (argCount \u003d\u003d expectedSize \u0026\u0026 expectedSize \u003d\u003d ZERO_ARGS) {","lastModifiedDate":"2023-10-13"},{"lineNumber":272,"author":{"gitId":"yeebinrong"},"content":"            cmdArgs.add(cmdArg);","lastModifiedDate":"2023-10-13"},{"lineNumber":273,"author":{"gitId":"yeebinrong"},"content":"            WonkyStorage.save(cmdArgs);","lastModifiedDate":"2023-10-13"},{"lineNumber":274,"author":{"gitId":"yeebinrong"},"content":"            return true;","lastModifiedDate":"2023-10-13"},{"lineNumber":275,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":276,"author":{"gitId":"yeebinrong"},"content":"        if (argCount !\u003d expectedSize || (argList.get(0).trim().isEmpty())) {","lastModifiedDate":"2023-10-13"},{"lineNumber":277,"author":{"gitId":"yeebinrong"},"content":"            if (logError) {","lastModifiedDate":"2023-11-03"},{"lineNumber":278,"author":{"gitId":"yeebinrong"},"content":"                WonkyLogger.mismatchArgs(getLastCmd().getLitr(), expectedSize);","lastModifiedDate":"2023-09-16"},{"lineNumber":279,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-11-03"},{"lineNumber":280,"author":{"gitId":"yeebinrong"},"content":"            return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":281,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":282,"author":{"gitId":"yeebinrong"},"content":"        for (String arg : argList) {","lastModifiedDate":"2023-09-07"},{"lineNumber":283,"author":{"gitId":"yeebinrong"},"content":"            if (EMPTY_LITR.equals(arg)) {","lastModifiedDate":"2023-09-07"},{"lineNumber":284,"author":{"gitId":"yeebinrong"},"content":"                return false;","lastModifiedDate":"2023-09-07"},{"lineNumber":285,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-09-07"},{"lineNumber":286,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-09-07"},{"lineNumber":287,"author":{"gitId":"yeebinrong"},"content":"        if (Command.EVENT.equals(cmdArg.getCmd()) || Command.DEADLINE.equals(cmdArg.getCmd())) {","lastModifiedDate":"2023-10-27"},{"lineNumber":288,"author":{"gitId":"yeebinrong"},"content":"            String newCmdArgStr \u003d cmdArg.getArgList().get(0);","lastModifiedDate":"2023-10-27"},{"lineNumber":289,"author":{"gitId":"yeebinrong"},"content":"            for (int i \u003d 1; i \u003c cmdArg.getArgCount(); i +\u003d 1) {","lastModifiedDate":"2023-10-27"},{"lineNumber":290,"author":{"gitId":"yeebinrong"},"content":"                String currArg \u003d cmdArg.getArgList().get(i);","lastModifiedDate":"2023-10-27"},{"lineNumber":291,"author":{"gitId":"yeebinrong"},"content":"                if (!isValidDateTime(currArg)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":292,"author":{"gitId":"yeebinrong"},"content":"                    return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":293,"author":{"gitId":"yeebinrong"},"content":"                } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":294,"author":{"gitId":"yeebinrong"},"content":"                    newCmdArgStr +\u003d \"|\" + parseToDate(currArg).getDateTimeStr();","lastModifiedDate":"2023-10-27"},{"lineNumber":295,"author":{"gitId":"yeebinrong"},"content":"                }","lastModifiedDate":"2023-10-27"},{"lineNumber":296,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":297,"author":{"gitId":"yeebinrong"},"content":"            cmdArg.setArg(newCmdArgStr);","lastModifiedDate":"2023-10-27"},{"lineNumber":298,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":299,"author":{"gitId":"yeebinrong"},"content":"        if (!WonkyLogger.getLoading()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":300,"author":{"gitId":"yeebinrong"},"content":"            // Save the command argument to storage if it is not being loaded from storage","lastModifiedDate":"2023-10-30"},{"lineNumber":301,"author":{"gitId":"yeebinrong"},"content":"            cmdArgs.add(cmdArg);","lastModifiedDate":"2023-10-13"},{"lineNumber":302,"author":{"gitId":"yeebinrong"},"content":"            WonkyStorage.save(cmdArgs);","lastModifiedDate":"2023-10-13"},{"lineNumber":303,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":304,"author":{"gitId":"yeebinrong"},"content":"        return true;","lastModifiedDate":"2023-09-07"},{"lineNumber":305,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-09-07"},{"lineNumber":306,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-09-07"},{"lineNumber":307,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":308,"author":{"gitId":"yeebinrong"},"content":"     * Returns the last command argument in the command argument list.","lastModifiedDate":"2023-10-30"},{"lineNumber":309,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":310,"author":{"gitId":"yeebinrong"},"content":"     * @return the last command argument in the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":311,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":312,"author":{"gitId":"yeebinrong"},"content":"    private static Command getLastCmd() {","lastModifiedDate":"2023-10-30"},{"lineNumber":313,"author":{"gitId":"yeebinrong"},"content":"        return cmdArgs.get(cmdArgs.size() - 1).getCmd();","lastModifiedDate":"2023-10-30"},{"lineNumber":314,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":315,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":316,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":317,"author":{"gitId":"yeebinrong"},"content":"     * Checks if a given string is a valid date and time in the format specified by {@link WonkyDateTime#getDtf()}.","lastModifiedDate":"2023-10-30"},{"lineNumber":318,"author":{"gitId":"yeebinrong"},"content":"     * If the string is not a valid date and time, it checks if it is a valid date in the format specified by","lastModifiedDate":"2023-10-30"},{"lineNumber":319,"author":{"gitId":"yeebinrong"},"content":"     * {@link WonkyDateTime#getMappedDateTimeStr(String)}.","lastModifiedDate":"2023-10-30"},{"lineNumber":320,"author":{"gitId":"yeebinrong"},"content":"     * If the string is not a valid date or date and time,","lastModifiedDate":"2023-10-31"},{"lineNumber":321,"author":{"gitId":"yeebinrong"},"content":"     * it logs an error message using {@link WonkyLogger#expectedDateTime(String)}.","lastModifiedDate":"2023-10-31"},{"lineNumber":322,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":323,"author":{"gitId":"yeebinrong"},"content":"     * @param str the string to be checked.","lastModifiedDate":"2023-11-03"},{"lineNumber":324,"author":{"gitId":"yeebinrong"},"content":"     * @return true if the string is a valid date or date and time, false otherwise.","lastModifiedDate":"2023-11-03"},{"lineNumber":325,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if there is an error parsing the string as a date or date and time.","lastModifiedDate":"2023-11-03"},{"lineNumber":326,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":327,"author":{"gitId":"yeebinrong"},"content":"    private static boolean isValidDateTime(String str) throws DukeException {","lastModifiedDate":"2023-10-30"},{"lineNumber":328,"author":{"gitId":"yeebinrong"},"content":"        str \u003d str.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":329,"author":{"gitId":"yeebinrong"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":330,"author":{"gitId":"yeebinrong"},"content":"            LocalDateTime.parse(str, WonkyDateTime.getDtf());","lastModifiedDate":"2023-10-27"},{"lineNumber":331,"author":{"gitId":"yeebinrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":332,"author":{"gitId":"yeebinrong"},"content":"            if (Objects.nonNull(WonkyDateTime.getMappedDateTimeStr(str))) {","lastModifiedDate":"2023-10-27"},{"lineNumber":333,"author":{"gitId":"yeebinrong"},"content":"                return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":334,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":335,"author":{"gitId":"yeebinrong"},"content":"            WonkyLogger.expectedDateTime(str);","lastModifiedDate":"2023-10-30"},{"lineNumber":336,"author":{"gitId":"yeebinrong"},"content":"            return false;","lastModifiedDate":"2023-10-27"},{"lineNumber":337,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":338,"author":{"gitId":"yeebinrong"},"content":"        return true;","lastModifiedDate":"2023-10-27"},{"lineNumber":339,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":340,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":341,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":342,"author":{"gitId":"yeebinrong"},"content":"     * Parses a string to a WonkyDateTime object.","lastModifiedDate":"2023-10-30"},{"lineNumber":343,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":344,"author":{"gitId":"yeebinrong"},"content":"     * @param str the string to be parsed.","lastModifiedDate":"2023-11-03"},{"lineNumber":345,"author":{"gitId":"yeebinrong"},"content":"     * @return a WonkyDateTime object representing the parsed date and time.","lastModifiedDate":"2023-11-03"},{"lineNumber":346,"author":{"gitId":"yeebinrong"},"content":"     * @throws DukeException if the string cannot be parsed into a valid date and time.","lastModifiedDate":"2023-11-03"},{"lineNumber":347,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":348,"author":{"gitId":"yeebinrong"},"content":"    private static WonkyDateTime parseToDate(String str) throws DukeException {","lastModifiedDate":"2023-10-27"},{"lineNumber":349,"author":{"gitId":"yeebinrong"},"content":"        str \u003d str.trim();","lastModifiedDate":"2023-10-27"},{"lineNumber":350,"author":{"gitId":"yeebinrong"},"content":"        try {","lastModifiedDate":"2023-10-27"},{"lineNumber":351,"author":{"gitId":"yeebinrong"},"content":"            return new WonkyDateTime(LocalDateTime.parse(str, WonkyDateTime.getDtf()));","lastModifiedDate":"2023-10-27"},{"lineNumber":352,"author":{"gitId":"yeebinrong"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":353,"author":{"gitId":"yeebinrong"},"content":"            if (Objects.nonNull(WonkyDateTime.getMappedDateTimeStr(str))) {","lastModifiedDate":"2023-10-27"},{"lineNumber":354,"author":{"gitId":"yeebinrong"},"content":"                return new WonkyDateTime(WonkyDateTime.getMappedDateTimeStr(str));","lastModifiedDate":"2023-10-27"},{"lineNumber":355,"author":{"gitId":"yeebinrong"},"content":"            }","lastModifiedDate":"2023-10-27"},{"lineNumber":356,"author":{"gitId":"yeebinrong"},"content":"            throw new DukeManagerException(\"Invalid date value.\");","lastModifiedDate":"2023-10-27"},{"lineNumber":357,"author":{"gitId":"yeebinrong"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-10-27"},{"lineNumber":358,"author":{"gitId":"yeebinrong"},"content":"            throw new DukeManagerException(e);","lastModifiedDate":"2023-10-30"},{"lineNumber":359,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":360,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":361,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":362,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":363,"author":{"gitId":"yeebinrong"},"content":"     * Returns a list of all tasks.","lastModifiedDate":"2023-10-31"},{"lineNumber":364,"author":{"gitId":"yeebinrong"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":365,"author":{"gitId":"yeebinrong"},"content":"     * @return a list of all tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":366,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":367,"author":{"gitId":"yeebinrong"},"content":"    public static List\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-10-31"},{"lineNumber":368,"author":{"gitId":"yeebinrong"},"content":"        return tasks;","lastModifiedDate":"2023-10-31"},{"lineNumber":369,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":370,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":371,"author":{"gitId":"yeebinrong"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":372,"author":{"gitId":"yeebinrong"},"content":"     * Resets the task list by creating a new empty ArrayList of tasks.","lastModifiedDate":"2023-10-31"},{"lineNumber":373,"author":{"gitId":"yeebinrong"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":374,"author":{"gitId":"yeebinrong"},"content":"    public static void resetTaskList() {","lastModifiedDate":"2023-10-31"},{"lineNumber":375,"author":{"gitId":"yeebinrong"},"content":"        tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-10-31"},{"lineNumber":376,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":377,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":378,"author":{"gitId":"yeebinrong"},"content":"    public static void resetCmdArgs() {","lastModifiedDate":"2023-11-03"},{"lineNumber":379,"author":{"gitId":"yeebinrong"},"content":"        cmdArgs \u003d new ArrayList\u003cCommandArgument\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":380,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":381,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-08-27"}],"authorContributionMap":{"yeebinrong":381}},{"path":"src/test/java/seedu/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.WonkyMode;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"public class DukeTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"    public void checkMode_emptyArgs_returnsNormalMode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"        String[] args \u003d {};","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"        WonkyMode mode \u003d Duke.checkMode(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(WonkyMode.NORMAL, mode);","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"    public void checkMode_invalidMode_returnsNormalMode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"        String[] args \u003d {\"invalid_mode\"};","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"        WonkyMode mode \u003d Duke.checkMode(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(WonkyMode.NORMAL, mode);","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"    public void checkMode_validMode_returnsSpecifiedMode() {","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"        String[] args \u003d {WonkyMode.TEST.getLitr()};","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"        WonkyMode mode \u003d Duke.checkMode(args);","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(WonkyMode.TEST, mode);","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"    public void initialise_testMode_success() {","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"            Duke.initialise(WonkyMode.TEST);","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"            fail(\"Unexpected DukeException thrown\");","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"yeebinrong":41}},{"path":"src/test/java/seedu/duke/io/WonkyScannerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.io;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"public class WonkyScannerTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"    public void processNextLine_validCommandArgument_returnsTrue() throws DukeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"        String input \u003d \"todo test task\";","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"        InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"        System.setIn(in);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"        boolean result \u003d WonkyScanner.processNextLine(input);","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(true, result);","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"    public void typoSuggestion_validTypo_returnsSuggestion() {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"        String input \u003d \"evend\";","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"        String result \u003d WonkyScanner.typoSuggestion(input);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(\"event\", result);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"    public void typoSuggestion_invalidTypo_returnsNull() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"        String input \u003d \"invalidtypo\";","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"        String result \u003d WonkyScanner.typoSuggestion(input);","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(null, result);","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"    public void bye_notLoading_closesScanner() throws DukeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"        WonkyLogger.setIsLoading(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"        WonkyScanner.bye();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(false, WonkyScanner.getActive());","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"yeebinrong":43}},{"path":"src/test/java/seedu/duke/task/WonkyManagerTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"package seedu.duke.task;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.Command;","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.CommandArgument;","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.commands.WonkyDateTime;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"import seedu.duke.exceptions.DukeException;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"public class WonkyManagerTest {","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"    @BeforeEach","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"    public void setUp() throws DukeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"        WonkyManager.resetTaskList();","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"        CommandArgument todoCmd \u003d new CommandArgument(Command.TODO, \"test task 1\");","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"        WonkyManager.executeCommand(todoCmd);","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"        CommandArgument deadlineCmd \u003d new CommandArgument(Command.DEADLINE, \"test task 1 | 2022-12-31 23:59\");","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"        WonkyManager.executeCommand(deadlineCmd);","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"        CommandArgument eventCmd \u003d","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"            new CommandArgument(Command.EVENT, \"test task 1 | 2022-12-31 23:59 | 2023-01-01 00:01\");","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"        WonkyManager.executeCommand(eventCmd);","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"    public void executeCommand_validCommandArgument_addsTaskToList() throws DukeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"        CommandArgument cmdArg \u003d new CommandArgument(Command.TODO, \"test task 4\");","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"        WonkyManager.executeCommand(cmdArg);","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(4, WonkyManager.getTasks().size());","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(\"test task 4\", WonkyManager.getTasks().get(3).getDescription());","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"yeebinrong"},"content":"    @Test","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"yeebinrong"},"content":"    public void modifyTask_validCommandArgument_marksTaskAsDone() throws DukeException {","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"yeebinrong"},"content":"        CommandArgument cmdArg \u003d new CommandArgument(Command.MARK, \"1\");","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"yeebinrong"},"content":"        WonkyManager.executeCommand(cmdArg);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"yeebinrong"},"content":"        assertEquals(true, WonkyManager.getTasks().get(0).getDone());","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"yeebinrong"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"yeebinrong"},"content":"    private WonkyDateTime getWonkyDateTime(String dateTime) {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"yeebinrong"},"content":"        return new WonkyDateTime(LocalDateTime.parse(dateTime, WonkyDateTime.getDtf()));","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"yeebinrong"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"yeebinrong"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"yeebinrong":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yeebinrong"},"content":"lisq","lastModifiedDate":"2023-09-16"},{"lineNumber":2,"author":{"gitId":"yeebinrong"},"content":"invalidcmd","lastModifiedDate":"2023-09-16"},{"lineNumber":3,"author":{"gitId":"yeebinrong"},"content":" list ","lastModifiedDate":"2023-09-16"},{"lineNumber":4,"author":{"gitId":"yeebinrong"},"content":"todo","lastModifiedDate":"2023-09-16"},{"lineNumber":5,"author":{"gitId":"yeebinrong"},"content":"todo toomany | arguments","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"yeebinrong"},"content":"todo homework1 ","lastModifiedDate":"2023-09-16"},{"lineNumber":7,"author":{"gitId":"yeebinrong"},"content":"deadline","lastModifiedDate":"2023-09-16"},{"lineNumber":8,"author":{"gitId":"yeebinrong"},"content":"event","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"yeebinrong"},"content":"deadline toolittle","lastModifiedDate":"2023-09-16"},{"lineNumber":10,"author":{"gitId":"yeebinrong"},"content":"deadline toomany | 2 | 3","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"yeebinrong"},"content":"event toolittle   |  2023-11-26 17:27    |","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"yeebinrong"},"content":"event toomany   |  2023-11-26 17:27    |  2023-11-27 09:27 | toomany ","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"yeebinrong"},"content":"deadline    homework2|  2023-11-25 12:27 ","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"yeebinrong"},"content":"event homework3   |  2023-11-26 17:27    |  2023-11-27 09:27  ","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"yeebinrong"},"content":"deadline    homework4 |  invaliddate","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"event homework5   |  2023-11-26 17:27    |  invaliddate  ","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"yeebinrong"},"content":"event homework3   |  invaliddate    |  2023-11-27 9:27  ","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"list ","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"yeebinrong"},"content":"mark 2","lastModifiedDate":"2023-09-16"},{"lineNumber":20,"author":{"gitId":"yeebinrong"},"content":"list","lastModifiedDate":"2023-09-16"},{"lineNumber":21,"author":{"gitId":"yeebinrong"},"content":"mark 3","lastModifiedDate":"2023-09-16"},{"lineNumber":22,"author":{"gitId":"yeebinrong"},"content":"unmark 2","lastModifiedDate":"2023-09-16"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"mark 1","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"yeebinrong"},"content":"list","lastModifiedDate":"2023-09-16"},{"lineNumber":25,"author":{"gitId":"yeebinrong"},"content":"delete -5","lastModifiedDate":"2023-09-16"},{"lineNumber":26,"author":{"gitId":"yeebinrong"},"content":"delete 7","lastModifiedDate":"2023-09-16"},{"lineNumber":27,"author":{"gitId":"yeebinrong"},"content":"delete 0","lastModifiedDate":"2023-09-16"},{"lineNumber":28,"author":{"gitId":"yeebinrong"},"content":"delete 2","lastModifiedDate":"2023-09-16"},{"lineNumber":29,"author":{"gitId":"yeebinrong"},"content":"list","lastModifiedDate":"2023-09-16"},{"lineNumber":30,"author":{"gitId":"yeebinrong"},"content":"delete 3","lastModifiedDate":"2023-09-16"},{"lineNumber":31,"author":{"gitId":"yeebinrong"},"content":"delete 2","lastModifiedDate":"2023-09-16"},{"lineNumber":32,"author":{"gitId":"yeebinrong"},"content":"list","lastModifiedDate":"2023-09-16"},{"lineNumber":33,"author":{"gitId":"yeebinrong"},"content":"delete 1","lastModifiedDate":"2023-09-16"},{"lineNumber":34,"author":{"gitId":"yeebinrong"},"content":"list","lastModifiedDate":"2023-09-16"},{"lineNumber":35,"author":{"gitId":"yeebinrong"},"content":"bye","lastModifiedDate":"2023-09-16"}],"authorContributionMap":{"yeebinrong":35}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"yeebinrong"},"content":"java -classpath ..\\bin Duke test \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeebinrong":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"yeebinrong"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/seedu/duke/*.java","lastModifiedDate":"2023-09-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"yeebinrong"},"content":"java -classpath ../bin seedu.duke.Duke test \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-09-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"yeebinrong":2,"-":36}}]
