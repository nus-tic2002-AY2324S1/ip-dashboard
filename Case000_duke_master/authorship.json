[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"# DukeParser project template","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"Case000"},"content":"3. After that, locate the `src/main/java/DukeParser.java` file, right-click it, and choose `Run DukeParser.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Case000":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Case000"},"content":"    mainClass.set(\"Duke.Duke\")","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Case000":1,"-":41}},{"path":"save/data.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":" |X|hehe","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":" | |run to super","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":" |X|lsit","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"Case000":3}},{"path":"src/main/java/Duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"package Duke;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"import Task.Shelf;","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":"import Task.Text;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":" * \u003ch1\u003eCLARA\u003c/h1\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":" * The CLARA program is a chatbot that manages your task and seek to increase your productivity.","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":" * CLARA and many fuctions including:","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":" * Creating, Deleting, Marking and setting deadline for your Tasks","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"Case000"},"content":" *","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"Case000"},"content":" * @author  Kai Siang","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"Case000"},"content":" * @version 0.8","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"Case000"},"content":" * @since   2023-11-14","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"Case000"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"Case000"},"content":"public class Duke {","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"Case000"},"content":"    private Shelf tasks;","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"Case000"},"content":"    private Text ui;","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Case000"},"content":"    public Duke(String fileName) {","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"Case000"},"content":"        tasks \u003d new Shelf();","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Case000"},"content":"        try {","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"Case000"},"content":"            tasks \u003d Storage.FileParser(Storage.loadFile(fileName));","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"Case000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"Case000"},"content":"            Text.showLoadingError();","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"Case000"},"content":"            tasks \u003d new Shelf();","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"Case000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"Case000"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"Case000"},"content":"    public void run() {","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"Case000"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"Case000"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"Case000"},"content":"        try {","lastModifiedDate":"2023-11-07"},{"lineNumber":38,"author":{"gitId":"Case000"},"content":"            Parser.Parse(tasks);","lastModifiedDate":"2023-11-07"},{"lineNumber":39,"author":{"gitId":"Case000"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-11-07"},{"lineNumber":40,"author":{"gitId":"Case000"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2023-11-07"},{"lineNumber":41,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":42,"author":{"gitId":"Case000"},"content":"//        while (!isExit) {","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"Case000"},"content":"//            try {","lastModifiedDate":"2023-11-07"},{"lineNumber":44,"author":{"gitId":"Case000"},"content":"//                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"Case000"},"content":"//                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"Case000"},"content":"//                Command c \u003d Duke.Parser.parse(fullCommand);","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Case000"},"content":"//                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Case000"},"content":"//                isExit \u003d c.isExit();","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Case000"},"content":"//","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"Case000"},"content":"//            } catch (Duke.DukeException e) {","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Case000"},"content":"//                ui.showError(e.getMessage());","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"Case000"},"content":"//            } finally {","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"Case000"},"content":"//                ui.showLine();","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"Case000"},"content":"//            }","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"Case000"},"content":"//        }","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"Case000"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"Case000"},"content":"        new Duke(\"data\").run();","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"Case000"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"Case000":61}},{"path":"src/main/java/Duke/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"package Duke;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":"    public DukeException(String msg){","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":"        if(msg.equals(\"mark\")){","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":"            System.out.println(\"Please enter the task number you want to mark/unmark!\");","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"Case000":9}},{"path":"src/main/java/Duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"package Duke;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"import Duke.DukeException;","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":"import Task.Shelf;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":"import Task.Text;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-07"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":" * Reads input and convert it other other forms usable by the rest of code.","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":" * Parse method check user input and identifies keywords to carry out specific command","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"Case000"},"content":"public class Parser {","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"Case000"},"content":"    public static void Parse(Shelf tasklist) throws DukeException {","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"Case000"},"content":"        String echo;","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"Case000"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-07"},{"lineNumber":17,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":18,"author":{"gitId":"Case000"},"content":"        while(true){","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"Case000"},"content":"            echo \u003d in.nextLine();","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"Case000"},"content":"            String[] input \u003d InputParser(echo); //input[0] \u003d first word, input[1] \u003d rest of sentence","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Case000"},"content":"            try {","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"Case000"},"content":"                switch (input[0]) {","lastModifiedDate":"2023-11-07"},{"lineNumber":23,"author":{"gitId":"Case000"},"content":"                case \"bye\":","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"Case000"},"content":"                    Text.printMessage(Text.Message.BYE);","lastModifiedDate":"2023-11-07"},{"lineNumber":25,"author":{"gitId":"Case000"},"content":"                    return;","lastModifiedDate":"2023-11-07"},{"lineNumber":26,"author":{"gitId":"Case000"},"content":"                case \"list\":","lastModifiedDate":"2023-11-07"},{"lineNumber":27,"author":{"gitId":"Case000"},"content":"                    Shelf.listShelf();","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"Case000"},"content":"                    break;","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"Case000"},"content":"                case \"mark\":","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"Case000"},"content":"                    Shelf.markTask(input);","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Case000"},"content":"                    break;","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Case000"},"content":"                case \"unmark\":","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Case000"},"content":"                    Shelf.markTask(input);","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"Case000"},"content":"                    break;","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"Case000"},"content":"                case \"todo\" :","lastModifiedDate":"2023-11-07"},{"lineNumber":36,"author":{"gitId":"Case000"},"content":"                case \"deadline\":","lastModifiedDate":"2023-11-07"},{"lineNumber":37,"author":{"gitId":"Case000"},"content":"                case \"event\":","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"Case000"},"content":"                    if(input.length \u003e\u003d 3){","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"Case000"},"content":"                        Shelf.addDateTask(input[1], input[0], input[2]);","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"Case000"},"content":"                        System.out.println(\"test\");","lastModifiedDate":"2023-11-09"},{"lineNumber":41,"author":{"gitId":"Case000"},"content":"                    }else{","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"Case000"},"content":"                        Shelf.addSpecialTask(input[1], input[0]);","lastModifiedDate":"2023-11-07"},{"lineNumber":43,"author":{"gitId":"Case000"},"content":"                    }","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"Case000"},"content":"                    break;","lastModifiedDate":"2023-11-07"},{"lineNumber":45,"author":{"gitId":"Case000"},"content":"                case \"delete\":","lastModifiedDate":"2023-11-07"},{"lineNumber":46,"author":{"gitId":"Case000"},"content":"                    Shelf.deleteTask(input[1]);","lastModifiedDate":"2023-11-07"},{"lineNumber":47,"author":{"gitId":"Case000"},"content":"                    break;","lastModifiedDate":"2023-11-07"},{"lineNumber":48,"author":{"gitId":"Case000"},"content":"                case \"save\":","lastModifiedDate":"2023-11-07"},{"lineNumber":49,"author":{"gitId":"Case000"},"content":"                    Storage.CreateFile(Shelf.ShelftoString());","lastModifiedDate":"2023-11-07"},{"lineNumber":50,"author":{"gitId":"Case000"},"content":"                    break;","lastModifiedDate":"2023-11-07"},{"lineNumber":51,"author":{"gitId":"Case000"},"content":"                case \"load\":","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"Case000"},"content":"                    tasklist \u003d Storage.FileParser(Storage.loadFile(\"data\"));","lastModifiedDate":"2023-11-07"},{"lineNumber":53,"author":{"gitId":"Case000"},"content":"                    break;","lastModifiedDate":"2023-11-07"},{"lineNumber":54,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":55,"author":{"gitId":"Case000"},"content":"                default:","lastModifiedDate":"2023-11-07"},{"lineNumber":56,"author":{"gitId":"Case000"},"content":"                Shelf.addItem(input[0]);","lastModifiedDate":"2023-11-07"},{"lineNumber":57,"author":{"gitId":"Case000"},"content":"                }","lastModifiedDate":"2023-11-07"},{"lineNumber":58,"author":{"gitId":"Case000"},"content":"            } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-11-07"},{"lineNumber":59,"author":{"gitId":"Case000"},"content":"                System.out.println(\"OOPS!!! You must have done something wrong xxx.\");","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"Case000"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"Case000"},"content":"                throw new RuntimeException(e);","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"Case000"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"Case000"},"content":"    public static String[] InputParser(String input) {","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"Case000"},"content":"        String[] words \u003d input.split(\" \", 2);","lastModifiedDate":"2023-11-07"},{"lineNumber":68,"author":{"gitId":"Case000"},"content":"        if(words.length \u003e 1){","lastModifiedDate":"2023-11-09"},{"lineNumber":69,"author":{"gitId":"Case000"},"content":"            String[] taskwithdates \u003d words[1].split(\"/by \", 2);","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"Case000"},"content":"            if(taskwithdates.length \u003e 1){","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"Case000"},"content":"                return new String[]{words[0],taskwithdates[0],taskwithdates[1]};","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"Case000"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"Case000"},"content":"        return words;","lastModifiedDate":"2023-11-07"},{"lineNumber":75,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":77,"author":{"gitId":"Case000"},"content":"    public static String TypeParser(String typeshort){","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"Case000"},"content":"        switch (typeshort){","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"Case000"},"content":"            case \"T\":","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"Case000"},"content":"                return \"todo\";","lastModifiedDate":"2023-11-13"},{"lineNumber":81,"author":{"gitId":"Case000"},"content":"            case \"D\":","lastModifiedDate":"2023-11-13"},{"lineNumber":82,"author":{"gitId":"Case000"},"content":"                return \"deadline\";","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"Case000"},"content":"            case \"E\":","lastModifiedDate":"2023-11-13"},{"lineNumber":84,"author":{"gitId":"Case000"},"content":"                return \"event\";","lastModifiedDate":"2023-11-13"},{"lineNumber":85,"author":{"gitId":"Case000"},"content":"            default:","lastModifiedDate":"2023-11-13"},{"lineNumber":86,"author":{"gitId":"Case000"},"content":"                return \" \";","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"Case000"},"content":"}","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"Case000":90}},{"path":"src/main/java/Duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"package Duke;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"import Task.Shelf;","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":" * Methods for saving and loading file operation","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":" *","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"Case000"},"content":"public class Storage {","lastModifiedDate":"2023-11-07"},{"lineNumber":13,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"Case000"},"content":"    public static Path getSavefilePath(){","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"Case000"},"content":"        String home \u003d System.getProperty(\"user.dir\");","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"Case000"},"content":"        return Paths.get(home, \"save\");","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"Case000"},"content":"    public static void CreateFile(String fileData) {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"Case000"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"Case000"},"content":"            Path filePath \u003d Paths.get(getSavefilePath() + \"\\\\data.txt\");","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"Case000"},"content":"            if (!java.nio.file.Files.exists(filePath)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"Case000"},"content":"                Files.createFile(filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"Case000"},"content":"                System.out.println(\"File created: \" + filePath.toString() +\" ...proceed to save file\");","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"Case000"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"Case000"},"content":"                System.out.println(\"File already exists...proceed to overwrite save file\");","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"Case000"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"Case000"},"content":"            saveToFile(filePath, fileData);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"Case000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"Case000"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"Case000"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"Case000"},"content":"    public static void saveToFile(Path filePath, String fileData) throws IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"Case000"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"Case000"},"content":"            Files.write(filePath, fileData.getBytes());","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"Case000"},"content":"            System.out.println(\"Tasks saved successfully!\");","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"Case000"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"Case000"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"Case000"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"Case000"},"content":"    public static String loadFile(String fileName) throws IOException {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"Case000"},"content":"        String shelfData \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"Case000"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"Case000"},"content":"            Path filePath \u003d Paths.get(getSavefilePath() + \"\\\\\" + fileName + \".txt\");","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"Case000"},"content":"            if (java.nio.file.Files.exists(filePath)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"Case000"},"content":"                System.out.println(\"Loading file from: \" + filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"Case000"},"content":"                shelfData \u003d Files.readString(filePath);","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"Case000"},"content":"            } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"Case000"},"content":"                System.out.println(\"File not found, please create a new one\");","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"Case000"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"Case000"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"Case000"},"content":"            System.out.println(\"An error occurred.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"Case000"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"Case000"},"content":"        return shelfData;","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"Case000"},"content":"    public static Shelf FileParser(String shelfData) throws DukeException { //converts file string into Task.Shelf arraylist","lastModifiedDate":"2023-11-07"},{"lineNumber":60,"author":{"gitId":"Case000"},"content":"        Shelf newlist \u003d new Shelf();","lastModifiedDate":"2023-11-07"},{"lineNumber":61,"author":{"gitId":"Case000"},"content":"        String type \u003d \"\";","lastModifiedDate":"2023-11-07"},{"lineNumber":62,"author":{"gitId":"Case000"},"content":"        String marking \u003d \"\";","lastModifiedDate":"2023-11-07"},{"lineNumber":63,"author":{"gitId":"Case000"},"content":"        int line_no \u003d 1;","lastModifiedDate":"2023-11-07"},{"lineNumber":64,"author":{"gitId":"Case000"},"content":"        String[] split \u003d shelfData.split(\"[|\\n]\");","lastModifiedDate":"2023-11-07"},{"lineNumber":65,"author":{"gitId":"Case000"},"content":"        for (int i \u003d 1; i-1 \u003c split.length; i++) {","lastModifiedDate":"2023-11-07"},{"lineNumber":66,"author":{"gitId":"Case000"},"content":"            if (i%3 \u003d\u003d 0) {","lastModifiedDate":"2023-11-07"},{"lineNumber":67,"author":{"gitId":"Case000"},"content":"                type \u003d Parser.TypeParser(split[i-3]);","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"Case000"},"content":"                marking \u003d split[i-2];","lastModifiedDate":"2023-11-07"},{"lineNumber":69,"author":{"gitId":"Case000"},"content":"                if(split[i-1].contains(\"/by\")){","lastModifiedDate":"2023-11-13"},{"lineNumber":70,"author":{"gitId":"Case000"},"content":"                    String[] datesplit \u003d split[i-1].split(\" /by \");","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"Case000"},"content":"                    newlist.addDateTask(datesplit[0], type, datesplit[1]);","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"Case000"},"content":"                }else {","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"Case000"},"content":"                    newlist.addSpecialTask(split[i - 1], type);","lastModifiedDate":"2023-11-07"},{"lineNumber":74,"author":{"gitId":"Case000"},"content":"                }","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"Case000"},"content":"                System.out.println(split[i-1]);","lastModifiedDate":"2023-11-07"},{"lineNumber":76,"author":{"gitId":"Case000"},"content":"                if(!marking.equals(\" \")){","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"Case000"},"content":"                    newlist.markTask(new String[]{\"mark\", Integer.toString(line_no)});","lastModifiedDate":"2023-11-07"},{"lineNumber":78,"author":{"gitId":"Case000"},"content":"                }","lastModifiedDate":"2023-11-07"},{"lineNumber":79,"author":{"gitId":"Case000"},"content":"                line_no++;","lastModifiedDate":"2023-11-07"},{"lineNumber":80,"author":{"gitId":"Case000"},"content":"                type \u003d \"\";","lastModifiedDate":"2023-11-07"},{"lineNumber":81,"author":{"gitId":"Case000"},"content":"                marking \u003d \"\";","lastModifiedDate":"2023-11-07"},{"lineNumber":82,"author":{"gitId":"Case000"},"content":"            }","lastModifiedDate":"2023-11-07"},{"lineNumber":83,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-11-07"},{"lineNumber":84,"author":{"gitId":"Case000"},"content":"        System.out.println(\"File loaded, Welcome Back Taskmaster!\");","lastModifiedDate":"2023-11-07"},{"lineNumber":85,"author":{"gitId":"Case000"},"content":"        return newlist;","lastModifiedDate":"2023-11-07"},{"lineNumber":86,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":87,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"Case000"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"Case000":88}},{"path":"src/main/java/Task/DateTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"package Task;","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":" * Stores and creates date and time for tasks","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":" * Child class of SpecialTask","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":"public class DateTask extends SpecialTask {","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":"    protected LocalDateTime deadline;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":"    public DateTask(String description, String type, String deadline) {","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"Case000"},"content":"        super(description, type);","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"Case000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\");","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"Case000"},"content":"        this.deadline \u003d LocalDateTime.parse(deadline, formatter);","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"Case000"},"content":"    public String showDate(){","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"Case000"},"content":"        String date \u003d \" (\"+ deadline.format(DateTimeFormatter.ofPattern(\"MMM-dd-yyyy\")) + \")\";","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"Case000"},"content":"        return date;","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"Case000"},"content":"    public static String dateToString(LocalDateTime date){","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"Case000"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm:ss\");","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"Case000"},"content":"        String datestring \u003d formatter.format(date);","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"Case000"},"content":"        return datestring;","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"Case000"},"content":"}","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"Case000":25}},{"path":"src/main/java/Task/Shelf.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"package Task;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"import Duke.DukeException;","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-20"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":" * Methods to manipulate a list of information in the database based on user command","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":" * Such as CRUD of tasks.","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":"public class Shelf {","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":"    private static ArrayList\u003cSpecialTask\u003e shelf;","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":"    public Shelf(){","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Case000"},"content":"        shelf \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-01"},{"lineNumber":13,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Case000"},"content":"    public static void listShelf(){","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Case000"},"content":"        if(shelf.isEmpty()){","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Case000"},"content":"            Text.printMessage(Text.Message.NOITEM);","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Case000"},"content":"            return;","lastModifiedDate":"2023-11-01"},{"lineNumber":18,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Case000"},"content":"        System.out.print(Text.newline);","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Case000"},"content":"        System.out.println(\"No. [Type] [Marking] Description\"); // listing sequence","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"Case000"},"content":"        for(int i \u003d 0; i \u003c shelf.size(); i++){","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Case000"},"content":"            String deadline \u003d \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"Case000"},"content":"            if (shelf.get(i) instanceof DateTask){","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"Case000"},"content":"                DateTask dateTask \u003d (DateTask) shelf.get(i);","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"Case000"},"content":"                deadline \u003d dateTask.showDate();","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"Case000"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"Case000"},"content":"            System.out.println(i + 1 + \": \" + \"[\"  + shelf.get(i).getTypeIcon() + \"]\" + \"[\"  + shelf.get(i).getStatusIcon() + \"]\" + shelf.get(i).description + deadline);","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":29,"author":{"gitId":"Case000"},"content":"        System.out.println(Text.newline);","lastModifiedDate":"2023-09-20"},{"lineNumber":30,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":31,"author":{"gitId":"Case000"},"content":"    public static void addItem(String item){","lastModifiedDate":"2023-09-20"},{"lineNumber":32,"author":{"gitId":"Case000"},"content":"        SpecialTask t \u003d new SpecialTask(item,\"\");","lastModifiedDate":"2023-09-25"},{"lineNumber":33,"author":{"gitId":"Case000"},"content":"        shelf.add(t);","lastModifiedDate":"2023-09-20"},{"lineNumber":34,"author":{"gitId":"Case000"},"content":"        System.out.println(","lastModifiedDate":"2023-09-20"},{"lineNumber":35,"author":{"gitId":"Case000"},"content":"                Text.newline","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Case000"},"content":"                        + \"added: \" + item + \"\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Case000"},"content":"                        + Text.newline","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Case000"},"content":"        );","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Case000"},"content":"    public static void deleteTask(String num){","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"Case000"},"content":"        int idx \u003d Integer.parseInt(num) - 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"Case000"},"content":"        SpecialTask t \u003d shelf.get(idx);","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"Case000"},"content":"        shelf.remove(idx);","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"Case000"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"Case000"},"content":"        System.out.print(\"[\" + t.getTypeIcon() + \"]\" + \"[\" + t.getStatusIcon() +\"] \" + t.getDescription() + \"\\n\" + Text.newline);","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"Case000"},"content":"        System.out.println(\"Now you have \"+ shelf.size() +\" tasks in the list.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":48,"author":{"gitId":"Case000"},"content":"    public static void markTask (String[] msg) throws DukeException {","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"Case000"},"content":"        String markingIndication \u003d msg[0];","lastModifiedDate":"2023-11-01"},{"lineNumber":50,"author":{"gitId":"Case000"},"content":"        int idx \u003d Integer.parseInt(msg[1]) - 1;","lastModifiedDate":"2023-09-25"},{"lineNumber":51,"author":{"gitId":"Case000"},"content":"        if(idx \u003e\u003d shelf.size()){","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"Case000"},"content":"            System.out.println(\"You have selected an invalid task\");","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Case000"},"content":"            return;","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":55,"author":{"gitId":"Case000"},"content":"        System.out.print(Text.newline);","lastModifiedDate":"2023-09-20"},{"lineNumber":56,"author":{"gitId":"Case000"},"content":"        if (markingIndication.equals(\"mark\")){","lastModifiedDate":"2023-11-01"},{"lineNumber":57,"author":{"gitId":"Case000"},"content":"            Task.setMarked(shelf.get(idx));","lastModifiedDate":"2023-09-20"},{"lineNumber":58,"author":{"gitId":"Case000"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":59,"author":{"gitId":"Case000"},"content":"        } else if(markingIndication.equals(\"unmark\")){","lastModifiedDate":"2023-11-01"},{"lineNumber":60,"author":{"gitId":"Case000"},"content":"            Task.setUnmarked(shelf.get(idx));","lastModifiedDate":"2023-09-20"},{"lineNumber":61,"author":{"gitId":"Case000"},"content":"            System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-09-20"},{"lineNumber":62,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":63,"author":{"gitId":"Case000"},"content":"        System.out.println(\"[\" + shelf.get(idx).getStatusIcon() + \"]\" + shelf.get(idx).description + \"\\n\" + Text.newline);","lastModifiedDate":"2023-09-20"},{"lineNumber":64,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":65,"author":{"gitId":"Case000"},"content":"    public static void addSpecialTask(String item, String type){","lastModifiedDate":"2023-09-25"},{"lineNumber":66,"author":{"gitId":"Case000"},"content":"        SpecialTask t \u003d new SpecialTask(item,type);","lastModifiedDate":"2023-09-25"},{"lineNumber":67,"author":{"gitId":"Case000"},"content":"        shelf.add(t);","lastModifiedDate":"2023-09-25"},{"lineNumber":68,"author":{"gitId":"Case000"},"content":"        System.out.println(Text.newline + \"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-09-25"},{"lineNumber":69,"author":{"gitId":"Case000"},"content":"        System.out.print(\"[\" + t.getTypeIcon() + \"]\" + \"[ ] \" + item + \"\\n\" + Text.newline);","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"Case000"},"content":"        System.out.println(\"Now you have \"+ shelf.size() +\" tasks in the list.\");","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":72,"author":{"gitId":"Case000"},"content":"    public static void addDateTask(String item, String type, String date){","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"Case000"},"content":"        DateTask d \u003d new DateTask(item, type, date);","lastModifiedDate":"2023-11-09"},{"lineNumber":74,"author":{"gitId":"Case000"},"content":"        shelf.add(d);","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"Case000"},"content":"        System.out.println(Text.newline + \"Got it. I\u0027ve added this task with a deadline:\");","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"Case000"},"content":"        System.out.print(\"[\" + d.getTypeIcon() + \"]\" + \"[ ] \" + item + \" \" + date +\"\\n\" + Text.newline);","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"Case000"},"content":"        System.out.println(\"Now you have \"+ shelf.size() +\" tasks in the list.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"Case000"},"content":"    public static String ShelftoString(){","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"Case000"},"content":"        String save \u003d \"\";","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"Case000"},"content":"        for (SpecialTask specialTask : shelf) {","lastModifiedDate":"2023-11-01"},{"lineNumber":82,"author":{"gitId":"Case000"},"content":"            String deadline \u003d \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"Case000"},"content":"            if (specialTask instanceof DateTask){","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"Case000"},"content":"                DateTask dateTask \u003d (DateTask) specialTask;","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"Case000"},"content":"                deadline \u003d \"/by\" + DateTask.dateToString(dateTask.deadline);","lastModifiedDate":"2023-11-14"},{"lineNumber":86,"author":{"gitId":"Case000"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":87,"author":{"gitId":"Case000"},"content":"            save +\u003d specialTask.getTypeIcon() + \"|\" + specialTask.getStatusIcon() + \"|\" + specialTask.description + deadline + \"\\n\";","lastModifiedDate":"2023-11-09"},{"lineNumber":88,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"Case000"},"content":"        return save;","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"Case000"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Case000":91}},{"path":"src/main/java/Task/SpecialTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"package Task;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":" * Stores and creates different types of tasks","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":" * Child class of Task","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":"public class SpecialTask extends Task {","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":"    protected String type;","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":"    public SpecialTask(String description, String type) {","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":"        super(description);","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":"        switch(type){","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":"            case \"todo\":","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"Case000"},"content":"                this.type \u003d \"T\";","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"Case000"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"Case000"},"content":"            case \"deadline\":","lastModifiedDate":"2023-09-25"},{"lineNumber":15,"author":{"gitId":"Case000"},"content":"                this.type \u003d \"D\";","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"Case000"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"Case000"},"content":"            case \"event\":","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"Case000"},"content":"                this.type \u003d \"E\";","lastModifiedDate":"2023-09-25"},{"lineNumber":19,"author":{"gitId":"Case000"},"content":"                break;","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"Case000"},"content":"            default:","lastModifiedDate":"2023-09-25"},{"lineNumber":21,"author":{"gitId":"Case000"},"content":"                this.type \u003d \" \";","lastModifiedDate":"2023-09-25"},{"lineNumber":22,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":23,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"Case000"},"content":"    public String getTypeIcon(){","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"Case000"},"content":"        return type;","lastModifiedDate":"2023-09-25"},{"lineNumber":26,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":27,"author":{"gitId":"Case000"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"Case000":27}},{"path":"src/main/java/Task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"package Task;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":" * Stores and creates tasks with description and marking","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":" * Main class that generate Tasks","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":"public class Task {","lastModifiedDate":"2023-09-20"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":"    protected String description;","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":"    protected Boolean isMarked;","lastModifiedDate":"2023-11-01"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":"    public Task(String description){","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":"        isMarked \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":12,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Case000"},"content":"    public String getStatusIcon(){","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Case000"},"content":"        return (this.isMarked ? \"X\" : \" \");","lastModifiedDate":"2023-11-01"},{"lineNumber":15,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Case000"},"content":"    public String getDescription(){","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"Case000"},"content":"        return description;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"Case000"},"content":"    public static void setMarked(Task task){","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Case000"},"content":"        task.isMarked \u003d true;","lastModifiedDate":"2023-11-01"},{"lineNumber":21,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Case000"},"content":"    public static void setUnmarked(Task task){","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Case000"},"content":"        task.isMarked \u003d false;","lastModifiedDate":"2023-11-01"},{"lineNumber":24,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Case000"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Case000":25}},{"path":"src/main/java/Task/Text.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"package Task;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":" * List of custom text for the UI","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":" * Non-simple text output is store here and called in the main program","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":"public class Text { //aka UI","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":"    public static final String newline \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":"    public enum Message {","lastModifiedDate":"2023-09-20"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":"        LOGO, GREETING, BYE, NOITEM","lastModifiedDate":"2023-09-20"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":"    private static final String LOGO \u003d \"Loading...\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":12,"author":{"gitId":"Case000"},"content":"            + \" ____        _        \\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":13,"author":{"gitId":"Case000"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":14,"author":{"gitId":"Case000"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":15,"author":{"gitId":"Case000"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-09-20"},{"lineNumber":16,"author":{"gitId":"Case000"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-09-20"},{"lineNumber":17,"author":{"gitId":"Case000"},"content":"    private static final String GREETING \u003d newline +","lastModifiedDate":"2023-09-20"},{"lineNumber":18,"author":{"gitId":"Case000"},"content":"            \" Hello! I\u0027m CLARA \\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":19,"author":{"gitId":"Case000"},"content":"            \" What can I do for you?\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":20,"author":{"gitId":"Case000"},"content":"            newline;","lastModifiedDate":"2023-09-20"},{"lineNumber":21,"author":{"gitId":"Case000"},"content":"    private static final String BYE \u003d newline +","lastModifiedDate":"2023-09-20"},{"lineNumber":22,"author":{"gitId":"Case000"},"content":"            \" Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":23,"author":{"gitId":"Case000"},"content":"            newline;","lastModifiedDate":"2023-09-20"},{"lineNumber":24,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":25,"author":{"gitId":"Case000"},"content":"    private static final String NOITEM \u003d newline +","lastModifiedDate":"2023-09-20"},{"lineNumber":26,"author":{"gitId":"Case000"},"content":"            \"No items found!, Please add items\" + \"\\n\" +","lastModifiedDate":"2023-09-20"},{"lineNumber":27,"author":{"gitId":"Case000"},"content":"            newline;","lastModifiedDate":"2023-09-20"},{"lineNumber":28,"author":{"gitId":"Case000"},"content":"    public static void showWelcome(){","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"Case000"},"content":"        printMessage(Text.Message.LOGO);","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"Case000"},"content":"        printMessage(Text.Message.GREETING);","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":32,"author":{"gitId":"Case000"},"content":"    public static void showLoadingError(){","lastModifiedDate":"2023-11-07"},{"lineNumber":33,"author":{"gitId":"Case000"},"content":"        System.out.println(\"Error loading the file, please restart the program!\");","lastModifiedDate":"2023-11-07"},{"lineNumber":34,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"Case000"},"content":"    public static void printMessage(Message message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":36,"author":{"gitId":"Case000"},"content":"        switch (message) {","lastModifiedDate":"2023-09-20"},{"lineNumber":37,"author":{"gitId":"Case000"},"content":"            case LOGO:","lastModifiedDate":"2023-09-20"},{"lineNumber":38,"author":{"gitId":"Case000"},"content":"                System.out.println(LOGO);","lastModifiedDate":"2023-09-20"},{"lineNumber":39,"author":{"gitId":"Case000"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":40,"author":{"gitId":"Case000"},"content":"            case GREETING:","lastModifiedDate":"2023-09-20"},{"lineNumber":41,"author":{"gitId":"Case000"},"content":"                System.out.println(GREETING);","lastModifiedDate":"2023-09-20"},{"lineNumber":42,"author":{"gitId":"Case000"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":43,"author":{"gitId":"Case000"},"content":"            case BYE:","lastModifiedDate":"2023-09-20"},{"lineNumber":44,"author":{"gitId":"Case000"},"content":"                System.out.println(BYE);","lastModifiedDate":"2023-09-20"},{"lineNumber":45,"author":{"gitId":"Case000"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":46,"author":{"gitId":"Case000"},"content":"            case NOITEM:","lastModifiedDate":"2023-09-20"},{"lineNumber":47,"author":{"gitId":"Case000"},"content":"                System.out.println(NOITEM);","lastModifiedDate":"2023-09-20"},{"lineNumber":48,"author":{"gitId":"Case000"},"content":"                break;","lastModifiedDate":"2023-09-20"},{"lineNumber":49,"author":{"gitId":"Case000"},"content":"            default:","lastModifiedDate":"2023-09-20"},{"lineNumber":50,"author":{"gitId":"Case000"},"content":"                throw new IllegalArgumentException(\"Invalid message type: \" + message);","lastModifiedDate":"2023-09-20"},{"lineNumber":51,"author":{"gitId":"Case000"},"content":"        }","lastModifiedDate":"2023-09-20"},{"lineNumber":52,"author":{"gitId":"Case000"},"content":"    }","lastModifiedDate":"2023-09-20"},{"lineNumber":53,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-09-20"},{"lineNumber":54,"author":{"gitId":"Case000"},"content":"}","lastModifiedDate":"2023-09-20"}],"authorContributionMap":{"Case000":54}},{"path":"src/vision.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"VISION","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"A tool to record, categorised tasks for users who likes messaging UI","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":"Must have USER STORY","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":"- As a forgetful user, i want to store my daily task so that i can remember when to finish them","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":"- As user, i want to delet or mark the task that i have completed","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":"FEATURE","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":"add deadline","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":"delete item","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"Case000"},"content":"GLOSSARY","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"Case000"},"content":"    Event: an item that has a start time and an end time","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"Case000"},"content":"    ","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"Case000"},"content":"UI PROTOTYPE","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"Case000":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Case000"},"content":"Hello World","lastModifiedDate":"2023-09-25"},{"lineNumber":2,"author":{"gitId":"Case000"},"content":"Visit the shopping center for food","lastModifiedDate":"2023-09-25"},{"lineNumber":3,"author":{"gitId":"Case000"},"content":"Take a picture of a cute dog","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"Case000"},"content":"Arrange the items in the shelf","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"Case000"},"content":"list","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"Case000"},"content":"mark 2","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"Case000"},"content":"mark 0","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"Case000"},"content":"list","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"Case000"},"content":"unmark 2","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"Case000"},"content":"list","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"Case000"},"content":"bye","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"Case000":11}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"Case000"},"content":"java -classpath ..\\bin DukeParser \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Case000":1,"-":20}}]
