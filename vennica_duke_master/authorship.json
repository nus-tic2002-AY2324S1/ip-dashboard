[{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"vennica"},"content":"[T][ ] read book","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"vennica"},"content":"[T][ ] return book","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"vennica"},"content":"[T][ ] buy bread","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"vennica"},"content":"[T][ ] Borrow book ","lastModifiedDate":"2023-11-10"}],"authorContributionMap":{"vennica":4}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vennica"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"vennica"},"content":"import task.Task;","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"vennica"},"content":"import task.TaskList;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"vennica"},"content":"import ui.Ui;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"vennica"},"content":"import java.io.File;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"vennica"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"vennica"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"vennica"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"vennica"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"vennica"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"vennica"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"vennica"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"vennica"},"content":" * \u003ch1\u003eDuke Scheduling Robot venni \u003c/h1\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"vennica"},"content":" *  This program allow user to put in their task and turn it into a list.","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"vennica"},"content":" * The list will be stored in a file called duke.txt as well.","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"vennica"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"vennica"},"content":" * User can mark/unmark the tasks as \"done\",add and delete task.","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"vennica"},"content":" * There are three types of Task: Event, Deadline, Todo","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"vennica"},"content":" *","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"vennica"},"content":" * @author  WanYing Li","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"vennica"},"content":" * @version 1.0","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"vennica"},"content":" * @since   2023-08-18","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"vennica"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":27,"author":{"gitId":"vennica"},"content":"    private static Storage storage;","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"vennica"},"content":"    private static TaskList tasks;","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"vennica"},"content":"    private static Ui ui;","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"vennica"},"content":"    public static ArrayList\u003cTask\u003e actions;","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"vennica"},"content":"    public static int inputCount \u003d0;","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"vennica"},"content":"    public static void main(String[] args) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"vennica"},"content":"        actions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"vennica"},"content":"        //Adding testing items in Task","lastModifiedDate":"2023-09-18"},{"lineNumber":39,"author":{"gitId":"vennica"},"content":"        //what if the situation without todo","lastModifiedDate":"2023-09-29"},{"lineNumber":40,"author":{"gitId":"vennica"},"content":"        Task task1 \u003d new Task(\"todo read book\", false);","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"vennica"},"content":"        Task task2 \u003d new Task(\"todo return book\", false);","lastModifiedDate":"2023-09-29"},{"lineNumber":42,"author":{"gitId":"vennica"},"content":"        Task task3 \u003d new Task(\"todo buy bread\", false);","lastModifiedDate":"2023-09-29"},{"lineNumber":43,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"vennica"},"content":"        actions.add(task1);","lastModifiedDate":"2023-09-18"},{"lineNumber":45,"author":{"gitId":"vennica"},"content":"        actions.add(task2);","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"vennica"},"content":"        actions.add(task3);","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"vennica"},"content":"        inputCount +\u003d3;","lastModifiedDate":"2023-09-18"},{"lineNumber":48,"author":{"gitId":"vennica"},"content":"        tasks \u003d new TaskList();","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"vennica"},"content":"        storage.convertToTxtFile(actions);","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":51,"author":{"gitId":"vennica"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-18"},{"lineNumber":52,"author":{"gitId":"vennica"},"content":"        ui.printHeader();","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"vennica"},"content":"        String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-10"},{"lineNumber":54,"author":{"gitId":"vennica"},"content":"        String trimInput \u003d input.trim().toLowerCase();","lastModifiedDate":"2023-09-29"},{"lineNumber":55,"author":{"gitId":"vennica"},"content":"        //read string and execute functions accordingly.","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"vennica"},"content":"        while (!input.trim().equalsIgnoreCase(\"bye\")){","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"vennica"},"content":"            //added function that handles whitespace as well","lastModifiedDate":"2023-09-18"},{"lineNumber":58,"author":{"gitId":"vennica"},"content":"//            if (input.trim().isEmpty()){","lastModifiedDate":"2023-09-18"},{"lineNumber":59,"author":{"gitId":"vennica"},"content":"//                continue;","lastModifiedDate":"2023-09-18"},{"lineNumber":60,"author":{"gitId":"vennica"},"content":"//            }","lastModifiedDate":"2023-09-18"},{"lineNumber":61,"author":{"gitId":"vennica"},"content":"            if (input.trim().toLowerCase().startsWith(\"mark\")){","lastModifiedDate":"2023-09-29"},{"lineNumber":62,"author":{"gitId":"vennica"},"content":"                int index \u003d tasks.getNumber(input);","lastModifiedDate":"2023-11-10"},{"lineNumber":63,"author":{"gitId":"vennica"},"content":"                actions.get(index-1).setIsDone(true);","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"vennica"},"content":"                ui.markDone();","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"vennica"},"content":"                //print \"[X] return book\"","lastModifiedDate":"2023-09-18"},{"lineNumber":66,"author":{"gitId":"vennica"},"content":"                actions.get(index-1).printTask();","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"vennica"},"content":"            }else if (input.trim().toLowerCase().startsWith(\"unmark\")){","lastModifiedDate":"2023-09-29"},{"lineNumber":69,"author":{"gitId":"vennica"},"content":"                int index \u003d tasks.getNumber(input);","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"vennica"},"content":"                actions.get(index-1).setIsDone(false);","lastModifiedDate":"2023-09-18"},{"lineNumber":71,"author":{"gitId":"vennica"},"content":"                ui.markNotDone();","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"vennica"},"content":"                //print \"[ ] return book\"","lastModifiedDate":"2023-09-18"},{"lineNumber":73,"author":{"gitId":"vennica"},"content":"                actions.get(index-1).printTask();","lastModifiedDate":"2023-09-24"},{"lineNumber":74,"author":{"gitId":"vennica"},"content":"                ui.printLine();","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"vennica"},"content":"            }else if (input.trim().toLowerCase().startsWith(\"delete\")){","lastModifiedDate":"2023-09-29"},{"lineNumber":76,"author":{"gitId":"vennica"},"content":"                actions \u003d tasks.removeTasks(input, actions);","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"vennica"},"content":"            }else if (!input.trim().equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-09-29"},{"lineNumber":78,"author":{"gitId":"vennica"},"content":"                actions \u003d tasks.addTasks(input, actions);","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"vennica"},"content":"            }else{","lastModifiedDate":"2023-09-18"},{"lineNumber":80,"author":{"gitId":"vennica"},"content":"                tasks.printTaskList(actions);","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"vennica"},"content":"            }","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"vennica"},"content":"            storage.convertToTxtFile(actions);","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"vennica"},"content":"            input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-10"},{"lineNumber":84,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":86,"author":{"gitId":"vennica"},"content":"        ui.printBye();","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":88,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"vennica":86,"-":3}},{"path":"src/main/java/parser/DateTimeParser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vennica"},"content":"package parser;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"vennica"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"vennica"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"vennica"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"vennica"},"content":"import java.util.Locale;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"vennica"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"vennica"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"vennica"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"vennica"},"content":" * A parser for datetime formatting. Any datetime format will be formatted from \"dd/MM/yyyy\" to \"MMM dd yyyy\" in \u003ccode\u003eDateTimeParser\u003c/code\u003e .","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"vennica"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"vennica"},"content":"public class DateTimeParser {","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"vennica"},"content":"    /*","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"vennica"},"content":"    method to extract date from inputString and format it.","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"vennica"},"content":"    find date matches format dd/mm/yyyy, which is a required format from user side,","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"vennica"},"content":"    parse it to dd-MM-yyyy format","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"vennica"},"content":"     * Returns a date in \"MMM dd yyyy\" format string based on user input.","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"vennica"},"content":"     * if date is not in \"dd/MM/yyyy\" format, method will return an empty string with a prompt","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"vennica"},"content":"     * @param inputString datetime string input by the user.","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"vennica"},"content":"     * @return date in \"MMM dd yyyy\" format and will be use in Tasklist.","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"vennica"},"content":"     * @throws DateTimeParseException If extracted date doesn\u0027t match the inputFormatter.","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"vennica"},"content":"    public static String toDate(String inputString){","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"vennica"},"content":"        String printedDate \u003d \" \";","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"vennica"},"content":"        //need to check if the date fit into the format","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"vennica"},"content":"        //compile regex format to match the expected result","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"vennica"},"content":"        Pattern pattern \u003d Pattern.compile(\"(0[1-9]|[12][0-9]|3[01])/(0[1-9]|1[1,2])/((19|20)\\\\d\\\\d)\");","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"vennica"},"content":"        //create matcher to check if the string matches expected results","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"vennica"},"content":"        Matcher matcher \u003d pattern.matcher(inputString);","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"vennica"},"content":"        //validate if the inputDate matches expected pattern","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"vennica"},"content":"        if (matcher.find()){","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"vennica"},"content":"            // Extract the matched date","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"vennica"},"content":"            String inputDate \u003d matcher.group();","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"vennica"},"content":"            // Parse the extracted date","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"vennica"},"content":"            //inputFormatter \u003d inputFormatter.withLocale(Locale.getDefault() );","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"vennica"},"content":"            DateTimeFormatter inputFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"vennica"},"content":"            LocalDate formattedDate \u003d LocalDate.parse(inputDate, inputFormatter);","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"vennica"},"content":"            //print date to MMM dd yyyy","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"vennica"},"content":"            printedDate \u003d formattedDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")); // -\u003e Example: Oct 15 2019","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"vennica"},"content":"        else {","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"vennica"},"content":"            System.out.println(\"Please follow date format as \u0027dd/MM/yyyy\u0027\");","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"vennica"},"content":"        return printedDate;","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"vennica"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"vennica":58}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vennica"},"content":"package storage;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"vennica"},"content":"import task.Task;","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"vennica"},"content":"import java.io.File;","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"vennica"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"vennica"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"vennica"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"vennica"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"vennica"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"vennica"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"vennica"},"content":" * A festure class contains function that convert the TaskList to a Text file duke.txt","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"vennica"},"content":" * The text file and file path will be created if doesn\u0027t exist in the directory.","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"vennica"},"content":" * whenever the TaskList being updated the text file will be updated too.","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"vennica"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"vennica"},"content":"public class Storage {","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"vennica"},"content":"     * This is a function returns nothing","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"vennica"},"content":"     * but take in an ArrayList of \u003ccode\u003eTask\u003c/code\u003e and put them into duke.txt file.","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"vennica"},"content":"     * @param actions ArrayList of Tasks.","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"vennica"},"content":"     * @return nothing will be returned.","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"vennica"},"content":"     * @throws IOException If file does not exist.","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"vennica"},"content":"    public static void convertToTxtFile(ArrayList\u003cTask\u003e actions) throws IOException {","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"vennica"},"content":"        //handling file/folder does not exit","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"vennica"},"content":"        String filePath \u003d \"./data/duke.txt\";","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"vennica"},"content":"        String folderPath \u003d \"./data\";","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"vennica"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"vennica"},"content":"        File folder \u003d new File(folderPath);","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"vennica"},"content":"        Path createFolder \u003d Path.of(folderPath);","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"vennica"},"content":"        try {","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"vennica"},"content":"            if (file.exists()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"vennica"},"content":"                if (file.delete()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"vennica"},"content":"                    //System.out.println(\"File deleted successfully.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"vennica"},"content":"                } else {","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"vennica"},"content":"                    //System.out.println(\"Failed to delete the file.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"vennica"},"content":"                    return;","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"vennica"},"content":"                }","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"vennica"},"content":"            }else if (!folder.exists()) {","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"vennica"},"content":"                Files.createDirectories(createFolder);","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"vennica"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"vennica"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"vennica"},"content":"            for (Task task : actions) {","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"vennica"},"content":"                fw.write(task.getTask());","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"vennica"},"content":"                //line seperator in the file","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"vennica"},"content":"                fw.write(System.lineSeparator());","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"vennica"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"vennica"},"content":"            fw.close();","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"vennica"},"content":"        }catch (IOException e) {","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"vennica"},"content":"            System.err.println(\"An error occurred: \" + e.getMessage());","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":56,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":57,"author":{"gitId":"vennica"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"vennica":57}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vennica"},"content":"package task;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"vennica"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"vennica"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"vennica"},"content":"/**","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"vennica"},"content":" *  Represent a \u003ccode\u003eDeadline\u003c/code\u003e object that extends an instance from \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"vennica"},"content":" *  that comes with date as deadline.","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"vennica"},"content":" */","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"vennica"},"content":"public class Deadline extends Task{","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"vennica"},"content":"    private static DateTimeParser dateParser;","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"vennica"},"content":"    private String by;","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"vennica"},"content":"    private String description;","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"vennica"},"content":"    public Deadline(String d,boolean x) {","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"vennica"},"content":"        super(d,x);","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"vennica"},"content":"        extractBy(d);","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"vennica"},"content":"    public String getBy() {","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"vennica"},"content":"        return by;","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"vennica"},"content":"    public void setBy( String newBy) {","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"vennica"},"content":"        this.by \u003d newBy;","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"vennica"},"content":"    public void extractBy(String description) {","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"vennica"},"content":"        String[] words \u003d description.split(\" \", 2);","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"vennica"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"vennica"},"content":"            String[] splitBy \u003d words[1].split(\"/by \");","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"vennica"},"content":"            //setDescription(splitBy[0]);","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"vennica"},"content":"            String deadline \u003d splitBy[1];","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"vennica"},"content":"            String newBy \u003d dateParser.toDate(deadline);","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"vennica"},"content":"            setBy(newBy);","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"vennica"},"content":"        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"vennica"},"content":"            //error message display is at main class","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"vennica"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"vennica"},"content":"    public String getTask(){","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"vennica"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"vennica"},"content":"        if (getIsDone()){","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"vennica"},"content":"            result \u003d \"[D][ ] \"+ getDescription() + \"(by: \"+getBy()+\")\";","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"vennica"},"content":"        }else {","lastModifiedDate":"2023-10-13"},{"lineNumber":47,"author":{"gitId":"vennica"},"content":"            result \u003d \"[D][X] \"+ getDescription() + \"(by: \"+getBy()+\")\";","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"vennica"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"vennica"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"vennica"},"content":"    public void printTask(){","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"vennica"},"content":"        System.out.println(getTask());","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"vennica"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"vennica":57}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vennica"},"content":"package task;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"vennica"},"content":"import parser.DateTimeParser;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"vennica"},"content":"public class Event extends Task{","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"vennica"},"content":"    private static DateTimeParser dateParser;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"vennica"},"content":"    private String from;","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"vennica"},"content":"    private String to;","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"vennica"},"content":"    //variable x stands for isDone","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"vennica"},"content":"    public Event(String d, boolean x) {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"vennica"},"content":"        super(d,x);","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"vennica"},"content":"        extractFromAndTo(d);","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"vennica"},"content":"    public void setFrom(String newFrom) {","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"vennica"},"content":"        this.from \u003d dateParser.toDate(newFrom);","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"vennica"},"content":"    public void extractFromAndTo(String description) {","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"vennica"},"content":"        String[] words \u003d description.split(\" \", 2);","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"vennica"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":23,"author":{"gitId":"vennica"},"content":"            String[] splitFrom \u003d words[1].split(\"/from \");","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"vennica"},"content":"            setDescription(splitFrom[0]);","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"vennica"},"content":"            String[] splitTo \u003d splitFrom[1].split(\"/to \");","lastModifiedDate":"2023-09-24"},{"lineNumber":26,"author":{"gitId":"vennica"},"content":"            setFrom(splitTo[0]);","lastModifiedDate":"2023-09-24"},{"lineNumber":27,"author":{"gitId":"vennica"},"content":"            setTo(splitTo[1]);","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"vennica"},"content":"        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-28"},{"lineNumber":29,"author":{"gitId":"vennica"},"content":"            //error message display is at main class","lastModifiedDate":"2023-09-28"},{"lineNumber":30,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":31,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":33,"author":{"gitId":"vennica"},"content":"    public void setTo(String newTo) {","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"vennica"},"content":"        this.to \u003d dateParser.toDate(newTo);","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"vennica"},"content":"    public String getFrom(){","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"vennica"},"content":"        return from;","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"vennica"},"content":"    public String getTo(){","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"vennica"},"content":"        return to;","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"vennica"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"vennica"},"content":"    public String getTask(){","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"vennica"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"vennica"},"content":"        if (getIsDone()){","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"vennica"},"content":"            result \u003d \"[E][ ] \"+ getDescription() + \"(from: \" + getFrom() + \"to: \"+ getTo() +\")\";","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"vennica"},"content":"        }else {","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"vennica"},"content":"            result \u003d \"[E][X] \"+ getDescription() + \"(from: \" + getFrom() + \"to: \"+ getTo() +\")\";","lastModifiedDate":"2023-10-13"},{"lineNumber":52,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"vennica"},"content":"        return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"vennica"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":57,"author":{"gitId":"vennica"},"content":"    public void printTask(){","lastModifiedDate":"2023-09-24"},{"lineNumber":58,"author":{"gitId":"vennica"},"content":"        System.out.println(getTask());","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"vennica"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"vennica":61}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vennica"},"content":"package task;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"vennica"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"vennica"},"content":" * Represents a \"todo\" \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"vennica"},"content":" * A todo task with description of the task  e.g., \u003ccode\u003ebuy bread\u003c/code\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"vennica"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"vennica"},"content":"public class Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"vennica"},"content":"    private boolean isDone;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"vennica"},"content":"    private String description;","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"vennica"},"content":"     * Constructor for Task object","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"vennica"},"content":"     * @param d A String contains description of the \u003ccode\u003eTask\u003c/code\u003e input by the user.","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"vennica"},"content":"     * @param x represent the condition of the task \"done/not done\".","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"vennica"},"content":"    public Task (String d,boolean x){","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"vennica"},"content":"        this.isDone \u003d x ;","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"vennica"},"content":"        setDescription(d);","lastModifiedDate":"2023-09-28"},{"lineNumber":20,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":21,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"vennica"},"content":"     * Setter for condition of the \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"vennica"},"content":"     * @param x represent the condition of the task \"done/not done\".","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"vennica"},"content":"    public void setIsDone(boolean x){","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"vennica"},"content":"        this.isDone \u003d x;","lastModifiedDate":"2023-09-18"},{"lineNumber":29,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"vennica"},"content":"     * Setter for description of the \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"vennica"},"content":"     * @param description Description of the todo Task","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"vennica"},"content":"     * @throws ArrayIndexOutOfBoundsException If there is no input in the description .","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"vennica"},"content":"    public void setDescription(String description){","lastModifiedDate":"2023-09-28"},{"lineNumber":38,"author":{"gitId":"vennica"},"content":"        String[] words \u003d description.split(\" \", 2);","lastModifiedDate":"2023-09-28"},{"lineNumber":39,"author":{"gitId":"vennica"},"content":"        try {","lastModifiedDate":"2023-09-28"},{"lineNumber":40,"author":{"gitId":"vennica"},"content":"            this.description \u003d words[1];","lastModifiedDate":"2023-09-29"},{"lineNumber":41,"author":{"gitId":"vennica"},"content":"        } catch(ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-09-28"},{"lineNumber":42,"author":{"gitId":"vennica"},"content":"            //error message display is at main class","lastModifiedDate":"2023-09-28"},{"lineNumber":43,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-09-28"},{"lineNumber":44,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-28"},{"lineNumber":45,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":46,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":47,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"vennica"},"content":"     * Getter for condition of the \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"vennica"},"content":"     * @return A boolean value represents if the todo Task has been done.","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"vennica"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-09-18"},{"lineNumber":53,"author":{"gitId":"vennica"},"content":"        return !isDone;","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":55,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":56,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"vennica"},"content":"     * Getter for description of the \u003ccode\u003eTask\u003c/code\u003e object","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"vennica"},"content":"     * @return A String value that contains the Description of the task.","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"vennica"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-18"},{"lineNumber":62,"author":{"gitId":"vennica"},"content":"        return description;","lastModifiedDate":"2023-09-18"},{"lineNumber":63,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":64,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":65,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"vennica"},"content":"     * Getter for all the details of the task.","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"vennica"},"content":"     * @return A String value shows the condition and description of the task.","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"vennica"},"content":"    public String getTask(){","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"vennica"},"content":"       String result \u003d \"\";","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"vennica"},"content":"        if (!isDone){","lastModifiedDate":"2023-10-13"},{"lineNumber":73,"author":{"gitId":"vennica"},"content":"            result \u003d \"[T][ ] \"+ getDescription();","lastModifiedDate":"2023-10-13"},{"lineNumber":74,"author":{"gitId":"vennica"},"content":"        }else {","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"vennica"},"content":"            result \u003d \"[T][X] \"+ getDescription();","lastModifiedDate":"2023-10-13"},{"lineNumber":76,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":77,"author":{"gitId":"vennica"},"content":"       return result;","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":79,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"vennica"},"content":"     * Method to call the getTask() method and print out the details of the task.","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"vennica"},"content":"    public void printTask(){","lastModifiedDate":"2023-09-24"},{"lineNumber":84,"author":{"gitId":"vennica"},"content":"            System.out.println(getTask());","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":86,"author":{"gitId":"vennica"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"vennica":86}},{"path":"src/main/java/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vennica"},"content":"package task;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"vennica"},"content":"import java.lang.reflect.Array;","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"vennica"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"vennica"},"content":"/**","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"vennica"},"content":" * A functional class contains All the operations to a \u003ccode\u003eTask\u003c/code\u003e list.","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"vennica"},"content":" * Including add OR delete \u003ccode\u003eTask\u003c/code\u003e,","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"vennica"},"content":" * also print all the \u003ccode\u003eTask\u003c/code\u003e in the \u003ccode\u003eTask\u003c/code\u003e list.","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"vennica"},"content":" */","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"vennica"},"content":"public class TaskList {","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"vennica"},"content":"     * Constructor for TaskList class","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"vennica"},"content":"    public TaskList(){}","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"vennica"},"content":"     * Returns list of \u003ccode\u003eTask\u003c/code\u003e after removing the input task.","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"vennica"},"content":"     * function will only be called when user wish to delete particular task.","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"vennica"},"content":"     * Task to be deleted will identify the task","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"vennica"},"content":"     * by calling \u003ccode\u003egetNumber()\u003c/code\u003e function to get the index of the task.","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"vennica"},"content":"     * @param input String input contains task to be removed by user.","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"vennica"},"content":"     * @param actions the latest version of list of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"vennica"},"content":"     * @return the updated list of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"vennica"},"content":"    public ArrayList\u003cTask\u003e removeTasks(String input, ArrayList\u003cTask\u003e actions){","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"vennica"},"content":"        int taskNo \u003d getNumber(input);","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"vennica"},"content":"        //e.g. \"   [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)\"","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"vennica"},"content":"        actions.get(taskNo-1).printTask();","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"vennica"},"content":"        actions.remove(taskNo-1) ;","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"vennica"},"content":"        //print task number as of now","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"vennica"},"content":"        System.out.println(","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"vennica"},"content":"                \"     Now you have \"+actions.size()+ \" tasks in the list.\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"vennica"},"content":"                        \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"vennica"},"content":"        return actions;","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"vennica"},"content":"     * function to print out the list of task with numbers in sequence.","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"vennica"},"content":"     * @param actions the latest version of list of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"vennica"},"content":"    public void printTaskList(ArrayList\u003cTask\u003e actions){","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"vennica"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"+","lastModifiedDate":"2023-11-10"},{"lineNumber":46,"author":{"gitId":"vennica"},"content":"                \"    Here are the tasks in your list: \");","lastModifiedDate":"2023-11-10"},{"lineNumber":47,"author":{"gitId":"vennica"},"content":"        for (int i \u003d 1; i \u003c\u003d actions.size(); i++){","lastModifiedDate":"2023-11-10"},{"lineNumber":48,"author":{"gitId":"vennica"},"content":"            System.out.print(\"       \");","lastModifiedDate":"2023-11-10"},{"lineNumber":49,"author":{"gitId":"vennica"},"content":"            System.out.print(\" \" + i +\".\");","lastModifiedDate":"2023-11-10"},{"lineNumber":50,"author":{"gitId":"vennica"},"content":"            actions.get(i-1).printTask();","lastModifiedDate":"2023-11-10"},{"lineNumber":51,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":52,"author":{"gitId":"vennica"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-11-10"},{"lineNumber":53,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":54,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":55,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"vennica"},"content":"     * Returns list of \u003ccode\u003eTask\u003c/code\u003e after adding the input task.","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"vennica"},"content":"     * function will only be called when user wish to add particular task.","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"vennica"},"content":"     * @param input String input contains task to be added by user.","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"vennica"},"content":"     * @param actions the latest version of list of \u003ccode\u003eTask\u003c/code\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"vennica"},"content":"     * @return updated list of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-11-14"},{"lineNumber":62,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"vennica"},"content":"    public ArrayList\u003cTask\u003e addTasks(String input, ArrayList\u003cTask\u003e actions){","lastModifiedDate":"2023-11-10"},{"lineNumber":64,"author":{"gitId":"vennica"},"content":"        boolean isValid \u003d validateInput(input);","lastModifiedDate":"2023-11-10"},{"lineNumber":65,"author":{"gitId":"vennica"},"content":"        //if isValid \u003d\u003dfalse, stop process.","lastModifiedDate":"2023-11-10"},{"lineNumber":66,"author":{"gitId":"vennica"},"content":"        Task newTask \u003d getNewTask(input);","lastModifiedDate":"2023-11-10"},{"lineNumber":67,"author":{"gitId":"vennica"},"content":"        if (!isValid){","lastModifiedDate":"2023-11-10"},{"lineNumber":68,"author":{"gitId":"vennica"},"content":"            System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-11-10"},{"lineNumber":69,"author":{"gitId":"vennica"},"content":"        } else if(newTask.getDescription()\u003d\u003dnull){","lastModifiedDate":"2023-11-10"},{"lineNumber":70,"author":{"gitId":"vennica"},"content":"            System.out.println(\"OOPS!!! The description of a todo task cannot be empty.\");","lastModifiedDate":"2023-11-10"},{"lineNumber":71,"author":{"gitId":"vennica"},"content":"        }else{","lastModifiedDate":"2023-11-10"},{"lineNumber":72,"author":{"gitId":"vennica"},"content":"            System.out.println(","lastModifiedDate":"2023-11-10"},{"lineNumber":73,"author":{"gitId":"vennica"},"content":"                    \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":74,"author":{"gitId":"vennica"},"content":"                            \"     Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-11-10"},{"lineNumber":75,"author":{"gitId":"vennica"},"content":"            //e.g. \"   [E][ ] project meeting (from: Aug 6th 2pm to: 4pm)\"","lastModifiedDate":"2023-11-10"},{"lineNumber":76,"author":{"gitId":"vennica"},"content":"            System.out.print(\"       \");","lastModifiedDate":"2023-11-10"},{"lineNumber":77,"author":{"gitId":"vennica"},"content":"            newTask.printTask();","lastModifiedDate":"2023-11-10"},{"lineNumber":78,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":79,"author":{"gitId":"vennica"},"content":"            actions.add(newTask) ;","lastModifiedDate":"2023-11-10"},{"lineNumber":80,"author":{"gitId":"vennica"},"content":"            //addInputCount();","lastModifiedDate":"2023-11-10"},{"lineNumber":81,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":82,"author":{"gitId":"vennica"},"content":"            //print task number as of now","lastModifiedDate":"2023-11-10"},{"lineNumber":83,"author":{"gitId":"vennica"},"content":"            System.out.println(","lastModifiedDate":"2023-11-10"},{"lineNumber":84,"author":{"gitId":"vennica"},"content":"                    \"     Now you have \"+actions.size()+ \" tasks in the list.\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":85,"author":{"gitId":"vennica"},"content":"                            \"    ____________________________________________________________\\n\");","lastModifiedDate":"2023-11-10"},{"lineNumber":86,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":87,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":88,"author":{"gitId":"vennica"},"content":"        return actions;","lastModifiedDate":"2023-11-10"},{"lineNumber":89,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":90,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":91,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"vennica"},"content":"     * Returns index in the \u003ccode\u003eTask\u003c/code\u003e list of selected task.","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"vennica"},"content":"     * If there is no number found in the input String, NaN is returned.","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"vennica"},"content":"     * function will only be called when user entered a Task number","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"vennica"},"content":"     * @param input String input contains index of the task user wish to action on.","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"vennica"},"content":"     * @return integer that represents index in the \u003ccode\u003eTask\u003c/code\u003e list of selected task.","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"vennica"},"content":"     * @throws  NumberFormatException if the string cannot be converted to Integer.","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"vennica"},"content":"    public int getNumber(String input){","lastModifiedDate":"2023-11-10"},{"lineNumber":101,"author":{"gitId":"vennica"},"content":"        String[] words \u003d input.split(\" \");","lastModifiedDate":"2023-11-10"},{"lineNumber":102,"author":{"gitId":"vennica"},"content":"        for (String word : words) {","lastModifiedDate":"2023-11-10"},{"lineNumber":103,"author":{"gitId":"vennica"},"content":"            try {","lastModifiedDate":"2023-11-10"},{"lineNumber":104,"author":{"gitId":"vennica"},"content":"                return Integer.parseInt(word);","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"vennica"},"content":"            } catch (NumberFormatException nfe) {","lastModifiedDate":"2023-11-10"},{"lineNumber":106,"author":{"gitId":"vennica"},"content":"                continue;","lastModifiedDate":"2023-11-10"},{"lineNumber":107,"author":{"gitId":"vennica"},"content":"            }","lastModifiedDate":"2023-11-10"},{"lineNumber":108,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":109,"author":{"gitId":"vennica"},"content":"        return -1;","lastModifiedDate":"2023-11-10"},{"lineNumber":110,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":111,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":112,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":113,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":114,"author":{"gitId":"vennica"},"content":"     * Returns true if user input fits into \u003ccode\u003eTask\u003c/code\u003e object.","lastModifiedDate":"2023-11-14"},{"lineNumber":115,"author":{"gitId":"vennica"},"content":"     * If input doesn\u0027t starts with Todo OR Event OR Deadline , return false.","lastModifiedDate":"2023-11-14"},{"lineNumber":116,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":117,"author":{"gitId":"vennica"},"content":"     * @param input String input contains task to be added by user.","lastModifiedDate":"2023-11-14"},{"lineNumber":118,"author":{"gitId":"vennica"},"content":"     * @return updated list of \u003ccode\u003eTask\u003c/code\u003e.","lastModifiedDate":"2023-11-14"},{"lineNumber":119,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":120,"author":{"gitId":"vennica"},"content":"    public boolean validateInput(String input){","lastModifiedDate":"2023-11-10"},{"lineNumber":121,"author":{"gitId":"vennica"},"content":"        String trimInput \u003d input.trim().toLowerCase();","lastModifiedDate":"2023-11-10"},{"lineNumber":122,"author":{"gitId":"vennica"},"content":"        return trimInput.startsWith(\"todo\") || trimInput.startsWith(\"deadline\")","lastModifiedDate":"2023-11-14"},{"lineNumber":123,"author":{"gitId":"vennica"},"content":"                || trimInput.startsWith(\"event\");","lastModifiedDate":"2023-11-14"},{"lineNumber":124,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":125,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":126,"author":{"gitId":"vennica"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":127,"author":{"gitId":"vennica"},"content":"     * Identifies the type of \u003ccode\u003eTask\u003c/code\u003e, \u003ccode\u003eDeadline\u003c/code\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":128,"author":{"gitId":"vennica"},"content":"     * OR \u003ccode\u003eEvent\u003c/code\u003e OR todo task.","lastModifiedDate":"2023-11-14"},{"lineNumber":129,"author":{"gitId":"vennica"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":130,"author":{"gitId":"vennica"},"content":"     * @param input String input contains task to be added by user.","lastModifiedDate":"2023-11-14"},{"lineNumber":131,"author":{"gitId":"vennica"},"content":"     * @return A new \u003ccode\u003eTask\u003c/code\u003e according to the type of the task.","lastModifiedDate":"2023-11-14"},{"lineNumber":132,"author":{"gitId":"vennica"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":133,"author":{"gitId":"vennica"},"content":"    public Task getNewTask (String input){","lastModifiedDate":"2023-11-10"},{"lineNumber":134,"author":{"gitId":"vennica"},"content":"        if (input.trim().toLowerCase().startsWith(\"deadline\")){","lastModifiedDate":"2023-11-10"},{"lineNumber":135,"author":{"gitId":"vennica"},"content":"            return new Deadline(input, false);","lastModifiedDate":"2023-11-14"},{"lineNumber":136,"author":{"gitId":"vennica"},"content":"        }else if (input.trim().toLowerCase().startsWith(\"event\")){","lastModifiedDate":"2023-11-10"},{"lineNumber":137,"author":{"gitId":"vennica"},"content":"            return new Event(input, false);","lastModifiedDate":"2023-11-14"},{"lineNumber":138,"author":{"gitId":"vennica"},"content":"        }else  {","lastModifiedDate":"2023-11-10"},{"lineNumber":139,"author":{"gitId":"vennica"},"content":"            return new Task(input, false);","lastModifiedDate":"2023-11-14"},{"lineNumber":140,"author":{"gitId":"vennica"},"content":"        }","lastModifiedDate":"2023-11-10"},{"lineNumber":141,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":142,"author":{"gitId":"vennica"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"vennica":142}},{"path":"src/main/java/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"vennica"},"content":"package ui;","lastModifiedDate":"2023-11-10"},{"lineNumber":2,"author":{"gitId":"vennica"},"content":"public class Ui {","lastModifiedDate":"2023-11-10"},{"lineNumber":3,"author":{"gitId":"vennica"},"content":"    public static void printHeader(){","lastModifiedDate":"2023-11-10"},{"lineNumber":4,"author":{"gitId":"vennica"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":5,"author":{"gitId":"vennica"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":6,"author":{"gitId":"vennica"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":7,"author":{"gitId":"vennica"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-11-10"},{"lineNumber":8,"author":{"gitId":"vennica"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-11-10"},{"lineNumber":9,"author":{"gitId":"vennica"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-11-10"},{"lineNumber":10,"author":{"gitId":"vennica"},"content":"        System.out.println(\"____________________________________________________________\\n\"+","lastModifiedDate":"2023-11-10"},{"lineNumber":11,"author":{"gitId":"vennica"},"content":"                \"Hello! I\u0027m venni\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":12,"author":{"gitId":"vennica"},"content":"                \"What can I do for you?\\n\" +","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"vennica"},"content":"                \"(if you wish to put in any date please follow dd/mm/yyyy)\"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"vennica"},"content":"        );","lastModifiedDate":"2023-11-10"},{"lineNumber":15,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":16,"author":{"gitId":"vennica"},"content":"    public static void printBye(){","lastModifiedDate":"2023-11-10"},{"lineNumber":17,"author":{"gitId":"vennica"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":18,"author":{"gitId":"vennica"},"content":"                \"____________________________________________________________\");","lastModifiedDate":"2023-11-10"},{"lineNumber":19,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":20,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":21,"author":{"gitId":"vennica"},"content":"    public static void markNotDone(){","lastModifiedDate":"2023-11-10"},{"lineNumber":22,"author":{"gitId":"vennica"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"+","lastModifiedDate":"2023-11-10"},{"lineNumber":23,"author":{"gitId":"vennica"},"content":"                \"    OK, I\u0027ve marked this task as not done yet: \");","lastModifiedDate":"2023-11-10"},{"lineNumber":24,"author":{"gitId":"vennica"},"content":"        System.out.print(\"       \");","lastModifiedDate":"2023-11-10"},{"lineNumber":25,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":26,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":27,"author":{"gitId":"vennica"},"content":"    public static void markDone(){","lastModifiedDate":"2023-11-10"},{"lineNumber":28,"author":{"gitId":"vennica"},"content":"        System.out.println(\"    ____________________________________________________________\\n\"+","lastModifiedDate":"2023-11-10"},{"lineNumber":29,"author":{"gitId":"vennica"},"content":"                \"    Nice! I\u0027ve marked this task as done: \");","lastModifiedDate":"2023-11-10"},{"lineNumber":30,"author":{"gitId":"vennica"},"content":"        System.out.print(\"       \");","lastModifiedDate":"2023-11-10"},{"lineNumber":31,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":32,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":33,"author":{"gitId":"vennica"},"content":"    public static void printLine(){","lastModifiedDate":"2023-11-10"},{"lineNumber":34,"author":{"gitId":"vennica"},"content":"        System.out.println(\"    ____________________________________________________________\");","lastModifiedDate":"2023-11-10"},{"lineNumber":35,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":36,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":37,"author":{"gitId":"vennica"},"content":"    public static void printRemoveMsg(){","lastModifiedDate":"2023-11-10"},{"lineNumber":38,"author":{"gitId":"vennica"},"content":"        System.out.println(","lastModifiedDate":"2023-11-10"},{"lineNumber":39,"author":{"gitId":"vennica"},"content":"                \"    ____________________________________________________________\\n\" +","lastModifiedDate":"2023-11-10"},{"lineNumber":40,"author":{"gitId":"vennica"},"content":"                        \"     Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-11-10"},{"lineNumber":41,"author":{"gitId":"vennica"},"content":"        System.out.print(\"       \");","lastModifiedDate":"2023-11-10"},{"lineNumber":42,"author":{"gitId":"vennica"},"content":"    }","lastModifiedDate":"2023-11-10"},{"lineNumber":43,"author":{"gitId":"vennica"},"content":"","lastModifiedDate":"2023-11-10"},{"lineNumber":44,"author":{"gitId":"vennica"},"content":"    ","lastModifiedDate":"2023-11-10"},{"lineNumber":45,"author":{"gitId":"vennica"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"vennica":45}}]
