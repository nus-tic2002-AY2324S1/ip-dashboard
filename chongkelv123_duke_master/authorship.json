[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# Duke project template","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"3. After that, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"4. Duke is released under an MIT license.","lastModifiedDate":"2023-10-08"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"5. Duke is part of https://se-education.org","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"chongkelv123":1,"-":25}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    implementation \u0027org.jetbrains:annotations:24.0.0\u0027","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"    implementation \u0027org.jetbrains:annotations:24.0.0\u0027","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-params\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chongkelv123":5,"-":41}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"### Feature-ABC","lastModifiedDate":"2021-07-17"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"### Feature-XYZ","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Description of the feature.","lastModifiedDate":"2021-07-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"### `KeywordTypes` - Describe action","lastModifiedDate":"2023-09-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Describe the action and its outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"`keyword (optional arguments)`","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Description of the outcome.","lastModifiedDate":"2021-07-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":27,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":28,"author":{"gitId":"-"},"content":"expected output","lastModifiedDate":"2021-07-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"chongkelv123":1,"-":28}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.command.ExitCommand;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.command.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.FileStorageException;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":" * Duke is the main entry point of the Luna chat-bot application","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":" * Initializes the applications and starts the interaction with the user","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"public class Duke {","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    private Ui ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    private Storage storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    private UserKeywordArgument keywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"            tasks \u003d new TaskList(storage.load());","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"        } catch (FileStorageException | InvalidArgumentException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"            ui.showLoadingError(e.getMessage());","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"     * Runs the program and print the welcome message","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    public void run() {","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"        ui.showWelcome();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"        loopUntilExitCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"     * Reads the user command and executes it, until user issues the \u0027bye\u0027 exit command.","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"    private void loopUntilExitCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"        Command command;","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"        do {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"            String userInputCommand \u003d ui.getUserCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"            keywordArgument \u003d new UserKeywordArgument(userInputCommand);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"            command \u003d Parser.parseKeywordToCommand(keywordArgument);","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"            executeCommand(command);","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        } while (!ExitCommand.isExit());","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"     * Executes the user command and saves the data to the \"duke.txt\" file.","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"     * @param command user command","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    private void executeCommand(Command command) {","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"        if (command \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"            return;","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"            command.executeCommand(tasks, ui, storage, keywordArgument);","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"            storage.save(tasks.getTasks());","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"        } catch (FileStorageException | InvalidArgumentException e) {","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"            ui.showResponseToUser(e.getMessage());","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"        new Duke(\"src/main/java/duke/data/duke.txt\").run();","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"chongkelv123":79}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":" * This is the abstract Command class that serves as the base for all command classes.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public static final String DESC_ERR_MESSAGE \u003d \"OOPS!!! The \\\"description\\\" of a \\\"%s\\\" cannot be empty :(\";","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    public static final String DESC_NEED_BLANK_ERR_MESSAGE \u003d \"OOPS!!! Please leave the description blank for the \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"            \"\\\"%s\\\" command.\";","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    public static final String DATE_TIME_FORMAT_MESSAGE \u003d \"Date and Time format: {dd/mm/yyyy hhmm}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    public static final String TIME_FORMAT_MESSAGE \u003d \"Date and Time format: {hhmm}\";","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    public static final String DATE_FORMAT_MESSAGE \u003d \"Date format: {dd/mm/yyyy}\";","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    public static final String SUB_ARG_ERR_MESSAGE \u003d \"OOPS!!! The \\\"%s\\\" of a \\\"%s\\\" cannot be empty :(\";","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    public static final String DATE_TIME_ERR_MESSAGE \u003d \"OOPS!!! The %s format of a \\\"%s\\\" is invalid :(\";","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    public static final Pattern DATE_TIME_ARG_FORMAT \u003d Pattern.compile(\"(?\u003cday\u003e[0-9]{2})/\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"            \"(?\u003cmonth\u003e[0-9]{2})/(?\u003cyear\u003e[0-9]{4})\\\\s(?\u003ctimeArgument\u003e\\\\w.*)\");","lastModifiedDate":"2023-11-07"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    public static final Pattern DATE_ARG_FORMAT \u003d Pattern.compile(\"(?\u003cday\u003e[0-9]{2})/\" +","lastModifiedDate":"2023-11-07"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"            \"(?\u003cmonth\u003e[0-9]{2})/(?\u003cyear\u003e[0-9]{4})\");","lastModifiedDate":"2023-11-07"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"    public static final Pattern TIME_ARG_FORMAT \u003d Pattern.compile(\"(?\u003chour\u003e[0-9]{2})(?\u003cminute\u003e[0-9]{2})\");","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"    private static boolean isExit \u003d false;","lastModifiedDate":"2023-10-16"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"     * Executes the command based on the provided task list, user interface, storage, and user input arguments.","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"     * Subclasses must implement this method to define specific command behavior.","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList        The TaskList containing the tasks to be managed.","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"     * @param ui              The user interface for displaying messages to the user.","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"     * @param storage         The storage for saving and loading task data.","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The user input argument containing command details.","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the input arguments are invalid or do not match the command requirements.","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"    public abstract void executeCommand(TaskList taskList, Ui ui, Storage storage, UserKeywordArgument keywordArgument)","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException;","lastModifiedDate":"2023-10-21"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     * Sets the exit flag to indicate that the program should exit.","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"    protected static void setExit() {","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"     * Throws an InvalidArgumentException if the arguments in the given UserKeywordArgument are empty.","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The UserKeywordArgument containing the keyword and arguments.","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"     * @param command         The Command associated with the keyword.","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the arguments are empty, an exception is thrown with an error message.","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    public void validateKeywordArgument(UserKeywordArgument keywordArgument, Command command)","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"        if (keywordArgument.getArguments().isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"            String errMsg \u003d String.format(DESC_ERR_MESSAGE, command.getCommandWord());","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errMsg, command.getExampleUsage()));","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"     * Throws an InvalidArgumentException if the arguments in the given UserKeywordArgument are not empty.","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The UserKeywordArgument containing the keyword and arguments.","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"     * @param command         The Command associated with the keyword.","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the arguments are not empty, an exception is thrown with an error message.","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"    public void validateNonEmptyKeywordArgument(UserKeywordArgument keywordArgument, Command command)","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"        if (!keywordArgument.getArguments().isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"            String errMsg \u003d String.format(DESC_NEED_BLANK_ERR_MESSAGE, command.getCommandWord());","lastModifiedDate":"2023-10-22"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errMsg, command.getExampleUsage()));","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"     * Throws an InvalidArgumentException if the given Matcher does not match the expected date pattern.","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"     * @param matcher The Matcher object to be checked against a specific pattern.","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"     * @param command The Command associated with the pattern being checked.","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"     * @param addOn   Additional information to be included in the error message (can be empty).","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the Matcher does not match the pattern, an exception is thrown with an","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"     *                                  error message.","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"    public void validateDateMatcher(Matcher matcher, Command command, String addOn)","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"        String commandWord;","lastModifiedDate":"2023-10-22"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"        if (addOn.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"            commandWord \u003d command.getCommandWord();","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"            commandWord \u003d addOn + \" \" + command.getCommandWord();","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"            String errMsg \u003d String.format(DATE_TIME_ERR_MESSAGE, \"date\", commandWord);","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errMsg, command.getExampleUsage()));","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"     * Throws an InvalidArgumentException if the given Matcher does not match the expected time pattern.","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"     * @param matcher The Matcher object to be checked against a specific time pattern.","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"chongkelv123"},"content":"     * @param command The Command associated with the pattern being checked.","lastModifiedDate":"2023-10-23"},{"lineNumber":113,"author":{"gitId":"chongkelv123"},"content":"     * @param addOn   Additional information to be included in the error message (can be empty).","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the Matcher does not match the time pattern, an exception is thrown with","lastModifiedDate":"2023-10-24"},{"lineNumber":115,"author":{"gitId":"chongkelv123"},"content":"     *                                  an error message.","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"chongkelv123"},"content":"    public void validateTimeMatcher(Matcher matcher, Command command, String addOn) throws InvalidArgumentException {","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"chongkelv123"},"content":"        String commandWord;","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"chongkelv123"},"content":"        if (addOn.isEmpty()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":120,"author":{"gitId":"chongkelv123"},"content":"            commandWord \u003d command.getCommandWord();","lastModifiedDate":"2023-10-22"},{"lineNumber":121,"author":{"gitId":"chongkelv123"},"content":"        } else {","lastModifiedDate":"2023-10-22"},{"lineNumber":122,"author":{"gitId":"chongkelv123"},"content":"            commandWord \u003d addOn + \" \" + command.getCommandWord();","lastModifiedDate":"2023-10-22"},{"lineNumber":123,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":124,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":125,"author":{"gitId":"chongkelv123"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":126,"author":{"gitId":"chongkelv123"},"content":"            String errMsg \u003d String.format(DATE_TIME_ERR_MESSAGE, \"time\", commandWord);","lastModifiedDate":"2023-10-22"},{"lineNumber":127,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errMsg, command.getExampleUsage()));","lastModifiedDate":"2023-10-22"},{"lineNumber":128,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"chongkelv123"},"content":"     * Validates a Matcher object against a specific pattern and throws an exception if it does not match.","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"chongkelv123"},"content":"     * @param matcher The Matcher object to be validated against a pattern.","lastModifiedDate":"2023-10-23"},{"lineNumber":135,"author":{"gitId":"chongkelv123"},"content":"     * @param command The Command associated with the pattern being checked.","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"chongkelv123"},"content":"     * @param addOn   Additional information to be included in the error message.","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the Matcher does not match the pattern, an exception is thrown with an","lastModifiedDate":"2023-10-24"},{"lineNumber":138,"author":{"gitId":"chongkelv123"},"content":"     *                                  error message.","lastModifiedDate":"2023-10-24"},{"lineNumber":139,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":140,"author":{"gitId":"chongkelv123"},"content":"    public void validateArgumentMatcher(Matcher matcher, Command command, String addOn)","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-10-23"},{"lineNumber":142,"author":{"gitId":"chongkelv123"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-10-23"},{"lineNumber":143,"author":{"gitId":"chongkelv123"},"content":"            String errMsg \u003d String.format(SUB_ARG_ERR_MESSAGE, addOn, command.getCommandWord());","lastModifiedDate":"2023-10-23"},{"lineNumber":144,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errMsg, command.getExampleUsage()));","lastModifiedDate":"2023-10-23"},{"lineNumber":145,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-23"},{"lineNumber":146,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":147,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":148,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":149,"author":{"gitId":"chongkelv123"},"content":"     * Checks if the program should exit.","lastModifiedDate":"2023-10-23"},{"lineNumber":150,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":151,"author":{"gitId":"chongkelv123"},"content":"     * @return true if the program should exit, false otherwise.","lastModifiedDate":"2023-10-23"},{"lineNumber":152,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":153,"author":{"gitId":"chongkelv123"},"content":"    public static boolean isExit() {","lastModifiedDate":"2023-10-23"},{"lineNumber":154,"author":{"gitId":"chongkelv123"},"content":"        return isExit;","lastModifiedDate":"2023-10-23"},{"lineNumber":155,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":156,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":157,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"chongkelv123"},"content":"     * Processes and displays the list of found tasks","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"chongkelv123"},"content":"     * @param ui         The user interface object used to display the response.","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"chongkelv123"},"content":"     * @param foundTasks The list of tasks found based on a search criterion","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"chongkelv123"},"content":"    public void processResponseMessage(Ui ui, ArrayList\u003cTask\u003e foundTasks, String respMessage) {","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":165,"author":{"gitId":"chongkelv123"},"content":"        messages.add(respMessage);","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"chongkelv123"},"content":"        for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2023-10-29"},{"lineNumber":167,"author":{"gitId":"chongkelv123"},"content":"            Task task \u003d foundTasks.get(i);","lastModifiedDate":"2023-10-29"},{"lineNumber":168,"author":{"gitId":"chongkelv123"},"content":"            messages.add(i + 1 + \".\" + task.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":170,"author":{"gitId":"chongkelv123"},"content":"        ui.showResponseToUser(messages);","lastModifiedDate":"2023-10-29"},{"lineNumber":171,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":172,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":174,"author":{"gitId":"chongkelv123"},"content":"     * Gets the example usage string for the command.","lastModifiedDate":"2023-11-04"},{"lineNumber":175,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":176,"author":{"gitId":"chongkelv123"},"content":"     * @return The example usage string for the command.","lastModifiedDate":"2023-11-04"},{"lineNumber":177,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":178,"author":{"gitId":"chongkelv123"},"content":"    public abstract String getExampleUsage();","lastModifiedDate":"2023-10-22"},{"lineNumber":179,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":180,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":181,"author":{"gitId":"chongkelv123"},"content":"     * Gets the command word associated with the command.","lastModifiedDate":"2023-11-04"},{"lineNumber":182,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":183,"author":{"gitId":"chongkelv123"},"content":"     * @return The command word representing the keyword for the command.","lastModifiedDate":"2023-11-04"},{"lineNumber":184,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":185,"author":{"gitId":"chongkelv123"},"content":"    public abstract String getCommandWord();","lastModifiedDate":"2023-10-22"},{"lineNumber":186,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":187,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"chongkelv123":187}},{"path":"src/main/java/duke/command/DatePrintCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-22"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":" * The DatePrintCommand class represents a command that prints deadlines or events occurring on a specific date.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"public class DatePrintCommand extends Command {","lastModifiedDate":"2023-10-22"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    LocalDateTime date;","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"dprint\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" 22/10/2023\\n\" +","lastModifiedDate":"2023-10-22"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"            DATE_FORMAT_MESSAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    public static final String TASKS_IN_THE_LIST \u003d \"Here are the tasks in your date filter list:\";","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_LIST_IS_EMPTY \u003d \"There are no items in the filter list for the given date!\";","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList        The TaskList containing the tasks to be filtered.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"     * @param ui              The user interface for displaying messages to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"     * @param storage         The storage object used to store and load tasks.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The parsed user input containing the keyword and arguments.","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Executes the command to display tasks within a specific date filter.","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand(TaskList taskList, Ui ui, Storage storage, UserKeywordArgument keywordArgument)","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"        validateKeywordArgument(keywordArgument, new DatePrintCommand());","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"        final Matcher dateMatcher \u003d DATE_ARG_FORMAT.matcher(keywordArgument.getArguments());","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"        validateDateMatcher(dateMatcher, new DatePrintCommand(), \"\");","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        date \u003d Parser.constructDateTime(dateMatcher);","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.getTasksByDate(date);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"            ui.showResponseToUser(MESSAGE_LIST_IS_EMPTY);","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"            return;","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"        processResponseMessage(ui, foundTasks, TASKS_IN_THE_LIST);","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"chongkelv123":64}},{"path":"src/main/java/duke/command/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":" * The DeadlineCommand class represents a command that handles deadline tasks.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"deadline\";","lastModifiedDate":"2023-10-22"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" return book /by 02/12/2019\\n\" +","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"            DATE_FORMAT_MESSAGE;","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    public static final Pattern ARGUMENT_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e\\\\w.*)\\\\s/by\\\\s(?\u003cbyArgument\u003e\\\\w.*)\");","lastModifiedDate":"2023-10-22"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     * @param tasks           The TaskList containing the tasks to be managed.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"     * @param ui              The user interface for displaying messages to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"     * @param storage         The storage object used to store and load tasks.","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The parsed user input containing the keyword and arguments.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Executes the command to create a new deadline task and adds it to the task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage, UserKeywordArgument keywordArgument) throws InvalidArgumentException {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"        Deadline deadline \u003d processDetail(keywordArgument);","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"        deadline.execute();","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"     * Processes the details provided in the UserKeywordArgument object for creating a Deadline task.","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"     * Validates the command arguments, extracts necessary details, and constructs a Deadline object.","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The parsed user input containing the keyword and task details.","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"     * @return A Deadline object created based on the processed details.","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"    private Deadline processDetail(UserKeywordArgument keywordArgument) throws InvalidArgumentException {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"        validateKeywordArgument(keywordArgument, new DeadlineCommand());","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"        final Matcher byMatcher \u003d ARGUMENT_FORMAT.matcher(keywordArgument.getArguments());","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"        validateArgumentMatcher(byMatcher, new DeadlineCommand(), \"/by\");","lastModifiedDate":"2023-10-23"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"        final String description \u003d byMatcher.group(\"description\");","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"        final String byArgument \u003d byMatcher.group(\"byArgument\");","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"        final Matcher dateMatcher \u003d DATE_ARG_FORMAT.matcher(byArgument);","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"        validateDateMatcher(dateMatcher, new DeadlineCommand(), \"\");","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime by \u003d Parser.constructDateTime(dateMatcher);","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"        assert !description.isEmpty() : \"The description cannot be empty\";","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"        return new Deadline(false, description, by);","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":73}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":" * The DeleteCommand class represents a command that deletes a task from the task list.","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"public class DeleteCommand extends IndexBaseCommand {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_REMOVED_TASK \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"    public DeleteCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"     * @return The message indicating the removal of a task.","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Gets the message indicating that a task has been removed.","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public String getMessage() {","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"        return MESSAGE_REMOVED_TASK;","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-22"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":32}},{"path":"src/main/java/duke/command/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Event;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":" * The EventCommand class represents a command that handles event tasks.","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"event\";","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" project meeting /from \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"            \"02/12/2020 0800 /to \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"            \"02/12/2020 1000\\n\" + DATE_TIME_FORMAT_MESSAGE;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    public static final Pattern ARGUMENT_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e\\\\w.*)\\\\s+/from\\\\s+(?\u003cfrom\u003e\\\\w.*)\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"            \"\\\\s+/to\\\\s+(?\u003cto\u003e\\\\w.*)\");","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    public static final String DATE_TIME_ERROR_MESSAGE \u003d \"OOPS!!! The \u0027from: date/time\u0027 can not be after the \u0027to: \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"            \"date/time\u0027\";","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"     * @param tasks           The TaskList containing the tasks to be managed.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     * @param ui              The user interface for displaying messages to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     * @param storage         The storage object used to store and load tasks.","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The parsed user input containing the keyword and arguments.","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Executes the command to create a new event task and adds it to the task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage, UserKeywordArgument keywordArgument) throws InvalidArgumentException {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"        Event event \u003d processDetail(keywordArgument);","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"        event.execute();","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"        tasks.add(event);","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"     * Processes the details provided in the UserKeywordArgument object for creating an Event task.","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"     * Validates the command arguments, extracts necessary details, and constructs an Event object.","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The parsed user input containing the keyword and task details.","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"     * @return An Event object created based on the processed details.","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    private Event processDetail(UserKeywordArgument keywordArgument) throws InvalidArgumentException {","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"        validateKeywordArgument(keywordArgument, new EventCommand());","lastModifiedDate":"2023-10-23"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"        final Matcher matcher \u003d ARGUMENT_FORMAT.matcher(keywordArgument.getArguments());","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"        validateArgumentMatcher(matcher, new EventCommand(), \"/from \u0026 /to\");","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"        final String description \u003d matcher.group(\"description\");","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"        final String from \u003d matcher.group(\"from\");","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"        final String to \u003d matcher.group(\"to\");","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"        final Matcher fromDateMatcher \u003d DATE_TIME_ARG_FORMAT.matcher(from);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"        validateDateMatcher(fromDateMatcher, new EventCommand(), \"\u0027from\u0027 in\");","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"        final Matcher toDateMatcher \u003d DATE_TIME_ARG_FORMAT.matcher(to);","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"        validateDateMatcher(toDateMatcher, new EventCommand(), \"\u0027to\u0027 in\");","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"        final Matcher fromTimeMatcher \u003d TIME_ARG_FORMAT.matcher(fromDateMatcher.group(\"timeArgument\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"        validateTimeMatcher(fromTimeMatcher, new EventCommand(), \"\u0027from\u0027 in\");","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"        final Matcher toTimeMatcher \u003d TIME_ARG_FORMAT.matcher(toDateMatcher.group(\"timeArgument\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"        validateTimeMatcher(toTimeMatcher, new EventCommand(), \"\u0027to\u0027 in\");","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime fromDateTime \u003d Parser.constructDateTime(fromDateMatcher, fromTimeMatcher);","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime toDateTime \u003d Parser.constructDateTime(toDateMatcher, toTimeMatcher);","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"        validateDateTimeRange(fromDateTime, toDateTime);","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"        assert toDateTime.isAfter(fromDateTime) : \"\u0027From\u0027 date/time must be before \u0027To\u0027 date/time!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"        return new Event(false, description, fromDateTime, toDateTime);","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"     * Validates the date and time range to ensure fromDateTime is before or equal to toDateTime.","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"     * @param fromDateTime The start date and time to validate.","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"     * @param toDateTime   The end date and time to validate.","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If fromDateTime is after toDateTime.","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"    public static void validateDateTimeRange(LocalDateTime fromDateTime, LocalDateTime toDateTime) throws InvalidArgumentException {","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"        if (fromDateTime.isAfter(toDateTime)) {","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(DATE_TIME_ERROR_MESSAGE, EXAMPLE_USAGE));","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-22"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-22"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-22"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":105}},{"path":"src/main/java/duke/command/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":" * The ExitCommand class represents a command that terminates the application.","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"bye\";","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD;","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    public ExitCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"     * @param tasks           The TaskList containing the tasks to be managed.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"     * @param ui              The user interface for displaying messages to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"     * @param storage         The storage object used to store and load tasks.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The parsed user input containing the keyword and arguments.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Executes the exit command, sets the exit flag, and displays a goodbye message to the user.","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage, UserKeywordArgument keywordArgument)","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"        validateNonEmptyKeywordArgument(keywordArgument, new ExitCommand());","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"        setExit();","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"        ui.showResponseToUser(Message.MESSAGE_GOODBYE);","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":47}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":" * The FindCommand class is responsible for executing a command to search for tasks based on their descriptions.","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" book\";","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"    public static final String TASKS_IN_THE_LIST \u003d \"Here are the matching tasks in your list:\";","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_LIST_IS_EMPTY \u003d \"No items match the provided search string in the list!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList        The task list containing tasks to be searched.","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"     * @param ui              The user interface object used to display the response.","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"     * @param storage         The storage object used for saving tasks.","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The user input containing the search keyword and arguments.","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the search argument is empty or invalid.","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Executes a search command, finds tasks based on the provided search string, and displays the results.","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand(TaskList taskList, Ui ui, Storage storage, UserKeywordArgument keywordArgument) throws InvalidArgumentException {","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"        validateKeywordArgument(keywordArgument, new FindCommand());","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"        String search \u003d keywordArgument.getArguments();","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"        assert !search.isEmpty() : \"search string cannot be empty\";","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d taskList.getTaskBySearchString(search);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"        if (foundTasks.isEmpty()) {","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"            ui.showResponseToUser(MESSAGE_LIST_IS_EMPTY);","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"        processResponseMessage(ui, foundTasks, TASKS_IN_THE_LIST);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"chongkelv123":51}},{"path":"src/main/java/duke/command/IndexBaseCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Event;","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":" * The IndexBaseCommand class serves as the base for all index-based command classes.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"public abstract class IndexBaseCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public static final String DESC_ERR_MESSAGE \u003d \"OOPS!!! The \\\"description\\\" of a \\\"%s\\\" cannot be empty :(\";","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    public static final String INDEX_INT_ERR_MESSAGE \u003d \"The \\\"index number\\\" of the \\\"%s\\\" must be an integer :(\";","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    public static final String OUT_OF_RANGE_ERR_MESSAGE \u003d \"The \\\"index number\\\" of the \\\"%s\\\" is out of range :(\";","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    private int index;","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    private Command indexCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    public IndexBaseCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"     * This abstract method returns a message associated with the implementing class. Subclasses should override this","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"     * method to provide specific messages.","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representing the message for a task.","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    public abstract String getMessage();","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    public abstract String getCommandWord();","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    public abstract String getExampleUsage();","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the input arguments are invalid or do not match the command requirements.","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Executes the command to perform an operation on a specific task in the task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"     * Validates the command arguments, processes the command, and updates the task list accordingly.","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand(TaskList taskList, Ui ui, Storage storage, UserKeywordArgument keywordArgument)","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-10-21"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"        validateArgument(keywordArgument.getArguments().isEmpty());","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"        validateValidInteger(!Parser.isInteger(keywordArgument.getArguments()));","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"        setIndex(keywordArgument.getArguments());","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"        validateIndexRange(index);","lastModifiedDate":"2023-11-05"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        indexCommand \u003d Parser.parseKeywordToCommand(keywordArgument);","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"        validateRecurArgument(indexCommand, taskList);","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"        processCommand(taskList, ui, indexCommand);","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"    public void validateIndexRange(int ind) throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"        boolean isOutLowerBound \u003d ind \u003c 1;","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"        boolean isOutUpperBound \u003d ind \u003e TaskList.size();","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"        validateIndexOutOfRange(isOutLowerBound || isOutUpperBound);","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"     * Validates the argument for the RecurCommand. Ensures that the task at the specified index is an Event.","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"     * @param indexCommand The command object representing the action to be performed.","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList     The list of tasks from which the task is retrieved for validation.","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command is RecurCommand and the task at the specified index is not an","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"     *                                  Event.","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"    private void validateRecurArgument(Command indexCommand, TaskList taskList) throws InvalidArgumentException {","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"        if (!(indexCommand instanceof RecurCommand)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"        boolean isEvent \u003d task.getAbbreviation() \u003d\u003d \u0027E\u0027;","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"        if (!isEvent) {","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(RecurCommand.RECUR_ERROR_MESSAGE);","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"     * Validates if the index is out of the valid range and throws an exception if it is.","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"     * @param isOutOfRange A boolean indicating if the index is out of the valid range.","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the index is out of the valid range.","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"    private void validateIndexOutOfRange(boolean isOutOfRange) throws InvalidArgumentException {","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"        if (isOutOfRange) {","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"            String errorMessage \u003d String.format(IndexBaseCommand.OUT_OF_RANGE_ERR_MESSAGE, getCommandWord());","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errorMessage, getExampleUsage()));","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"     * Validates if the input is not a valid integer and throws an exception if it is not.","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"     * @param isNotInteger A boolean indicating if the input is not a valid integer.","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the input is not a valid integer.","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"    public void validateValidInteger(boolean isNotInteger) throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"        if (isNotInteger) {","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"            String errorMessage \u003d String.format(IndexBaseCommand.INDEX_INT_ERR_MESSAGE, getCommandWord());","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errorMessage, getExampleUsage()));","lastModifiedDate":"2023-10-22"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"     * Validates if the argument is empty and throws an exception if it is.","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"chongkelv123"},"content":"     * @param isArgumentEmpty A boolean indicating if the keyword is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the argument is empty.","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"chongkelv123"},"content":"    public void validateArgument(boolean isArgumentEmpty) throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"chongkelv123"},"content":"        if (isArgumentEmpty) {","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"chongkelv123"},"content":"            String errorMessage \u003d String.format(IndexBaseCommand.DESC_ERR_MESSAGE, getCommandWord());","lastModifiedDate":"2023-10-29"},{"lineNumber":118,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errorMessage, getExampleUsage()));","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":120,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"chongkelv123"},"content":"     * Sets the index variable by parsing the input string into an integer.","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"chongkelv123"},"content":"     * @param argument The input string to be parsed and set as the index.","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"chongkelv123"},"content":"    public void setIndex(String argument) {","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"chongkelv123"},"content":"        index \u003d Integer.parseInt(argument);","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":130,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":131,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"chongkelv123"},"content":"     * Processes the command by performing specific operations on the task list.","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"chongkelv123"},"content":"     * Executes the command, updates tasks, generates response messages, and displays the response to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList The TaskList containing the tasks to be managed.","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"chongkelv123"},"content":"     * @param ui       The user interface for displaying messages to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":138,"author":{"gitId":"chongkelv123"},"content":"    public void processCommand(TaskList taskList, Ui ui, Command command) {","lastModifiedDate":"2023-11-05"},{"lineNumber":139,"author":{"gitId":"chongkelv123"},"content":"        Task task \u003d taskList.get(index - 1);","lastModifiedDate":"2023-10-29"},{"lineNumber":140,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"chongkelv123"},"content":"        IndexBaseCommand indexBaseCommand \u003d (IndexBaseCommand) command;","lastModifiedDate":"2023-11-05"},{"lineNumber":142,"author":{"gitId":"chongkelv123"},"content":"        processTaskCommand(taskList, task);","lastModifiedDate":"2023-10-29"},{"lineNumber":143,"author":{"gitId":"chongkelv123"},"content":"        messages.add(indexBaseCommand.getMessage());","lastModifiedDate":"2023-10-29"},{"lineNumber":144,"author":{"gitId":"chongkelv123"},"content":"        messages.add(task.toString());","lastModifiedDate":"2023-10-29"},{"lineNumber":145,"author":{"gitId":"chongkelv123"},"content":"        removeTaskIfIsDeleteCommand(taskList);","lastModifiedDate":"2023-10-29"},{"lineNumber":146,"author":{"gitId":"chongkelv123"},"content":"        ui.showResponseToUser(messages);","lastModifiedDate":"2023-10-29"},{"lineNumber":147,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":148,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":149,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"chongkelv123"},"content":"     * Removes a task from the task list if the current command is a DeleteCommand.","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":152,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList The task list from which the task will be removed.","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":154,"author":{"gitId":"chongkelv123"},"content":"    private void removeTaskIfIsDeleteCommand(TaskList taskList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"chongkelv123"},"content":"        if (indexCommand instanceof DeleteCommand) {","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"chongkelv123"},"content":"            taskList.remove(index - 1);","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":159,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":160,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":161,"author":{"gitId":"chongkelv123"},"content":"     * Processes a specific command for a given task.","lastModifiedDate":"2023-10-29"},{"lineNumber":162,"author":{"gitId":"chongkelv123"},"content":"     * If the command is a MarkCommand, marks the task as done or undone based on the command.","lastModifiedDate":"2023-10-29"},{"lineNumber":163,"author":{"gitId":"chongkelv123"},"content":"     * If the command is a RecurCommand, recurs the task (applicable for Event tasks).","lastModifiedDate":"2023-10-29"},{"lineNumber":164,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":165,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList The task list containing the task to be processed.","lastModifiedDate":"2023-10-29"},{"lineNumber":166,"author":{"gitId":"chongkelv123"},"content":"     * @param task     The task to be processed.","lastModifiedDate":"2023-10-29"},{"lineNumber":167,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":168,"author":{"gitId":"chongkelv123"},"content":"    private void processTaskCommand(TaskList taskList, Task task) {","lastModifiedDate":"2023-10-29"},{"lineNumber":169,"author":{"gitId":"chongkelv123"},"content":"        if (indexCommand instanceof MarkCommand) {","lastModifiedDate":"2023-10-15"},{"lineNumber":170,"author":{"gitId":"chongkelv123"},"content":"            MarkCommand markCommand \u003d (MarkCommand) indexCommand;","lastModifiedDate":"2023-10-15"},{"lineNumber":171,"author":{"gitId":"chongkelv123"},"content":"            task.markAsDone(markCommand.isMark());","lastModifiedDate":"2023-10-29"},{"lineNumber":172,"author":{"gitId":"chongkelv123"},"content":"        } else if (indexCommand instanceof RecurCommand) {","lastModifiedDate":"2023-10-29"},{"lineNumber":173,"author":{"gitId":"chongkelv123"},"content":"            RecurCommand recurCommand \u003d (RecurCommand) indexCommand;","lastModifiedDate":"2023-10-29"},{"lineNumber":174,"author":{"gitId":"chongkelv123"},"content":"            assert task instanceof Event : \"the tasks must be Event!\";","lastModifiedDate":"2023-10-29"},{"lineNumber":175,"author":{"gitId":"chongkelv123"},"content":"            recurCommand.recur(task, taskList);","lastModifiedDate":"2023-10-29"},{"lineNumber":176,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":177,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":178,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":179,"author":{"gitId":"chongkelv123"},"content":"    public int getIndex() {","lastModifiedDate":"2023-11-05"},{"lineNumber":180,"author":{"gitId":"chongkelv123"},"content":"        return index;","lastModifiedDate":"2023-11-05"},{"lineNumber":181,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":182,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":182}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":" * The ListCommand class represents a command that lists all tasks.","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD;","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"    public static final String TASKS_IN_THE_LIST \u003d \"Here are the tasks in your list:\";","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_LIST_IS_EMPTY \u003d \"Your list is empty. Let\u0027s start adding some items! :)\";","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    public ListCommand() {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList        The TaskList containing the tasks to be displayed.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"     * @param ui              The user interface for displaying messages and tasks to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"     * @param storage         The storage object used to store and load tasks.","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The parsed user input containing the keyword and arguments.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Executes the List command to display the tasks in the task list to the user.","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     * Validates the command arguments and shows the list of tasks to the user through the user interface.","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand(TaskList taskList, Ui ui, Storage storage, UserKeywordArgument keywordArgument)","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"        validateNonEmptyKeywordArgument(keywordArgument, new ListCommand());","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        if (TaskList.size() \u003d\u003d 0) {","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"            ui.showResponseToUser(MESSAGE_LIST_IS_EMPTY);","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"            return;","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"        assert !taskList.getTasks().isEmpty() : \"The task list cannot be empty!\";","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d taskList.getTasks();","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"        messages.add(TASKS_IN_THE_LIST);","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"        for (int i \u003d 0; i \u003c\u003d tasks.size() - 1; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"            messages.add(String.format(\"%d.%s\", i + 1, tasks.get(i).toString()));","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"        ui.showResponseToUser(messages);","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":61}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":" * The MarkCommand class represents a command that marks a task at a specific index as done.","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"public class MarkCommand extends IndexBaseCommand {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"mark\";","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"    public static final String MARK_TASK_DONE \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"    protected boolean isMark;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    public MarkCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"        this.isMark \u003d true;","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representing the message for marking a task as done.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Retrieves the message indicating that a task has been marked as done.","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    public String getMessage() {","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"        return MARK_TASK_DONE;","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-21"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"     * Checks if a task should be marked as done.","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"     * @return \u0027true\u0027 if the task should be marked as done, \u0027false\u0027 otherwise.","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    public boolean isMark() {","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"        return isMark;","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":44}},{"path":"src/main/java/duke/command/RecurCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Event;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import java.time.Period;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":" * The RecurCommand class represents a command that sets a task at a specific index as recurring.","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"public class RecurCommand extends IndexBaseCommand {","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    private static final Period RECURRENCE \u003d Period.ofWeeks(1);","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    private static final int THREE_MONTH_IN_WEEK \u003d 24;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"recur\";","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    public static final String RECUR_ERROR_MESSAGE \u003d \"The RECUR command is only applicable to event tasks!\";","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    public static final String RECURRING_EVENT_MESSAGE \u003d \"Great! I\u0027ve scheduled this event to repeat every week for \" +","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"            \"the next three months.\";","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     * Generates recurring events based on the given event task and adds them to the task list.","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"     * @param task     The original event task to recur.","lastModifiedDate":"2023-10-29"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList The task list to which the recurring events will be added.","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    public void recur(Task task, TaskList taskList) {","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"        Event event \u003d (Event) task;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"        String description \u003d event.getDukeDescription();","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"        from \u003d event.getFromDateTime();","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"        to \u003d event.getToDateTime();","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime tmpFrom \u003d from;","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime tmpTo \u003d to;","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        for (int i \u003d 0; i \u003c THREE_MONTH_IN_WEEK; i++) {","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"            tmpFrom \u003d tmpFrom.plus(RECURRENCE);","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"            tmpTo \u003d tmpTo.plus(RECURRENCE);","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"            assert !description.isEmpty() : \"The description cannot be empty!\";","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"            Event addEvent \u003d new Event(false, description, tmpFrom, tmpTo);","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"            taskList.add(addEvent);","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representing recurring event message.","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Retrieves the message indicating that a event has been recurring.","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"    public String getMessage() {","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        return RECURRING_EVENT_MESSAGE;","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"chongkelv123":65}},{"path":"src/main/java/duke/command/TodoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":" * The TodoCommand class represents a command that handles to-do tasks.","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"public class TodoCommand extends Command {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"todo\";","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" borrow book\";","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"     * @param tasks           The TaskList where the new Todo task will be added.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"     * @param ui              The user interface for displaying messages to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"     * @param storage         The storage object used to store and load tasks","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The parsed user input containing the keyword and task description.","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Executes the Todo command to create and add a new Todo task to the task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     * Validates the command arguments, creates a Todo task, executes the task, and adds it to the task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand(TaskList tasks, Ui ui, Storage storage, UserKeywordArgument keywordArgument)","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"        validateKeywordArgument(keywordArgument, new TodoCommand());","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"        Todo todo \u003d new Todo(keywordArgument.getArguments());","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"        todo.execute();","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"        tasks.add(todo);","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-22"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-22"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":45}},{"path":"src/main/java/duke/command/UnMarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":" * The UnMarkCommand class represents a command that unmarks a previously marked task.","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"public class UnMarkCommand extends MarkCommand {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"unmark\";","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"    public static final String UNMARK_THE_TASK \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"    public UnMarkCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"        isMark \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representing the message for unmarking a task.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Retrieves the message indicating that a task has been unmarked (marked as not done).","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    public String getMessage() {","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"        return UNMARK_THE_TASK;","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-10-22"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":34}},{"path":"src/main/java/duke/command/UpdateCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import java.util.Objects;","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":" * The `UpdateCommand` class represents a command to update an item by its index in a list.","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"public class UpdateCommand extends IndexBaseCommand {","lastModifiedDate":"2023-11-05"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    private String description;","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    private char abbreviation;","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    private String key;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    private LocalDateTime by;","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    private LocalDateTime from;","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    private LocalDateTime to;","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    public static final String COMMAND_WORD \u003d \"update\";","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    public static final String EXAMPLE_USAGE \u003d \"Example of usage:\\n\" + COMMAND_WORD + \" 1 /desc return book \\t#for \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"            \"todo, deadline, event tasks#\\n\"","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"            + COMMAND_WORD + \" 1 /by 23/02/2023 \\t#only for deadline task#\\n\" + COMMAND_WORD + \" 1 /from 23/11/2023 \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"            \"0300 \\t#only for event task#\\n\"","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"            + COMMAND_WORD + \" 1 /to 23/11/2023 0400 \\t#only for event task#\";","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    public static final String UPDATE_ERROR_ARGUMENT \u003d \"OOPS!!! The argument format must adhere to the correct \" +","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"            \"pattern!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    public static final String UPDATE_ERROR_BY \u003d \"OOPS!!! The /by keyword is only applicable to deadline tasks!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    public static final String UPDATE_ERROR_FROM \u003d \"OOPS!!! The /from keyword is only applicable to event tasks!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    public static final String UPDATE_ERROR_TO \u003d \"OOPS!!! The /to keyword is only applicable to event tasks!\";","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    public static final String UPDATE_TASK_MESSAGE \u003d \"Wonderful! I\u0027ve updated this task with the latest changes.\";","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"    public static final String DESC \u003d \"desc\";","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    public static final String FROM \u003d \"from\";","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"    public static final String TO \u003d \"to\";","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    public static final String BY \u003d \"by\";","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    private static final Pattern INDEX_ARGUMENT_FORMAT \u003d Pattern.compile(\"(?\u003cindex\u003e\\\\d+)\\\\s+/(?\u003ckey\u003edesc|by|from|to)\" +","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"            \"\\\\s+(?\u003cargument\u003e\\\\w.*)\");","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"     * Validates a user input argument against a specified format.","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The UserKeywordArgument object containing the user input argument.","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList        The TaskList object used for retrieving task information.","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"     * @return True if the argument is valid, false otherwise.","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the argument is invalid or does not match the expected format.","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    public boolean isValidArgument(UserKeywordArgument keywordArgument, TaskList taskList) throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"        String indexArgument \u003d keywordArgument.getArguments();","lastModifiedDate":"2023-11-05"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"        validateArgument(isNullOrEmpty(indexArgument));","lastModifiedDate":"2023-11-05"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"        final Matcher argumentMatcher \u003d INDEX_ARGUMENT_FORMAT.matcher(indexArgument);","lastModifiedDate":"2023-11-05"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"        if (!argumentMatcher.matches()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(UPDATE_ERROR_ARGUMENT, getExampleUsage()));","lastModifiedDate":"2023-11-05"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"        setIndex(argumentMatcher.group(\"index\"));","lastModifiedDate":"2023-11-05"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"        key \u003d argumentMatcher.group(\"key\");","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"        String argument \u003d argumentMatcher.group(\"argument\");","lastModifiedDate":"2023-11-05"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"        abbreviation \u003d taskList.getAbbreviation(getIndex());","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"        return isValidateArgumentByType(argument);","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"     * Validates the user input argument based on the task type abbreviation.","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"     * @param argument The user input argument to validate.","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"     * @return True if the argument is valid, false otherwise.","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the argument is invalid for the corresponding task type.","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"    private boolean isValidateArgumentByType(String argument) throws InvalidArgumentException {","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"        switch (abbreviation) {","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"            return isValidTodoArgument(key, argument);","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"            return isValidDeadlineArgument(key, argument);","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-11-05"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"            return isValidEventArgument(key, argument);","lastModifiedDate":"2023-11-05"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"        default:","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"            return false;","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"     * Validates user input arguments for an Event task.","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"     * @param key      The argument key indicating the type of information being validated","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"     * @param argument The user input argument to validate.","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"     * @return True if the argument is valid, false otherwise.","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the argument is invalid for the corresponding key.","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"    private boolean isValidEventArgument(String key, String argument) throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"        if (Objects.equals(key, DESC)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"            description \u003d argument;","lastModifiedDate":"2023-11-05"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"            return true;","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"        if (Objects.equals(key, BY)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(UPDATE_ERROR_BY);","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"        if (Objects.equals(key, FROM)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"            from \u003d parseDateTime(argument, key);","lastModifiedDate":"2023-11-06"},{"lineNumber":112,"author":{"gitId":"chongkelv123"},"content":"        } else if (Objects.equals(key, TO)) {","lastModifiedDate":"2023-11-06"},{"lineNumber":113,"author":{"gitId":"chongkelv123"},"content":"            to \u003d parseDateTime(argument, key);","lastModifiedDate":"2023-11-06"},{"lineNumber":114,"author":{"gitId":"chongkelv123"},"content":"        } else {","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"chongkelv123"},"content":"            return false;","lastModifiedDate":"2023-11-06"},{"lineNumber":116,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"chongkelv123"},"content":"        return true;","lastModifiedDate":"2023-11-06"},{"lineNumber":118,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":119,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":120,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":121,"author":{"gitId":"chongkelv123"},"content":"     * Parses a user input argument representing a date and time and constructs a LocalDateTime object.","lastModifiedDate":"2023-11-06"},{"lineNumber":122,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":123,"author":{"gitId":"chongkelv123"},"content":"     * @param argument The user input argument representing a date and time to parse.","lastModifiedDate":"2023-11-06"},{"lineNumber":124,"author":{"gitId":"chongkelv123"},"content":"     * @param key      The key indicating the type of information being parsed","lastModifiedDate":"2023-11-06"},{"lineNumber":125,"author":{"gitId":"chongkelv123"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-11-06"},{"lineNumber":126,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the input argument does not match the expected date and time format.","lastModifiedDate":"2023-11-06"},{"lineNumber":127,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":128,"author":{"gitId":"chongkelv123"},"content":"    private LocalDateTime parseDateTime(String argument, String key) throws InvalidArgumentException {","lastModifiedDate":"2023-11-06"},{"lineNumber":129,"author":{"gitId":"chongkelv123"},"content":"        final Matcher dateMatcher \u003d DATE_TIME_ARG_FORMAT.matcher(argument);","lastModifiedDate":"2023-11-06"},{"lineNumber":130,"author":{"gitId":"chongkelv123"},"content":"        validateDateMatcher(dateMatcher, new UpdateCommand(), key + \" in\");","lastModifiedDate":"2023-11-06"},{"lineNumber":131,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":132,"author":{"gitId":"chongkelv123"},"content":"        final Matcher timeMatcher \u003d TIME_ARG_FORMAT.matcher(dateMatcher.group(\"timeArgument\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":133,"author":{"gitId":"chongkelv123"},"content":"        validateTimeMatcher(timeMatcher, new UpdateCommand(), key + \" in\");","lastModifiedDate":"2023-11-06"},{"lineNumber":134,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":135,"author":{"gitId":"chongkelv123"},"content":"        return Parser.constructDateTime(dateMatcher, timeMatcher);","lastModifiedDate":"2023-11-06"},{"lineNumber":136,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":137,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":138,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":139,"author":{"gitId":"chongkelv123"},"content":"     * Validates user input arguments for a Deadline task.","lastModifiedDate":"2023-11-06"},{"lineNumber":140,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":141,"author":{"gitId":"chongkelv123"},"content":"     * @param key      The argument key indicating the type of information being validated.","lastModifiedDate":"2023-11-06"},{"lineNumber":142,"author":{"gitId":"chongkelv123"},"content":"     * @param argument The user input argument to validate.","lastModifiedDate":"2023-11-06"},{"lineNumber":143,"author":{"gitId":"chongkelv123"},"content":"     * @return True if the argument is valid, false otherwise.","lastModifiedDate":"2023-11-06"},{"lineNumber":144,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the argument is invalid for the corresponding key.","lastModifiedDate":"2023-11-06"},{"lineNumber":145,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":146,"author":{"gitId":"chongkelv123"},"content":"    private boolean isValidDeadlineArgument(String key, String argument) throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":147,"author":{"gitId":"chongkelv123"},"content":"        if (Objects.equals(key, DESC)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":148,"author":{"gitId":"chongkelv123"},"content":"            description \u003d argument;","lastModifiedDate":"2023-11-05"},{"lineNumber":149,"author":{"gitId":"chongkelv123"},"content":"            return true;","lastModifiedDate":"2023-11-05"},{"lineNumber":150,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":151,"author":{"gitId":"chongkelv123"},"content":"        if (Objects.equals(key, FROM)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":152,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(UPDATE_ERROR_FROM);","lastModifiedDate":"2023-11-05"},{"lineNumber":153,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":154,"author":{"gitId":"chongkelv123"},"content":"        if (Objects.equals(key, TO)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":155,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(UPDATE_ERROR_TO);","lastModifiedDate":"2023-11-05"},{"lineNumber":156,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":157,"author":{"gitId":"chongkelv123"},"content":"        final Matcher dateMatcher \u003d DATE_ARG_FORMAT.matcher(argument);","lastModifiedDate":"2023-11-05"},{"lineNumber":158,"author":{"gitId":"chongkelv123"},"content":"        validateDateMatcher(dateMatcher, new UpdateCommand(), \"\");","lastModifiedDate":"2023-11-05"},{"lineNumber":159,"author":{"gitId":"chongkelv123"},"content":"        if (dateMatcher.matches()) {","lastModifiedDate":"2023-11-05"},{"lineNumber":160,"author":{"gitId":"chongkelv123"},"content":"            by \u003d Parser.constructDateTime(dateMatcher);","lastModifiedDate":"2023-11-05"},{"lineNumber":161,"author":{"gitId":"chongkelv123"},"content":"            return true;","lastModifiedDate":"2023-11-06"},{"lineNumber":162,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":163,"author":{"gitId":"chongkelv123"},"content":"        return false;","lastModifiedDate":"2023-11-06"},{"lineNumber":164,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":165,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":166,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":167,"author":{"gitId":"chongkelv123"},"content":"     * Validates user input arguments for a Todo task.","lastModifiedDate":"2023-11-06"},{"lineNumber":168,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":169,"author":{"gitId":"chongkelv123"},"content":"     * @param key      The argument key indicating the type of information being validated","lastModifiedDate":"2023-11-06"},{"lineNumber":170,"author":{"gitId":"chongkelv123"},"content":"     * @param argument The user input argument to validate.","lastModifiedDate":"2023-11-06"},{"lineNumber":171,"author":{"gitId":"chongkelv123"},"content":"     * @return True if the argument is valid, false otherwise.","lastModifiedDate":"2023-11-06"},{"lineNumber":172,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the argument is invalid for the corresponding key.","lastModifiedDate":"2023-11-06"},{"lineNumber":173,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":174,"author":{"gitId":"chongkelv123"},"content":"    private boolean isValidTodoArgument(String key, String argument) throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":175,"author":{"gitId":"chongkelv123"},"content":"        switch (key) {","lastModifiedDate":"2023-11-05"},{"lineNumber":176,"author":{"gitId":"chongkelv123"},"content":"        case BY:","lastModifiedDate":"2023-11-05"},{"lineNumber":177,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(UPDATE_ERROR_BY);","lastModifiedDate":"2023-11-05"},{"lineNumber":178,"author":{"gitId":"chongkelv123"},"content":"        case FROM:","lastModifiedDate":"2023-11-05"},{"lineNumber":179,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(UPDATE_ERROR_FROM);","lastModifiedDate":"2023-11-05"},{"lineNumber":180,"author":{"gitId":"chongkelv123"},"content":"        case TO:","lastModifiedDate":"2023-11-05"},{"lineNumber":181,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(UPDATE_ERROR_TO);","lastModifiedDate":"2023-11-05"},{"lineNumber":182,"author":{"gitId":"chongkelv123"},"content":"        default:","lastModifiedDate":"2023-11-05"},{"lineNumber":183,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":184,"author":{"gitId":"chongkelv123"},"content":"        description \u003d argument;","lastModifiedDate":"2023-11-05"},{"lineNumber":185,"author":{"gitId":"chongkelv123"},"content":"        return Objects.equals(key, DESC);","lastModifiedDate":"2023-11-05"},{"lineNumber":186,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":187,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":188,"author":{"gitId":"chongkelv123"},"content":"    private boolean isNullOrEmpty(String str) {","lastModifiedDate":"2023-11-05"},{"lineNumber":189,"author":{"gitId":"chongkelv123"},"content":"        return str \u003d\u003d null || str.isEmpty();","lastModifiedDate":"2023-11-05"},{"lineNumber":190,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":191,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":192,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":193,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the input arguments are invalid or do not match the command requirements.","lastModifiedDate":"2023-11-06"},{"lineNumber":194,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Executes the specified command based on the user input arguments and updates the task list","lastModifiedDate":"2023-11-06"},{"lineNumber":195,"author":{"gitId":"chongkelv123"},"content":"     * accordingly.","lastModifiedDate":"2023-11-06"},{"lineNumber":196,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":197,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":198,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand(TaskList taskList, Ui ui, Storage storage, UserKeywordArgument keywordArgument)","lastModifiedDate":"2023-11-05"},{"lineNumber":199,"author":{"gitId":"chongkelv123"},"content":"            throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":200,"author":{"gitId":"chongkelv123"},"content":"        if (!isValidArgument(keywordArgument, taskList)) {","lastModifiedDate":"2023-11-05"},{"lineNumber":201,"author":{"gitId":"chongkelv123"},"content":"            return;","lastModifiedDate":"2023-11-05"},{"lineNumber":202,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":203,"author":{"gitId":"chongkelv123"},"content":"        validateIndexRange(getIndex());","lastModifiedDate":"2023-11-05"},{"lineNumber":204,"author":{"gitId":"chongkelv123"},"content":"        processCommand(taskList);","lastModifiedDate":"2023-11-06"},{"lineNumber":205,"author":{"gitId":"chongkelv123"},"content":"        Command command \u003d Parser.parseKeywordToCommand(keywordArgument);","lastModifiedDate":"2023-11-06"},{"lineNumber":206,"author":{"gitId":"chongkelv123"},"content":"        processCommand(taskList, ui, command);","lastModifiedDate":"2023-11-06"},{"lineNumber":207,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":208,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":209,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":210,"author":{"gitId":"chongkelv123"},"content":"     * Processes the command based on the user input arguments and updates the corresponding task in the task list.","lastModifiedDate":"2023-11-06"},{"lineNumber":211,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":212,"author":{"gitId":"chongkelv123"},"content":"     * @param taskList The TaskList object containing the list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":213,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the user input arguments are invalid or if the command execution fails.","lastModifiedDate":"2023-11-06"},{"lineNumber":214,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":215,"author":{"gitId":"chongkelv123"},"content":"    private void processCommand(TaskList taskList) throws InvalidArgumentException {","lastModifiedDate":"2023-11-06"},{"lineNumber":216,"author":{"gitId":"chongkelv123"},"content":"        switch (key) {","lastModifiedDate":"2023-11-05"},{"lineNumber":217,"author":{"gitId":"chongkelv123"},"content":"        case BY:","lastModifiedDate":"2023-11-05"},{"lineNumber":218,"author":{"gitId":"chongkelv123"},"content":"            taskList.updateDeadlineBy(getIndex(), by);","lastModifiedDate":"2023-11-06"},{"lineNumber":219,"author":{"gitId":"chongkelv123"},"content":"            break;","lastModifiedDate":"2023-11-06"},{"lineNumber":220,"author":{"gitId":"chongkelv123"},"content":"        case FROM:","lastModifiedDate":"2023-11-05"},{"lineNumber":221,"author":{"gitId":"chongkelv123"},"content":"            taskList.updateEventFrom(getIndex(), from);","lastModifiedDate":"2023-11-06"},{"lineNumber":222,"author":{"gitId":"chongkelv123"},"content":"            break;","lastModifiedDate":"2023-11-06"},{"lineNumber":223,"author":{"gitId":"chongkelv123"},"content":"        case TO:","lastModifiedDate":"2023-11-05"},{"lineNumber":224,"author":{"gitId":"chongkelv123"},"content":"            taskList.updateEventTo(getIndex(), to);","lastModifiedDate":"2023-11-06"},{"lineNumber":225,"author":{"gitId":"chongkelv123"},"content":"            break;","lastModifiedDate":"2023-11-06"},{"lineNumber":226,"author":{"gitId":"chongkelv123"},"content":"        default:","lastModifiedDate":"2023-11-05"},{"lineNumber":227,"author":{"gitId":"chongkelv123"},"content":"            taskList.updateDescription(getIndex(), description);","lastModifiedDate":"2023-11-05"},{"lineNumber":228,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":229,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":230,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":231,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":232,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representing the message for a task.","lastModifiedDate":"2023-11-05"},{"lineNumber":233,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Retrieves the message indicating that a task has been updated.","lastModifiedDate":"2023-11-05"},{"lineNumber":234,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":235,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":236,"author":{"gitId":"chongkelv123"},"content":"    public String getMessage() {","lastModifiedDate":"2023-11-05"},{"lineNumber":237,"author":{"gitId":"chongkelv123"},"content":"        return UPDATE_TASK_MESSAGE;","lastModifiedDate":"2023-11-05"},{"lineNumber":238,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":239,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":240,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":241,"author":{"gitId":"chongkelv123"},"content":"    public String getCommandWord() {","lastModifiedDate":"2023-11-05"},{"lineNumber":242,"author":{"gitId":"chongkelv123"},"content":"        return COMMAND_WORD;","lastModifiedDate":"2023-11-05"},{"lineNumber":243,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":244,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":245,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":246,"author":{"gitId":"chongkelv123"},"content":"    public String getExampleUsage() {","lastModifiedDate":"2023-11-05"},{"lineNumber":247,"author":{"gitId":"chongkelv123"},"content":"        return EXAMPLE_USAGE;","lastModifiedDate":"2023-11-05"},{"lineNumber":248,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":249,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"chongkelv123":249}},{"path":"src/main/java/duke/common/Message.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.common;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"public class Message {","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_GOODBYE \u003d \"Bye. Hope to see you again soon!\";","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_I_DONT_KNOW \u003d \"OOPS!!! I\u0027m sorry, but I\u0027m not sure what you\u0027re asking :-(\";","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_FILE_FORMAT_INVALID \u003d \"Oops, looks like there\u0027s a problem with the data file \" +","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"            \"duke.txt. \\n\" +","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"            \"It seems that some of the content is not in the right format.\";","lastModifiedDate":"2023-10-21"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_MAKE_NEW_INSTANCE \u003d \"No worries, I\u0027ll just make a new one for you right now.\";","lastModifiedDate":"2023-10-21"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_FILE_NOT_EXIST \u003d \"Oops, there\u0027s no duke.txt in the data folder.\";","lastModifiedDate":"2023-10-21"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"    public static final String MESSAGE_GOT_IT \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"     * Concatenates an array of strings (Varargs) with newline characters separating them.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"     * @param messages The strings to be concatenated.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"     * @return A single string obtained by concatenating input strings, separated by newline characters.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public static String concat(String... messages) {","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"        StringBuilder stringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"        stringBuilder.append(messages[0]);","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"        for (int i \u003d 1; i \u003c messages.length; i++) {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"            stringBuilder.append(\"\\n\" + messages[i]);","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"        return stringBuilder.toString();","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":28}},{"path":"src/main/java/duke/data/UserKeywordArgument.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.data;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":" * Responsible for managing user-provided keyword arguments.","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"public class UserKeywordArgument {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"    private String keyword;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"    private String arguments;","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a new UserKeywordArgument object by parsing the user input to extract a keyword and its arguments.","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"     * @param userInput The user input string containing keyword and arguments.","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    public UserKeywordArgument(String userInput) {","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"        this.keyword \u003d Parser.parseKeyword(userInput);","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"        this.arguments \u003d Parser.parseArgument(userInput);","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"     * Gets the keyword associated with the user input.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     * @return The keyword extracted from the user input.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    public String getKeyword() {","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"        return keyword;","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     * Gets the arguments associated with the user input.","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"     * @return The arguments extracted from the user input.","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    public String getArguments() {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"        return arguments;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":39}},{"path":"src/main/java/duke/data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"D|1|return book|22/02/2023","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"D|0|borrow book Yay!|02/12/2023","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"E|1|project meeting|22/10/2023 0330|22/10/2023 0400","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"D|0|return book|06/11/2023","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"E|1|weekly meeting|22/10/2023 0346|22/10/2023 0440","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"E|0|small group meeting|06/11/2023 2015|06/11/2023 2100","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"T|1|borrow book","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"T|0|complete the report","lastModifiedDate":"2023-11-07"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"D|0|submit report|19/11/2023","lastModifiedDate":"2023-11-07"}],"authorContributionMap":{"chongkelv123":9}},{"path":"src/main/java/duke/data/duke1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"D|1|return book|22/02/2023","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"D|0|return book|02/12/2023","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"E|1|project meeting|22/10/2023 0330|22/10/2023 0400","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"D|0|return book|22/10/2023","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"E|1|project closing|22/10/2023 0346|22/10/2023 0440","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"E|1|project meeting|22/10/2023 1551|22/10/2023 1640","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"D|0|return book|27/10/2018","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"chongkelv123":7}},{"path":"src/main/java/duke/exception/FileStorageException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.exception;","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":" * The FileStorageException class represents exceptions specific to file storage operations.","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"public class FileStorageException extends Exception {","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a new FileStorageException object with the specified error message.","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"     * @param message A descriptive message explaining the exception.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    public FileStorageException(String message) {","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"        super(message);","lastModifiedDate":"2023-10-18"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"chongkelv123":15}},{"path":"src/main/java/duke/exception/InvalidArgumentException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.exception;","lastModifiedDate":"2023-10-21"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":" * Represents exceptions specific to invalid arguments passed to methods.","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"public class InvalidArgumentException extends Exception {","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a new InvalidArgumentException object with the specified error message.","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"     * @param message A descriptive message explaining the exception.","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    public InvalidArgumentException(String message) {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"        super(message);","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-21"}],"authorContributionMap":{"chongkelv123":15}},{"path":"src/main/java/duke/parser/KeywordTypes.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.parser;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.command.*;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"public enum KeywordTypes {","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"    BYE {","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"            return new ExitCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    LIST {","lastModifiedDate":"2023-10-15"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"            return new ListCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"    MARK {","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"            return new MarkCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    UNMARK {","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"            return new UnMarkCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    TODO {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"            return new TodoCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    DEADLINE {","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"            return new DeadlineCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    EVENT {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"            return new EventCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"    DELETE {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"            return new DeleteCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    DPRINT {","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"            return new DatePrintCommand();","lastModifiedDate":"2023-10-22"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"    RECUR {","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"            return new RecurCommand();","lastModifiedDate":"2023-10-29"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-10-29"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"    FIND {","lastModifiedDate":"2023-10-29"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"            return new FindCommand();","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"    },","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"    UPDATE {","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"        @Override","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"        public Command createCommand() {","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"            return new UpdateCommand();","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"    };","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"    public abstract Command createCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":81}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.parser;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.command.Command;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import java.util.Calendar;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":" * The Parser class is responsible for interpreting user input.","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":" * It provides methods for parsing user input into commands, tasks, or other data structures used by the application.","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"public class Parser {","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"    public static String MESSAGE_INCORRECT_MONTH \u003d \"Invalid month: %s . Month must be between 1 and 12.\";","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public static String MESSAGE_INCORRECT_DAY \u003d \"Invalid day: %s for month %s and year %s\";","lastModifiedDate":"2023-11-07"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    public static String MESSAGE_INCORRECT_HOUR \u003d \"Invalid hour: %s . Hour must be between 0 and 23.\";","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    public static String MESSAGE_INCORRECT_MINUTE \u003d \"Invalid minute: %s . Minute must be between 0 and 59.\";","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    public static int MAX_MONTH \u003d 12;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    public static int MIN_MONTH \u003d 1;","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    public static int MAX_HOUR \u003d 23;","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    public static int MAX_MINUTE \u003d 59;","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    public static int MIN_HOUR_MINUTE \u003d 0;","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"     * Parses a user keyword argument and returns the corresponding Command object.","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     * @param keywordArgument The user keyword argument to be parsed.","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     * @return The Command object corresponding to the parsed keyword argument, or null if parsing fails.","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    public static Command parseKeywordToCommand(UserKeywordArgument keywordArgument) {","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"            KeywordTypes key \u003d KeywordTypes.valueOf(keywordArgument.getKeyword().toUpperCase());","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"            return key.createCommand();","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"            Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"            ui.showResponseToUser(Message.MESSAGE_I_DONT_KNOW);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"            return null;","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"     * Parses a user input string and returns the first word as the parsed keyword.","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     * @param userInput The user input string to be parsed.","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     * @return The first word of the input string, representing the parsed keyword.","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"    public static String parseKeyword(String userInput) {","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"        String[] inputs \u003d userInput.split(\" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        return inputs[0];","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"     * Parses a user input string and returns the argument portion after the first word.","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"     * @param userInput The user input string to be parsed.","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"     * @return The argument portion of the input string, excluding the first word.","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"    public static String parseArgument(String userInput) {","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"        String[] inputs \u003d userInput.split(\" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"        for (int i \u003d 1; i \u003c inputs.length; i++) {","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"            sb.append(inputs[i]);","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"            sb.append(\" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"        return sb.toString().trim();","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"     * Parses a string and returns a boolean value.","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"     * @param string The input string to be parsed.","lastModifiedDate":"2023-10-23"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"     * @return true if the input string equals \"1\", indicating a true boolean value, false otherwise.","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"    public static boolean parseStringToBoolean(String string) {","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"        return string.equals(\"1\");","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"     * Checks if a given string can be parsed into an integer.","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"     * @param s The input string to be checked.","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"     * @return true if the input string can be parsed into an integer, false otherwise.","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"    public static boolean isInteger(String s) {","lastModifiedDate":"2023-10-21"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-10-21"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"            Integer.parseInt(s);","lastModifiedDate":"2023-10-21"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"            return true;","lastModifiedDate":"2023-10-21"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-21"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"            return false;","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-21"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-21"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"     * Constructs and returns a LocalDateTime object using matchers for date and time components.","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"     * @param dateMatcher The Matcher object for matching date components (year, month, day).","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"     * @param timeMatcher The Matcher object for matching time components (hour, minute).","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"     * @return The constructed LocalDateTime object based on the matched date and time components.","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-28"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-28"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"    public static LocalDateTime constructDateTime(Matcher dateMatcher, Matcher timeMatcher) throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"        final int year \u003d Integer.parseInt(dateMatcher.group(\"year\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"        final int month \u003d Integer.parseInt(dateMatcher.group(\"month\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"        final int day \u003d Integer.parseInt(dateMatcher.group(\"day\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"        final int hour \u003d Integer.parseInt(timeMatcher.group(\"hour\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"chongkelv123"},"content":"        final int minute \u003d Integer.parseInt(timeMatcher.group(\"minute\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"chongkelv123"},"content":"        dateValidation(year, month, day);","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"chongkelv123"},"content":"        timeValidation(hour, minute);","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"chongkelv123"},"content":"        return LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":118,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"chongkelv123"},"content":"     * Constructs and returns a LocalDateTime object using a matcher for date components with time set to midnight","lastModifiedDate":"2023-10-24"},{"lineNumber":120,"author":{"gitId":"chongkelv123"},"content":"     * (00:00).","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"chongkelv123"},"content":"     * @param dateMatcher The Matcher object for matching date components (year, month, day).","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"chongkelv123"},"content":"     * @return The constructed LocalDateTime object with date components and time set to midnight.","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-28"},{"lineNumber":125,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-28"},{"lineNumber":126,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"chongkelv123"},"content":"    public static LocalDateTime constructDateTime(Matcher dateMatcher) throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":128,"author":{"gitId":"chongkelv123"},"content":"        final int year \u003d Integer.parseInt(dateMatcher.group(\"year\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":129,"author":{"gitId":"chongkelv123"},"content":"        final int month \u003d Integer.parseInt(dateMatcher.group(\"month\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":130,"author":{"gitId":"chongkelv123"},"content":"        final int day \u003d Integer.parseInt(dateMatcher.group(\"day\"));","lastModifiedDate":"2023-10-22"},{"lineNumber":131,"author":{"gitId":"chongkelv123"},"content":"        final int hour \u003d 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":132,"author":{"gitId":"chongkelv123"},"content":"        final int minute \u003d 0;","lastModifiedDate":"2023-10-22"},{"lineNumber":133,"author":{"gitId":"chongkelv123"},"content":"        dateValidation(year, month, day);","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"chongkelv123"},"content":"        return LocalDateTime.of(year, month, day, hour, minute);","lastModifiedDate":"2023-10-22"},{"lineNumber":135,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":136,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"chongkelv123"},"content":"     * Validates the given year, month, and day values, ensuring they form a valid date.","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"chongkelv123"},"content":"     * @param year  The year to validate.","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"chongkelv123"},"content":"     * @param month The month to validate.","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"chongkelv123"},"content":"     * @param day   The day to validate.","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the month or day is outside the acceptable range for the given year.","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"chongkelv123"},"content":"    public static void dateValidation(int year, int month, int day) throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"chongkelv123"},"content":"        if (month \u003c MIN_MONTH || month \u003e MAX_MONTH) {","lastModifiedDate":"2023-11-07"},{"lineNumber":147,"author":{"gitId":"chongkelv123"},"content":"            String errMsg \u003d String.format(MESSAGE_INCORRECT_MONTH, month);","lastModifiedDate":"2023-11-07"},{"lineNumber":148,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errMsg, Command.DATE_FORMAT_MESSAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":149,"author":{"gitId":"chongkelv123"},"content":"        } else if (day \u003c 1 || day \u003e getMaxDayOfMonth(year, month)) {","lastModifiedDate":"2023-11-07"},{"lineNumber":150,"author":{"gitId":"chongkelv123"},"content":"            String errMsg \u003d String.format(MESSAGE_INCORRECT_DAY, day, month, year);","lastModifiedDate":"2023-11-07"},{"lineNumber":151,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errMsg, Command.DATE_FORMAT_MESSAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":152,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":153,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":154,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":155,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":156,"author":{"gitId":"chongkelv123"},"content":"     * Validates the given hour and minute values, ensuring they are within the acceptable range.","lastModifiedDate":"2023-10-28"},{"lineNumber":157,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":158,"author":{"gitId":"chongkelv123"},"content":"     * @param hour   The hour to validate.","lastModifiedDate":"2023-10-28"},{"lineNumber":159,"author":{"gitId":"chongkelv123"},"content":"     * @param minute The minute to validate.","lastModifiedDate":"2023-10-28"},{"lineNumber":160,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the hour or minute is outside the acceptable range.","lastModifiedDate":"2023-10-28"},{"lineNumber":161,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":162,"author":{"gitId":"chongkelv123"},"content":"    public static void timeValidation(int hour, int minute) throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":163,"author":{"gitId":"chongkelv123"},"content":"        if (hour \u003c MIN_HOUR_MINUTE || hour \u003e MAX_HOUR) {","lastModifiedDate":"2023-11-07"},{"lineNumber":164,"author":{"gitId":"chongkelv123"},"content":"            String errMsg \u003d String.format(MESSAGE_INCORRECT_HOUR, hour);","lastModifiedDate":"2023-11-07"},{"lineNumber":165,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errMsg, Command.TIME_FORMAT_MESSAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":166,"author":{"gitId":"chongkelv123"},"content":"        } else if (minute \u003c MIN_HOUR_MINUTE || minute \u003e MAX_MINUTE) {","lastModifiedDate":"2023-11-07"},{"lineNumber":167,"author":{"gitId":"chongkelv123"},"content":"            String errMsg \u003d String.format(MESSAGE_INCORRECT_MINUTE, minute);","lastModifiedDate":"2023-11-07"},{"lineNumber":168,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(Message.concat(errMsg, Command.TIME_FORMAT_MESSAGE));","lastModifiedDate":"2023-11-07"},{"lineNumber":169,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":170,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":171,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":172,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":173,"author":{"gitId":"chongkelv123"},"content":"     * Gets the maximum number of days in the specified month of the given year.","lastModifiedDate":"2023-10-28"},{"lineNumber":174,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":175,"author":{"gitId":"chongkelv123"},"content":"     * @param year  The year for which to determine the maximum days.","lastModifiedDate":"2023-10-28"},{"lineNumber":176,"author":{"gitId":"chongkelv123"},"content":"     * @param month The month for which to determine the maximum days (1-based index).","lastModifiedDate":"2023-10-28"},{"lineNumber":177,"author":{"gitId":"chongkelv123"},"content":"     * @return The maximum number of days in the specified month of the given year.","lastModifiedDate":"2023-10-28"},{"lineNumber":178,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":179,"author":{"gitId":"chongkelv123"},"content":"    public static int getMaxDayOfMonth(int year, int month) {","lastModifiedDate":"2023-10-28"},{"lineNumber":180,"author":{"gitId":"chongkelv123"},"content":"        Calendar calendar \u003d Calendar.getInstance();","lastModifiedDate":"2023-10-28"},{"lineNumber":181,"author":{"gitId":"chongkelv123"},"content":"        calendar.set(year, month - 1, 1);","lastModifiedDate":"2023-10-28"},{"lineNumber":182,"author":{"gitId":"chongkelv123"},"content":"        return calendar.getActualMaximum(Calendar.DAY_OF_MONTH);","lastModifiedDate":"2023-10-28"},{"lineNumber":183,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":184,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":184}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.storage;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-10-21"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.FileStorageException;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":" * The Storage class is responsible for managing the data storage of the application.","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":" * It provides methods for loading data from a file into the application and saving data from the application to a file.","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"public class Storage {","lastModifiedDate":"2023-10-16"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public final Path path;","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a Storage object with the specified file path.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"     * @param filePath The file path to be associated with the Storage object.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"        path \u003d Paths.get(filePath);","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     * Loads tasks from the storage file and returns them as an ArrayList.","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     * @return An ArrayList containing tasks loaded from the storage file.","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"     * @throws FileStorageException     If there are issues with file existence or reading.","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    public ArrayList\u003cTask\u003e load() throws FileStorageException, InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-10-18"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"                String message \u003d Message.concat(Message.MESSAGE_FILE_NOT_EXIST,","lastModifiedDate":"2023-10-21"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"                        Message.MESSAGE_MAKE_NEW_INSTANCE);","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"                throw new FileStorageException(message);","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"            }","lastModifiedDate":"2023-10-18"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"            return TaskDecoder.decodeStringsToTaskList(Files.readAllLines(path));","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"            throw new FileStorageException(\"Error reading storage file: \" + path);","lastModifiedDate":"2023-10-18"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"            throw new InvalidArgumentException(e.getMessage());","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"     * Saves the provided TaskList to the storage file.","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"     * @param tasks The TaskList to be saved to the storage file.","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"     * @throws FileStorageException If there are issues with writing to the file.","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"    public void save(ArrayList\u003cTask\u003e tasks) throws FileStorageException {","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"            ArrayList\u003cString\u003e listOfTasks \u003d TaskEncoder.encodeTaskListToStringList(tasks);","lastModifiedDate":"2023-10-23"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"            if (!Files.exists(path)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"                Files.createDirectories(path.getParent());","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"            Files.write(path, listOfTasks);","lastModifiedDate":"2023-10-16"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"            throw new FileStorageException(\"Error writing storage file: \" + path);","lastModifiedDate":"2023-10-22"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the file path as a string.","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representing the file path.","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"    public String getPath() {","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"        return path.toString();","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"chongkelv123":79}},{"path":"src/main/java/duke/storage/TaskDecoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.command.Command;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.FileStorageException;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Event;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"import java.util.List;","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"import java.util.StringTokenizer;","lastModifiedDate":"2023-10-18"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-22"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":" * The TaskDecoder class is responsible for decoding tasks from a specific format.","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":" * It provides methods for converting tasks from a stored format into Task objects that can be used by the application.","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"public class TaskDecoder {","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     * Decodes a list of strings into Task objects and returns them as an ArrayList.","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"     * @param strings The list of strings representing tasks to be decoded.","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"     * @return An ArrayList containing Task objects decoded from the input strings.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"     * @throws FileStorageException     If there are issues with decoding the tasks.","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    public static ArrayList\u003cTask\u003e decodeStringsToTaskList(List\u003cString\u003e strings) throws FileStorageException,","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"            InvalidArgumentException {","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"        for (String string : strings) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"            tasks.add(decodeStringToTask(string));","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"        return tasks;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"     * Decodes a string representation of a task and returns the corresponding Task object.","lastModifiedDate":"2023-10-23"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"     * @param string The string representation of the task to be decoded.","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"     * @return The Task object decoded from the input string.","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"     * @throws FileStorageException     If there are issues with the format or parsing of the string.","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"    private static Task decodeStringToTask(String string) throws FileStorageException, InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"        char abbreviation \u003d string.charAt(0);","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        String[] tokens \u003d splitStringByDelimiter(string);","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"        switch (abbreviation) {","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"            if (tokens.length !\u003d 3) {","lastModifiedDate":"2023-10-21"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"                break;","lastModifiedDate":"2023-10-21"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"            return new Todo(Parser.parseStringToBoolean(tokens[1]), tokens[2]);","lastModifiedDate":"2023-10-18"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"            if (tokens.length !\u003d 4) {","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"                break;","lastModifiedDate":"2023-10-21"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"            LocalDateTime dateTime \u003d parseStringToDate(tokens[3]);","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"            return new Deadline(Parser.parseStringToBoolean(tokens[1]), tokens[2], dateTime);","lastModifiedDate":"2023-10-22"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"            if (tokens.length !\u003d 5) {","lastModifiedDate":"2023-10-21"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"                break;","lastModifiedDate":"2023-10-21"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"            }","lastModifiedDate":"2023-10-21"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"            LocalDateTime fromDateTime \u003d parseStringToDateTime(tokens[3]);","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"            LocalDateTime toDateTime \u003d parseStringToDateTime(tokens[4]);","lastModifiedDate":"2023-10-23"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"            if (fromDateTime \u003d\u003d null || toDateTime \u003d\u003d null) {","lastModifiedDate":"2023-10-22"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"                break;","lastModifiedDate":"2023-10-22"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"            return new Event(Parser.parseStringToBoolean(tokens[1]), tokens[2], fromDateTime, toDateTime);","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"        String message \u003d Message.concat(Message.MESSAGE_FILE_FORMAT_INVALID,","lastModifiedDate":"2023-10-21"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"                Message.MESSAGE_MAKE_NEW_INSTANCE);","lastModifiedDate":"2023-10-21"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"        throw new FileStorageException(message);","lastModifiedDate":"2023-10-21"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"     * Splits the input string into tokens using the \"|\" delimiter and returns the tokens as an array.","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"     * @param string The input string to be split into tokens.","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"     * @return An array of strings representing the tokens extracted from the input string.","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"    private static String[] splitStringByDelimiter(String string) {","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"        List\u003cString\u003e tokens \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-18"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"        StringTokenizer stringTokenizer \u003d new StringTokenizer(string, \"|\");","lastModifiedDate":"2023-10-18"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"        while (stringTokenizer.hasMoreTokens()) {","lastModifiedDate":"2023-10-18"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"            tokens.add(stringTokenizer.nextToken());","lastModifiedDate":"2023-10-18"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-18"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"        String[] arr \u003d new String[tokens.size()];","lastModifiedDate":"2023-10-18"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"        return tokens.toArray(arr);","lastModifiedDate":"2023-10-18"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"     * Parses a string argument representing a date and time and returns a LocalDateTime object.","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"     * @param byArgument The string argument representing the date and time.","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"     * @return The LocalDateTime object parsed from the input string, or null if parsing fails.","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the command arguments are invalid, an exception is thrown with an error","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"     *                                  message.","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"    private static LocalDateTime parseStringToDateTime(String byArgument) throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"        final Matcher dateMatcher \u003d Command.DATE_TIME_ARG_FORMAT.matcher(byArgument);","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"        if (!dateMatcher.matches()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"            return null;","lastModifiedDate":"2023-10-22"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":112,"author":{"gitId":"chongkelv123"},"content":"        final String timeArgument \u003d dateMatcher.group(\"timeArgument\");","lastModifiedDate":"2023-10-22"},{"lineNumber":113,"author":{"gitId":"chongkelv123"},"content":"        final Matcher timeMatcher \u003d Command.TIME_ARG_FORMAT.matcher(timeArgument);","lastModifiedDate":"2023-10-22"},{"lineNumber":114,"author":{"gitId":"chongkelv123"},"content":"        if (!timeMatcher.matches()) {","lastModifiedDate":"2023-10-22"},{"lineNumber":115,"author":{"gitId":"chongkelv123"},"content":"            return null;","lastModifiedDate":"2023-10-22"},{"lineNumber":116,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":117,"author":{"gitId":"chongkelv123"},"content":"        return Parser.constructDateTime(dateMatcher, timeMatcher);","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":119,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"chongkelv123"},"content":"    private static LocalDateTime parseStringToDate(String byArgument) throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"chongkelv123"},"content":"        final Matcher dateMatcher \u003d Command.DATE_ARG_FORMAT.matcher(byArgument);","lastModifiedDate":"2023-10-27"},{"lineNumber":122,"author":{"gitId":"chongkelv123"},"content":"        if (!dateMatcher.matches()) {","lastModifiedDate":"2023-10-27"},{"lineNumber":123,"author":{"gitId":"chongkelv123"},"content":"            return null;","lastModifiedDate":"2023-10-27"},{"lineNumber":124,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":126,"author":{"gitId":"chongkelv123"},"content":"        return Parser.constructDateTime(dateMatcher);","lastModifiedDate":"2023-10-27"},{"lineNumber":127,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chongkelv123":128}},{"path":"src/main/java/duke/storage/TaskEncoder.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.storage;","lastModifiedDate":"2023-10-16"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-10-16"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Event;","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-16"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":" * The TaskEncoder class is responsible for encoding tasks into a specific format.","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":" * It provides methods for converting Task objects from the application into a format that can be stored persistently.","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"public class TaskEncoder {","lastModifiedDate":"2023-10-16"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"     * Encodes a TaskList into a list of strings.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"     * @param tasks The TaskList to be encoded.","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"     * @return An ArrayList containing string representations of tasks from the input TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    public static ArrayList\u003cString\u003e encodeTaskListToStringList(ArrayList\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cString\u003e listOfResult \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"        for (Task t : tasks) {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"            listOfResult.add(convertTaskToString(t));","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"        return listOfResult;","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"     * Converts a Task object into a string representation with specific delimiters.","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     * @param task The Task object to be converted into a string.","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representation of the input Task object.","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    private static String convertTaskToString(Task task) {","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"        StringBuilder taskStringBuilder \u003d new StringBuilder();","lastModifiedDate":"2023-10-16"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"        char abbreviation \u003d task.getAbbreviation();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        taskStringBuilder.append(abbreviation);","lastModifiedDate":"2023-10-16"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"        taskStringBuilder.append(\"|\").append(task.convertTaskStatusToBinary());","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"        taskStringBuilder.append(\"|\").append(task.getDukeDescription());","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"        switch (abbreviation) {","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"            taskStringBuilder.append(\"|\").append(deadline.getByDateTime(Task.DATE_FORMAT_TOFILE));","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"            break;","lastModifiedDate":"2023-10-16"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"            taskStringBuilder.append(\"|\").append(event.getFromDateTime(Task.DATE_TIME_FORMAT_TOFILE))","lastModifiedDate":"2023-10-22"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"                    .append(\"|\").append(event.getToDateTime(Task.DATE_TIME_FORMAT_TOFILE));","lastModifiedDate":"2023-10-22"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"            break;","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"        default:","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        return taskStringBuilder.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"chongkelv123":56}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":" * The Deadline class represents a task that has a specific deadline.","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":" * It extends the Task class and adds specific behavior for tasks","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-10-22"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"    protected LocalDateTime byDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a Deadline object with the given parameters.","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"     * @param isDone      A boolean value indicating whether the deadline task is done (true) or not done (false).","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-10-23"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"     * @param byDateTime  The due date and time of the deadline task (in LocalDateTime format).","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    public Deadline(boolean isDone, String description, LocalDateTime byDateTime) {","lastModifiedDate":"2023-10-22"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"        super(description);","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"        setAbbreviation();","lastModifiedDate":"2023-10-18"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"        markAsDone(isDone);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"        this.byDateTime \u003d byDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"     * Executes the task by displaying a response indicating that the task has been added.","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    public void execute() {","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"        displayTaskAddedResponse();","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"     * Sets the abbreviation for the Deadline object.","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    public void setAbbreviation() {","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        abbreviation \u003d \u0027D\u0027;","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Returns a string representation of the task, including its abbreviation, status icon, description,","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"     * and deadline.","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"     * The date is formatted according to the specified display date format.","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"        return String.format(\"[%c][%s] %s (by: %s)\", abbreviation, getStatusIcon(), dukeDescription,","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"                getByDateTime(DATE_FORMAT_DISPLAY));","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the due date and time of the Deadline object.","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"     * @return The due date and time of the Deadline (in LocalDateTime format).","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"    public LocalDateTime getByDateTime() {","lastModifiedDate":"2023-10-22"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"        return byDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the formatted due date and time of the Deadline object based on the specified pattern.","lastModifiedDate":"2023-10-23"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"     * @param pattern The pattern to format the date and time (e.g., \"yyyy-MM-dd HH:mm\").","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"     * @return The formatted due date and time of the Deadline (as a String).","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"    public String getByDateTime(String pattern) {","lastModifiedDate":"2023-10-22"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"        return byDateTime.format(DateTimeFormatter.ofPattern(pattern));","lastModifiedDate":"2023-10-22"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"     * Updates the deadline date and time of the object.","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"     * @param by The new deadline date and time to set for the object.","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"    public void updateBy(LocalDateTime by) {","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"        byDateTime \u003d by;","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":80}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":" * The Event class represents a task that is scheduled for a specific data and time","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":" * It extends the Task class and adds specific behavior for tasks","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"public class Event extends Task {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"    protected LocalDateTime fromDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    protected LocalDateTime toDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"     * Constructs an Event object with the given parameters.","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"     * @param isDone      A boolean value indicating whether the event is done (true) or not done (false).","lastModifiedDate":"2023-10-23"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"     * @param description The description of the event.","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"     * @param from        The starting date and time of the event (in LocalDateTime format).","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"     * @param to          The ending date and time of the event (in LocalDateTime format).","lastModifiedDate":"2023-10-23"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    public Event(boolean isDone, String description, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-10-22"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"        super(description);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"        setAbbreviation();","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"        markAsDone(isDone);","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"        this.fromDateTime \u003d from;","lastModifiedDate":"2023-10-22"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"        this.toDateTime \u003d to;","lastModifiedDate":"2023-10-22"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     * Executes the task by displaying a response indicating that the task has been added.","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    public void execute() {","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"        displayTaskAddedResponse();","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"     * Sets the abbreviation for the Event object.","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"    public void setAbbreviation() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"        abbreviation \u003d \u0027E\u0027;","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"     * @return A formatted string representing the task with start and end date/time information.","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Returns a string representation of the task, including its abbreviation, status icon, description,","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     * start date/time, and end date/time. Dates are formatted according to the specified display date/time format.","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"        return String.format(\"[%c][%s] %s (from: %s to: %s)\", abbreviation, getStatusIcon(), dukeDescription,","lastModifiedDate":"2023-10-22"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"                getFromDateTime(DATE_TIME_FORMAT_DISPLAY), getToDateTime(DATE_TIME_FORMAT_DISPLAY));","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the starting date and time of the Event object.","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"     * @return The starting date and time of the Event (in LocalDateTime format).","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    public LocalDateTime getFromDateTime() {","lastModifiedDate":"2023-10-22"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"        return fromDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the ending date and time of the Event object.","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"     * @return The ending date and time of the Event (in LocalDateTime format).","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"    public LocalDateTime getToDateTime() {","lastModifiedDate":"2023-10-22"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"        return toDateTime;","lastModifiedDate":"2023-10-22"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the formatted starting date and time of the Event object based on the specified pattern.","lastModifiedDate":"2023-10-23"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"     * @param pattern The pattern to format the date and time (e.g., \"yyyy-MM-dd HH:mm\").","lastModifiedDate":"2023-10-23"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"     * @return The formatted starting date and time of the Event (as a String).","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"    public String getFromDateTime(String pattern) {","lastModifiedDate":"2023-10-22"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"        return fromDateTime.format(DateTimeFormatter.ofPattern(pattern));","lastModifiedDate":"2023-10-22"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the formatted ending date and time of the Event object based on the specified pattern.","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"     * @param pattern The pattern to format the date and time (e.g., \"yyyy-MM-dd HH:mm\").","lastModifiedDate":"2023-10-23"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"     * @return The formatted ending date and time of the Event (as a String).","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"    public String getToDateTime(String pattern) {","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"        return toDateTime.format(DateTimeFormatter.ofPattern(pattern));","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"     * Updates the start time of the Event object.","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"     * @param from The new start time to set for the Event object.","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"    public void updateFrom(LocalDateTime from) {","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"        fromDateTime \u003d from;","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"     * Updates the end time of the Event object.","lastModifiedDate":"2023-11-06"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"     * @param to The new end time to set for the Event object.","lastModifiedDate":"2023-11-06"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"    public void updateTo(LocalDateTime to) {","lastModifiedDate":"2023-11-06"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"        toDateTime \u003d to;","lastModifiedDate":"2023-11-06"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":111}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":" * The Task class serves as the base for all task-related classes.","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"public abstract class Task {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    public static final String DATE_TIME_FORMAT_DISPLAY \u003d \"MMM dd yyyy HH:mm\";","lastModifiedDate":"2023-10-22"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"    public static final String DATE_FORMAT_DISPLAY \u003d \"MMM dd yyyy\";","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    public static final String DATE_TIME_FORMAT_TOFILE \u003d \"dd/MM/yyyy HHmm\";","lastModifiedDate":"2023-10-22"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    public static final String DATE_FORMAT_TOFILE \u003d \"dd/MM/yyyy\";","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    protected String dukeDescription;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"    protected char abbreviation;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a new Task object with the specified description.","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"     * @param description The description for the Task.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    public Task(String description) {","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"        this.dukeDescription \u003d description;","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a new task with default values. The task is initially set as not done.","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    public Task() {","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"     * Generates a response based on the number of tasks in the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"     * @return A response indicating the number of tasks in the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    protected static String responseNumberOfTasks() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"        int numberOfTasks \u003d TaskList.size() + 1;","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        return String.format(\"Now you have %d %s in the list.\", numberOfTasks, numberOfTasks \u003e 1 ? \"tasks\" : \"task\");","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     * Returns a response indicating that a task has been successfully added.","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"     * @return A response message confirming the addition of a task.","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"    static String taskAddedSuccessfullyResponse() {","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        return Message.MESSAGE_GOT_IT;","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representation of the task\u0027s status, \"X\" if done, \" \" (space) if not done.","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"     * Marks the task as done or not done based on the provided boolean value.","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"     * @param done A boolean value indicating whether the task is done (true) or not done (false).","lastModifiedDate":"2023-10-23"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"    public void markAsDone(boolean done) {","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"        this.isDone \u003d done;","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"     * Returns a string representation of the object. The returned string should provide a clear and concise","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"     * description of the object\u0027s state. Subclasses should override this method to provide specific implementations.","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representation of the object.","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"    public abstract String toString();","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"     * Constructs and displays a response message after adding a task.","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"    public void displayTaskAddedResponse() {","lastModifiedDate":"2023-10-23"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"        messages.add(taskAddedSuccessfullyResponse());","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"        messages.add(\" \" + this.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"        messages.add(responseNumberOfTasks());","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"        ui.showResponseToUser(messages);","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the abbreviation associated with the task.","lastModifiedDate":"2023-10-23"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"     * @return A character representing the abbreviation of the task.","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"    public char getAbbreviation() {","lastModifiedDate":"2023-10-16"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"        return abbreviation;","lastModifiedDate":"2023-10-16"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the Duke description associated with the task.","lastModifiedDate":"2023-10-23"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"     * @return A string representing the Duke description of the task.","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"    public String getDukeDescription() {","lastModifiedDate":"2023-10-16"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"        return dukeDescription;","lastModifiedDate":"2023-10-16"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":112,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":113,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":114,"author":{"gitId":"chongkelv123"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-10-23"},{"lineNumber":115,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":116,"author":{"gitId":"chongkelv123"},"content":"     * @return true if the task is marked as done, false otherwise.","lastModifiedDate":"2023-10-23"},{"lineNumber":117,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"chongkelv123"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-10-16"},{"lineNumber":119,"author":{"gitId":"chongkelv123"},"content":"        return isDone;","lastModifiedDate":"2023-10-16"},{"lineNumber":120,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":121,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":122,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"chongkelv123"},"content":"     * Converts the task\u0027s \"done\" status to a binary representation.","lastModifiedDate":"2023-10-23"},{"lineNumber":124,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":125,"author":{"gitId":"chongkelv123"},"content":"     * @return 1 if the task is done, 0 if the task is not done.","lastModifiedDate":"2023-10-23"},{"lineNumber":126,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"chongkelv123"},"content":"    public int convertTaskStatusToBinary() {","lastModifiedDate":"2023-10-23"},{"lineNumber":128,"author":{"gitId":"chongkelv123"},"content":"        if (isDone) {","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"chongkelv123"},"content":"            return 1;","lastModifiedDate":"2023-10-16"},{"lineNumber":130,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":131,"author":{"gitId":"chongkelv123"},"content":"        return 0;","lastModifiedDate":"2023-10-16"},{"lineNumber":132,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-16"},{"lineNumber":133,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":134,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":135,"author":{"gitId":"chongkelv123"},"content":"     * Updates the description of the tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":136,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":137,"author":{"gitId":"chongkelv123"},"content":"     * @param description The new description to set for the tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":138,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":139,"author":{"gitId":"chongkelv123"},"content":"    public void updateDescription(String description) {","lastModifiedDate":"2023-11-06"},{"lineNumber":140,"author":{"gitId":"chongkelv123"},"content":"        dukeDescription \u003d description;","lastModifiedDate":"2023-11-05"},{"lineNumber":141,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":142,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":142}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.task;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":" * The TaskList class is responsible for managing a list of tasks.","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":" * It provides methods for adding, removing, and retrieving tasks","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"public class TaskList {","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    public TaskList() {","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a new TaskList object with the given list of tasks.","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"     * @param listOfTasks An ArrayList containing tasks to initialize the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    public TaskList(ArrayList\u003cTask\u003e listOfTasks) {","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"        tasks \u003d listOfTasks;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"     * Returns the number of tasks in the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"     * @return The number of tasks in the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    public static int size() {","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"        return tasks.size();","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the task at the specified index in the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"     * @param i The index of the task to retrieve.","lastModifiedDate":"2023-10-23"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"     * @return The task at the specified index in the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    public Task get(int i) {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        return tasks.get(i);","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     * Adds a task to the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"     * @param task The task to be added to the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"    public void add(Task task) {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        tasks.add(task);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves the list of tasks from the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"     * @return An ArrayList containing tasks in the TaskList.","lastModifiedDate":"2023-10-23"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    public ArrayList\u003cTask\u003e getTasks() {","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"        return tasks;","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"     * Retrieves tasks from the TaskList where the specified date matches the task\u0027s date.","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"     * @param date The date to match tasks against.","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"     * @return ArrayList of tasks with the specified date.","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"    public ArrayList\u003cTask\u003e getTasksByDate(LocalDateTime date) {","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-28"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"            if (isDateFound(date, task)) {","lastModifiedDate":"2023-10-28"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-10-28"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"            }","lastModifiedDate":"2023-10-28"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"        return foundTasks;","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"     * Returns a list of tasks that contain the provided search string in their description.","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"     * @param search The search string to be matched against task descriptions.","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"     * @return ArrayList of tasks matching the search string.","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"    public ArrayList\u003cTask\u003e getTaskBySearchString(String search) {","lastModifiedDate":"2023-10-29"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-29"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"            if (isSearchFound(search, task)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-10-29"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"        return foundTasks;","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"     * Checks if the provided search string is found within the task\u0027s description.","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"     * @param search The search string to be matched against the task\u0027s description.","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"     * @param task   The task to be checked.","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"     * @return True if the search string is found in the task\u0027s description, false otherwise.","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"    private boolean isSearchFound(String search, Task task) {","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"        String description \u003d task.getDukeDescription();","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"        return description.contains(search);","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"     * Checks if the specified date matches the date of the given task.","lastModifiedDate":"2023-10-28"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":112,"author":{"gitId":"chongkelv123"},"content":"     * @param date The date to match against the task\u0027s date.","lastModifiedDate":"2023-10-28"},{"lineNumber":113,"author":{"gitId":"chongkelv123"},"content":"     * @param task The task to check for a matching date.","lastModifiedDate":"2023-10-28"},{"lineNumber":114,"author":{"gitId":"chongkelv123"},"content":"     * @return True if the specified date matches the task\u0027s date, false otherwise.","lastModifiedDate":"2023-10-28"},{"lineNumber":115,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":116,"author":{"gitId":"chongkelv123"},"content":"    private boolean isDateFound(LocalDateTime date, Task task) {","lastModifiedDate":"2023-10-28"},{"lineNumber":117,"author":{"gitId":"chongkelv123"},"content":"        boolean isDeadline \u003d task instanceof Deadline;","lastModifiedDate":"2023-10-28"},{"lineNumber":118,"author":{"gitId":"chongkelv123"},"content":"        boolean isEvent \u003d task instanceof Event;","lastModifiedDate":"2023-10-28"},{"lineNumber":119,"author":{"gitId":"chongkelv123"},"content":"        if (!isDeadline \u0026\u0026 !isEvent) {","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"chongkelv123"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":121,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":122,"author":{"gitId":"chongkelv123"},"content":"        if (isDeadline) {","lastModifiedDate":"2023-10-28"},{"lineNumber":123,"author":{"gitId":"chongkelv123"},"content":"            Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-10-28"},{"lineNumber":124,"author":{"gitId":"chongkelv123"},"content":"            return areDatesEqual(date, deadline.getByDateTime());","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"chongkelv123"},"content":"        } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"chongkelv123"},"content":"            Event event \u003d (Event) task;","lastModifiedDate":"2023-10-28"},{"lineNumber":127,"author":{"gitId":"chongkelv123"},"content":"            boolean isEqualFromDate \u003d areDatesEqual(date, event.getFromDateTime());","lastModifiedDate":"2023-10-29"},{"lineNumber":128,"author":{"gitId":"chongkelv123"},"content":"            boolean isEqualToDate \u003d areDatesEqual(date, event.getToDateTime());","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"chongkelv123"},"content":"            return isEqualFromDate || isEqualToDate;","lastModifiedDate":"2023-10-29"},{"lineNumber":130,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":131,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":132,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-28"},{"lineNumber":134,"author":{"gitId":"chongkelv123"},"content":"     * Compares two LocalDateTime objects to check if they have the same year, month, and day.","lastModifiedDate":"2023-10-28"},{"lineNumber":135,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-28"},{"lineNumber":136,"author":{"gitId":"chongkelv123"},"content":"     * @param d1 The first LocalDateTime object to be compared.","lastModifiedDate":"2023-10-28"},{"lineNumber":137,"author":{"gitId":"chongkelv123"},"content":"     * @param d2 The second LocalDateTime object to be compared.","lastModifiedDate":"2023-10-28"},{"lineNumber":138,"author":{"gitId":"chongkelv123"},"content":"     * @return true if the year, month, and day are equal; false otherwise.","lastModifiedDate":"2023-10-28"},{"lineNumber":139,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-28"},{"lineNumber":140,"author":{"gitId":"chongkelv123"},"content":"    public boolean areDatesEqual(LocalDateTime d1, LocalDateTime d2) {","lastModifiedDate":"2023-10-28"},{"lineNumber":141,"author":{"gitId":"chongkelv123"},"content":"        if (d1.getYear() !\u003d d2.getYear()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":142,"author":{"gitId":"chongkelv123"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":143,"author":{"gitId":"chongkelv123"},"content":"        } else if (d1.getMonth() !\u003d d2.getMonth()) {","lastModifiedDate":"2023-10-28"},{"lineNumber":144,"author":{"gitId":"chongkelv123"},"content":"            return false;","lastModifiedDate":"2023-10-28"},{"lineNumber":145,"author":{"gitId":"chongkelv123"},"content":"        } else {","lastModifiedDate":"2023-10-28"},{"lineNumber":146,"author":{"gitId":"chongkelv123"},"content":"            return d1.getDayOfMonth() \u003d\u003d d2.getDayOfMonth();","lastModifiedDate":"2023-10-28"},{"lineNumber":147,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-28"},{"lineNumber":148,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":149,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":150,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-29"},{"lineNumber":151,"author":{"gitId":"chongkelv123"},"content":"     * Removes the task at the specified index from the list of tasks.","lastModifiedDate":"2023-10-29"},{"lineNumber":152,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-29"},{"lineNumber":153,"author":{"gitId":"chongkelv123"},"content":"     * @param index The index of the task to be removed.","lastModifiedDate":"2023-10-29"},{"lineNumber":154,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-29"},{"lineNumber":155,"author":{"gitId":"chongkelv123"},"content":"    public void remove(int index) {","lastModifiedDate":"2023-10-29"},{"lineNumber":156,"author":{"gitId":"chongkelv123"},"content":"        tasks.remove(index);","lastModifiedDate":"2023-10-29"},{"lineNumber":157,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":158,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":159,"author":{"gitId":"chongkelv123"},"content":"    public char getAbbreviation(int index) {","lastModifiedDate":"2023-11-05"},{"lineNumber":160,"author":{"gitId":"chongkelv123"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-11-05"},{"lineNumber":161,"author":{"gitId":"chongkelv123"},"content":"            if (i \u003d\u003d index - 1) {","lastModifiedDate":"2023-11-05"},{"lineNumber":162,"author":{"gitId":"chongkelv123"},"content":"                return tasks.get(i).getAbbreviation();","lastModifiedDate":"2023-11-05"},{"lineNumber":163,"author":{"gitId":"chongkelv123"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":164,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":165,"author":{"gitId":"chongkelv123"},"content":"        return \u0027X\u0027;","lastModifiedDate":"2023-11-05"},{"lineNumber":166,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":167,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":168,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":169,"author":{"gitId":"chongkelv123"},"content":"     * Updates the description of an item at the specified index in the list.","lastModifiedDate":"2023-11-06"},{"lineNumber":170,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":171,"author":{"gitId":"chongkelv123"},"content":"     * @param index       The index of the item to be updated (0-based index).","lastModifiedDate":"2023-11-06"},{"lineNumber":172,"author":{"gitId":"chongkelv123"},"content":"     * @param description The new description to set for the item.","lastModifiedDate":"2023-11-06"},{"lineNumber":173,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":174,"author":{"gitId":"chongkelv123"},"content":"    public void updateDescription(int index, String description) {","lastModifiedDate":"2023-11-05"},{"lineNumber":175,"author":{"gitId":"chongkelv123"},"content":"        get(index - 1).updateDescription(description);","lastModifiedDate":"2023-11-06"},{"lineNumber":176,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":177,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":178,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":179,"author":{"gitId":"chongkelv123"},"content":"     * Updates the deadline time of the specified Deadline object in the list.","lastModifiedDate":"2023-11-06"},{"lineNumber":180,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":181,"author":{"gitId":"chongkelv123"},"content":"     * @param index The index of the Deadline object to be updated (0-based index).","lastModifiedDate":"2023-11-06"},{"lineNumber":182,"author":{"gitId":"chongkelv123"},"content":"     * @param by    The new deadline time to set for the Deadline object.","lastModifiedDate":"2023-11-06"},{"lineNumber":183,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":184,"author":{"gitId":"chongkelv123"},"content":"    public void updateDeadlineBy(int index, LocalDateTime by) {","lastModifiedDate":"2023-11-06"},{"lineNumber":185,"author":{"gitId":"chongkelv123"},"content":"        assert get(index - 1) instanceof Deadline : \"The task must be an Event\";","lastModifiedDate":"2023-11-06"},{"lineNumber":186,"author":{"gitId":"chongkelv123"},"content":"        Deadline deadline \u003d (Deadline) get(index - 1);","lastModifiedDate":"2023-11-06"},{"lineNumber":187,"author":{"gitId":"chongkelv123"},"content":"        deadline.updateBy(by);","lastModifiedDate":"2023-11-06"},{"lineNumber":188,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":189,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":190,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":191,"author":{"gitId":"chongkelv123"},"content":"     * Updates the start time of the specified Event object in the list and validates the date and time range.","lastModifiedDate":"2023-11-06"},{"lineNumber":192,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":193,"author":{"gitId":"chongkelv123"},"content":"     * @param index The index of the Event object to be updated (0-based index).","lastModifiedDate":"2023-11-06"},{"lineNumber":194,"author":{"gitId":"chongkelv123"},"content":"     * @param from  The new start time to set for the Event object.","lastModifiedDate":"2023-11-06"},{"lineNumber":195,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the date and time range is invalid.","lastModifiedDate":"2023-11-06"},{"lineNumber":196,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":197,"author":{"gitId":"chongkelv123"},"content":"    public void updateEventFrom(int index, LocalDateTime from) throws InvalidArgumentException {","lastModifiedDate":"2023-11-06"},{"lineNumber":198,"author":{"gitId":"chongkelv123"},"content":"        assert get(index - 1) instanceof Event : \"The task must be an Event\";","lastModifiedDate":"2023-11-06"},{"lineNumber":199,"author":{"gitId":"chongkelv123"},"content":"        Event event \u003d (Event) get(index - 1);","lastModifiedDate":"2023-11-06"},{"lineNumber":200,"author":{"gitId":"chongkelv123"},"content":"        EventCommand.validateDateTimeRange(from, event.getToDateTime());","lastModifiedDate":"2023-11-06"},{"lineNumber":201,"author":{"gitId":"chongkelv123"},"content":"        event.updateFrom(from);","lastModifiedDate":"2023-11-06"},{"lineNumber":202,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":203,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":204,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":205,"author":{"gitId":"chongkelv123"},"content":"     * Updates the end time of the specified Event object in the list and validates the date and time range.","lastModifiedDate":"2023-11-06"},{"lineNumber":206,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":207,"author":{"gitId":"chongkelv123"},"content":"     * @param index The index of the Event object to be updated (0-based index).","lastModifiedDate":"2023-11-06"},{"lineNumber":208,"author":{"gitId":"chongkelv123"},"content":"     * @param to    The new end time to set for the Event object.","lastModifiedDate":"2023-11-06"},{"lineNumber":209,"author":{"gitId":"chongkelv123"},"content":"     * @throws InvalidArgumentException If the date and time range is invalid.","lastModifiedDate":"2023-11-06"},{"lineNumber":210,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":211,"author":{"gitId":"chongkelv123"},"content":"    public void updateEventTo(int index, LocalDateTime to) throws InvalidArgumentException {","lastModifiedDate":"2023-11-06"},{"lineNumber":212,"author":{"gitId":"chongkelv123"},"content":"        assert get(index - 1) instanceof Event : \"The task must be an Event\";","lastModifiedDate":"2023-11-06"},{"lineNumber":213,"author":{"gitId":"chongkelv123"},"content":"        Event event \u003d (Event) get(index - 1);","lastModifiedDate":"2023-11-06"},{"lineNumber":214,"author":{"gitId":"chongkelv123"},"content":"        EventCommand.validateDateTimeRange(event.getFromDateTime(), to);","lastModifiedDate":"2023-11-06"},{"lineNumber":215,"author":{"gitId":"chongkelv123"},"content":"        event.updateTo(to);","lastModifiedDate":"2023-11-06"},{"lineNumber":216,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":217,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"chongkelv123":217}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.task;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":" * The Todo class represents a task that need to be done.","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":" * It extends the Task class and adds specific behavior for tasks","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a new Todo task with the given description.","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"        super(description);","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"        setAbbreviation();","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"     * Constructs a new Todo task with the given description and marks it as done or undone based on the specified","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"     * status.","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"     * @param isDone      The status of the task.","lastModifiedDate":"2023-10-23"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"     * @param description The description for the Todo task.","lastModifiedDate":"2023-10-23"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    public Todo(boolean isDone, String description) {","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"        super(description);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"        setAbbreviation();","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"        markAsDone(isDone);","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     * Executes the task and handles the response.","lastModifiedDate":"2023-10-23"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    public void execute() {","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"        displayTaskAddedResponse();","lastModifiedDate":"2023-10-23"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"     * sets abbreviation for Todo object.","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    public void setAbbreviation() {","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"        abbreviation \u003d \u0027T\u0027;","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"     * @return A formatted string representing the task.","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"     * @inheritDoc Returns a string representation of the task, including its abbreviation, status icon, and","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"     * description.","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"    public String toString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        return String.format(\"[%c][%s] %s\", abbreviation, getStatusIcon(), dukeDescription);","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"chongkelv123":56}},{"path":"src/main/java/duke/ui/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.ui;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"/**","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":" * The Ui class is responsible for managing all user interface affairs.","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":" */","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"public class Ui {","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"    private final Scanner in;","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"    private final PrintStream out;","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"    public static final String DIVIDER \u003d \"\u003d\".repeat(80);","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    public static final String NEWLINE \u003d System.lineSeparator();","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    private final static int INDENT_RESPONSE \u003d 5;","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    private final static int INDENT_LINE \u003d 4;","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    private final static String HELLO_I_AM_LUNA \u003d \"Hello! I\u0027m Luna\";","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"    private final static String WHAT_CAN_DO_FOR_U \u003d \"What can I do for you?\";","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    private final static String LOGO \u003d","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"            \"      _                    \\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"                    + \"     | |    _   _ _  __     __\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"                    + \"     | |   | | | | | __  \\\\/ __ \\\\\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"                    + \"     | |___| |_| | |   | | |__| |\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"                    + \"     |_____|\\\\__,_|_|   |_|_|  |_|\\n\";","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    public Ui() {","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"        out \u003d new PrintStream(System.out);","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"     * Displays an error message related to loading data.","lastModifiedDate":"2023-10-23"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"     * @param message The error message to be display","lastModifiedDate":"2023-10-23"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    public void showLoadingError(String message) {","lastModifiedDate":"2023-10-18"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"        showResponseToUser(message);","lastModifiedDate":"2023-10-18"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"     * prints the welcome message upon the start of the application.","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    public void showWelcome() {","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        displayMessage(","lastModifiedDate":"2023-10-23"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"                generateSpaces(INDENT_LINE) + DIVIDER,","lastModifiedDate":"2023-10-23"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"                logoString(),","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"                generateSpaces(INDENT_LINE) + DIVIDER,","lastModifiedDate":"2023-10-23"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"                generateSpaces(INDENT_RESPONSE) + HELLO_I_AM_LUNA,","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"                generateSpaces(INDENT_RESPONSE) + WHAT_CAN_DO_FOR_U,","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"                generateSpaces(INDENT_LINE) + DIVIDER);","lastModifiedDate":"2023-10-23"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"     * Reads user command","lastModifiedDate":"2023-10-23"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"     * @return user command from the standard input.","lastModifiedDate":"2023-10-23"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"    public String getUserCommand() {","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"        return in.nextLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"     * print divider line","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"    public void showLine() {","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"        out.println(generateSpaces(INDENT_LINE) + DIVIDER);","lastModifiedDate":"2023-10-23"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"     * Returns the logo of the application as a String.","lastModifiedDate":"2023-10-23"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"     * @return A String representing the logo of the application.","lastModifiedDate":"2023-10-23"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"    private static String logoString() {","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"        return LOGO;","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"     * Generates a String consisting of a specified number of empty spaces","lastModifiedDate":"2023-10-23"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"     * @param n The number of empty spaces to generate.","lastModifiedDate":"2023-10-23"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"     * @return A String containing n empty spaces.","lastModifiedDate":"2023-10-23"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"    private static String generateSpaces(int n) {","lastModifiedDate":"2023-10-23"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"        return (\" \".repeat(n));","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"     * Returns a prefix space as a string for chatbot responses.","lastModifiedDate":"2023-10-23"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"     * @return A String containing spaces for chatbot response formatting.","lastModifiedDate":"2023-10-23"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"    public static String getPrefixSpace() {","lastModifiedDate":"2023-10-23"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"        return generateSpaces(INDENT_RESPONSE);","lastModifiedDate":"2023-10-23"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"     * Returns a prefix space as a string for chatbot print a line.","lastModifiedDate":"2023-10-23"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"     * @return A String containing spaces for chatbot print line formatting.","lastModifiedDate":"2023-10-23"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"    public static String getPrintLinePrefixSpace() {","lastModifiedDate":"2023-10-23"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"        return generateSpaces(INDENT_LINE);","lastModifiedDate":"2023-10-23"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"     * Displays messages to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"     * @param message Messages to be displayed to the user (Varargs)","lastModifiedDate":"2023-10-23"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"    public void displayMessage(String... message) {","lastModifiedDate":"2023-10-23"},{"lineNumber":112,"author":{"gitId":"chongkelv123"},"content":"        for (String m : message) {","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"chongkelv123"},"content":"            out.println(m.replace(\"\\n\", NEWLINE));","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":118,"author":{"gitId":"chongkelv123"},"content":"     * Displays a list of messages to the user, framed by lines at the top and bottom.","lastModifiedDate":"2023-10-23"},{"lineNumber":119,"author":{"gitId":"chongkelv123"},"content":"     * Newlines in messages are replaced with the system-independent line separator.","lastModifiedDate":"2023-10-23"},{"lineNumber":120,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":121,"author":{"gitId":"chongkelv123"},"content":"     * @param message List of messages to be displayed to the user.","lastModifiedDate":"2023-10-23"},{"lineNumber":122,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":123,"author":{"gitId":"chongkelv123"},"content":"    public void showResponseToUser(ArrayList\u003cString\u003e message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"chongkelv123"},"content":"        showLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"chongkelv123"},"content":"        for (String m : message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"chongkelv123"},"content":"            out.println(getPrefixSpace() + m.replace(\"\\n\", NEWLINE + getPrefixSpace()));","lastModifiedDate":"2023-10-23"},{"lineNumber":127,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"chongkelv123"},"content":"        showLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"chongkelv123"},"content":"    /**","lastModifiedDate":"2023-10-23"},{"lineNumber":132,"author":{"gitId":"chongkelv123"},"content":"     * Displays a list of messages to the user, framed by lines at the top and bottom.","lastModifiedDate":"2023-10-23"},{"lineNumber":133,"author":{"gitId":"chongkelv123"},"content":"     * Newlines in messages are replaced with the system-independent line separator.","lastModifiedDate":"2023-10-23"},{"lineNumber":134,"author":{"gitId":"chongkelv123"},"content":"     *","lastModifiedDate":"2023-10-24"},{"lineNumber":135,"author":{"gitId":"chongkelv123"},"content":"     * @param message messages to be displayed to the user. (Varargs)","lastModifiedDate":"2023-10-23"},{"lineNumber":136,"author":{"gitId":"chongkelv123"},"content":"     */","lastModifiedDate":"2023-10-23"},{"lineNumber":137,"author":{"gitId":"chongkelv123"},"content":"    public void showResponseToUser(String... message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"chongkelv123"},"content":"        showLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"chongkelv123"},"content":"        for (String m : message) {","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"chongkelv123"},"content":"            out.println(getPrefixSpace() + m.replace(\"\\n\", NEWLINE + getPrefixSpace()));","lastModifiedDate":"2023-10-23"},{"lineNumber":141,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"chongkelv123"},"content":"        showLine();","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"chongkelv123":144}},{"path":"src/test/java/data/storageFileTest/InvalidData1.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"D |1 /return book|22/02/2023 0202","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"//Wrong delimiter","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"chongkelv123":2}},{"path":"src/test/java/data/storageFileTest/InvalidData2.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"D |1 |return book|2a/02/2023 0202","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"//Wrong data format","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"chongkelv123":2}},{"path":"src/test/java/data/storageFileTest/InvalidData3.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"A |1 |return book|22/02/2023 0202","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"//Wrong abbreviation","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"chongkelv123":2}},{"path":"src/test/java/data/storageFileTest/InvalidData4.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"E|1|return book|22/02/2023 0202","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"//Wrong format for \u0027event\u0027","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"chongkelv123":2}},{"path":"src/test/java/data/storageFileTest/InvalidData5.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"D|1|return book|22/02/2023 1200","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"//Wrong deadline format (no time)","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"chongkelv123":2}},{"path":"src/test/java/data/storageFileTest/validData.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"T|1|return book","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"D|0|return book|02/12/2023","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"E|1|project meeting|02/12/2023 0330|02/12/2023 0400","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"chongkelv123":3}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke;","lastModifiedDate":"2023-10-23"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-23"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-23"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"public class DukeTest {","lastModifiedDate":"2023-10-23"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-10-23"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-10-23"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-23"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-23"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    public void anotherDummyTest() {","lastModifiedDate":"2023-10-23"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(4, 4);","lastModifiedDate":"2023-10-23"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-23"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-23"}],"authorContributionMap":{"chongkelv123":17}},{"path":"src/test/java/duke/command/DatePrintCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.util.TestUtil;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.AfterAll;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"public class DatePrintCommandTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    @TempDir","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"    static Path testFolder;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    private static final PrintStream standardOut \u003d System.out;","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    private static final ByteArrayOutputStream outputStreamCaptor \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    @BeforeAll","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"    public static void setUp() {","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"        System.setOut(new PrintStream(outputStreamCaptor));","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"    public void executeCommand_availableDate_foundDate() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"        TaskList tasks \u003d new TaskList(TestUtil.getTestTasks());","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"        Ui ui \u003d new Ui();","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"        Storage storage \u003d getTempStorage();","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"        DatePrintCommand dPrint \u003d new DatePrintCommand();","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"        dPrint.executeCommand(tasks, ui, storage, new UserKeywordArgument(\"dprint 02/12/2023\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(getSuccessString(tasks, ui), outputStreamCaptor.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    private String getSuccessString(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"        return Ui.getPrintLinePrefixSpace() + Ui.DIVIDER + Ui.NEWLINE +","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"                Ui.getPrefixSpace() + DatePrintCommand.TASKS_IN_THE_LIST + Ui.NEWLINE +","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"                Ui.getPrefixSpace() + \"1.\" + taskList.get(1).toString() + Ui.NEWLINE +","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"                Ui.getPrefixSpace() + \"2.\" + taskList.get(2).toString() + Ui.NEWLINE +","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"                Ui.getPrintLinePrefixSpace() + Ui.DIVIDER + Ui.NEWLINE;","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"    private String getNotSuccessString(TaskList taskList, Ui ui) {","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"        return Ui.getPrintLinePrefixSpace() + Ui.DIVIDER + Ui.NEWLINE +","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"                Ui.getPrefixSpace() + DatePrintCommand.MESSAGE_LIST_IS_EMPTY + Ui.NEWLINE +","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"                Ui.getPrintLinePrefixSpace() + Ui.DIVIDER + Ui.NEWLINE;","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    @AfterAll","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"    public static void tearDown() {","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"        System.setOut(standardOut);","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"    public static Storage getTempStorage() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"        return new Storage(testFolder.resolve(\"temp.txt\").toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"chongkelv123":63}},{"path":"src/test/java/duke/command/UpdateCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.command;","lastModifiedDate":"2023-11-05"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.common.Message;","lastModifiedDate":"2023-11-05"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Event;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import duke.util.TestUtil;","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import duke.ui.Ui;","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"import static duke.command.Command.DATE_TIME_ERR_MESSAGE;","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"class UpdateCommandTest {","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    @TempDir","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    static Path testFolder;","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    UpdateCommand up \u003d new UpdateCommand();","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    TaskList taskList;","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"    Ui ui;","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"    Storage storage;","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    String err \u003d \"\";","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    @BeforeEach","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    void setUp() throws Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"        taskList \u003d new TaskList(TestUtil.getTestTasks());","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"        storage \u003d getTempStorage();","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    void executeCommand_eventToBeforeFrom_failed() {","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        String expect \u003d Message.concat(EventCommand.DATE_TIME_ERROR_MESSAGE, EventCommand.EXAMPLE_USAGE);","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"            up.executeCommand(taskList, ui, storage, new UserKeywordArgument(\"update 3 /to 06/11/2022 2039\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"            err \u003d e.getMessage();","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(expect, err);","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    void executeCommand_deadlineUpdateBy_success() throws InvalidArgumentException {","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime datetime \u003d LocalDateTime.of(2023, 11, 6, 0, 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"        Deadline expectDeadline \u003d new Deadline(false, \"return book\", datetime);","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"        up.executeCommand(taskList, ui, storage, new UserKeywordArgument(\"update 2 /by 06/11/2023\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(expectDeadline.toString(), taskList.get(1).toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"    void executeCommand_eventUpdateTo_success() throws InvalidArgumentException {","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 12, 2, 3, 30);","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 12, 2, 21, 0);","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"        Event expectEvent \u003d new Event(true, \"project meeting\", from, to);","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"        up.executeCommand(taskList, ui, storage, new UserKeywordArgument(\"update 3 /to 02/12/2023 2100\"));","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(expectEvent.toString(), taskList.get(2).toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"    void isValidIndexCommand_emptyArgument_throwException() {","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"        String errMsg \u003d String.format(IndexBaseCommand.DESC_ERR_MESSAGE, UpdateCommand.COMMAND_WORD);","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"        String expect \u003d Message.concat(errMsg, UpdateCommand.EXAMPLE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"            up.isValidArgument(new UserKeywordArgument(\"update\"), taskList);","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"            err \u003d e.getMessage();","lastModifiedDate":"2023-11-05"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(expect, err);","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"    public void isValidIndexCommand_nonInteger_failed() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":84,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e up.isValidArgument(new UserKeywordArgument(\"update a\"),","lastModifiedDate":"2023-11-05"},{"lineNumber":85,"author":{"gitId":"chongkelv123"},"content":"                taskList));","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":87,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":88,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_onlyIntegerArgument_failed() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e up.isValidArgument(new UserKeywordArgument(\"update 1\"),","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"chongkelv123"},"content":"                taskList));","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":93,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":94,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":95,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_argumentKeyInvalid_failed() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e up.isValidArgument(new UserKeywordArgument(\"update 1 /de\"),","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"chongkelv123"},"content":"                taskList));","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":101,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_emptyArgument_failed() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":102,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e up.isValidArgument(new UserKeywordArgument(\"update 1 /desc\"),","lastModifiedDate":"2023-11-05"},{"lineNumber":103,"author":{"gitId":"chongkelv123"},"content":"                taskList));","lastModifiedDate":"2023-11-05"},{"lineNumber":104,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":106,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_wrongDateFormat_failed() {","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"chongkelv123"},"content":"        String errMsg \u003d String.format(DATE_TIME_ERR_MESSAGE, \"date\", UpdateCommand.COMMAND_WORD);","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"chongkelv123"},"content":"        String expect \u003d Message.concat(errMsg, UpdateCommand.EXAMPLE_USAGE);","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"chongkelv123"},"content":"            up.isValidArgument(new UserKeywordArgument(\"update 2 /by Sunday\"), taskList);","lastModifiedDate":"2023-11-05"},{"lineNumber":112,"author":{"gitId":"chongkelv123"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"chongkelv123"},"content":"            err \u003d e.getMessage();","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(expect, err);","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_todoTaskWrongKey_failed() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"chongkelv123"},"content":"            up.isValidArgument(new UserKeywordArgument(\"update 1 /by borrow book\"), taskList);","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"chongkelv123"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"chongkelv123"},"content":"            err \u003d e.getMessage();","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":125,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(UpdateCommand.UPDATE_ERROR_BY, err);","lastModifiedDate":"2023-11-05"},{"lineNumber":126,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":127,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_deadlineWrongKey_failed() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":130,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":131,"author":{"gitId":"chongkelv123"},"content":"            up.isValidArgument(new UserKeywordArgument(\"update 2 /from 05/11/2023 2300\"), taskList);","lastModifiedDate":"2023-11-05"},{"lineNumber":132,"author":{"gitId":"chongkelv123"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2023-11-05"},{"lineNumber":133,"author":{"gitId":"chongkelv123"},"content":"            err \u003d e.getMessage();","lastModifiedDate":"2023-11-05"},{"lineNumber":134,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":135,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(UpdateCommand.UPDATE_ERROR_FROM, err);","lastModifiedDate":"2023-11-05"},{"lineNumber":136,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":137,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":138,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":139,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_eventWrongKey_failed() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":140,"author":{"gitId":"chongkelv123"},"content":"        try {","lastModifiedDate":"2023-11-05"},{"lineNumber":141,"author":{"gitId":"chongkelv123"},"content":"            up.isValidArgument(new UserKeywordArgument(\"update 3 /by 15/11/2023\"), taskList);","lastModifiedDate":"2023-11-05"},{"lineNumber":142,"author":{"gitId":"chongkelv123"},"content":"        } catch (InvalidArgumentException e) {","lastModifiedDate":"2023-11-05"},{"lineNumber":143,"author":{"gitId":"chongkelv123"},"content":"            err \u003d e.getMessage();","lastModifiedDate":"2023-11-05"},{"lineNumber":144,"author":{"gitId":"chongkelv123"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":145,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(UpdateCommand.UPDATE_ERROR_BY, err);","lastModifiedDate":"2023-11-05"},{"lineNumber":146,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":147,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":148,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":149,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_deadlineTaskDesc_success() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":150,"author":{"gitId":"chongkelv123"},"content":"        assertTrue(up.isValidArgument(new UserKeywordArgument(\"update 2 /desc borrow book\"), taskList));","lastModifiedDate":"2023-11-05"},{"lineNumber":151,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":152,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":153,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":154,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_deadlineTaskBy_success() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":155,"author":{"gitId":"chongkelv123"},"content":"        assertTrue(up.isValidArgument(new UserKeywordArgument(\"update 2 /by 05/11/2023\"), taskList));","lastModifiedDate":"2023-11-05"},{"lineNumber":156,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":157,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":158,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":159,"author":{"gitId":"chongkelv123"},"content":"    public void isValidArgument_eventTaskBy_success() throws InvalidArgumentException {","lastModifiedDate":"2023-11-05"},{"lineNumber":160,"author":{"gitId":"chongkelv123"},"content":"        assertTrue(up.isValidArgument(new UserKeywordArgument(\"update 3 /to 05/11/2023 1500\"), taskList));","lastModifiedDate":"2023-11-05"},{"lineNumber":161,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":162,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":163,"author":{"gitId":"chongkelv123"},"content":"    public static Storage getTempStorage() throws Exception {","lastModifiedDate":"2023-11-06"},{"lineNumber":164,"author":{"gitId":"chongkelv123"},"content":"        return new Storage(testFolder.resolve(\"temp.txt\").toString());","lastModifiedDate":"2023-11-06"},{"lineNumber":165,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":166,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"chongkelv123":166}},{"path":"src/test/java/duke/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.parser;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.command.Command;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.command.DeadlineCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.command.EventCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.command.TodoCommand;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.data.UserKeywordArgument;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.InvalidArgumentException;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"public class ParserTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    public void getMaxDayOfMonth_returnMaxDayOfTheMonth() {","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"        int day \u003d Parser.getMaxDayOfMonth(2023, 2);","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(28, day);","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    public void dateValidation_wrongMonth_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e Parser.dateValidation(2023, -1, 1));","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    public void dateValidation_wrongDay_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e Parser.dateValidation(2023, 2, 29));","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    public void timeValidation_wrongHour_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e Parser.timeValidation(24, 0));","lastModifiedDate":"2023-10-28"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"    public void timeValidation_wrongMinute_exceptionThrown() throws InvalidArgumentException {","lastModifiedDate":"2023-10-28"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(InvalidArgumentException.class, () -\u003e Parser.timeValidation(23, 60));","lastModifiedDate":"2023-10-28"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"    public void parseKeyword_returnCorrectKeyword() {","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        String keyword \u003d Parser.parseKeyword(\"todo  //return book\");","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(\"todo\", keyword);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"    public void parseArgument_returnCorrectKeyword() {","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"        String argument \u003d Parser.parseArgument(\"todo  //return book\");","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(\"//return book\", argument);","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"    public void parseKeywordToCommand_eventKeyword_returnCorrectCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"        Command command \u003d Parser.parseKeywordToCommand(new UserKeywordArgument(\"event return book\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"        assertTrue(command instanceof EventCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"    public void parseKeywordToCommand_todoKeyword_returnCorrectCommand() {","lastModifiedDate":"2023-10-28"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"        Command command \u003d Parser.parseKeywordToCommand(new UserKeywordArgument(\"todo return book\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"        assertTrue(command instanceof TodoCommand);","lastModifiedDate":"2023-10-28"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"    public void parseKeywordToCommand_invalidKeyword_returnNull() {","lastModifiedDate":"2023-10-28"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"        Command command \u003d Parser.parseKeywordToCommand(new UserKeywordArgument(\"what return book\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(null, command);","lastModifiedDate":"2023-10-28"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"chongkelv123":72}},{"path":"src/test/java/duke/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.storage;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.exception.FileStorageException;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.util.TestUtil;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"import java.nio.charset.Charset;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"public class StorageTest {","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    @TempDir","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"    static Path testFolder;","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    public void save_validTask_success() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d TestUtil.getTestTasks();","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"        Storage storage \u003d getTempStorage();","lastModifiedDate":"2023-10-27"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"        storage.save(tasks);","lastModifiedDate":"2023-10-27"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"        assertStorageFileEqual(TestUtil.getStorageObject(\"validData.txt\"), storage);","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"    public void constructor_nullFilePath_exceptionThrow() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Storage(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"    @ParameterizedTest","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    @ValueSource(strings \u003d {\"InvalidData1.txt\", \"InvalidData2.txt\", \"InvalidData3.txt\", \"InvalidData4.txt\",","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"            \"InvalidData5.txt\"})","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"    public void load_invalidFormat_exceptionThrown(String fileName) throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"        Storage storage \u003d TestUtil.getStorageObject(fileName);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(FileStorageException.class, () -\u003e storage.load());","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"    public void load_validFormat_success() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e actualTasks \u003d TestUtil.getStorageObject(\"validData.txt\").load();","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e expectedTasks \u003d TestUtil.getTestTasks();","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(actualTasks.toString(), expectedTasks.toString());","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"    public void load_nonExistantFile_exceptionThrown() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"chongkelv123"},"content":"        Storage storage \u003d getTempStorage();","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(FileStorageException.class, () -\u003e storage.load());","lastModifiedDate":"2023-10-27"},{"lineNumber":60,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":61,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":62,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-27"},{"lineNumber":63,"author":{"gitId":"chongkelv123"},"content":"    public void save_nonTask_exceptionThrown() throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":64,"author":{"gitId":"chongkelv123"},"content":"        Storage storage \u003d getTempStorage();","lastModifiedDate":"2023-10-27"},{"lineNumber":65,"author":{"gitId":"chongkelv123"},"content":"        assertThrows(NullPointerException.class, () -\u003e storage.save(null));","lastModifiedDate":"2023-10-27"},{"lineNumber":66,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"chongkelv123"},"content":"    private void assertStorageFileEqual(Storage st1, Storage st2) throws Exception {","lastModifiedDate":"2023-10-27"},{"lineNumber":69,"author":{"gitId":"chongkelv123"},"content":"        assertTextFileEqual(Paths.get(st1.getPath()), Paths.get(st2.getPath()));","lastModifiedDate":"2023-10-27"},{"lineNumber":70,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":71,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"chongkelv123"},"content":"    public void assertTextFileEqual(Path path1, Path path2) throws IOException {","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"chongkelv123"},"content":"        List\u003cString\u003e file1 \u003d Files.readAllLines(path1, Charset.defaultCharset());","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"chongkelv123"},"content":"        List\u003cString\u003e file2 \u003d Files.readAllLines(path2, Charset.defaultCharset());","lastModifiedDate":"2023-10-27"},{"lineNumber":75,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(String.join(\"\\n\", file1), String.join(\"\\n\", file2));","lastModifiedDate":"2023-10-27"},{"lineNumber":76,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":77,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"chongkelv123"},"content":"    public static Storage getTempStorage() throws Exception {","lastModifiedDate":"2023-10-28"},{"lineNumber":79,"author":{"gitId":"chongkelv123"},"content":"        return new Storage(testFolder.resolve(\"temp.txt\").toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":80,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":81,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":82,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":83,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"chongkelv123":83}},{"path":"src/test/java/duke/task/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.task;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.util.TestUtil;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.params.ParameterizedTest;","lastModifiedDate":"2023-11-05"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.params.provider.ValueSource;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"public class TaskListTest {","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    public void getDateEqualTasks_availableDate_foundDate() {","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"        TaskList tasks \u003d new TaskList(TestUtil.getTestTasks());","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime date \u003d LocalDateTime.of(2023, 12, 2, 0, 0);","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.getTasksByDate(date);","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(getSuccessTask().toString(), foundTasks.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"    @ParameterizedTest","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"    @ValueSource(ints \u003d {-1, 4})","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"    void getAbbreviation_outOfRange_returnX(int i) {","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"        TaskList taskList \u003d new TaskList(TestUtil.getTestTasks());","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(Character.toString(\u0027X\u0027), Character.toString(taskList.getAbbreviation(i)));","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    void getAbbreviation_1_success() {","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"        TaskList taskList \u003d new TaskList(TestUtil.getTestTasks());","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(Character.toString(\u0027T\u0027), Character.toString(taskList.getAbbreviation(1)));","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":35,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"chongkelv123"},"content":"    void getAbbreviation_2_success() {","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"chongkelv123"},"content":"        TaskList taskList \u003d new TaskList(TestUtil.getTestTasks());","lastModifiedDate":"2023-11-05"},{"lineNumber":38,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(Character.toString(\u0027D\u0027), Character.toString(taskList.getAbbreviation(2)));","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"chongkelv123"},"content":"    @Test","lastModifiedDate":"2023-10-28"},{"lineNumber":42,"author":{"gitId":"chongkelv123"},"content":"    public void getDateEqualTasks_notAvailableDate_noDateFound() {","lastModifiedDate":"2023-10-28"},{"lineNumber":43,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e emptyTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":44,"author":{"gitId":"chongkelv123"},"content":"        TaskList tasks \u003d new TaskList(TestUtil.getTestTasks());","lastModifiedDate":"2023-10-28"},{"lineNumber":45,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime date \u003d LocalDateTime.of(2023, 6, 2, 0, 0);","lastModifiedDate":"2023-10-28"},{"lineNumber":46,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d tasks.getTasksByDate(date);","lastModifiedDate":"2023-10-28"},{"lineNumber":47,"author":{"gitId":"chongkelv123"},"content":"        assertEquals(emptyTasks.toString(), foundTasks.toString());","lastModifiedDate":"2023-10-28"},{"lineNumber":48,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":49,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":50,"author":{"gitId":"chongkelv123"},"content":"    private ArrayList\u003cTask\u003e getSuccessTask() {","lastModifiedDate":"2023-10-28"},{"lineNumber":51,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":52,"author":{"gitId":"chongkelv123"},"content":"        TaskList tasks \u003d new TaskList(TestUtil.getTestTasks());","lastModifiedDate":"2023-10-28"},{"lineNumber":53,"author":{"gitId":"chongkelv123"},"content":"        result.add(tasks.get(1));","lastModifiedDate":"2023-10-28"},{"lineNumber":54,"author":{"gitId":"chongkelv123"},"content":"        result.add(tasks.get(2));","lastModifiedDate":"2023-10-28"},{"lineNumber":55,"author":{"gitId":"chongkelv123"},"content":"        return result;","lastModifiedDate":"2023-10-28"},{"lineNumber":56,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":57,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"chongkelv123":57}},{"path":"src/test/java/duke/util/TestUtil.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"package duke.util;","lastModifiedDate":"2023-10-28"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-28"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Deadline;","lastModifiedDate":"2023-10-28"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Event;","lastModifiedDate":"2023-10-28"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-28"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"import duke.task.Todo;","lastModifiedDate":"2023-10-28"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2023-10-28"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-10-28"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-28"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-28"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"public class TestUtil {","lastModifiedDate":"2023-10-28"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"    @TempDir","lastModifiedDate":"2023-10-28"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"    static Path testFolder;","lastModifiedDate":"2023-10-28"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"    public static final String TEST_DATA_FOLDER \u003d \"src/test/java/data/storageFileTest\";","lastModifiedDate":"2023-10-28"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"    public static ArrayList\u003cTask\u003e getTestTasks() {","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-28"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"        tasks.add(new Todo(true, \"return book\"));","lastModifiedDate":"2023-10-28"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime datetime \u003d LocalDateTime.of(2023, 12, 2, 0, 0);","lastModifiedDate":"2023-10-28"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"        tasks.add(new Deadline(false, \"return book\", datetime));","lastModifiedDate":"2023-10-28"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime from \u003d LocalDateTime.of(2023, 12, 2, 3, 30);","lastModifiedDate":"2023-10-28"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"        LocalDateTime to \u003d LocalDateTime.of(2023, 12, 2, 4, 0);","lastModifiedDate":"2023-10-28"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"        tasks.add(new Event(true, \"project meeting\", from, to));","lastModifiedDate":"2023-10-28"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"        return tasks;","lastModifiedDate":"2023-10-28"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":30,"author":{"gitId":"chongkelv123"},"content":"    public static Storage getStorageObject(String filename) {","lastModifiedDate":"2023-10-28"},{"lineNumber":31,"author":{"gitId":"chongkelv123"},"content":"        return new Storage(TEST_DATA_FOLDER + \"/\" + filename);","lastModifiedDate":"2023-10-28"},{"lineNumber":32,"author":{"gitId":"chongkelv123"},"content":"    }","lastModifiedDate":"2023-10-28"},{"lineNumber":33,"author":{"gitId":"chongkelv123"},"content":"","lastModifiedDate":"2023-10-28"},{"lineNumber":34,"author":{"gitId":"chongkelv123"},"content":"}","lastModifiedDate":"2023-10-28"}],"authorContributionMap":{"chongkelv123":34}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"chongkelv123"},"content":"todo read book","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"chongkelv123"},"content":"mark 1","lastModifiedDate":"2023-09-03"},{"lineNumber":3,"author":{"gitId":"chongkelv123"},"content":"deadline return book /by June 6th","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"chongkelv123"},"content":"event project meeting /from Aug 6th 2pm /to 4pm","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"chongkelv123"},"content":"todo join sports club","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"chongkelv123"},"content":"mark 4","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"chongkelv123"},"content":"unmark 1","lastModifiedDate":"2023-09-17"},{"lineNumber":8,"author":{"gitId":"chongkelv123"},"content":"todo borrow book","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"chongkelv123"},"content":"delete 5","lastModifiedDate":"2023-10-16"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"chongkelv123"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"chongkelv123"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"chongkelv123"},"content":"list","lastModifiedDate":"2023-09-03"},{"lineNumber":14,"author":{"gitId":"chongkelv123"},"content":"delete 4","lastModifiedDate":"2023-09-23"},{"lineNumber":15,"author":{"gitId":"chongkelv123"},"content":"list","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"chongkelv123"},"content":"blah","lastModifiedDate":"2023-09-17"},{"lineNumber":17,"author":{"gitId":"chongkelv123"},"content":"mark a","lastModifiedDate":"2023-09-17"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"mark","lastModifiedDate":"2023-09-17"},{"lineNumber":19,"author":{"gitId":"chongkelv123"},"content":"todo","lastModifiedDate":"2023-09-17"},{"lineNumber":20,"author":{"gitId":"chongkelv123"},"content":"deadline","lastModifiedDate":"2023-09-17"},{"lineNumber":21,"author":{"gitId":"chongkelv123"},"content":"deadline return book","lastModifiedDate":"2023-09-17"},{"lineNumber":22,"author":{"gitId":"chongkelv123"},"content":"event","lastModifiedDate":"2023-09-17"},{"lineNumber":23,"author":{"gitId":"chongkelv123"},"content":"event project meeting","lastModifiedDate":"2023-09-17"},{"lineNumber":24,"author":{"gitId":"chongkelv123"},"content":"event project meeting /from Aug 6th 2pm","lastModifiedDate":"2023-09-17"},{"lineNumber":25,"author":{"gitId":"chongkelv123"},"content":"delete a","lastModifiedDate":"2023-09-23"},{"lineNumber":26,"author":{"gitId":"chongkelv123"},"content":"delete 7","lastModifiedDate":"2023-09-23"},{"lineNumber":27,"author":{"gitId":"chongkelv123"},"content":"list abc","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"chongkelv123"},"content":"bye a1","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"chongkelv123"},"content":"bye","lastModifiedDate":"2023-09-03"}],"authorContributionMap":{"chongkelv123":29}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"chongkelv123"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"chongkelv123"},"content":"java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"chongkelv123":2,"-":19}}]
