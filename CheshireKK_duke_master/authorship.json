[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"    mainClass.set(\"MainProject.Duke\")","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"    archiveVersion \u003d \"1.1\"","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"CheshireKK":2,"-":41}},{"path":"build/scripts/duke-master.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"@rem","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"@rem Copyright 2015 the original author or authors.","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"@rem","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"@rem you may not use this file except in compliance with the License.","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"@rem You may obtain a copy of the License at","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"@rem","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"@rem","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"@rem Unless required by applicable law or agreed to in writing, software","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"@rem See the License for the specific language governing permissions and","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"@rem limitations under the License.","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"@rem","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"@if \"%DEBUG%\"\u003d\u003d\"\" @echo off","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"@rem","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"@rem  duke-master startup script for Windows","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"@rem","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"if \"%DIRNAME%\"\u003d\u003d\"\" set DIRNAME\u003d.","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"@rem This is normally unused","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"set APP_HOME\u003d%DIRNAME%..","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter.","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and DUKE_MASTER_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"set DEFAULT_JVM_OPTS\u003d","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"@rem Find java.exe","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"if %ERRORLEVEL% equ 0 goto execute","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"echo.","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"echo.","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"goto fail","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"if exist \"%JAVA_EXE%\" goto execute","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"echo.","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"echo.","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"goto fail","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":":execute","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"@rem Setup the command line","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"set CLASSPATH\u003d%APP_HOME%\\lib\\duke-master.jar","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"@rem Execute duke-master","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %DUKE_MASTER_OPTS%  -classpath \"%CLASSPATH%\" MainProject.Duke %*","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":":end","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"if %ERRORLEVEL% equ 0 goto mainEnd","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":":fail","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"rem Set variable DUKE_MASTER_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"set EXIT_CODE\u003d%ERRORLEVEL%","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"if %EXIT_CODE% equ 0 set EXIT_CODE\u003d1","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"if not \"\"\u003d\u003d\"%DUKE_MASTER_EXIT_CONSOLE%\" exit %EXIT_CODE%","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"exit /b %EXIT_CODE%","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":":mainEnd","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":":omega","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":92}},{"path":"build/scriptsShadow/duke-master.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"@rem","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"@rem  duke-master startup script for Windows","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"@rem","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"@rem ##########################################################################","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"@rem Set local scope for the variables with windows NT shell","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"set DIRNAME\u003d%~dp0","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d.","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"set APP_BASE_NAME\u003d%~n0","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"set APP_HOME\u003d%DIRNAME%..","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and DUKE_MASTER_OPTS to pass JVM options to this script.","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"set DEFAULT_JVM_OPTS\u003d","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"@rem Find java.exe","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"set JAVA_EXE\u003djava.exe","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"echo.","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH.","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"echo.","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"goto fail","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":":findJavaFromJavaHome","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"if exist \"%JAVA_EXE%\" goto init","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"echo.","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"echo.","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"echo Please set the JAVA_HOME variable in your environment to match the","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"echo location of your Java installation.","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"goto fail","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":":init","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"@rem Get command-line arguments, handling Windows variants","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":":win9xME_args","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"@rem Slurp the command line arguments.","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"set CMD_LINE_ARGS\u003d","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"set _SKIP\u003d2","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":":win9xME_args_slurp","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"set CMD_LINE_ARGS\u003d%*","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":":execute","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"@rem Setup the command line","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"set CLASSPATH\u003d%APP_HOME%\\lib\\duke-1.1.jar","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"@rem Execute duke-master","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %DUKE_MASTER_OPTS%  -jar \"%CLASSPATH%\" %CMD_LINE_ARGS%","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":":end","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"@rem End local scope for the variables with windows NT shell","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":":fail","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"rem Set variable DUKE_MASTER_EXIT_CONSOLE if you need the _script_ return code instead of","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"rem the _cmd.exe /c_ return code!","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"if  not \"\" \u003d\u003d \"%DUKE_MASTER_EXIT_CONSOLE%\" exit 1","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"exit /b 1","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":":mainEnd","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":":omega","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":84}},{"path":"src/main/java/Exceptions/InvalidRangeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Exceptions;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"public class InvalidRangeException extends Exception {","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"    public InvalidRangeException(String message) {","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"        super(message);","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":7}},{"path":"src/main/java/Interface/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Interface;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":" * Handles UI printing.","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"public class UI {","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"    private static String logo \u003d \"  _____ _           _        \\n\" +","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"            \" / ____| |         | |       \\n\" +","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"            \"| |    | |__   __ _| |_  \\n\" +","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"            \"| |    | \u0027_ \\\\ / _` | __/ \\n\" +","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"            \"| |____| | | | (_| | |  \\n\" +","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"            \" \\\\_____|_| |_|\\\\__,_|\\\\__\\\\\\n\";","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"    private static String horizontalLine \u003d \"_______________________________________________\\n\";","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"    private static String acceptedCommands \u003d \"Accepted commands are:\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tlist \u003d List all the tasks that are stored\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"            + \"\\ttodo \u003cTask to be added in\u003e \u003d Adds a task to the list\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tdeadline \u003cTask to be added in\u003e /by \u003cdate YYYY-MM-DD, time HH:MM, or date time YYYY-MM-DD HH:MM\u003e \u003d Adds a deadline task to the list\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tevent \u003cTask to be added in\u003e /from \u003cStart date YYYY-MM-DD, time HH:MM, or date time YYYY-MM-DD HH:MM\u003e /to \u003cEnd date YYYY-MM-DD, time HH:MM, or date time YYYY-MM-DD HH:MM\u003e \u003d Adds a event task to the list\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tmark \u003cTask number to be marked\u003e \u003d marks the task as completed\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tunmark \u003cTask number to be unmarked\u003e \u003d mark the task as not completed\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tdelete \u003cTask number to be deleted\u003e \u003d deletes the task\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tfind \u003csearch phrase\u003e \u003d finds all tasks with the search phrase\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tview \u003cdate\u003e \u003d View all tasks for the specific date\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tarchive \u003cfilename\u003e \u003d Archives all current tasks into \u003cfilename\u003e in the tasklist folder\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"            + \"\\tbye \u003d Say goodbye to Chat\";","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"     * Displays the welcome message with the logo.","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"    public void showWelcomeMessage() {","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"        System.out.println(logo + \"Hello! My name is Chat.\");","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"        System.out.print(horizontalLine);","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"     * Displays a message to confirm storing a task.","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"     * @param taskDescription Task\u0027s description","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"     * @param taskType Task\u0027s type","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"    public void showStoreOutput(String taskDescription, String taskType){","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"        System.out.println(\"[+] Got it. Storing \u0027\" + taskDescription + \"\u0027 as a \" + taskType + \".\");","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"     * Displays a message to confirm archiving all tasks.","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"     * @param fileName File name of the archiving file","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"    public void showArchiveOutput(String fileName){","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"        System.out.println(\"[+] Got it. Archiving current tasks into the tasklist folder as filename \u0027\" + fileName +\"\u0027 in the tasklist folder\");","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"     * Displays a message to confirm marking or unmarking a task.","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"     * @param taskDescription Task\u0027s description","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"     * @param markUnmark Whether if it is marking or unmarking a task","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"    public void showMarkUnMarkOutput(int taskDescription, String markUnmark){","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"        System.out.println(\"[+] \" + markUnmark + \" task \" + taskDescription + \"!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"     * Displays a message to find task(s) with a specific search phrase.","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"     * @param taskDescription Search phrase to be searched","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"    public void findOutput(String taskDescription){","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"        System.out.println(\"[+] Finding tasks with: \" + taskDescription + \"!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"     * Gets user input from the console.","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"     * @return The user\u0027s input as a string.","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"    public String getUserInput() {","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"        System.out.print(\"Enter a command \u003e \");","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"        // Checks for Control-C so that the exception message doesn\u0027t appear","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"            return scanner.nextLine();","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"        } catch (java.util.NoSuchElementException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"Control-C detected. Exiting\");","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"            return \"\";","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":100,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":101,"author":{"gitId":"CheshireKK"},"content":"     * Displays a horizontal line","lastModifiedDate":"2023-11-19"},{"lineNumber":102,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":103,"author":{"gitId":"CheshireKK"},"content":"    public void showHorizontalLine() {","lastModifiedDate":"2023-11-19"},{"lineNumber":104,"author":{"gitId":"CheshireKK"},"content":"        System.out.print(\"\\n\" + horizontalLine + \"\\n\");","lastModifiedDate":"2023-11-19"},{"lineNumber":105,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":106,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":107,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":108,"author":{"gitId":"CheshireKK"},"content":"     * Displays a help message","lastModifiedDate":"2023-11-19"},{"lineNumber":109,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":110,"author":{"gitId":"CheshireKK"},"content":"    public void showHelp(){","lastModifiedDate":"2023-11-19"},{"lineNumber":111,"author":{"gitId":"CheshireKK"},"content":"        System.out.println(acceptedCommands);","lastModifiedDate":"2023-11-19"},{"lineNumber":112,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":113,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":114,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":115,"author":{"gitId":"CheshireKK"},"content":"     * Prompts the user for input.","lastModifiedDate":"2023-11-19"},{"lineNumber":116,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":117,"author":{"gitId":"CheshireKK"},"content":"    public void askCommands(){","lastModifiedDate":"2023-11-19"},{"lineNumber":118,"author":{"gitId":"CheshireKK"},"content":"        System.out.print(\"What do you wish to do? - Enter \u0027help\u0027 for a list of accepted commands\\n\");","lastModifiedDate":"2023-11-19"},{"lineNumber":119,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":120,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":121,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":122,"author":{"gitId":"CheshireKK"},"content":"     * Displays a goodbye message.","lastModifiedDate":"2023-11-19"},{"lineNumber":123,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":124,"author":{"gitId":"CheshireKK"},"content":"    public void showGoodBye(){","lastModifiedDate":"2023-11-19"},{"lineNumber":125,"author":{"gitId":"CheshireKK"},"content":"        System.out.println(\"Goodbye. See you soon\");","lastModifiedDate":"2023-11-19"},{"lineNumber":126,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":127,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":128,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":128}},{"path":"src/main/java/List/Tasklist.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package List;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import Tasks.Deadline;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"import Tasks.Event;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"import Tasks.Task;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":" * Manages and operators a list of tasks.","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"public class Tasklist {","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"     * Constructs a Tasklist object.","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"     * @param allTasks An arraylist that contains all the tasks","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"    public Tasklist(ArrayList\u003cTask\u003e allTasks) {","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"        this.tasks \u003d allTasks;","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"     * List all tasks in the task list.","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"    public void listTasks(){","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"        if (tasks.size() \u003d\u003d 0){","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"No tasks at the moment!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"            for (int i \u003d 0; i\u003c tasks.size(); i++){","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"                System.out.println(\"(\" + (i + 1) + \") \" + tasks.get(i));","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"     * Deletes a task from the task list at the specified index.","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"     * @param indexToDelete Index in the Tasklist array to be deleted","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"    public void deleteTask(int indexToDelete){","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"        tasks.remove(indexToDelete);","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"     * Stores a new task in the task list with a task description.","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"     * @param userInput Task\u0027s description that was inputted by User","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"    public void storeTasks(String userInput) {","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"        tasks.add(new Task(userInput, false));","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"     * Stores a new deadline in the task list","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"     * @param userInput Task\u0027s description that was inputted by User","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"     * @param doneBefore Task\u0027s deadline that was inputted by User","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"    public void storeTasks(String userInput, Temporal doneBefore){","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"        tasks.add(new Deadline(userInput, false, doneBefore));","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"     * Stores a new event in the task list","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"     * @param userInput Task\u0027s description that was inputted by User","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"     * @param doneFrom Task\u0027s Date From that was inputted by User","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"     * @param doneTo Task\u0027s Date To that was inputted by User","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"    public void storeTasks(String userInput, Temporal doneFrom, Temporal doneTo){","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"        tasks.add(new Event(userInput, false, doneFrom, doneTo));","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"     * Checks if a task index is within the valid range.","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"     * @param taskString Index of tasklist to be checked","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"     * @return Boolean if within range","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"CheshireKK"},"content":"    public boolean checkTaskRange(int taskString){","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":100,"author":{"gitId":"CheshireKK"},"content":"        int taskIndex \u003d taskString - 1;","lastModifiedDate":"2023-11-19"},{"lineNumber":101,"author":{"gitId":"CheshireKK"},"content":"        if (taskIndex \u003e\u003d 0 \u0026\u0026 taskIndex \u003c tasks.size()){","lastModifiedDate":"2023-11-19"},{"lineNumber":102,"author":{"gitId":"CheshireKK"},"content":"            return true;","lastModifiedDate":"2023-11-19"},{"lineNumber":103,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":104,"author":{"gitId":"CheshireKK"},"content":"            return false;","lastModifiedDate":"2023-11-19"},{"lineNumber":105,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":106,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":107,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":108,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":109,"author":{"gitId":"CheshireKK"},"content":"     * Gets the list of tasks.","lastModifiedDate":"2023-11-19"},{"lineNumber":110,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":111,"author":{"gitId":"CheshireKK"},"content":"     * @return The list of tasks.","lastModifiedDate":"2023-11-19"},{"lineNumber":112,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":113,"author":{"gitId":"CheshireKK"},"content":"    public ArrayList\u003cTask\u003e getTasks(){","lastModifiedDate":"2023-11-19"},{"lineNumber":114,"author":{"gitId":"CheshireKK"},"content":"        return this.tasks;","lastModifiedDate":"2023-11-19"},{"lineNumber":115,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":116,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":117,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":118,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":119,"author":{"gitId":"CheshireKK"},"content":"     * Gets a task by its index.","lastModifiedDate":"2023-11-19"},{"lineNumber":120,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":121,"author":{"gitId":"CheshireKK"},"content":"     * @param taskNum Index of a task within the Task List array","lastModifiedDate":"2023-11-19"},{"lineNumber":122,"author":{"gitId":"CheshireKK"},"content":"     * @return The task at the specified index.","lastModifiedDate":"2023-11-19"},{"lineNumber":123,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":124,"author":{"gitId":"CheshireKK"},"content":"    public Task getTask(int taskNum){","lastModifiedDate":"2023-11-19"},{"lineNumber":125,"author":{"gitId":"CheshireKK"},"content":"        return this.tasks.get(taskNum-1);","lastModifiedDate":"2023-11-19"},{"lineNumber":126,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":127,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":128,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":129,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":130,"author":{"gitId":"CheshireKK"},"content":"     * Looks for tasks with a specific search phrase and prints them out","lastModifiedDate":"2023-11-19"},{"lineNumber":131,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":132,"author":{"gitId":"CheshireKK"},"content":"     * @param searchPhrase Search phrase to be searched within task description","lastModifiedDate":"2023-11-19"},{"lineNumber":133,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":134,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":135,"author":{"gitId":"CheshireKK"},"content":"    public void findTasksViaDescription(String searchPhrase) {","lastModifiedDate":"2023-11-19"},{"lineNumber":136,"author":{"gitId":"CheshireKK"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-19"},{"lineNumber":137,"author":{"gitId":"CheshireKK"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-11-19"},{"lineNumber":138,"author":{"gitId":"CheshireKK"},"content":"            if (task.getTaskDescription().contains(searchPhrase)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":139,"author":{"gitId":"CheshireKK"},"content":"                foundTasks.add(task);","lastModifiedDate":"2023-11-19"},{"lineNumber":140,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":141,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":142,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":143,"author":{"gitId":"CheshireKK"},"content":"        if (foundTasks.size() \u003e\u003d 1){","lastModifiedDate":"2023-11-19"},{"lineNumber":144,"author":{"gitId":"CheshireKK"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2023-11-19"},{"lineNumber":145,"author":{"gitId":"CheshireKK"},"content":"                System.out.println(\"(\" + (i + 1) + \") \" + foundTasks.get(i));","lastModifiedDate":"2023-11-19"},{"lineNumber":146,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":147,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":148,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"No suitable tasks found!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":149,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":150,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":151,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":152,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":153,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":154,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":155,"author":{"gitId":"CheshireKK"},"content":"     * Converts input into LocalDate format to be used for findTasksViaDate()","lastModifiedDate":"2023-11-19"},{"lineNumber":156,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":157,"author":{"gitId":"CheshireKK"},"content":"     * @param inputLocalDateTime Temporal variable to be converted to LocalDate","lastModifiedDate":"2023-11-19"},{"lineNumber":158,"author":{"gitId":"CheshireKK"},"content":"     * @return LocalDate variable","lastModifiedDate":"2023-11-19"},{"lineNumber":159,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":160,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":161,"author":{"gitId":"CheshireKK"},"content":"    private LocalDate convertLocalDateTime(Temporal inputLocalDateTime){","lastModifiedDate":"2023-11-19"},{"lineNumber":162,"author":{"gitId":"CheshireKK"},"content":"        if (inputLocalDateTime instanceof LocalDate){","lastModifiedDate":"2023-11-19"},{"lineNumber":163,"author":{"gitId":"CheshireKK"},"content":"            LocalDate ldPlaceHolder \u003d (LocalDate) inputLocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":164,"author":{"gitId":"CheshireKK"},"content":"            return ldPlaceHolder;","lastModifiedDate":"2023-11-19"},{"lineNumber":165,"author":{"gitId":"CheshireKK"},"content":"        } else if (inputLocalDateTime instanceof LocalDateTime) {","lastModifiedDate":"2023-11-19"},{"lineNumber":166,"author":{"gitId":"CheshireKK"},"content":"            LocalDateTime ldtPlaceHolder \u003d (LocalDateTime) inputLocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":167,"author":{"gitId":"CheshireKK"},"content":"            LocalDate ldPlaceHolder \u003d ldtPlaceHolder.toLocalDate();","lastModifiedDate":"2023-11-19"},{"lineNumber":168,"author":{"gitId":"CheshireKK"},"content":"            return ldPlaceHolder;","lastModifiedDate":"2023-11-19"},{"lineNumber":169,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":170,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":171,"author":{"gitId":"CheshireKK"},"content":"        return null;","lastModifiedDate":"2023-11-19"},{"lineNumber":172,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":173,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":174,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":175,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":176,"author":{"gitId":"CheshireKK"},"content":"     * Looks for tasks with a specific date and prints them out","lastModifiedDate":"2023-11-19"},{"lineNumber":177,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":178,"author":{"gitId":"CheshireKK"},"content":"     * @param searchDateInput Search date to be searched","lastModifiedDate":"2023-11-19"},{"lineNumber":179,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":180,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":181,"author":{"gitId":"CheshireKK"},"content":"    public void findTasksViaDate(Temporal searchDateInput) {","lastModifiedDate":"2023-11-19"},{"lineNumber":182,"author":{"gitId":"CheshireKK"},"content":"        ArrayList\u003cTask\u003e foundTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-19"},{"lineNumber":183,"author":{"gitId":"CheshireKK"},"content":"        LocalDate searchDate \u003d convertLocalDateTime(searchDateInput);","lastModifiedDate":"2023-11-19"},{"lineNumber":184,"author":{"gitId":"CheshireKK"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-11-19"},{"lineNumber":185,"author":{"gitId":"CheshireKK"},"content":"            if (task instanceof Deadline) {","lastModifiedDate":"2023-11-19"},{"lineNumber":186,"author":{"gitId":"CheshireKK"},"content":"                Deadline deadline \u003d (Deadline) task;","lastModifiedDate":"2023-11-19"},{"lineNumber":187,"author":{"gitId":"CheshireKK"},"content":"                Temporal doneBefore \u003d deadline.getDoneBefore();","lastModifiedDate":"2023-11-19"},{"lineNumber":188,"author":{"gitId":"CheshireKK"},"content":"                LocalDate deadlineDate \u003d convertLocalDateTime(doneBefore);","lastModifiedDate":"2023-11-19"},{"lineNumber":189,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":190,"author":{"gitId":"CheshireKK"},"content":"                if (searchDate.compareTo(deadlineDate) \u003d\u003d 0) {","lastModifiedDate":"2023-11-19"},{"lineNumber":191,"author":{"gitId":"CheshireKK"},"content":"                    foundTasks.add(deadline);","lastModifiedDate":"2023-11-19"},{"lineNumber":192,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":193,"author":{"gitId":"CheshireKK"},"content":"            } else if (task instanceof Event) {","lastModifiedDate":"2023-11-19"},{"lineNumber":194,"author":{"gitId":"CheshireKK"},"content":"                Event event \u003d (Event) task;","lastModifiedDate":"2023-11-19"},{"lineNumber":195,"author":{"gitId":"CheshireKK"},"content":"                Temporal doneFrom \u003d event.getDoneFrom();","lastModifiedDate":"2023-11-19"},{"lineNumber":196,"author":{"gitId":"CheshireKK"},"content":"                Temporal doneTo \u003d event.getDoneTo();","lastModifiedDate":"2023-11-19"},{"lineNumber":197,"author":{"gitId":"CheshireKK"},"content":"                LocalDate eventDateFrom \u003d convertLocalDateTime(doneFrom);","lastModifiedDate":"2023-11-19"},{"lineNumber":198,"author":{"gitId":"CheshireKK"},"content":"                LocalDate eventDateTo \u003d convertLocalDateTime(doneTo);","lastModifiedDate":"2023-11-19"},{"lineNumber":199,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":200,"author":{"gitId":"CheshireKK"},"content":"                //Checks to see if searchDate is between eventDateFrom and eventDateTo","lastModifiedDate":"2023-11-19"},{"lineNumber":201,"author":{"gitId":"CheshireKK"},"content":"                if (searchDate.compareTo(eventDateFrom) \u003e\u003d 0 \u0026\u0026 searchDate.compareTo(eventDateTo) \u003c\u003d 0) {","lastModifiedDate":"2023-11-19"},{"lineNumber":202,"author":{"gitId":"CheshireKK"},"content":"                    foundTasks.add(task);","lastModifiedDate":"2023-11-19"},{"lineNumber":203,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":204,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":205,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":206,"author":{"gitId":"CheshireKK"},"content":"        if (!foundTasks.isEmpty()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":207,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"Tasks with date \" + searchDate + \":\");","lastModifiedDate":"2023-11-19"},{"lineNumber":208,"author":{"gitId":"CheshireKK"},"content":"            for (int i \u003d 0; i \u003c foundTasks.size(); i++) {","lastModifiedDate":"2023-11-19"},{"lineNumber":209,"author":{"gitId":"CheshireKK"},"content":"                System.out.println(\"(\" + (i + 1) + \") \" + foundTasks.get(i));","lastModifiedDate":"2023-11-19"},{"lineNumber":210,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":211,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":212,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"No tasks found for date \" + searchDate);","lastModifiedDate":"2023-11-19"},{"lineNumber":213,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":214,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":215,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":216,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":216}},{"path":"src/main/java/MainProject/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package MainProject;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import Exceptions.InvalidRangeException;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"import Interface.UI;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"import Parse.ParsedCommand;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"import Parse.Parser;","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"import Storage.Storage;","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"import List.Tasklist;","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":" * Main engine for the program","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"public class Duke {","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"   public static void main(String[] args) {","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"       UI ui \u003d new UI();","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"       Storage storage \u003d new Storage();","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"       Tasklist myTaskList \u003d new Tasklist(storage.loadTasksFromFile());","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"       Parser parser \u003d new Parser();","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"       String userInput;","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"       ui.showWelcomeMessage();","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"        while (true){","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"            ui.askCommands();","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"            userInput \u003d ui.getUserInput();","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"            ParsedCommand parsedCommand \u003d parser.parseCommand(userInput);","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"            assert myTaskList !\u003d null;","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"            assert storage !\u003d null;","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"            switch(parsedCommand.getCommandType()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"                case \"list\":","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"                    System.out.println(\"Listing out all stored tasks\");","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"                    myTaskList.listTasks();","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"                case \"bye\":","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"                    ui.showGoodBye();","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"                    System.exit(0);","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"                case \"help\":","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"                    ui.showHelp();","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"                case \"find\":","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"                    ui.findOutput(parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"                    myTaskList.findTasksViaDescription(parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"                case \"view\":","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"                    myTaskList.findTasksViaDate(parsedCommand.getFindDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"                case \"todo\":","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"                    ui.showStoreOutput(parsedCommand.getTaskDescription(), \"todo\");","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"                    myTaskList.storeTasks(parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"                    myTaskList.listTasks();","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"                case \"deadline\":","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"                    ui.showStoreOutput(parsedCommand.getTaskDescription(), \"deadline\");","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"                    myTaskList.storeTasks(parsedCommand.getTaskDescription(), parsedCommand.getDeadline());","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"                    myTaskList.listTasks();","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"                case \"event\":","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"                    ui.showStoreOutput(parsedCommand.getTaskDescription(), \"event\");","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"                    myTaskList.storeTasks(parsedCommand.getTaskDescription(), parsedCommand.getStartDate(), parsedCommand.getEndDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"                    myTaskList.listTasks();","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"                case \"mark\":","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"                    try {","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"                        int taskIndex \u003d parsedCommand.getTaskIndex();","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"                        if (myTaskList.checkTaskRange(taskIndex)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"                            ui.showMarkUnMarkOutput(parsedCommand.getTaskIndex(), \"Mark\");","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"                            myTaskList.getTask(taskIndex).markDone();","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"                        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"                            throw new InvalidRangeException(\"Task index is wrong\");","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"                        }","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"                        myTaskList.listTasks();","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"                    } catch (InvalidRangeException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"                        System.out.println(\"[-] Error: \" + e.getMessage());","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"                    }","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"                case \"unmark\":","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"                    try {","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"                        int taskIndex \u003d parsedCommand.getTaskIndex();","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"                        if (myTaskList.checkTaskRange(taskIndex)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"                            ui.showMarkUnMarkOutput(parsedCommand.getTaskIndex(), \"Unmark\");","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"                            myTaskList.getTask(taskIndex).unmarkDone();","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"                        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"CheshireKK"},"content":"                            throw new InvalidRangeException(\"Task index is wrong\");","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"CheshireKK"},"content":"                        }","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"CheshireKK"},"content":"                        myTaskList.listTasks();","lastModifiedDate":"2023-11-19"},{"lineNumber":100,"author":{"gitId":"CheshireKK"},"content":"                    } catch (InvalidRangeException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":101,"author":{"gitId":"CheshireKK"},"content":"                        System.out.println(\"[-] Error: \" + e.getMessage());","lastModifiedDate":"2023-11-19"},{"lineNumber":102,"author":{"gitId":"CheshireKK"},"content":"                    }","lastModifiedDate":"2023-11-19"},{"lineNumber":103,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":104,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":105,"author":{"gitId":"CheshireKK"},"content":"                case \"delete\":","lastModifiedDate":"2023-11-19"},{"lineNumber":106,"author":{"gitId":"CheshireKK"},"content":"                    try {","lastModifiedDate":"2023-11-19"},{"lineNumber":107,"author":{"gitId":"CheshireKK"},"content":"                        int taskIndex \u003d (parsedCommand.getTaskIndex());","lastModifiedDate":"2023-11-19"},{"lineNumber":108,"author":{"gitId":"CheshireKK"},"content":"                        if (myTaskList.checkTaskRange(taskIndex)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":109,"author":{"gitId":"CheshireKK"},"content":"                            ui.showMarkUnMarkOutput(parsedCommand.getTaskIndex(), \"Delete\");","lastModifiedDate":"2023-11-19"},{"lineNumber":110,"author":{"gitId":"CheshireKK"},"content":"                            myTaskList.deleteTask(taskIndex - 1);","lastModifiedDate":"2023-11-19"},{"lineNumber":111,"author":{"gitId":"CheshireKK"},"content":"                        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":112,"author":{"gitId":"CheshireKK"},"content":"                            throw new InvalidRangeException(\"Task index is wrong\");","lastModifiedDate":"2023-11-19"},{"lineNumber":113,"author":{"gitId":"CheshireKK"},"content":"                        }","lastModifiedDate":"2023-11-19"},{"lineNumber":114,"author":{"gitId":"CheshireKK"},"content":"                        myTaskList.listTasks();","lastModifiedDate":"2023-11-19"},{"lineNumber":115,"author":{"gitId":"CheshireKK"},"content":"                    } catch (InvalidRangeException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":116,"author":{"gitId":"CheshireKK"},"content":"                        System.out.println(\"[-] Error: \" + e.getMessage());","lastModifiedDate":"2023-11-19"},{"lineNumber":117,"author":{"gitId":"CheshireKK"},"content":"                    }","lastModifiedDate":"2023-11-19"},{"lineNumber":118,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":119,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":120,"author":{"gitId":"CheshireKK"},"content":"                case \"archive\":","lastModifiedDate":"2023-11-19"},{"lineNumber":121,"author":{"gitId":"CheshireKK"},"content":"                    storage.saveTasksToFile(myTaskList.getTasks(), parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":122,"author":{"gitId":"CheshireKK"},"content":"                    ui.showArchiveOutput(parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":123,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":124,"author":{"gitId":"CheshireKK"},"content":"                default:","lastModifiedDate":"2023-11-19"},{"lineNumber":125,"author":{"gitId":"CheshireKK"},"content":"                    System.out.println(\"[-] \" + parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":126,"author":{"gitId":"CheshireKK"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":127,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":128,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":129,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":130,"author":{"gitId":"CheshireKK"},"content":"            ui.showHorizontalLine();","lastModifiedDate":"2023-11-19"},{"lineNumber":131,"author":{"gitId":"CheshireKK"},"content":"            storage.saveTasksToFile(myTaskList.getTasks(), null);","lastModifiedDate":"2023-11-19"},{"lineNumber":132,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":133,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":134,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":134}},{"path":"src/main/java/Parse/ParsedCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Parse;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":" * Represents a parsed user command","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"public class ParsedCommand {","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"    private String commandType;","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"    private String taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"    private Temporal findDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"    private Temporal deadline;","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"    private Temporal startDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"    private Temporal endDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"    private int taskIndex;","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"     * Constructs commands like \"list\", \"bye\", \"help\".","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"     * @param commandType Type of Command","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"    public ParsedCommand(String commandType) {","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"     * Constructs commands for the \"todo\", \"find\", and \"save\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"     * @param commandType Type of Command","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"     * @param taskDescription Task Description","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"    public ParsedCommand(String commandType, String taskDescription) {","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"     * Constructs commands for the \"finddate\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"     * @param commandType Type of Command","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"     * @param findDate Date to be searched","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"    public ParsedCommand(String commandType, Temporal findDate) {","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"        this.findDate \u003d findDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"     * Constructs commands for the \"mark/unmark\" or \"delete\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"     * @param commandType Type of Command","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"     * @param taskIndex Index of the task to be marked, unmarked or deleted","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"    public ParsedCommand(String commandType, int taskIndex) {","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"     * Constructs commands for the \"deadline\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"     * @param commandType Type of Command","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"     * @param taskDescription Task\u0027s Description","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"     * @param deadline Deadline of task","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"    public ParsedCommand(String commandType, String taskDescription, Temporal deadline) {","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"     * Constructs commands for the \"event\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"     * @param commandType Type of Command","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"     * @param taskDescription Task\u0027s description","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"     * @param startDate Start date of task","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"     * @param endDate End date of task","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"    public ParsedCommand(String commandType, String taskDescription, Temporal startDate, Temporal endDate) {","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"        this.commandType \u003d commandType;","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"        this.taskDescription \u003d taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"        this.startDate \u003d startDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"        this.endDate \u003d endDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"     * Gets the type of the parsed command.","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"     * @return The type of the command.","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"    public String getCommandType() {","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"        return commandType;","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"CheshireKK"},"content":"     * Gets the description of the task associated with the command.","lastModifiedDate":"2023-11-19"},{"lineNumber":100,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":101,"author":{"gitId":"CheshireKK"},"content":"     * @return The task description.","lastModifiedDate":"2023-11-19"},{"lineNumber":102,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":103,"author":{"gitId":"CheshireKK"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-11-19"},{"lineNumber":104,"author":{"gitId":"CheshireKK"},"content":"        return taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":105,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":106,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":107,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":108,"author":{"gitId":"CheshireKK"},"content":"     * Gets the deadline associated with the command.","lastModifiedDate":"2023-11-19"},{"lineNumber":109,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":110,"author":{"gitId":"CheshireKK"},"content":"     * @return The deadline as a Temporal object.","lastModifiedDate":"2023-11-19"},{"lineNumber":111,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":112,"author":{"gitId":"CheshireKK"},"content":"    public Temporal getDeadline() {","lastModifiedDate":"2023-11-19"},{"lineNumber":113,"author":{"gitId":"CheshireKK"},"content":"        return deadline;","lastModifiedDate":"2023-11-19"},{"lineNumber":114,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":115,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":116,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":117,"author":{"gitId":"CheshireKK"},"content":"     * Gets the start date or time associated with the command.","lastModifiedDate":"2023-11-19"},{"lineNumber":118,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":119,"author":{"gitId":"CheshireKK"},"content":"     * @return The start date or time as a Temporal object.","lastModifiedDate":"2023-11-19"},{"lineNumber":120,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":121,"author":{"gitId":"CheshireKK"},"content":"    public Temporal getStartDate() {","lastModifiedDate":"2023-11-19"},{"lineNumber":122,"author":{"gitId":"CheshireKK"},"content":"        return startDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":123,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":124,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":125,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":126,"author":{"gitId":"CheshireKK"},"content":"     * Gets the end date or time associated with the command.","lastModifiedDate":"2023-11-19"},{"lineNumber":127,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":128,"author":{"gitId":"CheshireKK"},"content":"     * @return The end date or time as a Temporal object.","lastModifiedDate":"2023-11-19"},{"lineNumber":129,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":130,"author":{"gitId":"CheshireKK"},"content":"    public Temporal getEndDate() {","lastModifiedDate":"2023-11-19"},{"lineNumber":131,"author":{"gitId":"CheshireKK"},"content":"        return endDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":132,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":133,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":134,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":135,"author":{"gitId":"CheshireKK"},"content":"     * Gets the index of the task associated with mark/unmark or delete commands.","lastModifiedDate":"2023-11-19"},{"lineNumber":136,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":137,"author":{"gitId":"CheshireKK"},"content":"     * @return The task index.","lastModifiedDate":"2023-11-19"},{"lineNumber":138,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":139,"author":{"gitId":"CheshireKK"},"content":"    public int getTaskIndex() {","lastModifiedDate":"2023-11-19"},{"lineNumber":140,"author":{"gitId":"CheshireKK"},"content":"        return taskIndex;","lastModifiedDate":"2023-11-19"},{"lineNumber":141,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":142,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":143,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":144,"author":{"gitId":"CheshireKK"},"content":"     * Gets the date associated with the find command.","lastModifiedDate":"2023-11-19"},{"lineNumber":145,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":146,"author":{"gitId":"CheshireKK"},"content":"     * @return The date as a Temporal object.","lastModifiedDate":"2023-11-19"},{"lineNumber":147,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":148,"author":{"gitId":"CheshireKK"},"content":"    public Temporal getFindDate() {","lastModifiedDate":"2023-11-19"},{"lineNumber":149,"author":{"gitId":"CheshireKK"},"content":"        return findDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":150,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":151,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":151}},{"path":"src/main/java/Parse/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Parse;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":" * Parses user input and translates it into commands.","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":" * Performs sanitization and checks here","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"public class Parser {","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"    String[] wordArray;","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"     * Parses an input to determine if it is LocalDate format, LocalDateTime, or LocalTime format","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"     * @param input User\u0027s input of Date, Time, both, or none","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"     * @return Temporal object of the LocalDate or LocalDateTime","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"    public static Temporal checkTimeOrNot(String input) {","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"            return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"            // Ignore because this means it\u0027s not LocalDateTime but LocalDate instead","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"            return LocalTime.parse(input, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"            // Ignore because this means it\u0027s not LocalTime","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"            return LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"        return null;","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"     * Loops through the String to find the index of keywords","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"     * @param wordArray Array for keyword to be searched against","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"     * @param keyWord User\u0027s input of search phrase","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"     * @return The index of the keyWord","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"    public int findIndex(String[] wordArray, String keyWord){","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"        assert wordArray !\u003d null : \"Input array is null\";","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"        assert keyWord !\u003d null : \"Keyword is null\";","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"        int byIndex \u003d -1;","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"        for (int i \u003d 1; i \u003c wordArray.length; i++) {","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"            if (wordArray[i].equals(keyWord)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"                byIndex \u003d i;","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"                break;","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"        return byIndex;","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"     * Parses the user input and return a ParsedCommand object.","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"     * @param userInput User\u0027s input","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"     * @return A ParsedCommand object containing information about the user\u0027s command.","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"    public ParsedCommand parseCommand(String userInput){","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"        wordArray \u003d userInput.trim().split(\" \");","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"        if(wordArray.length \u003d\u003d 0){","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"            return new ParsedCommand(\"Invalid\", \"No user input\");","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"        switch(wordArray[0].toLowerCase()){","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"            case \"list\":","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"                return new ParsedCommand(\"list\");","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"            case \"bye\":","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"                return new ParsedCommand(\"bye\");","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"CheshireKK"},"content":"            case \"help\":","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"CheshireKK"},"content":"                return new ParsedCommand(\"help\");","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":100,"author":{"gitId":"CheshireKK"},"content":"            case \"find\":","lastModifiedDate":"2023-11-19"},{"lineNumber":101,"author":{"gitId":"CheshireKK"},"content":"                if (wordArray.length \u003e 1) {","lastModifiedDate":"2023-11-19"},{"lineNumber":102,"author":{"gitId":"CheshireKK"},"content":"                    String taskDescription \u003d String.join(\" \", Arrays.copyOfRange(wordArray, 1, wordArray.length));","lastModifiedDate":"2023-11-19"},{"lineNumber":103,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"find\", taskDescription);","lastModifiedDate":"2023-11-19"},{"lineNumber":104,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":105,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"invalid\", \"Find command missing search phrase. Usage: findphrase \u003csearch phrase\u003e\");","lastModifiedDate":"2023-11-19"},{"lineNumber":106,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":107,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":108,"author":{"gitId":"CheshireKK"},"content":"            case \"view\":","lastModifiedDate":"2023-11-19"},{"lineNumber":109,"author":{"gitId":"CheshireKK"},"content":"                if (wordArray.length \u003d\u003d 2) {","lastModifiedDate":"2023-11-19"},{"lineNumber":110,"author":{"gitId":"CheshireKK"},"content":"                    Temporal taskDate \u003d checkTimeOrNot(wordArray[1]);","lastModifiedDate":"2023-11-19"},{"lineNumber":111,"author":{"gitId":"CheshireKK"},"content":"                    assert taskDate !\u003d null : \"Parsing failed for input: \" + wordArray[1];","lastModifiedDate":"2023-11-19"},{"lineNumber":112,"author":{"gitId":"CheshireKK"},"content":"                    if (taskDate \u003d\u003d null){","lastModifiedDate":"2023-11-19"},{"lineNumber":113,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"invalid\", \"Invalid date format. Usage: view \u003cdate\u003e\");","lastModifiedDate":"2023-11-19"},{"lineNumber":114,"author":{"gitId":"CheshireKK"},"content":"                    } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":115,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"view\", taskDate);","lastModifiedDate":"2023-11-19"},{"lineNumber":116,"author":{"gitId":"CheshireKK"},"content":"                    }","lastModifiedDate":"2023-11-19"},{"lineNumber":117,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":118,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"invalid\", \"View command missing date. Usage: view \u003cdate\u003e\");","lastModifiedDate":"2023-11-19"},{"lineNumber":119,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":120,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":121,"author":{"gitId":"CheshireKK"},"content":"            case \"todo\":","lastModifiedDate":"2023-11-19"},{"lineNumber":122,"author":{"gitId":"CheshireKK"},"content":"                if (wordArray.length \u003e 1) {","lastModifiedDate":"2023-11-19"},{"lineNumber":123,"author":{"gitId":"CheshireKK"},"content":"                    String taskDescription \u003d String.join(\" \", Arrays.copyOfRange(wordArray, 1, wordArray.length));","lastModifiedDate":"2023-11-19"},{"lineNumber":124,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"todo\", taskDescription);","lastModifiedDate":"2023-11-19"},{"lineNumber":125,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":126,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"invalid\", \"Todo command missing the task name. Usage: todo \u003ctask name\u003e\");","lastModifiedDate":"2023-11-19"},{"lineNumber":127,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":128,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":129,"author":{"gitId":"CheshireKK"},"content":"            case \"deadline\":","lastModifiedDate":"2023-11-19"},{"lineNumber":130,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":131,"author":{"gitId":"CheshireKK"},"content":"                int byIndex \u003d findIndex(wordArray, \"/by\");","lastModifiedDate":"2023-11-19"},{"lineNumber":132,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":133,"author":{"gitId":"CheshireKK"},"content":"                if (byIndex !\u003d -1 \u0026\u0026 byIndex \u003e 1 \u0026\u0026 byIndex \u003c wordArray.length - 1) {","lastModifiedDate":"2023-11-19"},{"lineNumber":134,"author":{"gitId":"CheshireKK"},"content":"                    String taskDescription \u003d String.join(\" \", Arrays.copyOfRange(wordArray, 1, byIndex));","lastModifiedDate":"2023-11-19"},{"lineNumber":135,"author":{"gitId":"CheshireKK"},"content":"                    String dateTimePart \u003d String.join(\" \", Arrays.copyOfRange(wordArray, byIndex + 1, wordArray.length));","lastModifiedDate":"2023-11-19"},{"lineNumber":136,"author":{"gitId":"CheshireKK"},"content":"                    Temporal dateTime \u003d checkTimeOrNot(dateTimePart);","lastModifiedDate":"2023-11-19"},{"lineNumber":137,"author":{"gitId":"CheshireKK"},"content":"                    assert dateTime !\u003d null : \"Parsing failed for input: \" + dateTimePart;","lastModifiedDate":"2023-11-19"},{"lineNumber":138,"author":{"gitId":"CheshireKK"},"content":"                    if (dateTime !\u003d null){","lastModifiedDate":"2023-11-19"},{"lineNumber":139,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"deadline\", taskDescription, dateTime);","lastModifiedDate":"2023-11-19"},{"lineNumber":140,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":141,"author":{"gitId":"CheshireKK"},"content":"                    } else{","lastModifiedDate":"2023-11-19"},{"lineNumber":142,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"invalid\", \"Invalid Date. Usage: deadline \u003ctask description\u003e /by \u003cdate\u003e in the format YYYY-MM-DD, /by \u003ctime\u003e in the format HH:MM, or /by \u003cdate time\u003e in the format YYYY-MM-DD HH:MM\");","lastModifiedDate":"2023-11-19"},{"lineNumber":143,"author":{"gitId":"CheshireKK"},"content":"                    }","lastModifiedDate":"2023-11-19"},{"lineNumber":144,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":145,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":146,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"invalid\", \"Deadline command is missing the task description or date/time component. Usage: deadline \u003ctask description\u003e /by \u003cdate\u003e in the format YYYY-MM-DD, /by \u003ctime\u003e in the format HH:MM, or /by \u003cdate time\u003e in the format YYYY-MM-DD HH:MM\");","lastModifiedDate":"2023-11-19"},{"lineNumber":147,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":148,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":149,"author":{"gitId":"CheshireKK"},"content":"            case \"event\":","lastModifiedDate":"2023-11-19"},{"lineNumber":150,"author":{"gitId":"CheshireKK"},"content":"                int fromIndex \u003d findIndex(wordArray, \"/from\");","lastModifiedDate":"2023-11-19"},{"lineNumber":151,"author":{"gitId":"CheshireKK"},"content":"                int toIndex \u003d findIndex(wordArray, \"/to\");","lastModifiedDate":"2023-11-19"},{"lineNumber":152,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":153,"author":{"gitId":"CheshireKK"},"content":"                if (fromIndex !\u003d -1 \u0026\u0026 toIndex !\u003d -1 \u0026\u0026 fromIndex \u003c toIndex \u0026\u0026 toIndex \u003c wordArray.length - 1) {","lastModifiedDate":"2023-11-19"},{"lineNumber":154,"author":{"gitId":"CheshireKK"},"content":"                    String taskDescription \u003d String.join(\" \", Arrays.copyOfRange(wordArray, 1, fromIndex));","lastModifiedDate":"2023-11-19"},{"lineNumber":155,"author":{"gitId":"CheshireKK"},"content":"                    String fromDateTimePart \u003d String.join(\" \", Arrays.copyOfRange(wordArray, fromIndex+1, toIndex));","lastModifiedDate":"2023-11-19"},{"lineNumber":156,"author":{"gitId":"CheshireKK"},"content":"                    String toDateTimePart \u003d String.join(\" \", Arrays.copyOfRange(wordArray, toIndex+1, wordArray.length));","lastModifiedDate":"2023-11-19"},{"lineNumber":157,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":158,"author":{"gitId":"CheshireKK"},"content":"                    Temporal fromDateTime \u003d checkTimeOrNot(fromDateTimePart);","lastModifiedDate":"2023-11-19"},{"lineNumber":159,"author":{"gitId":"CheshireKK"},"content":"                    Temporal toDateTime \u003d checkTimeOrNot(toDateTimePart);","lastModifiedDate":"2023-11-19"},{"lineNumber":160,"author":{"gitId":"CheshireKK"},"content":"                    assert fromDateTime !\u003d null : \"Parsing failed for input: \" + fromDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":161,"author":{"gitId":"CheshireKK"},"content":"                    assert toDateTime !\u003d null : \"Parsing failed for input: \" + toDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":162,"author":{"gitId":"CheshireKK"},"content":"                    // Try to parse \"from\" and \"to\" date-time parts","lastModifiedDate":"2023-11-19"},{"lineNumber":163,"author":{"gitId":"CheshireKK"},"content":"                    if (fromDateTime \u003d\u003d null || toDateTime \u003d\u003d null) {","lastModifiedDate":"2023-11-19"},{"lineNumber":164,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":165,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"invalid\", \"Invalid date, time or date time format for \u0027event\u0027 command. It should be in the YYYY-MM-dd, HH:MM, or YYYY-MM-dd HH:mm format!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":166,"author":{"gitId":"CheshireKK"},"content":"                    } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":167,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"event\", taskDescription, fromDateTime, toDateTime);","lastModifiedDate":"2023-11-19"},{"lineNumber":168,"author":{"gitId":"CheshireKK"},"content":"                    }","lastModifiedDate":"2023-11-19"},{"lineNumber":169,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":170,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"invalid\", \"Event command is missing the task description, \u0027from,\u0027 or \u0027to\u0027 components. Usage: event \u003ctask description\u003e /from \u003cdate/time\u003e /to \u003cdate/time\u003e, where the format of \u003cdate\u003e is YYYY-MM-DD, \u003ctime\u003e is HH:MM, and \u003cdate time\u003e is YYYY-MM-DD HH:MM\");","lastModifiedDate":"2023-11-19"},{"lineNumber":171,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":172,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":173,"author":{"gitId":"CheshireKK"},"content":"            case \"mark\":","lastModifiedDate":"2023-11-19"},{"lineNumber":174,"author":{"gitId":"CheshireKK"},"content":"                if (wordArray.length \u003d\u003d 2){","lastModifiedDate":"2023-11-19"},{"lineNumber":175,"author":{"gitId":"CheshireKK"},"content":"                    try {","lastModifiedDate":"2023-11-19"},{"lineNumber":176,"author":{"gitId":"CheshireKK"},"content":"                        int taskIndex \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2023-11-19"},{"lineNumber":177,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"mark\", taskIndex);","lastModifiedDate":"2023-11-19"},{"lineNumber":178,"author":{"gitId":"CheshireKK"},"content":"                    } catch (NumberFormatException e){","lastModifiedDate":"2023-11-19"},{"lineNumber":179,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"invalid\", \"Mark should be followed by a number!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":180,"author":{"gitId":"CheshireKK"},"content":"                    }","lastModifiedDate":"2023-11-19"},{"lineNumber":181,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":182,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"invalid\", \"Mark command missing Task Index\");","lastModifiedDate":"2023-11-19"},{"lineNumber":183,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":184,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":185,"author":{"gitId":"CheshireKK"},"content":"            case \"unmark\":","lastModifiedDate":"2023-11-19"},{"lineNumber":186,"author":{"gitId":"CheshireKK"},"content":"                if (wordArray.length \u003d\u003d 2){","lastModifiedDate":"2023-11-19"},{"lineNumber":187,"author":{"gitId":"CheshireKK"},"content":"                    try {","lastModifiedDate":"2023-11-19"},{"lineNumber":188,"author":{"gitId":"CheshireKK"},"content":"                        int taskIndex \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2023-11-19"},{"lineNumber":189,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"unmark\", taskIndex);","lastModifiedDate":"2023-11-19"},{"lineNumber":190,"author":{"gitId":"CheshireKK"},"content":"                    } catch (NumberFormatException e){","lastModifiedDate":"2023-11-19"},{"lineNumber":191,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"invalid\", \"Unmark should be followed by a number!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":192,"author":{"gitId":"CheshireKK"},"content":"                    }","lastModifiedDate":"2023-11-19"},{"lineNumber":193,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":194,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"invalid\", \"Unmark command missing Task Index\");","lastModifiedDate":"2023-11-19"},{"lineNumber":195,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":196,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":197,"author":{"gitId":"CheshireKK"},"content":"            case \"delete\":","lastModifiedDate":"2023-11-19"},{"lineNumber":198,"author":{"gitId":"CheshireKK"},"content":"                if (wordArray.length \u003d\u003d 2){","lastModifiedDate":"2023-11-19"},{"lineNumber":199,"author":{"gitId":"CheshireKK"},"content":"                    try {","lastModifiedDate":"2023-11-19"},{"lineNumber":200,"author":{"gitId":"CheshireKK"},"content":"                        int taskIndex \u003d Integer.parseInt(wordArray[1]);","lastModifiedDate":"2023-11-19"},{"lineNumber":201,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"delete\", taskIndex);","lastModifiedDate":"2023-11-19"},{"lineNumber":202,"author":{"gitId":"CheshireKK"},"content":"                    } catch (NumberFormatException e){","lastModifiedDate":"2023-11-19"},{"lineNumber":203,"author":{"gitId":"CheshireKK"},"content":"                        return new ParsedCommand(\"invalid\", \"Delete should be followed by a number!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":204,"author":{"gitId":"CheshireKK"},"content":"                    }","lastModifiedDate":"2023-11-19"},{"lineNumber":205,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":206,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"invalid\", \"Delete command missing Task Index\");","lastModifiedDate":"2023-11-19"},{"lineNumber":207,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":208,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":209,"author":{"gitId":"CheshireKK"},"content":"            case \"archive\":","lastModifiedDate":"2023-11-19"},{"lineNumber":210,"author":{"gitId":"CheshireKK"},"content":"                if (wordArray.length \u003d\u003d 2) {","lastModifiedDate":"2023-11-19"},{"lineNumber":211,"author":{"gitId":"CheshireKK"},"content":"                    String fileName \u003d wordArray[1];","lastModifiedDate":"2023-11-19"},{"lineNumber":212,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"archive\", fileName);","lastModifiedDate":"2023-11-19"},{"lineNumber":213,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":214,"author":{"gitId":"CheshireKK"},"content":"                    return new ParsedCommand(\"invalid\", \"Archive command missing filename. Usage: archive \u003cfilename\u003e\");","lastModifiedDate":"2023-11-19"},{"lineNumber":215,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":216,"author":{"gitId":"CheshireKK"},"content":"            default:","lastModifiedDate":"2023-11-19"},{"lineNumber":217,"author":{"gitId":"CheshireKK"},"content":"                return new ParsedCommand(\"invalid\", \"Could not understand your command!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":218,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":219,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":220,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":221,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":222,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":223,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":223}},{"path":"src/main/java/Storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Storage;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import Tasks.Task;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"import java.io.File;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":" * Manages the saving and loading of the task list into a file","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"public class Storage {","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"    /** File path where the task list is stored. */","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"    private String storageFilePath \u003d \"./tasklist/tasklist.txt\";","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"    /** Relative Folder where the task list is stored. */","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"    private String storageFileFolder \u003d \"./tasklist\";","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"     * Checks if the task list folder exists and creates it if it doesn\u0027t.","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"    public void checkFolderExistence(){","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"            Path directoryPath \u003d Paths.get(storageFileFolder);","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"            if (Files.notExists(directoryPath)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"                Files.createDirectories(directoryPath);","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"            assert Files.exists(directoryPath) : \"Failed to create the Task List folder\";","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"        catch (IOException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"tasklist folder doesn\u0027t exist and unable to create folder: \" + e.getMessage());","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"     * Saves a list of tasks to a file.","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"     * @param myList The list of tasks to be saved.","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"    public void saveTasksToFile(ArrayList\u003cTask\u003e myList, String fileName) {","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"        String myFilePath \u003d \"\";","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"        if (fileName !\u003d null){","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"            myFilePath \u003d storageFileFolder + \"/\" + fileName;","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"            myFilePath \u003d storageFilePath;","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"        if (!myFilePath.endsWith(\".txt\")){","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"            myFilePath +\u003d \".txt\";","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"        checkFolderExistence();","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"            FileWriter fileWriter \u003d new FileWriter(myFilePath);","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"            PrintWriter printWriter \u003d new PrintWriter(fileWriter);","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"            for (Task task : myList) {","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"                printWriter.println(task.toFileString());","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"            printWriter.close();","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"            assert Files.exists(Paths.get(myFilePath)) : \"Failed to create the Task List file\";","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"Error saving the task list to the file: \" + e.getMessage());","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"     * Loads a list of tasks from a file.","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"     * @return An ArrayList containing the loaded tasks.","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"    public ArrayList\u003cTask\u003e loadTasksFromFile() {","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"            Scanner scanner \u003d new Scanner(new File(storageFilePath));","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"                String taskDetails \u003d scanner.nextLine();","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"                Task task \u003d Task.fromString(taskDetails);","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"                if (task !\u003d null) {","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"                    taskList.add(task);","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"            scanner.close();","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"Task list file not found. Creating a fresh Task list file\");","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"CheshireKK"},"content":"        return taskList;","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":99}},{"path":"src/main/java/Tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Tasks;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":" * Represents a task with a deadline.","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"    /** Specialized deadline variable */","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"    protected Temporal doneBefore;","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"     * Constructs a Deadline","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"     * @param description Task\u0027s description","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"     * @param isDone If Task is done or not","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"     * @param doneBefore deadline of task","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"    public Deadline(String description, boolean isDone, Temporal doneBefore){","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"        super(description, isDone);","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"        this.doneBefore \u003d doneBefore;","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"        this.type \u003d \"Deadline\";","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"     * Represents all Deadline variables as a string to be saved into a file","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"     * @return A formatted string representing the Deadline object for storage.","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"    public String toFileString() {","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"        String returnString \u003d this.type + \" | \" + this.isDone + \" | \" + this.taskDescription + \" | \" + this.doneBefore;","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"        return returnString;","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"     * Represents all Deadline variables into a string to be printed","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"     * @return  A printable string of the Deadline object.","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"    public String toString() {","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"        String isDoneStr \u003d getIsDone();","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"        String taskDescriptionStr \u003d this.taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"        String doneBeforeStr;","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"        if (doneBefore instanceof LocalDateTime) {","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"            doneBeforeStr \u003d ((LocalDateTime) doneBefore).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"        } else if (doneBefore instanceof LocalDate) {","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"            doneBeforeStr \u003d ((LocalDate) doneBefore).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"        } else if (doneBefore instanceof LocalTime) {","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"            doneBeforeStr \u003d ((LocalTime) doneBefore).format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"            doneBeforeStr \u003d \"Unknown\";","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"        return \"[Deadline] [\" + isDoneStr + \"] \" + taskDescriptionStr + \" (By: \" + doneBeforeStr + \")\";","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"     * Returns Deadline date","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"     * @return Returns date","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"    public Temporal getDoneBefore() {","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"        return this.doneBefore;","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":76}},{"path":"src/main/java/Tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Tasks;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":" * Represents a task with a time limit.","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"public class Event extends Task {","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"    /** Specialized event variables */","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"    protected Temporal doneFrom;","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"    protected Temporal doneTo;","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"     * Constructs Event","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"     * @param description Task\u0027s description","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"     * @param isDone If Task is done or not","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"     * @param from Start date of Event","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"     * @param to End date of Event","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"    public Event(String description, boolean isDone, Temporal from, Temporal to){","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"        super(description, isDone);","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"        this.doneFrom \u003d from;","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"        this.doneTo \u003d to;","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"        this.type \u003d \"Event\";","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"     * Represents all event variables as a string to be saved into a file","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"     * @return returnString","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"    public String toFileString() {","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"        String returnString \u003d this.type + \" | \" + this.isDone + \" | \" + this.taskDescription + \" | \" + this.doneFrom + \" | \" + this.doneTo;","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"        return returnString;","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"     * Represents all event variables as a string to be printed","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"     * @return String to be parsed","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"    public String toString() {","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"        String isDoneStr \u003d getIsDone();","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"        String taskDescriptionStr \u003d this.taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"        String doneFromStr;","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"        String doneToStr;","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"        if (doneFrom instanceof LocalDateTime) {","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"            doneFromStr \u003d ((LocalDateTime) doneFrom).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"        } else if (doneFrom instanceof LocalDate) {","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"            doneFromStr \u003d ((LocalDate) doneFrom).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"        } else if (doneFrom instanceof LocalTime) {","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"            doneFromStr \u003d ((LocalTime) doneFrom).format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"            doneFromStr \u003d \"Unknown\";","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"        if (doneTo instanceof LocalDateTime) {","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"            doneToStr \u003d ((LocalDateTime) doneTo).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"        } else if (doneTo instanceof LocalDate) {","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"            doneToStr \u003d ((LocalDate) doneTo).format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"        } else if (doneTo instanceof LocalTime) {","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"            doneToStr \u003d ((LocalTime) doneTo).format(DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"            doneToStr \u003d \"Unknown\";","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"        return \"[Event] [\" + isDoneStr + \"] \" + taskDescriptionStr + \" (From: \" + doneFromStr + \" To: \" + doneToStr + \")\";","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"     * Returns Event date","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"     * @return Returns date From","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"    public Temporal getDoneFrom() {","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"        return this.doneFrom;","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"     * Returns Event date","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"     * @return Returns date To","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"    public Temporal getDoneTo() {","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"        return this.doneTo;","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":98}},{"path":"src/main/java/Tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Tasks;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":" * Represents a task","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"public class Task {","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"    /** Task variables */","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"    protected String taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"    protected String type;","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"     * Constructs a Task","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"     * @param Description Description of the Task","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"     * @param isDone Whether the Task is done or not","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"    public Task (String Description, boolean isDone){","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"        this.taskDescription \u003d Description;","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"        this.type \u003d \"Task\";","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"     * Returns the status of the task","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"     * @return Boolean of the status","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"    public String getIsDone(){","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"        if (this.isDone \u003d\u003d false) {","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"            return \"Not Done\";","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"            return \"Done\";","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"     * Represents all task variables into a string to be saved into a file","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"     * @return A formatted string representing the task object for storage.","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"    public String toFileString() {","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"        String returnString \u003d this.type + \" | \" + this.isDone + \" | \" + this.taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"        return returnString;","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"     * Parses an input to determine if it is LocalDate format, LocalDateTime format, or LocalTime format","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"     * @param input User\u0027s input of date, time or both","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"     * @return Temporal object of the LocalDate or LocalDateTime","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"    private static Temporal checkTimeOrNot(String input) {","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"        assert input !\u003d null : \"Input should not be null\";","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"            return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"            // Ignore because this means it\u0027s not LocalDateTime but LocalDate instead","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"            return LocalTime.parse(input, DateTimeFormatter.ofPattern(\"HH:mm\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"        } catch (DateTimeParseException ignored) {","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"            // Ignore because this means it\u0027s not LocalTime","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"            return LocalDate.parse(input, DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"Error: \" + e);","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"        return null;","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"     * Creates a task object based on a string of details from reading a file","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"     * @param taskDetails A single line read from tasklist.txt - Holds task type, status, date (if any) and description","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"     * @return The Task object","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"    public static Task fromString(String taskDetails){","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"        String[] parts \u003d taskDetails.split(\" \\\\| \");","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"        if (parts.length \u003e\u003d 3) {","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"            String taskType \u003d parts[0]; // \"Task\", \"Deadline\", or \"Event\"","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"            boolean isDone \u003d Boolean.parseBoolean(parts[1]);","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"CheshireKK"},"content":"            String description \u003d parts[2];","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"CheshireKK"},"content":"            if (\"Task\".equals(taskType)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":100,"author":{"gitId":"CheshireKK"},"content":"                return new Task(description, isDone);","lastModifiedDate":"2023-11-19"},{"lineNumber":101,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":102,"author":{"gitId":"CheshireKK"},"content":"            } else if (\"Deadline\".equals(taskType)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":103,"author":{"gitId":"CheshireKK"},"content":"                Temporal doneBefore \u003d checkTimeOrNot(parts[3]);","lastModifiedDate":"2023-11-19"},{"lineNumber":104,"author":{"gitId":"CheshireKK"},"content":"                if (doneBefore !\u003d null) {","lastModifiedDate":"2023-11-19"},{"lineNumber":105,"author":{"gitId":"CheshireKK"},"content":"                    return new Deadline(description, isDone, doneBefore);","lastModifiedDate":"2023-11-19"},{"lineNumber":106,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":107,"author":{"gitId":"CheshireKK"},"content":"                    System.out.println(\"Invalid date format for \u0027Deadline\u0027 command.\");","lastModifiedDate":"2023-11-19"},{"lineNumber":108,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":109,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":110,"author":{"gitId":"CheshireKK"},"content":"            } else if (\"Event\".equals(taskType)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":111,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":112,"author":{"gitId":"CheshireKK"},"content":"                Temporal from \u003d checkTimeOrNot(parts[3]);","lastModifiedDate":"2023-11-19"},{"lineNumber":113,"author":{"gitId":"CheshireKK"},"content":"                Temporal to \u003d checkTimeOrNot(parts[4]);","lastModifiedDate":"2023-11-19"},{"lineNumber":114,"author":{"gitId":"CheshireKK"},"content":"                if (from !\u003d null \u0026\u0026 to !\u003d null) {","lastModifiedDate":"2023-11-19"},{"lineNumber":115,"author":{"gitId":"CheshireKK"},"content":"                    return new Event(description, isDone, from, to);","lastModifiedDate":"2023-11-19"},{"lineNumber":116,"author":{"gitId":"CheshireKK"},"content":"                } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":117,"author":{"gitId":"CheshireKK"},"content":"                    System.out.println(\"Invalid date format for \u0027Event\u0027 command.\");","lastModifiedDate":"2023-11-19"},{"lineNumber":118,"author":{"gitId":"CheshireKK"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":119,"author":{"gitId":"CheshireKK"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":120,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":121,"author":{"gitId":"CheshireKK"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":122,"author":{"gitId":"CheshireKK"},"content":"            System.out.println(\"[-] An entry wasn\u0027t recognized - data could have been corrupted. Continuing to the next entry...\");","lastModifiedDate":"2023-11-19"},{"lineNumber":123,"author":{"gitId":"CheshireKK"},"content":"            return null;","lastModifiedDate":"2023-11-19"},{"lineNumber":124,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":125,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":126,"author":{"gitId":"CheshireKK"},"content":"        return null;","lastModifiedDate":"2023-11-19"},{"lineNumber":127,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":128,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":129,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":130,"author":{"gitId":"CheshireKK"},"content":"     * Marks the task as done","lastModifiedDate":"2023-11-19"},{"lineNumber":131,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":132,"author":{"gitId":"CheshireKK"},"content":"    public void markDone(){","lastModifiedDate":"2023-11-19"},{"lineNumber":133,"author":{"gitId":"CheshireKK"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-11-19"},{"lineNumber":134,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":135,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":136,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":137,"author":{"gitId":"CheshireKK"},"content":"     * Unmarks the task","lastModifiedDate":"2023-11-19"},{"lineNumber":138,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":139,"author":{"gitId":"CheshireKK"},"content":"    public void unmarkDone(){","lastModifiedDate":"2023-11-19"},{"lineNumber":140,"author":{"gitId":"CheshireKK"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-11-19"},{"lineNumber":141,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":142,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":143,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":144,"author":{"gitId":"CheshireKK"},"content":"     * Represents all task variables into a string to be printed","lastModifiedDate":"2023-11-19"},{"lineNumber":145,"author":{"gitId":"CheshireKK"},"content":"     * @return A printable string of the task object","lastModifiedDate":"2023-11-19"},{"lineNumber":146,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":147,"author":{"gitId":"CheshireKK"},"content":"    public String toString() {","lastModifiedDate":"2023-11-19"},{"lineNumber":148,"author":{"gitId":"CheshireKK"},"content":"        return \"[Todo] [\" + getIsDone() + \"] \" + this.taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":149,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":150,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":151,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":152,"author":{"gitId":"CheshireKK"},"content":"     * Returns task description","lastModifiedDate":"2023-11-19"},{"lineNumber":153,"author":{"gitId":"CheshireKK"},"content":"     * @return Returns task decription","lastModifiedDate":"2023-11-19"},{"lineNumber":154,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":155,"author":{"gitId":"CheshireKK"},"content":"    public String getTaskDescription() {","lastModifiedDate":"2023-11-19"},{"lineNumber":156,"author":{"gitId":"CheshireKK"},"content":"        return this.taskDescription;","lastModifiedDate":"2023-11-19"},{"lineNumber":157,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":158,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":159,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":159}},{"path":"src/test/java/Parse/ParsedCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"import Parse.ParsedCommand;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":" * JUnit test class for the ParsedCommand class.","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"public class ParsedCommandTest {","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"     * Tests the constructor for basic commands like \"list\", \"bye\", \"help\".","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"    public void testBasicCommandConstructor() {","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"        ParsedCommand parsedCommand \u003d new ParsedCommand(\"list\");","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"list\", parsedCommand.getCommandType());","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getDeadline());","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getStartDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getEndDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(0, parsedCommand.getTaskIndex());","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getFindDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"     * Tests the constructor for commands like \"todo\", \"find\", and \"save\".","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"    public void testTaskCommandConstructor() {","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"        ParsedCommand parsedCommand \u003d new ParsedCommand(\"todo\", \"Sample Task\");","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"todo\", parsedCommand.getCommandType());","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Sample Task\", parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getDeadline());","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getStartDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getEndDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(0, parsedCommand.getTaskIndex());","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getFindDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"     * Tests the constructor for the \"finddate\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"    public void testFindDateCommandConstructor() {","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"        LocalDateTime findDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"        ParsedCommand parsedCommand \u003d new ParsedCommand(\"finddate\", findDate);","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"finddate\", parsedCommand.getCommandType());","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getDeadline());","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getStartDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getEndDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(0, parsedCommand.getTaskIndex());","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(findDate, parsedCommand.getFindDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"     * Tests the constructor for commands like \"mark/unmark\" or \"delete\".","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"    public void testIndexCommandConstructor() {","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"        ParsedCommand parsedCommand \u003d new ParsedCommand(\"mark\", 1);","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"mark\", parsedCommand.getCommandType());","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getDeadline());","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getStartDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getEndDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(1, parsedCommand.getTaskIndex());","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getFindDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"     * Tests the constructor for the \"deadline\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"    public void testDeadlineCommandConstructor() {","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"        LocalDateTime deadline \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"        ParsedCommand parsedCommand \u003d new ParsedCommand(\"deadline\", \"Sample Deadline\", deadline);","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"deadline\", parsedCommand.getCommandType());","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Sample Deadline\", parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(deadline, parsedCommand.getDeadline());","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getStartDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getEndDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(0, parsedCommand.getTaskIndex());","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getFindDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"     * Tests the constructor for the \"event\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"    public void testEventCommandConstructor() {","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"        LocalDateTime startDate \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"        LocalDateTime endDate \u003d startDate.plusHours(2);","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"        ParsedCommand parsedCommand \u003d new ParsedCommand(\"event\", \"Sample Event\", startDate, endDate);","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"event\", parsedCommand.getCommandType());","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Sample Event\", parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getDeadline());","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(startDate, parsedCommand.getStartDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":100,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(endDate, parsedCommand.getEndDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":101,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(0, parsedCommand.getTaskIndex());","lastModifiedDate":"2023-11-19"},{"lineNumber":102,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getFindDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":103,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":104,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":105,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":105}},{"path":"src/test/java/Parse/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Parse;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import Parse.ParsedCommand;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"import java.time.temporal.Temporal;","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":" * JUnit test class for the Parser class.","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"public class ParserTest {","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"     * Tests the parseCommand method with valid \"list\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"    public void testParseListCommand() {","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"        ParsedCommand parsedCommand \u003d parser.parseCommand(\"list\");","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"list\", parsedCommand.getCommandType());","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getDeadline());","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getStartDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getEndDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(0, parsedCommand.getTaskIndex());","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getFindDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"     * Tests the parseCommand method with valid \"bye\" command.","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"    public void testParseByeCommand() {","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"        ParsedCommand parsedCommand \u003d parser.parseCommand(\"bye\");","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"bye\", parsedCommand.getCommandType());","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getDeadline());","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getStartDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getEndDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(0, parsedCommand.getTaskIndex());","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"        assertNull(parsedCommand.getFindDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"     * Tests the checkTimeOrNot method with invalid input.","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"    public void testCheckTimeOrNotWithInvalidInput() {","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"        Temporal result \u003d parser.checkTimeOrNot(\"InvalidInput\");","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"        assertNull(result);","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"     * Tests the findIndex method with a valid keyword.","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"    public void testFindIndexWithValidKeyword() {","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"        String[] wordArray \u003d {\"command\", \"parameter\", \"/by\", \"value\"};","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"        int index \u003d parser.findIndex(wordArray, \"/by\");","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(2, index);","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"     * Tests the findIndex method with an invalid keyword.","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"    public void testFindIndexWithInvalidKeyword() {","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"        String[] wordArray \u003d {\"command\", \"parameter\", \"/by\", \"value\"};","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"        int index \u003d parser.findIndex(wordArray, \"/at\");","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(-1, index);","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"    // Add more test cases for other methods...","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"CheshireKK"},"content":"     * Tests the parseCommand method with invalid command.","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"CheshireKK"},"content":"    public void testParseInvalidCommand() {","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"CheshireKK"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"CheshireKK"},"content":"        ParsedCommand parsedCommand \u003d parser.parseCommand(\"invalidCommand\");","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"invalid\", parsedCommand.getCommandType());","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Could not understand your command!\", parsedCommand.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":96}},{"path":"src/test/java/Storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Storage;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import org.junit.jupiter.api.AfterEach;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"import Tasks.Task;","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"public class StorageTest {","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"     * Tests the checkFolderExistence method of the Storage class.","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"     * This test ensures that the tasklist folder is created if it doesn\u0027t exist.","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"    public void testCheckFolderExistence() {","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"        storage.checkFolderExistence();","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"        // Access storageFileFolder","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"        String storageFileFolder \u003d \"./tasklist\";","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"        Path directoryPath \u003d Paths.get(storageFileFolder);","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"        assertTrue(Files.exists(directoryPath), \"Tasklist folder should exist\");","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"     * Tests the saveTasksToFile and loadTasksFromFile methods of the Storage class.","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"     * This test checks if tasks can be saved to a file and loaded back successfully.","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"    public void testSaveAndLoadTasksToFile() {","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"        Storage storage \u003d new Storage();","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"        ArrayList\u003cTask\u003e tasksToSave \u003d new ArrayList\u003c\u003e(Arrays.asList(","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"                new Task(\"Task 1\", false),","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"                new Task(\"Task 2\", true),","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"                new Task(\"Task 3\", false)","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"        ));","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"        // Save tasks to the actual storage file","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"        storage.saveTasksToFile(tasksToSave, null);","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"        // Load tasks from the actual storage file","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"        ArrayList\u003cTask\u003e loadedTasks \u003d storage.loadTasksFromFile();","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"        // Check if the loaded tasks match the original tasks","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(tasksToSave.size(), loadedTasks.size(), \"Number of tasks should match\");","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"        for (int i \u003d 0; i \u003c tasksToSave.size(); i++) {","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"            Task originalTask \u003d tasksToSave.get(i);","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"            Task loadedTask \u003d loadedTasks.get(i);","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"            assertEquals(originalTask.toFileString(), loadedTask.toFileString(), \"Tasks should match\");","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"     * Cleans up all the files that were written onto disk for the tests","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"     * tasklist.txt and tasklist folder","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"    @AfterEach","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"    public void cleanup() {","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"        Path tasklistFolderPath \u003d Paths.get(\"tasklist\");","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"            Files.walk(tasklistFolderPath)","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"                    .sorted((path1, path2) -\u003e -path1.compareTo(path2))","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"                    .forEach(path -\u003e {","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"                        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"                            Files.deleteIfExists(path);","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"                        } catch (IOException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"                            e.printStackTrace();","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"CheshireKK"},"content":"                        }","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"CheshireKK"},"content":"                    });","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"CheshireKK"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"CheshireKK"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"CheshireKK"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":84}},{"path":"src/test/java/Tasks/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"CheshireKK"},"content":"package Tasks;","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"CheshireKK"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"CheshireKK"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"CheshireKK"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"CheshireKK"},"content":" * JUnit test class for the Task class.","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"CheshireKK"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"CheshireKK"},"content":"public class TaskTest {","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"CheshireKK"},"content":"     * Tests the constructor of the Task class.","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"CheshireKK"},"content":"     * Verifies that the task description and status are set correctly.","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"CheshireKK"},"content":"    public void testTaskConstructor() {","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"CheshireKK"},"content":"        Task task \u003d new Task(\"Sample Task\", false);","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Sample Task\", task.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Not Done\", task.getIsDone());","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"CheshireKK"},"content":"     * Tests the markDone method of the Task class.","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"CheshireKK"},"content":"     * Verifies that the task is marked as done after calling markDone.","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"CheshireKK"},"content":"    public void testMarkDone() {","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"CheshireKK"},"content":"        Task task \u003d new Task(\"Sample Task\", false);","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"CheshireKK"},"content":"        task.markDone();","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Done\", task.getIsDone());","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"CheshireKK"},"content":"     * Tests the unmarkDone method of the Task class.","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"CheshireKK"},"content":"     * Verifies that the task is marked as not done after calling unmarkDone.","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"CheshireKK"},"content":"    public void testUnmarkDone() {","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"CheshireKK"},"content":"        Task task \u003d new Task(\"Sample Task\", true);","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"CheshireKK"},"content":"        task.unmarkDone();","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Not Done\", task.getIsDone());","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"CheshireKK"},"content":"     * Tests the toString method of the Task class.","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"CheshireKK"},"content":"     * Verifies that the toString representation is as expected.","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"CheshireKK"},"content":"    public void testToString() {","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"CheshireKK"},"content":"        Task task \u003d new Task(\"Sample Task\", false);","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"[Todo] [Not Done] Sample Task\", task.toString());","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"CheshireKK"},"content":"     * Tests the fromString method of the Task class.","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"CheshireKK"},"content":"     * Verifies that a Task object can be created from a file string.","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"CheshireKK"},"content":"    public void testFromFileString() {","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"CheshireKK"},"content":"        String fileString \u003d \"Task | false | Sample Task\";","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"CheshireKK"},"content":"        Task task \u003d Task.fromString(fileString);","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"CheshireKK"},"content":"        assertNotNull(task);","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Sample Task\", task.getTaskDescription());","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Not Done\", task.getIsDone());","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"CheshireKK"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"CheshireKK"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"CheshireKK"},"content":"     * Tests the toFileString method of the Task class.","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"CheshireKK"},"content":"     * Verifies that the task can be represented as a file string.","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"CheshireKK"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"CheshireKK"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"CheshireKK"},"content":"    public void testToFileString() {","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"CheshireKK"},"content":"        Task task \u003d new Task(\"Sample Task\", false);","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"CheshireKK"},"content":"        assertEquals(\"Task | false | Sample Task\", task.toFileString());","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"CheshireKK"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"CheshireKK"},"content":"}","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"CheshireKK":77}}]
