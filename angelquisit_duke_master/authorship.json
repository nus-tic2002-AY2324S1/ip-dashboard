[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"angelquisit":1,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"D,false,return book,2023-10-18","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"T,false,buy food","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"E,false,project meeting,2023-10-18,2023-10-20","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":3}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.*;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import duke.Parser;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    private Storage storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    private UI ui;","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    public Duke(String filePath){","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"            tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    // Parser: deals with making sense of the user command","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"    public void run() {","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        ui.greet();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        while (!isExit) {","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"            try {","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"            } finally {","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"                ui.showLine();","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"angelquisit":49,"-":4}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import duke.*;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} stores/save the current user ","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"     * {@code tasks} list and kills the program.","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        storage.storeData(tasks);","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        isExit \u003d true;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        ui.killUI();","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":21}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":" * The base class for command execution.","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":" * Stores user input and provides a mechanism to check if the user","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":" * wishes to exit the program. Subclasses are expected to provide their ","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":" * own implementation of the {@code execute} method to define specific ","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":" * command behavior.\u003c/p\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"public class Command {","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    protected String input;","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"     * {@code execute} method defines the behaviour of respective user command.","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"     * @param tasks user\u0027s current TaskList.","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"     * @param ui ui object that handles printing of statements.","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * @param storage storage object to save/store user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage){","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"    public Boolean isExit(){","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        return this.isExit;","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":34}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    int item;","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    public DeleteCommand(String userInput) throws DukeException {","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        if (userInput.split(\" \").length \u003c 2){","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(\"Missing item number!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        try{","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"            this.item \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        catch (NumberFormatException e){","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(\"Ensure the item number is a valid integer!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        }  ","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} deletes the specified","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"     * {@code task} object from the user\u0027s {@code tasks}","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        try{","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"            tasks.deleteItem(item);","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        catch(EmptyListException e){","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"            return;","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"        catch (MissingTaskException e){","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"            return;","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"        ui.printMessage(\"That\u0027s one less thing to do! You now have \" + tasks.totalTasks + \" tasks left.\");","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":50}},{"path":"src/main/java/commands/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.*;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import java.time.*;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":" * Validates user input and extracts out the due ","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":" * date in the format of YYYY-MM-DD e.g. 2023-10-22","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":" * A \u003ccode\u003eDueCommand\u003c/code\u003e object stores a date and ","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":" * an arraylist of tasks due on that date.","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":" * ","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"public class DueCommand extends Command{","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    LocalDate date;","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    public ArrayList\u003cTask\u003e tasksDue;","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    public DueCommand(String line) throws DukeException{","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        if (line.split(\" \").length \u003c 2) throw new DukeException(\"Missing date!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        if (line.split( \" \").length \u003e 2) throw new DukeException(\"Please follow the correct format.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        String userDate \u003d line.split(\" \")[1];","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        String regex \u003d \"^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])$\";","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        if(!Pattern.matches(regex, userDate)) throw new DukeException(\"Please provide the date in this format: YYYY-MM-DD\");","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        this.date \u003d LocalDate.parse(userDate);","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} gets all related","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"     * tasks due on the particular date and prints it ","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"     * on the user interface.","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"     *  @param storage is not used in this implementation.","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) { ","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"        this.tasksDue \u003d tasks.getTasksDue(this.date);","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"        ui.printDue(this.tasksDue, this.date);","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"angelquisit":54}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} lists every","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"     * {@code task} in the user\u0027s {@code tasks} list.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        try{","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"            tasks.listItems();","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        catch(EmptyListException e){","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":28}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    int item;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    public MarkCommand(String userInput) throws DukeException { ","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        if (userInput.split(\" \").length \u003c 2){","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(\"Missing item number!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        try{","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"            this.item \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        catch (NumberFormatException e){","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(\"Ensure the item number is a valid integer!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        }   ","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} marks the specified","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"     * {@code task} object from the user\u0027s {@code tasks} list to done.","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"            tasks.markItem(item);","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        } catch (MissingTaskException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":41}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    int item;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    public UnmarkCommand(String userInput) throws DukeException { ","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        if (userInput.split(\" \").length \u003c 2){","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(\"Missing item number!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        try{","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"            this.item \u003d Integer.parseInt(userInput.split(\" \")[1]);","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        catch (NumberFormatException e){","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(\"Ensure the item number is a valid integer!\");","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        }   ","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} unmarks the specified","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"     * {@code task} object from the user\u0027s {@code tasks}.","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"            tasks.unmarkItem(item);","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        } catch (MissingTaskException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":43}},{"path":"src/main/java/commands/add/AddDeadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands.add;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.*;  ","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"public class AddDeadline extends Command {","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    LocalDate date;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    String description;","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public AddDeadline(String line) throws DukeException{","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        // deadline buy food /by 2023-10-05 \u0026 format accepted yyyy-mm-dd","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        if (line.indexOf(\"/by\") \u003d\u003d -1) throw new DukeException(\"Please follow the correct format.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        // since the program hardcoded +3, need to check that /by has no trailing y\u0027s ","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        if (line.charAt(line.indexOf(\"/by\")+3)!\u003d\u0027 \u0027) throw new DukeException(\"Ensure you have no trailing letters behind /by.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        this.description \u003d line.substring(8, line.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        if (description.length() \u003d\u003d 0) throw new DukeException(\"Oops, missing task description!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        String userDate \u003d line.substring(line.indexOf(\"/by\")+3).trim();","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        String regex \u003d \"^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])$\";","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        if(!Pattern.matches(regex, userDate)) throw new DukeException(\"Please provide the date in this format: YYYY-MM-DD\");","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        this.date \u003d LocalDate.parse(userDate);","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        Task t \u003d tasks.addDeadline(description, date);","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        ui.addedTask(t);","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":41}},{"path":"src/main/java/commands/add/AddEvent.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands.add;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.*;  ","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"public class AddEvent extends Command {","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    public String description;","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    public LocalDate fromDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    public LocalDate toDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    public AddEvent(String input) throws DukeException{","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        if(input.indexOf(\"/from\")\u003d\u003d-1 || input.indexOf(\"/to\")\u003d\u003d-1){","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(\"Please follow the correct format.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        // since the program hardcoded +5, need to check that /from has no trailing letters after it ","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        if (input.charAt(input.indexOf(\"/from\")+5)!\u003d\u0027 \u0027) throw new DukeException(\"Ensure you have no trailing letters behind /from.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        // since the program hardcoded +5, need to check that /from has no trailing letters after it ","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        if (input.charAt(input.indexOf(\"/to\")+3)!\u003d\u0027 \u0027) throw new DukeException(\"Ensure you have no trailing letters behind /to.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        String userFrom \u003d input.substring(input.indexOf(\"/from\")+5, input.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        String userTo \u003d input.substring(input.indexOf(\"/to\")+3).trim();","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        String regex \u003d \"^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])$\";","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        if (!Pattern.matches(regex, userFrom) || !Pattern.matches(regex, userFrom)){","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(\"Please ensure both Start and End Date follows this format: YYYY-MM-DD\");","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        this.description \u003d input.substring(5, input.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        if (description.length() \u003d\u003d 0) throw new DukeException(\"Oops, missing event description!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        this.fromDate \u003d LocalDate.parse(userFrom);","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        this.toDate \u003d LocalDate.parse(userTo);","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"        if (fromDate.isAfter(toDate)){","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(\"Your End Date should be later than your Start Date.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"        Task t \u003d tasks.addEvent(description, fromDate, toDate);","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"        ui.addedTask(t);","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":53}},{"path":"src/main/java/commands/add/AddToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands.add;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import duke.UI;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"public class AddToDo extends Command{","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    String description;","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    public AddToDo(String line)throws DukeException{","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        if (line.split(\" \").length\u003c2) throw new DukeException(\"Oops, missing todo description!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        this.description \u003d line.split(\" \",2)[1].trim();","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        Task t \u003d tasks.addToDo(description);","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        ui.addedTask(t);","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":23}},{"path":"src/main/java/data/list.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"E,true,project meeting ,Mon 2pm, 4pm","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"T,false,borrow book","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"D,false,return book ,Sunday","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":3}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"E,false,project meeting,2023-10-05,2024-10-06","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"D,false,return book,2023-11-13","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"angelquisit":2}},{"path":"src/main/java/duke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package duke;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import commands.*;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.add.AddDeadline;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import commands.add.AddEvent;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import commands.add.AddToDo;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"public class Parser {","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    static Command c;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"     * Returns a {@code Command} object based on user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"     * Further validation will be done inside the {@code Command} object.","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"     * Users can later call the {@link Command#execute()} method on the returned object.","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"     * @param userInput the user input received.","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"     * @return A {@code Command} object based on user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"     * @throws DukeException if input validations fail.","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    public static Command parse(String userInput) throws DukeException{","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        String userCommand \u003d userInput.split(\" \")[0];","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        switch(userCommand.toLowerCase()){","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"            case \"list\":","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"                c \u003d new ListCommand();","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"                break;","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"            case \"mark\":","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"                c \u003d new MarkCommand(userInput);","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"                break;","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"            case \"unmark\":","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"                c \u003d new UnmarkCommand(userInput);","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"                break;","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"            case \"bye\":","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"                c \u003d new ByeCommand();","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"                break;","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"            case \"delete\":","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"                c \u003d new DeleteCommand(userInput);","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"                break;","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"            case \"todo\":","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"                c \u003d new AddToDo(userInput.trim());","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"                break;","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"            case \"event\":","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"                c \u003d new AddEvent(userInput.trim());","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"                break;","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"            case \"deadline\":","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"                c \u003d new AddDeadline(userInput.trim());","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"                break;","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"            case \"due\":","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"                c \u003d new DueCommand(userInput.trim());","lastModifiedDate":"2023-11-12"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"                break;","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"            default:","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"                throw new DukeException(\"Oops! Look at the manual to see accepted inputs!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"        return c;","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":61}},{"path":"src/main/java/duke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package duke;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import tasks.*;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import java.io.File;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.*;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"public class Storage {","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    // default values for storage","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    private String filePath, directoryPath;","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    private File file, directory;","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    private FileWriter fw;","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    private ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    public Storage(String filePath){","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        int endIndex \u003d filePath.lastIndexOf(\"/\");","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        this.directoryPath \u003d filePath.substring(0, endIndex+1);","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        directory \u003d new File(directoryPath);","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"     * Reads the contents from the object\u0027s {@code filePath}, validates the data format, and creates Task objects.","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"     * This method checks if the data is in the expected format and that the date follows the specified format","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"     * before creating Task objects and adding them to the ArrayList of tasks.","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"     * If the file path is not present in the current workspace, this method will create a new file. It will also create the necessary","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"     * directory if it is not already present. If file creation fails, an IOException is thrown.","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"     * @return An {@code ArrayList\u003cTask\u003e} containing all the tasks stored in the specified file path.","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"     * @throws IOException If file creation fails.","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"    public ArrayList\u003cTask\u003e loadData() throws IOException{","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"        try{","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"            int counter \u003d 0;","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"            Task t;","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"                String[] line \u003d s.nextLine().split(\",\");","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"                String regex \u003d \"^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])$\";","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"                switch(line[0]){","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"                    case \"E\":","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"                        //doesnt add invalid task","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"angelquisit"},"content":"                        if (line.length !\u003d 5) continue;","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"angelquisit"},"content":"                        if(!Pattern.matches(regex, line[3])) continue;","lastModifiedDate":"2023-11-12"},{"lineNumber":64,"author":{"gitId":"angelquisit"},"content":"                        if(!Pattern.matches(regex, line[4])) continue;","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"angelquisit"},"content":"                        t \u003d new Event(line[2], LocalDate.parse(line[3]), LocalDate.parse(line[4]));","lastModifiedDate":"2023-11-12"},{"lineNumber":66,"author":{"gitId":"angelquisit"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"angelquisit"},"content":"                        break;","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"angelquisit"},"content":"                    case \"D\":","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"angelquisit"},"content":"                        if(line.length !\u003d 4) continue;","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"angelquisit"},"content":"                        if(!Pattern.matches(regex, line[3])) continue;","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"angelquisit"},"content":"                        t \u003d new Deadline(line[2], LocalDate.parse(line[3]));","lastModifiedDate":"2023-11-12"},{"lineNumber":72,"author":{"gitId":"angelquisit"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"angelquisit"},"content":"                        break;","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"angelquisit"},"content":"                    case \"T\":","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"angelquisit"},"content":"                        // doesnt add invalid task","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"angelquisit"},"content":"                        if (line.length !\u003d 3) continue;","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"angelquisit"},"content":"                        t \u003d new ToDo(line[2]);","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"angelquisit"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"angelquisit"},"content":"                        break;","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"angelquisit"},"content":"                }","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"angelquisit"},"content":"                if(line[1].equals(\"true\")){","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"angelquisit"},"content":"                    t \u003d tasks.get(counter);","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"angelquisit"},"content":"                    t.markAsDone();","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"angelquisit"},"content":"                }","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"angelquisit"},"content":"                counter++;","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"angelquisit"},"content":"            s.close();","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"angelquisit"},"content":"        catch(FileNotFoundException e){","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"angelquisit"},"content":"            if (!directory.exists()){","lastModifiedDate":"2023-11-11"},{"lineNumber":94,"author":{"gitId":"angelquisit"},"content":"                directory.mkdir();","lastModifiedDate":"2023-11-11"},{"lineNumber":95,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":96,"author":{"gitId":"angelquisit"},"content":"            file.createNewFile();","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":98,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":99,"author":{"gitId":"angelquisit"},"content":"        return tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":100,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":101,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":102,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":103,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"angelquisit"},"content":"     * Stores the user\u0027s {@code tasks} in the objects\u0027 {@code filePath}.","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"angelquisit"},"content":"    * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"angelquisit"},"content":"    * This method saves the user\u0027s tasks to the file path specified by the {@code filePath} attribute","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"angelquisit"},"content":"    * of this object. ","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"angelquisit"},"content":"    * \u003c/p\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"angelquisit"},"content":"     * @param tasks The users current TaskList object.","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"angelquisit"},"content":"    public void storeData(TaskList tasks){","lastModifiedDate":"2023-11-11"},{"lineNumber":112,"author":{"gitId":"angelquisit"},"content":"        try{","lastModifiedDate":"2023-11-11"},{"lineNumber":113,"author":{"gitId":"angelquisit"},"content":"            fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-11-11"},{"lineNumber":114,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":115,"author":{"gitId":"angelquisit"},"content":"            for(int i\u003d0; i\u003ctasks.totalTasks; i++){","lastModifiedDate":"2023-11-11"},{"lineNumber":116,"author":{"gitId":"angelquisit"},"content":"                String textToAdd \u003d tasks.tasks.get(i).writeFile();","lastModifiedDate":"2023-11-11"},{"lineNumber":117,"author":{"gitId":"angelquisit"},"content":"                fw.write(textToAdd + \"\\n\");","lastModifiedDate":"2023-11-11"},{"lineNumber":118,"author":{"gitId":"angelquisit"},"content":"            } ","lastModifiedDate":"2023-11-11"},{"lineNumber":119,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":120,"author":{"gitId":"angelquisit"},"content":"            fw.close();","lastModifiedDate":"2023-11-11"},{"lineNumber":121,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":122,"author":{"gitId":"angelquisit"},"content":"        } catch(IOException e){","lastModifiedDate":"2023-11-11"},{"lineNumber":123,"author":{"gitId":"angelquisit"},"content":"            System.out.println(\"Error Writing to File!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":124,"author":{"gitId":"angelquisit"},"content":"        }     ","lastModifiedDate":"2023-11-11"},{"lineNumber":125,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":126,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":127,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":128,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":128}},{"path":"src/main/java/duke/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package duke;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import java.time.*;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":" * Object of class UI gives access to methods which offers interactions to the user via the command line. ","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":" * This class offers methods for various interactions, including:","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":" * \u003cul\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":" *     \u003cli\u003e{@code greet()}: Displays a greeting message.\u003c/li\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":" *     \u003cli\u003e{@code readCommand()}: Reads and retrieves a command from the input.\u003c/li\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":" *     \u003cli\u003e{@code help()}: Displays informative content or instructions.\u003c/li\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":" *     \u003cli\u003e{@code killUI()}: Terminates the UI object, concluding the interaction.\u003c/li\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"public class UI {","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    Scanner in;","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    String userInput;","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    public UI(){","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        in \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    public void greet() {","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        String botName \u003d \"Angel\";","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Hello! I\u0027m \" + botName + \" your personal friendly to-do list tracker bot.\");","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"I accept Deadlines, Events and simple To-Dos. Here\u0027s a mini manual!\");","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        System.out.println();","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        help();","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"What can I do for you?\" + \"\\n\");","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"    public void showLine(){","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"-------------------------------\");","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"    public String readCommand(){","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"    public void help(){","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"To Add:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"(a) A Deadline: deadline return book /by 2023-10-06\");","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"(b) An Event: event project meeting /from 2023-10-05 /to 2023-10-06\");","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"(c) A To-Do: todo borrow book\");","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"To List all items in your list: list\"); ","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"To Mark or Unmark your tasks, type: (a) mark \u0027task no.\u0027 or (b) unmark \u0027task no\u0027 \");","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"To Delete your tasks, type: delete \u0027task no.\u0027 \");","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"        System.out.println();","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Uh Oh! Something went wrong with loading your previous tasks. Let\u0027s start fresh!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"    public void killUI(){","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"angelquisit"},"content":"        in.close();","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"angelquisit"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"angelquisit"},"content":"        System.out.println(message);","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"angelquisit"},"content":"    public void printMessage(String message){","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"angelquisit"},"content":"        System.out.println(message);","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"angelquisit"},"content":"    public void addedTask(Task task){","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":76,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":77,"author":{"gitId":"angelquisit"},"content":"    public void printDue(ArrayList\u003cTask\u003e tasks, LocalDate dueDate){","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"angelquisit"},"content":"        Period days \u003d LocalDate.now().until(dueDate);","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"angelquisit"},"content":"        if (tasks.size()\u003e0){","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"angelquisit"},"content":"            System.out.println(\"There are \" + days.getDays()  + \" day(s) left until \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"angelquisit"},"content":"            for (Task t: tasks){","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"angelquisit"},"content":"                System.out.println(t);","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":86,"author":{"gitId":"angelquisit"},"content":"        else{","lastModifiedDate":"2023-11-12"},{"lineNumber":87,"author":{"gitId":"angelquisit"},"content":"            System.out.println(\"You have nothing due on \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-11-12"},{"lineNumber":88,"author":{"gitId":"angelquisit"},"content":"        } ","lastModifiedDate":"2023-11-12"},{"lineNumber":89,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"angelquisit":90}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    String message;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"    public DukeException(String message){","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    public String getMessage() {","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        return message;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":12}},{"path":"src/main/java/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"public class EmptyListException extends Exception {","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"    public String message;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    public EmptyListException(String string) {","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"        message \u003d string;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    public String getMessage() {","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        return message;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":13}},{"path":"src/main/java/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"    String message;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    public InvalidInputException(String message){","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"      this.message \u003d message;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    public String getMessage() {","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"      return this.message;","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"  }","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"angelquisit":11}},{"path":"src/main/java/exceptions/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package exceptions;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"public class MissingTaskException extends Exception {","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"    String message;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    public MissingTaskException(String message) {","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    public String getMessage() {","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        return message;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":12}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    //protected String start;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    // accept date format: yyyy-mm-dd (2019-10-15)","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    // print in format: MMM dd yyyy (Oct 15 2019)","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    //protected String end;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    //protected String by;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    protected LocalDate by; ","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    public LocalDate getDueDate(){","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        return this.by;","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"    public String writeFile() {","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        return \"D,\" + isDone + \",\" + description + \",\" + by;","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"angelquisit":34}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.time.temporal.ChronoUnit;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class Event extends Task{","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    // accept date format: yyyy-mm-dd (2019-10-15)","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    // print in format: MMM dd yyyy (Oct 15 2019)","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    protected LocalDate start; ","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    protected LocalDate end;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":" ","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    public Event(String description, LocalDate start, LocalDate end){","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    public LocalDate getDueDate(){","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        return this.end;","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to \" + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"    public String writeFile() {","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        return \"E,\" + isDone + \",\" + description + \",\" + start + \",\" + end;","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"angelquisit":33}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"public class Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"    protected String description;","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    public void markAsDone(){","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    public void unmarkTask(){","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Task marked as Done!\");","lastModifiedDate":"2023-10-07"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    public Boolean isMarked(){","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        return isDone;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    public String toString(){","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;","lastModifiedDate":"2023-09-10"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    public String writeFile(){","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        String text \u003d \"T,\" + isDone + \",\" + description ;","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        return text;","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"angelquisit":38}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"public class TaskList{","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    public ArrayList\u003cTask\u003e tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    public int totalTasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    public Task task;","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    public TaskList(){","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        this.tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks \u003d 0;","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks \u003d taskList.size();","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    public Task addDeadline(String description, LocalDate date){","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        this.task \u003d new Deadline(description, date);","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        tasks.add(task);","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks ++;","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        return this.task;","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"    public Task addToDo(String description){","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        this.task \u003d new ToDo(description);","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        tasks.add(task);","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks ++;","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        return this.task;","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"    public Task addEvent(String description, LocalDate fromDate, LocalDate toDate){","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        this.task \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        this.tasks.add(this.task);","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks ++;","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"        return this.task;","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"    public void markItem(int item) throws MissingTaskException{","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"        if(item \u003e totalTasks || item \u003d\u003d 0){","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"            throw new MissingTaskException(\"Trying to mark a non existent task!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"        task \u003d tasks.get(item-1);","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"        if(task.isDone){","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"            System.out.println(\"Task already marked!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"            return;","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"        task.markAsDone();","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Nice! I\u0027ve marked this task as done: \" + task);","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"    public void unmarkItem(int item) throws MissingTaskException {","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"        if(item \u003e totalTasks || item \u003d\u003d 0){","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"            throw new MissingTaskException(\"Trying to unmark a non existent task!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"        task \u003d tasks.get(item-1);","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"angelquisit"},"content":"        if(!task.isDone){","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"angelquisit"},"content":"            System.out.println(\"Task was not previously marked!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"angelquisit"},"content":"            return;","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"angelquisit"},"content":"        task.unmarkTask();","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"OK, I\u0027ve marked this task as not done yet: \" + task);","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"angelquisit"},"content":"    public void listItems() throws EmptyListException{","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"angelquisit"},"content":"        if (totalTasks\u003c1){","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"angelquisit"},"content":"            throw new EmptyListException(\"Empty List\");","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"angelquisit"},"content":"        }   ","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"angelquisit"},"content":"        for (int i\u003d1; i\u003c\u003dtotalTasks; i++){","lastModifiedDate":"2023-11-11"},{"lineNumber":76,"author":{"gitId":"angelquisit"},"content":"            System.out.println(i + \". \" + tasks.get(i-1));","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"angelquisit"},"content":"    public void deleteItem(int item) throws EmptyListException, MissingTaskException{","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"angelquisit"},"content":"        if (totalTasks\u003c1){","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"angelquisit"},"content":"            throw new EmptyListException(\"Empty List\");","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"angelquisit"},"content":"        if (item\u003etotalTasks || item\u003d\u003d0){","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"angelquisit"},"content":"            throw new MissingTaskException(\"Trying to delete a non-existing task!\");","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Removing task \" + item + \":\" + tasks.get(item-1));","lastModifiedDate":"2023-11-11"},{"lineNumber":89,"author":{"gitId":"angelquisit"},"content":"        tasks.remove((item-1));","lastModifiedDate":"2023-11-11"},{"lineNumber":90,"author":{"gitId":"angelquisit"},"content":"        totalTasks --;","lastModifiedDate":"2023-11-11"},{"lineNumber":91,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":92,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"angelquisit"},"content":"    public ArrayList\u003cTask\u003e getTasksDue(LocalDate due){","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"angelquisit"},"content":"        // iterate through arraylist to check for Due Dates from Events and Deadlines","lastModifiedDate":"2023-11-12"},{"lineNumber":95,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-12"},{"lineNumber":96,"author":{"gitId":"angelquisit"},"content":"        ArrayList\u003cTask\u003e taskDueList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"angelquisit"},"content":"        for (Task t: this.tasks){","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"angelquisit"},"content":"            if (t instanceof tasks.Event){","lastModifiedDate":"2023-11-12"},{"lineNumber":100,"author":{"gitId":"angelquisit"},"content":"                tasks.Event e \u003d (tasks.Event) t;","lastModifiedDate":"2023-11-12"},{"lineNumber":101,"author":{"gitId":"angelquisit"},"content":"                LocalDate taskDue \u003d e.getDueDate();","lastModifiedDate":"2023-11-12"},{"lineNumber":102,"author":{"gitId":"angelquisit"},"content":"                if(taskDue.equals(due)){","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"angelquisit"},"content":"                    taskDueList.add(e);","lastModifiedDate":"2023-11-12"},{"lineNumber":104,"author":{"gitId":"angelquisit"},"content":"                }","lastModifiedDate":"2023-11-12"},{"lineNumber":105,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":106,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":107,"author":{"gitId":"angelquisit"},"content":"            if (t instanceof tasks.Deadline){","lastModifiedDate":"2023-11-12"},{"lineNumber":108,"author":{"gitId":"angelquisit"},"content":"                tasks.Deadline d \u003d (tasks.Deadline) t;","lastModifiedDate":"2023-11-12"},{"lineNumber":109,"author":{"gitId":"angelquisit"},"content":"                LocalDate taskDue \u003d d.getDueDate();","lastModifiedDate":"2023-11-12"},{"lineNumber":110,"author":{"gitId":"angelquisit"},"content":"                if(taskDue.equals(due)){","lastModifiedDate":"2023-11-12"},{"lineNumber":111,"author":{"gitId":"angelquisit"},"content":"                    taskDueList.add(d);","lastModifiedDate":"2023-11-12"},{"lineNumber":112,"author":{"gitId":"angelquisit"},"content":"                }","lastModifiedDate":"2023-11-12"},{"lineNumber":113,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"angelquisit"},"content":"        return taskDueList;","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":118,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":119,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":119}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    public ToDo(String description){","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"angelquisit":12}},{"path":"src/test/java/commands/DueCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.DueCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class DueCommandTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    public void dueCommandConstructorTest(){","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing Date","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DueCommand(\"due \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Missing date!\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Date in the wrong format","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DueCommand(\"due 10 Oct 2023\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please follow the correct format.\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Invalid Date","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DueCommand(\"due 2023-02-56\")); // invalid day","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please provide the date in this format: YYYY-MM-DD\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DueCommand(\"due 2023-21-06\")); // invalid month","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please provide the date in this format: YYYY-MM-DD\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":24}},{"path":"src/test/java/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import commands.MarkCommand;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    public void markCommandConstructorTest(){","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing Item Number ","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new MarkCommand(\"mark \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Missing item number!\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Invalid Item Number ","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new MarkCommand(\"mark d\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Ensure the item number is a valid integer!\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":21}},{"path":"src/test/java/commands/add/AddDeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.add.AddDeadline;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class AddDeadlineTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    public void addDeadlineConstructorTest() throws DukeException{","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"        // Test Set Up","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        Throwable exception;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"         ","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        // Working Test Case","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        AddDeadline a \u003d new AddDeadline(\"deadline buy food /by 2023-10-05\");","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing /","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddDeadline(\"deadline buy food by 2023-10-05 \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please follow the correct format.\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Incorrect Date Format","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddDeadline(\"deadline buy food /by 2023 October 10 \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please provide the date in this format: YYYY-MM-DD\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        // Test Case 3: Missing Task Description","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddDeadline(\"deadline  /by 2023-10-09 \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Oops, missing task description!\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        // Test Case 4: Missing Date","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddDeadline(\"deadline buy food /by \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please provide the date in this format: YYYY-MM-DD\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        // Test Case 5: /by typo","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddDeadline(\"deadline buy food /byyyy 2023-10-05 \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Ensure you have no trailing letters behind /by.\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":36}},{"path":"src/test/java/commands/add/AddEventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.add.AddEvent;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class AddEventTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    public void addEventConstructorTest() throws DukeException{","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"        // Test Set Up","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        // Working Test Case","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        AddEvent e \u003d new AddEvent(\"event project meeting /from 2023-10-05 /to 2023-10-06\");","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing /","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddEvent(\"event project meeting /from 2023-10-05 to 2023-10-06\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please follow the correct format.\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddEvent(\"event project meeting from 2023-10-05 to 2023-10-06\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please follow the correct format.\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Incorrect Date Format","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddEvent(\"event project meeting /from 2O Oct 2023 /to 21 Oct 2023\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please ensure both Start and End Date follows this format: YYYY-MM-DD\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        // Test Case 3: Missing Task Description","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddEvent(\"event  /from 2023-10-05 /to 2023-10-06\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Oops, missing event description!\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        // Test Case 4: Missing Date","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddEvent(\"event project meeting /from /to 21 Oct 2023 \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Please ensure both Start and End Date follows this format: YYYY-MM-DD\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        // Test Case 5: Trailing letters after /from and /by","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddEvent(\"event project meeting /frommm 2023-10-05 /to 2023-10-06\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Ensure you have no trailing letters behind /from.\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddEvent(\"event project meeting /from 2023-10-05 /tooo 2023-10-06\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Ensure you have no trailing letters behind /to.\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        // Test Case 6: End date should be later than Start Date","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddEvent(\"event project meeting /from 2023-10-08 /to 2023-10-05\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Your End Date should be later than your Start Date.\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":43}},{"path":"src/test/java/commands/add/AddToDoTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.add.AddToDo;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class AddToDoTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    public void addToDoConstructorTest() throws DukeException{","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"        // Test Set Up","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        // Working Test Case","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        AddToDo t \u003d new AddToDo(\"todo eat dinner\");","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing Task Description","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new AddToDo(\"todo \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Oops, missing todo description!\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":19}},{"path":"src/test/java/duke/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import duke.Parser;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"public class ParserTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    public void parseTest(){","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Invalid User Command","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"ghjkl \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Oops! Look at the manual to see accepted inputs!\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"bYs\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"Oops! Look at the manual to see accepted inputs!\", exception.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":21}},{"path":"src/test/java/duke/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import duke.Storage;","lastModifiedDate":"2023-11-13"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-13"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import java.io.File;","lastModifiedDate":"2023-11-13"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"public class StorageTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"     * Adds 3 Tasks of Each Task Type {@code Deadline}, {@code Event} and {@code ToDo} and checks if all are written onto file. ","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    public void storeDataTest() throws FileNotFoundException{","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        // test set up","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        String tempFilePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        Storage storage \u003d new Storage(tempFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        File tempFile \u003d new File(tempFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        Scanner s \u003d new Scanner(tempFile);","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        // adding a few random tasks","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        tasks.addDeadline(\"return book\", LocalDate.parse(\"2023-10-18\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        tasks.addToDo(\"buy food\");","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        tasks.addEvent(\"project meeting\", LocalDate.parse(\"2023-10-18\"), LocalDate.parse(\"2023-10-20\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        // test case 1: checks if all 3 tasks have been added in the file","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        storage.storeData(tasks);","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"        // assertion","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"        assertEquals(s.nextLine(),\"D,false,return book,2023-10-18\");","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"        assertEquals(s.nextLine(),\"T,false,buy food\");","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        assertEquals(s.nextLine(),\"E,false,project meeting,2023-10-18,2023-10-20\");","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":46}}]
