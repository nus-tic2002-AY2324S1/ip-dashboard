[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"    id \u0027org.openjfx.javafxplugin\u0027 version \u00270.0.10\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"javafx {","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"    version \u003d \"21.0.1\"","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    modules \u003d [ \u0027javafx.controls\u0027, \u0027javafx.fxml\u0027 ]","lastModifiedDate":"2023-11-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"    mainClass.set(\"Duke\")","lastModifiedDate":"2023-11-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"angelquisit":22,"-":41}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"D|LOW|false|return book|2023-10-18","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"T|HIGH|false|buy food","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"E|LOW|false|project meeting|2023-10-18|2023-10-20","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"T|LOW|false|collect certificate|2023-10-08|2023-10-20","lastModifiedDate":"2023-11-15"}],"authorContributionMap":{"angelquisit":4}},{"path":"src/main/java/TaskMaster.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import parser.Parser;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"public class TaskMaster {","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    private Storage storage;","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    private UI ui;","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    public TaskMaster(String filePath) {","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"            tasks \u003d new TaskList(storage.loadData());","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    // Parser: deals with making sense of the user command","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    public void run() {","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        ui.greet();","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        while (!isExit) {","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"            try {","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"            } finally {","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"                ui.showLine();","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-11-11"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"        new TaskMaster(\"data/temp.txt\").run();","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"angelquisit":50,"-":1}},{"path":"src/main/java/commands/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"public class ByeCommand extends Command {","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} stores the current user {@code tasks} list and terminates","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"     * the program.","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"            storage.storeData(tasks);","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"            isExit \u003d true;","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        } finally {","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"            ui.killUI();","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-18"}],"authorContributionMap":{"angelquisit":30}},{"path":"src/main/java/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":" * The base class for command execution.","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":" *","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":" * Stores user input and provides a mechanism to check if the user","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":" * wishes to exit the program. Subclasses are expected to provide their","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":" * own implementation of the {@code execute} method to define specific","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":" * command behavior.","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":" * \u003c/p\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"public abstract class Command {","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    protected boolean isExit \u003d false;","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"     * Executes the specified user command, defining its behavior.","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"     * This method is responsible for handling a user command and performing","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"     * the necessary actions accordingly.","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"     *","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * @param tasks   The current TaskList of the user.","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     * @param ui      The UI object responsible for printing statements.","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"     * @param storage The storage object used for saving and storing user input.","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"    abstract public void execute(TaskList tasks, UI ui, Storage storage);","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    public Boolean isExit() {","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        return this.isExit;","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":35}},{"path":"src/main/java/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-17"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    private int item;","lastModifiedDate":"2023-11-17"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public DeleteCommand(String input) throws DukeException {","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        if (!Pattern.matches(RegExp.DELETE_COMMAND_FORMAT_REGEX, input.toLowerCase())) {","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_DELETE_COMMAND_FORMAT);","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        this.item \u003d Integer.parseInt(input.split(RegExp.SPACE_DELIMITER)[1]);","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} deletes the specified {@code task} object from the user\u0027s","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"     * {@code tasks} and uses the {@code ui} object to return the error or a successful message back to","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"     * the user.","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"     * @param storage This parameter is not used in this implementation.","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"            Task t \u003d tasks.deleteItem(item);","lastModifiedDate":"2023-11-17"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"            ui.showTaskDeleted(t, tasks.getTotalTasks());","lastModifiedDate":"2023-11-17"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        } catch (MissingTaskException e) {","lastModifiedDate":"2023-11-16"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-16"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":43}},{"path":"src/main/java/commands/DueCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":" * Validates user input and extracts out the due date in the format of YYYY-MM-DD e.g. 2023-10-22","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":" * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":" * A \u003ccode\u003eDueCommand\u003c/code\u003e object stores a date and an arraylist of tasks due on that date.","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":" * ","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"public class DueCommand extends Command {","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    protected LocalDate date;","lastModifiedDate":"2023-11-15"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    protected ArrayList\u003cTask\u003e tasksDue;","lastModifiedDate":"2023-11-15"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    public DueCommand(String line) throws DukeException {","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        if (!Pattern.matches(RegExp.DUE_COMMAND_FORMAT_REGEX, line)) {","lastModifiedDate":"2023-11-15"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_DUE_COMMAND_FORMAT);","lastModifiedDate":"2023-11-15"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        String userDate \u003d line.split(RegExp.SPACE_DELIMITER)[1].trim();","lastModifiedDate":"2023-11-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"            this.date \u003d LocalDate.parse(userDate);","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-16"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_DATE);","lastModifiedDate":"2023-11-16"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-16"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} gets all related tasks due on the particular date and","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"     * prints it on the user interface.","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"        this.tasksDue \u003d tasks.getTasksDue(this.date);","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"        ui.showTasksDue(this.tasksDue, this.date);","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"angelquisit":52}},{"path":"src/main/java/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    protected String keyword;","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    protected ArrayList\u003cTask\u003e userTasks;","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    public FindCommand(String line) throws DukeException {","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        if(!Pattern.matches(RegExp.FIND_COMMAND_FORMAT_REGEX, line)){","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_FIND_COMMAND_FORMAT);","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        this.keyword \u003d line.split(RegExp.SPACE_DELIMITER)[1].toLowerCase().trim();","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} finds all tasks with the given {@code keyword} attribute","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"     * and prints.","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        userTasks \u003d tasks.getTaskList();","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        int counter \u003d 0;","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        for (Task t : userTasks) {","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"            String taskDesc \u003d t.getDescription();","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"            if (taskDesc.contains(keyword)) {","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"                ui.printMessage(t.toString());","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"                counter++;","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"        if (counter \u003d\u003d 0) {","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"            ui.printMessage(\"You have no tasks with this keyword: \" + keyword);","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"        } else {","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"            ui.printMessage(\"You have a total of \" + counter + \" tasks with this keyword: \" + keyword);","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"angelquisit":52}},{"path":"src/main/java/commands/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-16"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} stores the current user","lastModifiedDate":"2023-11-16"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"     * {@code tasks} list and terminates the program.","lastModifiedDate":"2023-11-16"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-16"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"     * @param tasks is not used in this implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-16"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-16"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        ui.help();","lastModifiedDate":"2023-11-16"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-16"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-16"}],"authorContributionMap":{"angelquisit":23}},{"path":"src/main/java/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-17"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-17"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} lists every {@code task} in the user\u0027s {@code tasks}","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"     * list.","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"            ArrayList\u003cTask\u003e list \u003d tasks.listItems();","lastModifiedDate":"2023-11-17"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"            ui.showTaskList(list);","lastModifiedDate":"2023-11-17"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":29}},{"path":"src/main/java/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"public class MarkCommand extends Command {","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    protected int item;","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    protected static final int INPUT_WORDS_REQUIRED \u003d 2;","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    public MarkCommand(String input) throws DukeException {","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        if(!Pattern.matches(RegExp.MARK_COMMAND_FORMAT_REGEX, input)){","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_MARK_COMMAND_FORMAT);","lastModifiedDate":"2023-11-15"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        this.item \u003d Integer.parseInt(input.split(RegExp.SPACE_DELIMITER)[1]);","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} marks the specified {@code task} object from the user\u0027s","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"     * {@code tasks} list to done.","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"            Task t \u003d tasks.markItem(item);","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"            ui.showMarkedTask(t);","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        } catch (MissingTaskException | DukeException e) {","lastModifiedDate":"2023-11-16"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":43}},{"path":"src/main/java/commands/SetCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import tasks.Priority;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"public class SetCommand extends Command {","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    private int item;","lastModifiedDate":"2023-11-17"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    private Priority p;","lastModifiedDate":"2023-11-17"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    // expected line arg: set 2 to (high/low/medium)","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    public SetCommand(String line) throws DukeException {","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        if (!Pattern.matches(RegExp.SET_COMMAND_FORMAT_REGEX, line)) {","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_COMMAND_FORMAT);","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        this.item \u003d Integer.parseInt(line.split(RegExp.SPACE_DELIMITER)[1].trim());","lastModifiedDate":"2023-11-15"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"            String taskPriority \u003d line.split(RegExp.SPACE_DELIMITER)[3].trim().toUpperCase();","lastModifiedDate":"2023-11-15"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"            this.p \u003d Priority.valueOf(taskPriority);","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_PRIORITY);","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} sets the task item to the {@code Priority} attribute","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"     * specified when first creating this {@code SetCommand} object.","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-14"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"            Task t \u003d tasks.setPriority(item, p);","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"            ui.showTaskPriority(t);","lastModifiedDate":"2023-11-17"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"        } catch (EmptyListException e) {","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"        } catch (MissingTaskException e) {","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-14"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"angelquisit":60}},{"path":"src/main/java/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-17"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"public class UnmarkCommand extends Command {","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    protected int item;","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public UnmarkCommand(String input) throws DukeException {","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        if(!Pattern.matches(RegExp.UNMARK_COMMAND_FORMAT_REGEX, input)){","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_UNMARK_COMMAND_FORMAT);","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        };","lastModifiedDate":"2023-11-15"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        this.item \u003d Integer.parseInt(input.split(RegExp.SPACE_DELIMITER)[1]);","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} unmarks the specified {@code task} object from the","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     * user\u0027s {@code tasks}.","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"            Task t \u003d tasks.unmarkItem(item);","lastModifiedDate":"2023-11-17"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"            ui.showUnmarkedTask(t);","lastModifiedDate":"2023-11-17"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        } catch (MissingTaskException | DukeException e) {","lastModifiedDate":"2023-11-17"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":41}},{"path":"src/main/java/commands/add/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands.add;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-16"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"public class DeadlineCommand extends Command {","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    private LocalDate date;","lastModifiedDate":"2023-11-17"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    private String description;","lastModifiedDate":"2023-11-17"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    private static final int DESCRIPTION_GROUP_CAPTURE \u003d 1;","lastModifiedDate":"2023-11-17"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    private static final int DATE_GROUP_CAPTURE \u003d 2;","lastModifiedDate":"2023-11-17"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    public DeadlineCommand(String line) throws DukeException {","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        Pattern pattern \u003d Pattern.compile(RegExp.DEADLINE_COMMAND_FORMAT_REGEX);","lastModifiedDate":"2023-11-15"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        Matcher matcher \u003d pattern.matcher(line.toLowerCase());","lastModifiedDate":"2023-11-15"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-11-15"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_DEADLINE_COMMAND_FORMAT);","lastModifiedDate":"2023-11-15"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-15"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        assert matcher.groupCount() \u003d\u003d 4 : \"should have 4 capture groups based on regexp\";","lastModifiedDate":"2023-11-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        this.description \u003d matcher.group(DESCRIPTION_GROUP_CAPTURE);","lastModifiedDate":"2023-11-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"            this.date \u003d LocalDate.parse(matcher.group(DATE_GROUP_CAPTURE));","lastModifiedDate":"2023-11-15"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-16"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_DATE);","lastModifiedDate":"2023-11-16"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-16"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-15"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-15"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"        int currentSize \u003d tasks.getTotalTasks();","lastModifiedDate":"2023-11-15"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"        Task t \u003d tasks.addDeadline(description, date);","lastModifiedDate":"2023-11-15"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        assert tasks.getTotalTasks() \u003d\u003d currentSize + 1 : \"deadline should be added successfully\";","lastModifiedDate":"2023-11-15"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"        ui.showTaskAdded(t);","lastModifiedDate":"2023-11-15"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-15"}],"authorContributionMap":{"angelquisit":48}},{"path":"src/main/java/commands/add/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands.add;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-16"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"public class EventCommand extends Command {","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    private String description;","lastModifiedDate":"2023-11-17"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-11-17"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-11-17"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    private static final int DESCRIPTION_GROUP_CAPTURE \u003d 1;","lastModifiedDate":"2023-11-17"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    private static final int FROM_DATE_GROUP_CAPTURE \u003d 2;","lastModifiedDate":"2023-11-17"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    private static final int TO_DATE_GROUP_CAPTURE \u003d 5;","lastModifiedDate":"2023-11-17"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    public EventCommand(String input) throws DukeException {","lastModifiedDate":"2023-11-15"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        Pattern pattern \u003d Pattern.compile(RegExp.EVENT_COMMAND_FORMAT_REGEX);","lastModifiedDate":"2023-11-15"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        Matcher matcher \u003d pattern.matcher(input.toLowerCase());","lastModifiedDate":"2023-11-15"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-11-15"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_EVENT_COMMAND_FORMAT);","lastModifiedDate":"2023-11-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        assert matcher.groupCount() \u003d\u003d 7 : \"should have 7 capture groups based on regex\";","lastModifiedDate":"2023-11-15"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        this.description \u003d matcher.group(DESCRIPTION_GROUP_CAPTURE);","lastModifiedDate":"2023-11-15"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-16"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"            this.fromDate \u003d LocalDate.parse(matcher.group(FROM_DATE_GROUP_CAPTURE));","lastModifiedDate":"2023-11-15"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"            this.toDate \u003d LocalDate.parse(matcher.group(TO_DATE_GROUP_CAPTURE));","lastModifiedDate":"2023-11-15"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-16"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_DATE);","lastModifiedDate":"2023-11-16"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-16"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"        if (fromDate.isAfter(toDate)) {","lastModifiedDate":"2023-11-15"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.ERROR_END_DATE_BEFORE_START_DATE);","lastModifiedDate":"2023-11-15"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-15"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-15"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-15"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"        int currentSize \u003d tasks.getTotalTasks();","lastModifiedDate":"2023-11-15"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"        Task t \u003d tasks.addEvent(description, fromDate, toDate);","lastModifiedDate":"2023-11-15"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"        assert tasks.getTotalTasks() \u003d\u003d currentSize + 1 : \"event should be added successfully\";","lastModifiedDate":"2023-11-15"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"        ui.showTaskAdded(t);","lastModifiedDate":"2023-11-15"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-15"}],"authorContributionMap":{"angelquisit":54}},{"path":"src/main/java/commands/add/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands.add;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"public class ToDoCommand extends Command {","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    private String description;","lastModifiedDate":"2023-11-17"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    public ToDoCommand(String line) throws DukeException {","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        Pattern pattern \u003d Pattern.compile(RegExp.TODO_COMMAND_FORMAT_REGEX);","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        Matcher matcher \u003d pattern.matcher(line);","lastModifiedDate":"2023-11-15"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_TODO_FORMAT);","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        this.description \u003d line.split(RegExp.SPACE_DELIMITER, 2)[1].trim();","lastModifiedDate":"2023-11-15"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-11"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        int currentSize \u003d tasks.getTotalTasks();","lastModifiedDate":"2023-11-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        Task t \u003d tasks.addToDo(description);","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        assert tasks.getTotalTasks() \u003d\u003d currentSize + 1 : \"todo within period should be added successfully\";","lastModifiedDate":"2023-11-15"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        ui.showTaskAdded(t);","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":35}},{"path":"src/main/java/commands/add/ToDoWithinPeriodCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package commands.add;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"public class ToDoWithinPeriodCommand extends Command {","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    private LocalDate from;","lastModifiedDate":"2023-11-17"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    private LocalDate to;","lastModifiedDate":"2023-11-17"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    private String description;","lastModifiedDate":"2023-11-17"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    private static final int DESCRIPTION_GROUP_CAPTURE \u003d 1;","lastModifiedDate":"2023-11-17"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    private static final int FROM_DATE_GROUP_CAPTURE \u003d 2;","lastModifiedDate":"2023-11-17"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    private static final int TO_DATE_GROUP_CAPTURE \u003d 5;","lastModifiedDate":"2023-11-17"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    // todo colllect certificate /between 2023-10-08 /and 2023-10-10","lastModifiedDate":"2023-11-15"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    public ToDoWithinPeriodCommand(String line) throws DukeException {","lastModifiedDate":"2023-11-15"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        Pattern pattern \u003d Pattern.compile(RegExp.TODO_COMMAND_WITHIN_PERIOD_FORMAT_REGEX);","lastModifiedDate":"2023-11-15"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        Matcher matcher \u003d pattern.matcher(line);","lastModifiedDate":"2023-11-15"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2023-11-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_TODO_WITHIN_PERIOD_FORMAT);","lastModifiedDate":"2023-11-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        } ;","lastModifiedDate":"2023-11-15"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        assert matcher.groupCount() \u003d\u003d 7 : \"should have 7 capture groups based on regex\";","lastModifiedDate":"2023-11-15"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        this.description \u003d matcher.group(DESCRIPTION_GROUP_CAPTURE).trim();","lastModifiedDate":"2023-11-15"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-16"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"            this.from \u003d LocalDate.parse(matcher.group(FROM_DATE_GROUP_CAPTURE));","lastModifiedDate":"2023-11-16"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"            this.to \u003d LocalDate.parse(matcher.group(TO_DATE_GROUP_CAPTURE));","lastModifiedDate":"2023-11-16"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-16"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_DATE);","lastModifiedDate":"2023-11-16"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-16"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        if (from.isAfter(to)) {","lastModifiedDate":"2023-11-16"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.ERROR_END_DATE_BEFORE_START_DATE);","lastModifiedDate":"2023-11-15"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-15"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-15"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"     * {@inheritDoc}","lastModifiedDate":"2023-11-15"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-15"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"     * This implementation of {@code execute} adds a to do task with period to the user\u0027s {@code tasks}.","lastModifiedDate":"2023-11-16"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-15"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"     * @param storage is not used in this implementation.","lastModifiedDate":"2023-11-15"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-15"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-15"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"    public void execute(TaskList tasks, UI ui, Storage storage) {","lastModifiedDate":"2023-11-15"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"        int currentSize \u003d tasks.getTotalTasks();","lastModifiedDate":"2023-11-15"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"        Task t \u003d tasks.addToDoWithinPeriod(description, from, to);","lastModifiedDate":"2023-11-15"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"        assert tasks.getTotalTasks() \u003d\u003d currentSize + 1 : \"todo should be added successfully\";","lastModifiedDate":"2023-11-15"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"        ui.showTaskAdded(t);","lastModifiedDate":"2023-11-15"},{"lineNumber":62,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":63,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":64,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-15"}],"authorContributionMap":{"angelquisit":64}},{"path":"src/main/java/constants/ErrorMessages.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package constants;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public class ErrorMessages {","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"        public static final String EMPTY_LIST \u003d","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"                        \"Your task list is currently clear! Time for a new adventure.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"        public static final String ERROR_END_DATE_BEFORE_START_DATE \u003d","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"                        \"Whoops! Your End Date should come after the Start Date.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"        public static final String TASK_NOT_FOUND \u003d","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"                        \"Apologies, I couldn\u0027t find the task. Double-check your task list and try again.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_DATE_FORMAT \u003d","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"                        \"Whoops! Invalid date format. Please use YYYY-MM-DD for dates.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_COMMAND_FORMAT \u003d","lastModifiedDate":"2023-11-16"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"                        \"Hmm, something seems off. Make sure to follow the correct command format.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_TODO_FORMAT \u003d","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"                        \"Sorry, the format for adding To-Dos isn\u0027t quite right. Please check the manual.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_TODO_WITHIN_PERIOD_FORMAT \u003d","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"                        \"My apologies! Follow the correct format for adding To-Dos Within Period tasks.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_DELETE_COMMAND_FORMAT \u003d","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"                        \"Oops! The delete command seems a bit scrambled. Double-check the format and try again.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_DEADLINE_COMMAND_FORMAT \u003d","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"                        \"Hold on! Follow the correct format for adding Deadlines, and ensure the date is in YYYY-MM-DD format.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_EVENT_COMMAND_FORMAT \u003d","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"                        \"Almost there! Follow the correct format for adding Events, and make sure both dates are in YYYY-MM-DD format.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_MARK_COMMAND_FORMAT \u003d","lastModifiedDate":"2023-11-15"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"                        \"Something\u0027s amiss! Follow the correct format for marking tasks. Make sure to pass in a valid integer.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_UNMARK_COMMAND_FORMAT \u003d","lastModifiedDate":"2023-11-15"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"                        \"Hmm, marking tasks? Follow the correct format and ensure to pass in a valid integer.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_DATE \u003d","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"                        \"Oh snap! It seems you\u0027ve stumbled upon a date from an alternate dimension. Check the calendar, because the date you provided doesn\u0027t exist in this realm!\";","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_DUE_COMMAND_FORMAT \u003d","lastModifiedDate":"2023-11-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"                        \"Hold up! Follow the correct format for checking items due. Dates should be in YYYY-MM-DD format.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_FIND_COMMAND_FORMAT \u003d \"Oops! One keyword at a time, please.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_PRIORITY \u003d","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"                        \"Choose wisely! Priority should be either Low, Medium, or High.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        public static final String INVALID_USER_INPUT \u003d","lastModifiedDate":"2023-11-15"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"                        \"Uh-oh! That\u0027s not quite right. Check the manual for accepted inputs and try again.\";","lastModifiedDate":"2023-11-16"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        public static final String ERROR_MARKING_MARKED_TASK \u003d","lastModifiedDate":"2023-11-17"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"                        \"Whoa there, adventurer! Attempting to mark an already marked task? Double the glory, I suppose!\";","lastModifiedDate":"2023-11-17"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        public static final String ERROR_UMARKING_UNMARKED_TASK \u003d","lastModifiedDate":"2023-11-17"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"                        \"Hold your horses! Attempting to unmark a task that was never in the victory parade?\";","lastModifiedDate":"2023-11-17"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"        public static final String ERROR_STORING_TO_FILE \u003d","lastModifiedDate":"2023-11-18"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"                        \"Uh-oh! TaskMaster encountered a hiccup while scribbling on the grand task scroll!\";","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"angelquisit":43}},{"path":"src/main/java/constants/RegExp.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package constants;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public class RegExp {","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    public static final String STRICT_DATE_REGEX \u003d \"^\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"    public static final String DATE_REGEX \u003d \"\\\\d{4}-(0[1-9]|1[0-2])-(0[1-9]|[12]\\\\d|3[01])\";","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    public static final String SET_COMMAND_FORMAT_REGEX \u003d \"^set\\\\s+(\\\\d+)\\\\s+to\\\\s+(.+)$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    public static final String DEADLINE_COMMAND_FORMAT_REGEX \u003d \"^deadline\\\\s+(.+)\\\\s+/by\\\\s+(\" + DATE_REGEX + \")$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    public static final String EVENT_COMMAND_FORMAT_REGEX \u003d \"^event\\\\s+(.+)\\\\s+/from\\\\s+(\" + DATE_REGEX + \")\\\\s+/to\\\\s+(\" + DATE_REGEX + \")$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    public static final String TODO_COMMAND_FORMAT_REGEX \u003d \"^todo\\\\s+(.+)$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    public static final String TODO_COMMAND_WITHIN_PERIOD_FORMAT_REGEX \u003d \"^todo\\\\s+(.+)\\\\s+/between\\\\s+(\" + DATE_REGEX + \")\\\\s+/and\\\\s+(\" + DATE_REGEX + \")$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    public static final String DELETE_COMMAND_FORMAT_REGEX \u003d \"^delete\\\\s+(\\\\d+)$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    public static final String MARK_COMMAND_FORMAT_REGEX \u003d \"^mark\\\\s+(\\\\d+)$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    public static final String UNMARK_COMMAND_FORMAT_REGEX \u003d \"^unmark\\\\s+(\\\\d+)$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    public static final String DUE_COMMAND_FORMAT_REGEX \u003d \"^due\\\\s+\" + DATE_REGEX + \"$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    public static final String FIND_COMMAND_FORMAT_REGEX \u003d \"^find\\\\s+(.+)$\";","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public static final String FILE_STORAGE_EVENT_FORMAT \u003d \"E\\\\|(?i)(LOW|MEDIUM|HIGH)\\\\|(?i)(true|false)\\\\|(.+)\\\\|\" + DATE_REGEX + \"\\\\|\" + DATE_REGEX;","lastModifiedDate":"2023-11-17"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"    public static final String FILE_STORAGE_DEADLINE_FORMAT \u003d \"D\\\\|(?i)(LOW|MEDIUM|HIGH)\\\\|(?i)(true|false)\\\\|(.+)\\\\|\" + DATE_REGEX;","lastModifiedDate":"2023-11-17"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    public static final String FILE_STORAGE_TODO_FORMAT \u003d \"T\\\\|(?i)(LOW|MEDIUM|HIGH)\\\\|(?i)(true|false)\\\\|(.+)\";","lastModifiedDate":"2023-11-17"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    public static final String FILE_STORAGE_TODO_WITHIN_PERIOD_FORMAT \u003d \"T\\\\|(?i)(LOW|MEDIUM|HIGH)\\\\|(?i)(true|false)\\\\|(.+)\\\\|\" + DATE_REGEX + \"\\\\|\" + DATE_REGEX;","lastModifiedDate":"2023-11-17"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    public static final String SPACE_DELIMITER \u003d \" \";","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    public static final String LINE_DELIMITER \u003d \"\\\\|\";","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    public static final String NEW_LINE \u003d \"\\n\";","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-15"}],"authorContributionMap":{"angelquisit":23}},{"path":"src/main/java/data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"D|MEDIUM|false|conquer the world|2023-12-31","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"E|LOW|true|epic brainstorming|2023-11-01|2023-11-02","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"T|HIGH|true|master the art of juggling","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"T|MEDIUM|false|write a novel|2024-01-01|2024-12-31","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"D|LOW|false|complete the great novel escape plan|2023-12-31","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"E|HIGH|false|mind-bending ideathon|2023-12-30|2023-12-31","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"E|LOW|false|quantum leap hackathon|2023-12-31|2024-01-03","lastModifiedDate":"2023-11-16"}],"authorContributionMap":{"angelquisit":7}},{"path":"src/main/java/data/temp.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"D|HIGH|true|conquer the world|2023-12-31","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"E|MEDIUM|false|epic brainstorming|2023-11-01|2023-11-02","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"T|LOW|false|master the art of juggling","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"T|LOW|false|write a novel|2024-01-01|2024-12-31","lastModifiedDate":"2023-11-16"}],"authorContributionMap":{"angelquisit":4}},{"path":"src/main/java/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package exceptions;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    String message;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    public String getMessage() {","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        return message;","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":14}},{"path":"src/main/java/exceptions/EmptyListException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package exceptions;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public class EmptyListException extends Exception {","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    public String message;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    public EmptyListException(String string) {","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"        message \u003d string;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    public String getMessage() {","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        return message;","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":15}},{"path":"src/main/java/exceptions/InvalidInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package exceptions;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public class InvalidInputException extends Exception {","lastModifiedDate":"2023-10-07"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"  String message;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"  public InvalidInputException(String message) {","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    this.message \u003d message;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"  }","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"  @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"  public String getMessage() {","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    return this.message;","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"  }","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-10-07"}],"authorContributionMap":{"angelquisit":14}},{"path":"src/main/java/exceptions/MissingTaskException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package exceptions;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public class MissingTaskException extends Exception {","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    String message;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    public MissingTaskException(String message) {","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"        this.message \u003d message;","lastModifiedDate":"2023-11-11"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    public String getMessage() {","lastModifiedDate":"2023-11-11"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        return message;","lastModifiedDate":"2023-11-11"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":14}},{"path":"src/main/java/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package parser;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import commands.ByeCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.Command;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import commands.DeleteCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import commands.DueCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import commands.FindCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import commands.HelpCommand;","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import commands.ListCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import commands.MarkCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import commands.SetCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import commands.UnmarkCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"import commands.add.DeadlineCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"import commands.add.EventCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"import commands.add.ToDoCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"import commands.add.ToDoWithinPeriodCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"public class Parser {","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    private static Command c;","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    private static final String BETWEEN_STRING \u003d \"/between\";","lastModifiedDate":"2023-11-17"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"     * Returns a {@code Command} object based on user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"     * Further validation will be done inside the {@code Command} object. Users can later call the","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"     * {@link Command#execute()} method on the returned object.","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"     * @param userInput the user input received.","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"     * @return A {@code Command} object based on user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"     * @throws DukeException if input validations fail.","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"    public static Command parse(String userInput) throws DukeException {","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        String userCommand \u003d userInput.split(RegExp.SPACE_DELIMITER)[0];","lastModifiedDate":"2023-11-15"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        userInput \u003d userInput.trim().toLowerCase();","lastModifiedDate":"2023-11-15"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        switch (userCommand.toLowerCase()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        case \"list\":","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"            c \u003d new ListCommand();","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"        case \"mark\":","lastModifiedDate":"2023-11-11"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"            c \u003d new MarkCommand(userInput);","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"        case \"unmark\":","lastModifiedDate":"2023-11-11"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"            c \u003d new UnmarkCommand(userInput);","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"        case \"bye\":","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"            c \u003d new ByeCommand();","lastModifiedDate":"2023-11-11"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"        case \"delete\":","lastModifiedDate":"2023-11-11"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"            c \u003d new DeleteCommand(userInput);","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"        case \"todo\":","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"            if(userInput.contains(BETWEEN_STRING)){","lastModifiedDate":"2023-11-15"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"                c \u003d new ToDoWithinPeriodCommand(userInput);","lastModifiedDate":"2023-11-15"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"            } else {","lastModifiedDate":"2023-11-15"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"                c \u003d new ToDoCommand(userInput);","lastModifiedDate":"2023-11-15"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-15"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"angelquisit"},"content":"        case \"event\":","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"angelquisit"},"content":"            c \u003d new EventCommand(userInput);","lastModifiedDate":"2023-11-15"},{"lineNumber":64,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"angelquisit"},"content":"        case \"deadline\":","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"angelquisit"},"content":"            c \u003d new DeadlineCommand(userInput);","lastModifiedDate":"2023-11-15"},{"lineNumber":67,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"angelquisit"},"content":"        case \"due\":","lastModifiedDate":"2023-11-12"},{"lineNumber":69,"author":{"gitId":"angelquisit"},"content":"            c \u003d new DueCommand(userInput);","lastModifiedDate":"2023-11-15"},{"lineNumber":70,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-12"},{"lineNumber":71,"author":{"gitId":"angelquisit"},"content":"        case \"set\":","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"angelquisit"},"content":"            c \u003d new SetCommand(userInput);","lastModifiedDate":"2023-11-15"},{"lineNumber":73,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"angelquisit"},"content":"        case \"find\":","lastModifiedDate":"2023-11-14"},{"lineNumber":75,"author":{"gitId":"angelquisit"},"content":"            c \u003d new FindCommand(userInput);","lastModifiedDate":"2023-11-15"},{"lineNumber":76,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"angelquisit"},"content":"        case \"help\":","lastModifiedDate":"2023-11-16"},{"lineNumber":78,"author":{"gitId":"angelquisit"},"content":"            c \u003d new HelpCommand();","lastModifiedDate":"2023-11-16"},{"lineNumber":79,"author":{"gitId":"angelquisit"},"content":"            break;","lastModifiedDate":"2023-11-16"},{"lineNumber":80,"author":{"gitId":"angelquisit"},"content":"        default:","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.INVALID_USER_INPUT);","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":84,"author":{"gitId":"angelquisit"},"content":"        return c;","lastModifiedDate":"2023-11-11"},{"lineNumber":85,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":86,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":86}},{"path":"src/main/java/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.io.File;","lastModifiedDate":"2023-11-11"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-17"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-17"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"import tasks.Event;","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"import tasks.Priority;","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-11-15"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"import tasks.ToDoWithinPeriod;","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"public class Storage {","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    private String filePath;","lastModifiedDate":"2023-11-17"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    private File file, directory;","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    private static final String TRUE_STRING \u003d \"true\";","lastModifiedDate":"2023-11-17"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-11-11"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        this.file \u003d new File(filePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        int endIndex \u003d filePath.lastIndexOf(\"/\");","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        String directoryPath \u003d filePath.substring(0, endIndex + 1);","lastModifiedDate":"2023-11-17"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        directory \u003d new File(directoryPath);","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"     * Reads the contents from the object\u0027s {@code filePath}, validates the data format, and creates","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"     * Task objects.","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"     * This method checks if the data is in the expected format and that the date follows the specified","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"     * format before creating Task objects and adding them to the ArrayList of tasks.","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"     * If the file path is not present in the current workspace, this method will create a new file. It","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"     * will also create the necessary directory if it is not already present. If file creation fails, an","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"     * IOException is thrown.","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"     * @return An {@code ArrayList\u003cTask\u003e} containing all the tasks stored in the specified file path.","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"     * @throws IOException If file creation fails.","lastModifiedDate":"2023-11-12"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"    public ArrayList\u003cTask\u003e loadData() throws IOException {","lastModifiedDate":"2023-11-11"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-11-17"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-11-11"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"            int counter \u003d 0;","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"            Task t;","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"            while (s.hasNext()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"                String string \u003d s.nextLine();","lastModifiedDate":"2023-11-15"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"                String[] line \u003d string.split(RegExp.LINE_DELIMITER);","lastModifiedDate":"2023-11-15"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"angelquisit"},"content":"                switch (line[0].toUpperCase()) {","lastModifiedDate":"2023-11-17"},{"lineNumber":63,"author":{"gitId":"angelquisit"},"content":"                case \"E\":","lastModifiedDate":"2023-11-11"},{"lineNumber":64,"author":{"gitId":"angelquisit"},"content":"                    // doesnt add invalid task","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"angelquisit"},"content":"                    if (!Pattern.matches(RegExp.FILE_STORAGE_EVENT_FORMAT, string)) {","lastModifiedDate":"2023-11-15"},{"lineNumber":66,"author":{"gitId":"angelquisit"},"content":"                        continue;","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"angelquisit"},"content":"                    }","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"angelquisit"},"content":"                    t \u003d new Event(line[3], LocalDate.parse(line[4]), LocalDate.parse(line[5]));","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"angelquisit"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"angelquisit"},"content":"                    break;","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"angelquisit"},"content":"                case \"D\":","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"angelquisit"},"content":"                    // doesnt add invalid task","lastModifiedDate":"2023-11-15"},{"lineNumber":74,"author":{"gitId":"angelquisit"},"content":"                    if (!Pattern.matches(RegExp.FILE_STORAGE_DEADLINE_FORMAT, string)) {","lastModifiedDate":"2023-11-15"},{"lineNumber":75,"author":{"gitId":"angelquisit"},"content":"                        continue;","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"angelquisit"},"content":"                    }","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"angelquisit"},"content":"                    t \u003d new Deadline(line[3], LocalDate.parse(line[4]));","lastModifiedDate":"2023-11-14"},{"lineNumber":78,"author":{"gitId":"angelquisit"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-11-11"},{"lineNumber":79,"author":{"gitId":"angelquisit"},"content":"                    break;","lastModifiedDate":"2023-11-11"},{"lineNumber":80,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"angelquisit"},"content":"                case \"T\":","lastModifiedDate":"2023-11-11"},{"lineNumber":82,"author":{"gitId":"angelquisit"},"content":"                    // doesnt add invalid task","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"angelquisit"},"content":"                    if (Pattern.matches(RegExp.FILE_STORAGE_TODO_WITHIN_PERIOD_FORMAT, string)) {","lastModifiedDate":"2023-11-15"},{"lineNumber":84,"author":{"gitId":"angelquisit"},"content":"                        t \u003d new ToDoWithinPeriod(line[3], LocalDate.parse(line[4]), LocalDate.parse(line[5]));","lastModifiedDate":"2023-11-15"},{"lineNumber":85,"author":{"gitId":"angelquisit"},"content":"                        tasks.add(t);","lastModifiedDate":"2023-11-15"},{"lineNumber":86,"author":{"gitId":"angelquisit"},"content":"                        break;","lastModifiedDate":"2023-11-15"},{"lineNumber":87,"author":{"gitId":"angelquisit"},"content":"                    }","lastModifiedDate":"2023-11-15"},{"lineNumber":88,"author":{"gitId":"angelquisit"},"content":"                    if (!Pattern.matches(RegExp.FILE_STORAGE_TODO_FORMAT, string)) {","lastModifiedDate":"2023-11-15"},{"lineNumber":89,"author":{"gitId":"angelquisit"},"content":"                        continue;","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"angelquisit"},"content":"                    }","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"angelquisit"},"content":"                    t \u003d new ToDo(line[3]);","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"angelquisit"},"content":"                    tasks.add(t);","lastModifiedDate":"2023-11-11"},{"lineNumber":93,"author":{"gitId":"angelquisit"},"content":"                    break;","lastModifiedDate":"2023-11-11"},{"lineNumber":94,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":95,"author":{"gitId":"angelquisit"},"content":"                default:","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"angelquisit"},"content":"                    continue;","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"angelquisit"},"content":"                }","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"angelquisit"},"content":"                tasks.get(counter).setTaskPriority(Priority.valueOf(line[1].toUpperCase()));","lastModifiedDate":"2023-11-17"},{"lineNumber":100,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"angelquisit"},"content":"                if (line[2].equals(TRUE_STRING)) {","lastModifiedDate":"2023-11-15"},{"lineNumber":102,"author":{"gitId":"angelquisit"},"content":"                    t \u003d tasks.get(counter);","lastModifiedDate":"2023-11-11"},{"lineNumber":103,"author":{"gitId":"angelquisit"},"content":"                    t.setDone();","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"angelquisit"},"content":"                }","lastModifiedDate":"2023-11-11"},{"lineNumber":105,"author":{"gitId":"angelquisit"},"content":"                counter++;","lastModifiedDate":"2023-11-11"},{"lineNumber":106,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":107,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":108,"author":{"gitId":"angelquisit"},"content":"            s.close();","lastModifiedDate":"2023-11-11"},{"lineNumber":109,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":110,"author":{"gitId":"angelquisit"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-11-14"},{"lineNumber":111,"author":{"gitId":"angelquisit"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-11-11"},{"lineNumber":112,"author":{"gitId":"angelquisit"},"content":"                directory.mkdir();","lastModifiedDate":"2023-11-11"},{"lineNumber":113,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":114,"author":{"gitId":"angelquisit"},"content":"            file.createNewFile();","lastModifiedDate":"2023-11-14"},{"lineNumber":115,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":116,"author":{"gitId":"angelquisit"},"content":"        return tasks;","lastModifiedDate":"2023-11-11"},{"lineNumber":117,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":118,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":119,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":120,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"angelquisit"},"content":"     * Stores the user\u0027s {@code tasks} in the objects\u0027 {@code filePath}.","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"angelquisit"},"content":"     * \u003cp\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"angelquisit"},"content":"     * This method saves the user\u0027s tasks to the file path specified by the {@code filePath} attribute","lastModifiedDate":"2023-11-14"},{"lineNumber":124,"author":{"gitId":"angelquisit"},"content":"     * of this object.","lastModifiedDate":"2023-11-14"},{"lineNumber":125,"author":{"gitId":"angelquisit"},"content":"     * \u003c/p\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":126,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-14"},{"lineNumber":127,"author":{"gitId":"angelquisit"},"content":"     * @param tasks The users current TaskList object.","lastModifiedDate":"2023-11-12"},{"lineNumber":128,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":129,"author":{"gitId":"angelquisit"},"content":"    public void storeData(TaskList tasks) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":130,"author":{"gitId":"angelquisit"},"content":"        try {","lastModifiedDate":"2023-11-11"},{"lineNumber":131,"author":{"gitId":"angelquisit"},"content":"            FileWriter fw \u003d new FileWriter(filePath);","lastModifiedDate":"2023-11-17"},{"lineNumber":132,"author":{"gitId":"angelquisit"},"content":"            int totalTasks \u003d tasks.getTotalTasks();","lastModifiedDate":"2023-11-14"},{"lineNumber":133,"author":{"gitId":"angelquisit"},"content":"            ArrayList\u003cTask\u003e taskList \u003d tasks.getTaskList();","lastModifiedDate":"2023-11-14"},{"lineNumber":134,"author":{"gitId":"angelquisit"},"content":"            for (int i \u003d 0; i \u003c totalTasks; i++) {","lastModifiedDate":"2023-11-14"},{"lineNumber":135,"author":{"gitId":"angelquisit"},"content":"                String textToAdd \u003d taskList.get(i).writeToFile();","lastModifiedDate":"2023-11-14"},{"lineNumber":136,"author":{"gitId":"angelquisit"},"content":"                fw.write(textToAdd + RegExp.NEW_LINE);","lastModifiedDate":"2023-11-15"},{"lineNumber":137,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-11"},{"lineNumber":138,"author":{"gitId":"angelquisit"},"content":"            fw.close();","lastModifiedDate":"2023-11-11"},{"lineNumber":139,"author":{"gitId":"angelquisit"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-11"},{"lineNumber":140,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.ERROR_STORING_TO_FILE);","lastModifiedDate":"2023-11-18"},{"lineNumber":141,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":142,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":143,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":144,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":145,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":145}},{"path":"src/main/java/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    private LocalDate by;","lastModifiedDate":"2023-11-17"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    public Deadline(String description, LocalDate by) {","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    public LocalDate getDueDate() {","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        return this.by;","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        return \"[D]\" + super.toString() + \" (by: \"","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"                + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        return \"D|\" + super.writeToFile() + \"|\" + by;","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"angelquisit":28}},{"path":"src/main/java/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    private LocalDate start;","lastModifiedDate":"2023-11-17"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    private LocalDate end;","lastModifiedDate":"2023-11-17"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    public Event(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        this.start \u003d start;","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        this.end \u003d end;","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public LocalDate getStartDate() {","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        return this.start;","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    public LocalDate getEndDate() {","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        return this.end;","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        return \"[E]\" + super.toString() + \" (from: \"","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"                + start.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" to \"","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"                + end.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        return \"E|\" + super.writeToFile() + \"|\" + start + \"|\" + end;","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"angelquisit":35}},{"path":"src/main/java/tasks/Priority.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public enum Priority {","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    HIGH, MEDIUM, LOW","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"angelquisit":5}},{"path":"src/main/java/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public class Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"    protected String description;","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-11-17"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"    protected Priority p \u003d Priority.LOW;","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        return (isDone ? \"X\" : \" \");","lastModifiedDate":"2023-09-10"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public void setDone() {","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-09-10"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    public void unmarkTask() {","lastModifiedDate":"2023-09-10"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    public Boolean isMarked() {","lastModifiedDate":"2023-10-07"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        return isDone;","lastModifiedDate":"2023-10-07"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    public String getDescription() {","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        return this.description;","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    public void setTaskPriority(Priority p) {","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        this.p \u003d p;","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"    public String getPriority() {","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        String priority \u003d this.p.name();","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        String formatted \u003d priority.substring(0, 1) + priority.substring(1).toLowerCase();","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        return formatted.trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"    public String toString() {","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"        return \"[\" + getStatusIcon() + \"]\" + \"[\" + getPriority() + \"] \" + description;","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"        String text \u003d p + \"|\" + isDone + \"|\" + description;","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"        return text;","lastModifiedDate":"2023-11-11"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"angelquisit":50}},{"path":"src/main/java/tasks/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-11"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"public class TaskList {","lastModifiedDate":"2023-11-11"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-11-17"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    private int totalTasks \u003d 0;","lastModifiedDate":"2023-11-17"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    public TaskList() {}","lastModifiedDate":"2023-11-17"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList) {","lastModifiedDate":"2023-11-11"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        this.tasks \u003d taskList;","lastModifiedDate":"2023-11-11"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks \u003d taskList.size();","lastModifiedDate":"2023-11-11"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    public ArrayList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        return this.tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    public Integer getTotalTasks() {","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        return this.totalTasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    public Task addDeadline(String description, LocalDate date) {","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        Task task \u003d new Deadline(description, date);","lastModifiedDate":"2023-11-17"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        tasks.add(task);","lastModifiedDate":"2023-11-11"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks++;","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        return task;","lastModifiedDate":"2023-11-17"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"    public Task addToDo(String description) {","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        Task task \u003d new ToDo(description);","lastModifiedDate":"2023-11-17"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        tasks.add(task);","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks++;","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        return task;","lastModifiedDate":"2023-11-17"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"    public Task addToDoWithinPeriod(String description, LocalDate start, LocalDate end) {","lastModifiedDate":"2023-11-15"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        Task task \u003d new ToDoWithinPeriod(description, start, end);","lastModifiedDate":"2023-11-17"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"        tasks.add(task);","lastModifiedDate":"2023-11-15"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks++;","lastModifiedDate":"2023-11-15"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"        return task;","lastModifiedDate":"2023-11-17"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"    public Task addEvent(String description, LocalDate fromDate, LocalDate toDate) {","lastModifiedDate":"2023-11-12"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"        Task task \u003d new Event(description, fromDate, toDate);","lastModifiedDate":"2023-11-17"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"        tasks.add(task);","lastModifiedDate":"2023-11-17"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"        this.totalTasks++;","lastModifiedDate":"2023-11-12"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"        return task;","lastModifiedDate":"2023-11-17"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"    public Task markItem(int item) throws MissingTaskException, DukeException {","lastModifiedDate":"2023-11-16"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"        if (item \u003e totalTasks || item \u003d\u003d 0) {","lastModifiedDate":"2023-11-11"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"            throw new MissingTaskException(ErrorMessages.TASK_NOT_FOUND);","lastModifiedDate":"2023-11-14"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"        Task task \u003d tasks.get(item - 1);","lastModifiedDate":"2023-11-17"},{"lineNumber":62,"author":{"gitId":"angelquisit"},"content":"        if (task.isDone) {","lastModifiedDate":"2023-11-11"},{"lineNumber":63,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.ERROR_MARKING_MARKED_TASK);","lastModifiedDate":"2023-11-17"},{"lineNumber":64,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"angelquisit"},"content":"        task.setDone();","lastModifiedDate":"2023-11-17"},{"lineNumber":66,"author":{"gitId":"angelquisit"},"content":"        return task;","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":68,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"angelquisit"},"content":"    public Task unmarkItem(int item) throws MissingTaskException, DukeException {","lastModifiedDate":"2023-11-17"},{"lineNumber":70,"author":{"gitId":"angelquisit"},"content":"        if (item \u003e totalTasks || item \u003d\u003d 0) {","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"angelquisit"},"content":"            throw new MissingTaskException(ErrorMessages.TASK_NOT_FOUND);","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"angelquisit"},"content":"        Task task \u003d tasks.get(item - 1);","lastModifiedDate":"2023-11-17"},{"lineNumber":74,"author":{"gitId":"angelquisit"},"content":"        if (!task.isDone) {","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"angelquisit"},"content":"            throw new DukeException(ErrorMessages.ERROR_UMARKING_UNMARKED_TASK);","lastModifiedDate":"2023-11-17"},{"lineNumber":76,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-11"},{"lineNumber":77,"author":{"gitId":"angelquisit"},"content":"        task.unmarkTask();","lastModifiedDate":"2023-11-11"},{"lineNumber":78,"author":{"gitId":"angelquisit"},"content":"        return task;","lastModifiedDate":"2023-11-17"},{"lineNumber":79,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":81,"author":{"gitId":"angelquisit"},"content":"    public ArrayList\u003cTask\u003e listItems() throws EmptyListException {","lastModifiedDate":"2023-11-17"},{"lineNumber":82,"author":{"gitId":"angelquisit"},"content":"        if (totalTasks \u003c 1) {","lastModifiedDate":"2023-11-11"},{"lineNumber":83,"author":{"gitId":"angelquisit"},"content":"            throw new EmptyListException(ErrorMessages.EMPTY_LIST);","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"angelquisit"},"content":"        return this.tasks;","lastModifiedDate":"2023-11-17"},{"lineNumber":86,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":87,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":88,"author":{"gitId":"angelquisit"},"content":"    public Task deleteItem(int item) throws MissingTaskException {","lastModifiedDate":"2023-11-17"},{"lineNumber":89,"author":{"gitId":"angelquisit"},"content":"        if (item \u003e totalTasks || item \u003d\u003d 0) {","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"angelquisit"},"content":"            throw new MissingTaskException(ErrorMessages.TASK_NOT_FOUND);","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"angelquisit"},"content":"        assert totalTasks \u003e 0 : \"task list size should be more than 0 to delete\";","lastModifiedDate":"2023-11-16"},{"lineNumber":93,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"angelquisit"},"content":"        Task task \u003d tasks.get(item-1);","lastModifiedDate":"2023-11-17"},{"lineNumber":95,"author":{"gitId":"angelquisit"},"content":"        tasks.remove((item - 1));","lastModifiedDate":"2023-11-11"},{"lineNumber":96,"author":{"gitId":"angelquisit"},"content":"        totalTasks--;","lastModifiedDate":"2023-11-11"},{"lineNumber":97,"author":{"gitId":"angelquisit"},"content":"        return task;","lastModifiedDate":"2023-11-17"},{"lineNumber":98,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"angelquisit"},"content":"    public Task setPriority(int item, Priority p) throws EmptyListException, MissingTaskException {","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"angelquisit"},"content":"        if (totalTasks \u003c 1) {","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"angelquisit"},"content":"            throw new EmptyListException(ErrorMessages.EMPTY_LIST);","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"angelquisit"},"content":"        if (item \u003e totalTasks || item \u003d\u003d 0) {","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"angelquisit"},"content":"            throw new MissingTaskException(ErrorMessages.TASK_NOT_FOUND);","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"angelquisit"},"content":"        Task t \u003d tasks.get(item - 1);","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"angelquisit"},"content":"        t.setTaskPriority(p);","lastModifiedDate":"2023-11-14"},{"lineNumber":109,"author":{"gitId":"angelquisit"},"content":"        return t;","lastModifiedDate":"2023-11-14"},{"lineNumber":110,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":111,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":112,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":113,"author":{"gitId":"angelquisit"},"content":"    public ArrayList\u003cTask\u003e getTasksDue(LocalDate due) {","lastModifiedDate":"2023-11-12"},{"lineNumber":114,"author":{"gitId":"angelquisit"},"content":"        ArrayList\u003cTask\u003e taskDueList \u003d new ArrayList\u003cTask\u003e();","lastModifiedDate":"2023-11-12"},{"lineNumber":115,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":116,"author":{"gitId":"angelquisit"},"content":"        for (Task t : this.tasks) {","lastModifiedDate":"2023-11-12"},{"lineNumber":117,"author":{"gitId":"angelquisit"},"content":"            if (t instanceof tasks.Event) {","lastModifiedDate":"2023-11-15"},{"lineNumber":118,"author":{"gitId":"angelquisit"},"content":"                tasks.Event e \u003d (tasks.Event) t;","lastModifiedDate":"2023-11-15"},{"lineNumber":119,"author":{"gitId":"angelquisit"},"content":"                LocalDate starDate \u003d e.getStartDate();","lastModifiedDate":"2023-11-15"},{"lineNumber":120,"author":{"gitId":"angelquisit"},"content":"                LocalDate endDate \u003d e.getEndDate();","lastModifiedDate":"2023-11-15"},{"lineNumber":121,"author":{"gitId":"angelquisit"},"content":"                if (starDate.equals(due) || endDate.equals(due)) {","lastModifiedDate":"2023-11-15"},{"lineNumber":122,"author":{"gitId":"angelquisit"},"content":"                    taskDueList.add(e);","lastModifiedDate":"2023-11-12"},{"lineNumber":123,"author":{"gitId":"angelquisit"},"content":"                }","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":125,"author":{"gitId":"angelquisit"},"content":"            else if (t instanceof tasks.Deadline) {","lastModifiedDate":"2023-11-18"},{"lineNumber":126,"author":{"gitId":"angelquisit"},"content":"                tasks.Deadline d \u003d (tasks.Deadline) t;","lastModifiedDate":"2023-11-15"},{"lineNumber":127,"author":{"gitId":"angelquisit"},"content":"                LocalDate dueDate \u003d d.getDueDate();","lastModifiedDate":"2023-11-18"},{"lineNumber":128,"author":{"gitId":"angelquisit"},"content":"                if (dueDate.equals(due)) {","lastModifiedDate":"2023-11-18"},{"lineNumber":129,"author":{"gitId":"angelquisit"},"content":"                    taskDueList.add(d);","lastModifiedDate":"2023-11-12"},{"lineNumber":130,"author":{"gitId":"angelquisit"},"content":"                }","lastModifiedDate":"2023-11-12"},{"lineNumber":131,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":132,"author":{"gitId":"angelquisit"},"content":"            else if (t instanceof tasks.ToDoWithinPeriod) {","lastModifiedDate":"2023-11-18"},{"lineNumber":133,"author":{"gitId":"angelquisit"},"content":"                tasks.ToDoWithinPeriod td \u003d (tasks.ToDoWithinPeriod) t;","lastModifiedDate":"2023-11-18"},{"lineNumber":134,"author":{"gitId":"angelquisit"},"content":"                LocalDate fromDate \u003d td.getFromDate();","lastModifiedDate":"2023-11-18"},{"lineNumber":135,"author":{"gitId":"angelquisit"},"content":"                LocalDate toDate \u003d td.getToDate();","lastModifiedDate":"2023-11-18"},{"lineNumber":136,"author":{"gitId":"angelquisit"},"content":"                if (fromDate.equals(due) || toDate.equals(due)) {","lastModifiedDate":"2023-11-18"},{"lineNumber":137,"author":{"gitId":"angelquisit"},"content":"                    taskDueList.add(td);","lastModifiedDate":"2023-11-18"},{"lineNumber":138,"author":{"gitId":"angelquisit"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":139,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":140,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"angelquisit"},"content":"        return taskDueList;","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-11"}],"authorContributionMap":{"angelquisit":143}},{"path":"src/main/java/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"    public ToDo(String description) {","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    public String toString() {","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        String text \u003d \"T|\" + super.writeToFile();","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        return text;","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"angelquisit":19}},{"path":"src/main/java/tasks/ToDoWithinPeriod.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package tasks;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"public class ToDoWithinPeriod extends Task{","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"    private LocalDate from;","lastModifiedDate":"2023-11-17"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"    private LocalDate to;","lastModifiedDate":"2023-11-17"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    public ToDoWithinPeriod(String description, LocalDate from, LocalDate to) {","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"        super(description);","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public LocalDate getFromDate() {","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        return this.from;","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    public LocalDate getToDate() {","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        return this.to;","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-15"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"    public String toString() {","lastModifiedDate":"2023-11-15"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        return \"[T]\" + super.toString() + \" between \"","lastModifiedDate":"2023-11-15"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"                + from.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" and \"","lastModifiedDate":"2023-11-15"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"                + to.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));","lastModifiedDate":"2023-11-15"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"    @Override","lastModifiedDate":"2023-11-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    public String writeToFile() {","lastModifiedDate":"2023-11-15"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        return \"T|\" + super.writeToFile() + \"|\" + from + \"|\" + to;","lastModifiedDate":"2023-11-15"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-15"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-15"}],"authorContributionMap":{"angelquisit":36}},{"path":"src/main/java/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"package ui;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-11"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"/**","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":" * Object of class UI gives access to methods which offers interactions to the user via the command","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":" * line. This class handles all the returning of messages to the user.","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":" * \u003cul\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":" * \u003cli\u003e{@code greet()}: Displays a greeting message.\u003c/li\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":" * \u003cli\u003e{@code readCommand()}: Reads and retrieves a command from the input.\u003c/li\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":" * \u003cli\u003e{@code help()}: Displays the manual to the user.\u003c/li\u003e","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":" * \u003cli\u003e{@code killUI()}: Terminates the UI object, concluding the interaction.\u003c/li\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":" * \u003c/ul\u003e","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":" */","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"public class UI {","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    private Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-17"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    public void greet() {","lastModifiedDate":"2023-11-11"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        System.out.println(","lastModifiedDate":"2023-11-16"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"                \"Greetings from the whimisical realm of Duke! ✨ \\n\\nI\u0027m TaskMaster 😎, your efficient sidekick in the quest for productivity. \\nImagine me with a superhero cape – I accept Deadlines, Events, and even the quirkiest To-Dos! \\n\\nReady for a mini manual adventure? Brace yourself, here it comes:\");","lastModifiedDate":"2023-11-16"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        System.out.println();","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        help();","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        System.out.println();","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        System.out.println(","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"                \"And there you have it! Let the epic task conquering commence! \\nWhat grand adventure shall we embark on today?\\n\");","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    public void showLine() {","lastModifiedDate":"2023-11-11"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"-------------------------------\");","lastModifiedDate":"2023-11-11"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"    public String readCommand() {","lastModifiedDate":"2023-11-11"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        return in.nextLine().trim();","lastModifiedDate":"2023-11-11"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"    public void help() {","lastModifiedDate":"2023-11-11"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"1. To Summon a Deadline: \u0027deadline conquer the world /by 2023-12-31\u0027\");","lastModifiedDate":"2023-11-16"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"        System.out.println(","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"                \"2. To Kickstart an Event: \u0027event epic brainstorming /from 2023-11-01 /to 2023-11-02\u0027\");","lastModifiedDate":"2023-11-16"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"3. To Spur a To-Do: \u0027todo master the art of juggling\u0027\");","lastModifiedDate":"2023-11-16"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"        System.out.println(","lastModifiedDate":"2023-11-16"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"                \"4. To Manifest a To-Do Within a Period: \u0027todo write a novel /between 2024-01-01 /and 2024-12-31\u0027\");","lastModifiedDate":"2023-11-16"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"5. To Unveil the Master List: \u0027list\u0027\");","lastModifiedDate":"2023-11-16"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"6. To Flaunt Your Triumphs: (a) \u0027mark 3\u0027 or (b) \u0027unmark 3\u0027\");","lastModifiedDate":"2023-11-16"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"7. To Banish a Task: \u0027delete 2\u0027\");","lastModifiedDate":"2023-11-16"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"8. To Glimpse Into the Future: \u0027due 2023-11-30\u0027\");","lastModifiedDate":"2023-11-16"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"9. To Unearth Tasks with a Secret: \u0027find secret\u0027\");","lastModifiedDate":"2023-11-16"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"10. To Ascend Task Priorities: \u0027set 1 to HIGH\u0027. Default is low.\");","lastModifiedDate":"2023-11-16"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"11. Feeling lost on your quest? Fear not! To summon guidance, just type \u0027help\u0027.\");","lastModifiedDate":"2023-11-16"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-11-11"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"        System.out.println(","lastModifiedDate":"2023-11-16"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"                \"Oopsie-daisy! It looks like our task teleporter hiccuped while loading your previous quests. No worries, we\u0027ll kickstart a fresh adventure!\");","lastModifiedDate":"2023-11-16"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"    public void killUI() {","lastModifiedDate":"2023-11-11"},{"lineNumber":62,"author":{"gitId":"angelquisit"},"content":"        System.out.println(","lastModifiedDate":"2023-11-16"},{"lineNumber":63,"author":{"gitId":"angelquisit"},"content":"                \"Taskmaster signing off! Your master list is safely stored, so take a break and return when the tasks start missing you. Until then, stay bossing those to-dos! ✨📋 #TaskConquerorOut\");","lastModifiedDate":"2023-11-16"},{"lineNumber":64,"author":{"gitId":"angelquisit"},"content":"        in.close();","lastModifiedDate":"2023-11-11"},{"lineNumber":65,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":66,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":67,"author":{"gitId":"angelquisit"},"content":"    public void showError(String message) {","lastModifiedDate":"2023-11-11"},{"lineNumber":68,"author":{"gitId":"angelquisit"},"content":"        System.out.println(message);","lastModifiedDate":"2023-11-11"},{"lineNumber":69,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":70,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":71,"author":{"gitId":"angelquisit"},"content":"    public void printMessage(String message) {","lastModifiedDate":"2023-11-11"},{"lineNumber":72,"author":{"gitId":"angelquisit"},"content":"        System.out.println(message);","lastModifiedDate":"2023-11-11"},{"lineNumber":73,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":74,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-11"},{"lineNumber":75,"author":{"gitId":"angelquisit"},"content":"    public void showTaskAdded(Task task) {","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Splendid! I\u0027ve added this task to the quest board:\\n\" + task);","lastModifiedDate":"2023-11-16"},{"lineNumber":77,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"angelquisit"},"content":"    public void showMarkedTask(Task task) {","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Marvelous! I\u0027ve marked this task as conquered:\\n\" + task);","lastModifiedDate":"2023-11-16"},{"lineNumber":81,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"angelquisit"},"content":"    public void showUnmarkedTask(Task task) {","lastModifiedDate":"2023-11-17"},{"lineNumber":84,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Alrighty then! I\u0027ve given this task a rain check:\\n\" + task);","lastModifiedDate":"2023-11-17"},{"lineNumber":85,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-17"},{"lineNumber":86,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-17"},{"lineNumber":87,"author":{"gitId":"angelquisit"},"content":"    public void showTaskPriority(Task task) {","lastModifiedDate":"2023-11-17"},{"lineNumber":88,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Successfully awarded the mighty title of \u0027\" + task.getDescription() + \"\u0027 with \"","lastModifiedDate":"2023-11-16"},{"lineNumber":89,"author":{"gitId":"angelquisit"},"content":"                + task.getPriority() + \" Priority.\");","lastModifiedDate":"2023-11-16"},{"lineNumber":90,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"angelquisit"},"content":"    public void showTasksDue(ArrayList\u003cTask\u003e tasks, LocalDate dueDate) {","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"angelquisit"},"content":"        if (tasks.size() \u003e 0) {","lastModifiedDate":"2023-11-12"},{"lineNumber":94,"author":{"gitId":"angelquisit"},"content":"            System.out.println(\"Ahoy! Here are the events and deadlines scheduled for  \"","lastModifiedDate":"2023-11-16"},{"lineNumber":95,"author":{"gitId":"angelquisit"},"content":"                    + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"angelquisit"},"content":"            for (Task t : tasks) {","lastModifiedDate":"2023-11-12"},{"lineNumber":97,"author":{"gitId":"angelquisit"},"content":"                System.out.println(t);","lastModifiedDate":"2023-11-12"},{"lineNumber":98,"author":{"gitId":"angelquisit"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":99,"author":{"gitId":"angelquisit"},"content":"        } else {","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"angelquisit"},"content":"            System.out.println(","lastModifiedDate":"2023-11-15"},{"lineNumber":101,"author":{"gitId":"angelquisit"},"content":"                    \"No quests scheduled on \" + dueDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")));","lastModifiedDate":"2023-11-16"},{"lineNumber":102,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":103,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-11"},{"lineNumber":104,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-17"},{"lineNumber":105,"author":{"gitId":"angelquisit"},"content":"    public void showTaskDeleted(Task task, int tasksLeft) {","lastModifiedDate":"2023-11-17"},{"lineNumber":106,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"TaskMaster at the helm! 🪄 Time to perform a task vanishing act on: \\n\" + task);","lastModifiedDate":"2023-11-17"},{"lineNumber":107,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"You now have \" + tasksLeft + \" tasks left.\");","lastModifiedDate":"2023-11-17"},{"lineNumber":108,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-17"},{"lineNumber":109,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-17"},{"lineNumber":110,"author":{"gitId":"angelquisit"},"content":"    public void showTaskList(ArrayList\u003cTask\u003e list) {","lastModifiedDate":"2023-11-17"},{"lineNumber":111,"author":{"gitId":"angelquisit"},"content":"        System.out.println(\"Ta-da! Behold, the magnificient lineup of tasks in your grand list:\");","lastModifiedDate":"2023-11-17"},{"lineNumber":112,"author":{"gitId":"angelquisit"},"content":"        for (int i \u003d 1; i \u003c\u003d list.size(); i++) {","lastModifiedDate":"2023-11-17"},{"lineNumber":113,"author":{"gitId":"angelquisit"},"content":"            System.out.println(i + \".\" + list.get(i - 1));","lastModifiedDate":"2023-11-17"},{"lineNumber":114,"author":{"gitId":"angelquisit"},"content":"        }","lastModifiedDate":"2023-11-17"},{"lineNumber":115,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-17"},{"lineNumber":116,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"angelquisit":116}},{"path":"src/test/java/commands/DueCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import commands.DueCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import constants.RegExp;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"public class DueCommandTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    public void dueCommandConstructorTest() throws DukeException{","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing Date","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DueCommand(\"due \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_DUE_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Date in the wrong format","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DueCommand(\"due 10 Oct 2023\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_DUE_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        // Test Case 3: Invalid Date","lastModifiedDate":"2023-11-16"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DueCommand(\"due 2023-02-56\")); // invalid day","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_DUE_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DueCommand(\"due 2023-21-06\")); // invalid month","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_DUE_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-15"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        // Working Test ","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        new DueCommand(\"due 2023-12-06\");","lastModifiedDate":"2023-11-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":33}},{"path":"src/test/java/commands/FindCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import ui.UI;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import commands.FindCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"public class FindCommandTest {","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"    public void executeTest() throws DukeException{","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        // Test set up","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        TaskList t \u003d new TaskList();","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        UI ui \u003d new UI();","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        ByteArrayOutputStream outputStream \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        System.setOut(new PrintStream(outputStream));","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        t.addToDo(\"duke week 10 increment\");","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        t.addDeadline(\"duke submission\", LocalDate.parse(\"2023-10-19\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        ","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        FindCommand f \u003d new FindCommand(\"find project\");","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        f.execute(t, ui, null);","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"You have no tasks with this keyword: project\",outputStream.toString().trim());","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"    }   ","lastModifiedDate":"2023-11-14"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"angelquisit":31}},{"path":"src/test/java/commands/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.MarkCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"public class MarkCommandTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    public void markCommandConstructorTest(){","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing Item Number ","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new MarkCommand(\"mark \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_MARK_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Invalid Item Number ","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new MarkCommand(\"mark d\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_MARK_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":22}},{"path":"src/test/java/commands/SetCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import commands.SetCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"public class SetCommandTest {","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    public void setCommandConstructorTest(){","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Invalid Priority","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new SetCommand(\"set 1 to lower\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_PRIORITY, exception.getMessage());","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Invalid Integer","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new SetCommand(\"set d to high\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"angelquisit":21}},{"path":"src/test/java/commands/add/DeadlineCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import commands.add.DeadlineCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"public class DeadlineCommandTest {","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    public void deadlineCommandConstructorTest() throws DukeException{","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        // Test Set Up","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        Throwable exception;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"         ","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        // Working Test Case","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        DeadlineCommand a \u003d new DeadlineCommand(\"deadline buy FOOD /by 2023-10-05\");","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing /","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DeadlineCommand(\"deadline buy food by 2023-10-05 \"));","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_DEADLINE_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Incorrect Date Format","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DeadlineCommand(\"deadline buy food /by 2023 October 10 \"));","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_DEADLINE_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        // Test Case 3: Missing Task Description","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DeadlineCommand(\"deadline  /by 2023-10-09 \"));","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_DEADLINE_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        // Test Case 4: Missing Date","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DeadlineCommand(\"deadline buy food /by \"));","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_DEADLINE_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        // Test Case 5: /by typo","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new DeadlineCommand(\"deadline buy food /byyyy 2023-10-05 \"));","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_DEADLINE_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"    ","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":40}},{"path":"src/test/java/commands/add/EventCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import commands.add.EventCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"public class EventCommandTest {","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    public void eventCommandConstructorTest() throws DukeException{","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        // Test Set Up","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        // Working Test Case","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        //EventCommand e \u003d new EventCommand(\"event project meeting /from (2023-10-05) /to (2023-10-06)\");","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing /","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new EventCommand(\"event project meeting /from 2023-10-05 to 2023-10-06\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_EVENT_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new EventCommand(\"event project meeting from 2023-10-05 to 2023-10-06\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_EVENT_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Incorrect Date Format","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new EventCommand(\"event project meeting /from 2O Oct 2023 /to 21 Oct 2023\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_EVENT_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"        // Test Case 3: Missing Task Description","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new EventCommand(\"event  /from 2023-10-05 /to 2023-10-06\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_EVENT_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"        // Test Case 4: Missing Date","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new EventCommand(\"event project meeting /from /to 21 Oct 2023 \"));","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_EVENT_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        // Test Case 5: Trailing letters after /from and /by","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new EventCommand(\"event project meeting /frommm 2023-10-05 /to 2023-10-06\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_EVENT_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new EventCommand(\"event project meeting /from 2023-10-05 /tooo 2023-10-06\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_EVENT_COMMAND_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"        // Test Case 6: End date should be later than Start Date","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new EventCommand(\"event project meeting /from 2023-10-08 /to 2023-10-05\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.ERROR_END_DATE_BEFORE_START_DATE, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":46}},{"path":"src/test/java/commands/add/ToDoCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import commands.add.ToDoCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"public class ToDoCommandTest {","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    public void toDoCommandConstuctorTest() throws DukeException{","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"        // Test Set Up","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        // Working Test Case","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        ToDoCommand t \u003d new ToDoCommand(\"todo eat dinner\");","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing Task Description","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new ToDoCommand(\"todo \"));","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_TODO_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":23}},{"path":"src/test/java/commands/add/ToDoWithinPeriodCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-15"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-15"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-15"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import commands.add.ToDoWithinPeriodCommand;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"public class ToDoWithinPeriodCommandTest {","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"    public void ToDoWithinPeriodConstructorTest() throws DukeException {","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        // Test Set Up","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        Throwable exception;","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"        // Working Test Case","lastModifiedDate":"2023-11-15"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        ToDoWithinPeriodCommand t \u003d","lastModifiedDate":"2023-11-16"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"                new ToDoWithinPeriodCommand(\"todo colllect certificate /between 2023-10-08 /and 2023-10-10\");","lastModifiedDate":"2023-11-16"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Missing Task Description","lastModifiedDate":"2023-11-15"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class,","lastModifiedDate":"2023-11-16"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"                () -\u003e new ToDoWithinPeriodCommand(\"todo /between 2023 /and 2023-10-20\"));","lastModifiedDate":"2023-11-16"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_TODO_WITHIN_PERIOD_FORMAT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"        // Test Case 2: Second Date is after First Date","lastModifiedDate":"2023-11-15"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e new ToDoWithinPeriodCommand(","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"                \"todo collect certificate /between 2023-10-08 /and 2023-10-07\"));","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.ERROR_END_DATE_BEFORE_START_DATE, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-15"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-15"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-15"}],"authorContributionMap":{"angelquisit":32}},{"path":"src/test/java/parser/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"import constants.ErrorMessages;","lastModifiedDate":"2023-11-15"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import parser.Parser;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import exceptions.DukeException;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"public class ParserTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"    public void parseTest(){","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"        Throwable exception; ","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"        // Test Case 1: Invalid User Command","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"ghjkl \"));","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_USER_INPUT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"        exception \u003d assertThrows(DukeException.class, () -\u003e Parser.parse(\"bYs\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"        assertEquals(ErrorMessages.INVALID_USER_INPUT, exception.getMessage());","lastModifiedDate":"2023-11-15"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":22}},{"path":"src/test/java/storage/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"angelquisit"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-13"},{"lineNumber":2,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":3,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"angelquisit"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"angelquisit"},"content":"import storage.Storage;","lastModifiedDate":"2023-11-15"},{"lineNumber":7,"author":{"gitId":"angelquisit"},"content":"import exceptions.EmptyListException;","lastModifiedDate":"2023-11-15"},{"lineNumber":8,"author":{"gitId":"angelquisit"},"content":"import exceptions.MissingTaskException;","lastModifiedDate":"2023-11-15"},{"lineNumber":9,"author":{"gitId":"angelquisit"},"content":"import tasks.Task;","lastModifiedDate":"2023-11-15"},{"lineNumber":10,"author":{"gitId":"angelquisit"},"content":"import tasks.Deadline;","lastModifiedDate":"2023-11-15"},{"lineNumber":11,"author":{"gitId":"angelquisit"},"content":"import tasks.Event;","lastModifiedDate":"2023-11-15"},{"lineNumber":12,"author":{"gitId":"angelquisit"},"content":"import tasks.Priority;","lastModifiedDate":"2023-11-15"},{"lineNumber":13,"author":{"gitId":"angelquisit"},"content":"import tasks.TaskList;","lastModifiedDate":"2023-11-15"},{"lineNumber":14,"author":{"gitId":"angelquisit"},"content":"import tasks.ToDo;","lastModifiedDate":"2023-11-15"},{"lineNumber":15,"author":{"gitId":"angelquisit"},"content":"import tasks.ToDoWithinPeriod;","lastModifiedDate":"2023-11-15"},{"lineNumber":16,"author":{"gitId":"angelquisit"},"content":"import java.io.File;","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"angelquisit"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"angelquisit"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"angelquisit"},"content":"import java.nio.file.Files;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"angelquisit"},"content":"import java.nio.file.Path;","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"angelquisit"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"angelquisit"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"angelquisit"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"angelquisit"},"content":"public class StorageTest {","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":28,"author":{"gitId":"angelquisit"},"content":"    public void loadDataTest() throws IOException {","lastModifiedDate":"2023-11-14"},{"lineNumber":29,"author":{"gitId":"angelquisit"},"content":"        // Test Set Up","lastModifiedDate":"2023-11-14"},{"lineNumber":30,"author":{"gitId":"angelquisit"},"content":"        Storage s \u003d new Storage(\"data/temp.txt\");","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"angelquisit"},"content":"        ArrayList\u003cTask\u003e tasks \u003d s.loadData();","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"angelquisit"},"content":"        // Creating new tasks to check against","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"angelquisit"},"content":"        Deadline d \u003d new Deadline(\"return book\", LocalDate.parse(\"2023-10-18\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"angelquisit"},"content":"        Task td \u003d new ToDo(\"buy food\");","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"angelquisit"},"content":"        td.setTaskPriority(Priority.HIGH);","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"angelquisit"},"content":"        Event e \u003d new Event(\"project meeting\", LocalDate.parse(\"2023-10-18\"), LocalDate.parse(\"2023-10-20\"));","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"angelquisit"},"content":"        ToDoWithinPeriod tdp \u003d new ToDoWithinPeriod(\"collect certificate\", LocalDate.parse(\"2023-10-08\"),","lastModifiedDate":"2023-11-16"},{"lineNumber":39,"author":{"gitId":"angelquisit"},"content":"                LocalDate.parse(\"2023-10-20\"));","lastModifiedDate":"2023-11-16"},{"lineNumber":40,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"angelquisit"},"content":"        // test case 1: checks if all 3 tasks that were stored below are loaded properly","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"angelquisit"},"content":"        assertEquals(4, tasks.size());","lastModifiedDate":"2023-11-15"},{"lineNumber":43,"author":{"gitId":"angelquisit"},"content":"        assertEquals(d.toString(), tasks.get(0).toString());","lastModifiedDate":"2023-11-15"},{"lineNumber":44,"author":{"gitId":"angelquisit"},"content":"        assertEquals(td.toString(), tasks.get(1).toString());","lastModifiedDate":"2023-11-15"},{"lineNumber":45,"author":{"gitId":"angelquisit"},"content":"        assertEquals(e.toString(), tasks.get(2).toString());","lastModifiedDate":"2023-11-15"},{"lineNumber":46,"author":{"gitId":"angelquisit"},"content":"        assertEquals(tdp.toString(), tasks.get(3).toString());","lastModifiedDate":"2023-11-15"},{"lineNumber":47,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"angelquisit"},"content":"    /**","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"angelquisit"},"content":"     * Adds 3 Tasks of Each Task Type {@code Deadline}, {@code Event} and {@code ToDo} and checks if all","lastModifiedDate":"2023-11-16"},{"lineNumber":51,"author":{"gitId":"angelquisit"},"content":"     * are written onto file.","lastModifiedDate":"2023-11-16"},{"lineNumber":52,"author":{"gitId":"angelquisit"},"content":"     * ","lastModifiedDate":"2023-11-16"},{"lineNumber":53,"author":{"gitId":"angelquisit"},"content":"     * @throws FileNotFoundException","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"angelquisit"},"content":"     *","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"angelquisit"},"content":"     */","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"angelquisit"},"content":"    @Test","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"angelquisit"},"content":"    public void storeDataTest() throws FileNotFoundException, EmptyListException, MissingTaskException {","lastModifiedDate":"2023-11-14"},{"lineNumber":58,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"angelquisit"},"content":"        // test set up","lastModifiedDate":"2023-11-13"},{"lineNumber":60,"author":{"gitId":"angelquisit"},"content":"        String tempFilePath \u003d \"data/tasks.txt\";","lastModifiedDate":"2023-11-13"},{"lineNumber":61,"author":{"gitId":"angelquisit"},"content":"        Storage storage \u003d new Storage(tempFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"angelquisit"},"content":"        File tempFile \u003d new File(tempFilePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"angelquisit"},"content":"        Scanner s \u003d new Scanner(tempFile);","lastModifiedDate":"2023-11-13"},{"lineNumber":64,"author":{"gitId":"angelquisit"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"angelquisit"},"content":"        // adding a few random tasks","lastModifiedDate":"2023-11-13"},{"lineNumber":67,"author":{"gitId":"angelquisit"},"content":"        tasks.addDeadline(\"return book\", LocalDate.parse(\"2023-10-18\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":68,"author":{"gitId":"angelquisit"},"content":"        tasks.addToDo(\"buy food\");","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"angelquisit"},"content":"        tasks.setPriority(2, Priority.HIGH);","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"angelquisit"},"content":"        tasks.addEvent(\"project meeting\", LocalDate.parse(\"2023-10-18\"), LocalDate.parse(\"2023-10-20\"));","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"angelquisit"},"content":"        tasks.addToDoWithinPeriod(\"collect certificate\", LocalDate.parse(\"2023-10-08\"),","lastModifiedDate":"2023-11-16"},{"lineNumber":72,"author":{"gitId":"angelquisit"},"content":"                LocalDate.parse(\"2023-10-20\"));","lastModifiedDate":"2023-11-16"},{"lineNumber":73,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"angelquisit"},"content":"        // test case 1: checks if all 3 tasks have been added in the file","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"angelquisit"},"content":"        storage.storeData(tasks);","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"angelquisit"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"angelquisit"},"content":"        // assertion","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"D|LOW|false|return book|2023-10-18\", s.nextLine());","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"T|HIGH|false|buy food\", s.nextLine());","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"E|LOW|false|project meeting|2023-10-18|2023-10-20\", s.nextLine());","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"angelquisit"},"content":"        assertEquals(\"T|LOW|false|collect certificate|2023-10-08|2023-10-20\", s.nextLine());","lastModifiedDate":"2023-11-15"},{"lineNumber":82,"author":{"gitId":"angelquisit"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":83,"author":{"gitId":"angelquisit"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"angelquisit":83}}]
