[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"test {","lastModifiedDate":"2023-11-18"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    useJUnitPlatform()","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kunkunkunkun":6,"-":41}},{"path":"src/main/java/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"[T][ ] read book","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":"[E][X] project meeting (from: Mar 10 2020 to: Mar 12 2020)","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":"[T][ ] join sports club","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":"[T][ ] test","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":"[D][ ] test2 (by: Feb 20 2022)","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":"[E][ ] test3 (from: Feb 20 2022 to: Feb 21 2022)","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":"[D][ ] testing2 (by: Jan 01 2000)","lastModifiedDate":"2023-11-19"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":"[D][ ] testing2 (by: Feb 01 2020)","lastModifiedDate":"2023-11-19"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":"[E][ ] test3 (from: Feb 20 2020 to: Feb 21 2020)","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"[T][ ] todotest","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"[D][ ] test2 (by: Feb 20 2020)","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"[E][ ] test3 (from: Feb 20 2020 to: Feb 21 2020)","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"kunkunkunkun":12}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"package duke;","lastModifiedDate":"2023-11-18"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-18"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Parser;","lastModifiedDate":"2023-11-18"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-09-17"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"public class Duke extends Tasks","lastModifiedDate":"2023-11-13"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"{","lastModifiedDate":"2023-11-13"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"    private final Storage storage;","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"    private TaskList tskList;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"    private final Ui ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"    private final Parser parser;","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"        parser\u003dnew Parser();","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"        ui.showDukeLogo();","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"            tskList \u003d new TaskList(storage.load());","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-11-13"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"            tskList \u003d new TaskList();","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"    public void run() throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"        ui.ShowWelcomeMsg();","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"        boolean isExit \u003dfalse;","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"        while (!isExit) {","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"            try","lastModifiedDate":"2023-11-13"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"            {","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"                c.execute(tskList, ui, storage);","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"                if(isExit){","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"                    break;","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"            } finally {","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"                ui.showLine();","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"    public static void main (String[]args) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"        new Duke(\"src/main/java/duke.txt\").run();","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"kunkunkunkun":57,"-":1}},{"path":"src/main/java/duke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents an abstract command class.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * It encapsulates the basic execute and isExit function for all other Commands to include","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.commands;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"public abstract class Command {","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command.","lastModifiedDate":"2023-11-16"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"     * This method will ask the user for task details to be executed.","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"     *","lastModifiedDate":"2023-11-16"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"     * @param tasks The list of tasks to which the new task will be added.","lastModifiedDate":"2023-11-16"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"     * @param ui The ui to print Message","lastModifiedDate":"2023-11-16"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"     * @param storage The saved task-list text file","lastModifiedDate":"2023-11-16"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"     * Check if Command should end.","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a boolean value for Parser parse function to evaluate","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"kunkunkunkun":34}},{"path":"src/main/java/duke/commands/Command_AddTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * It encapsulates all the information needed to add a new task, including the task details.","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.commands;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"public class Command_AddTask extends Command {","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"    private final Tasks tsk;","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"    public Command_AddTask(Tasks tsk) {","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"        this.tsk\u003dtsk;","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to add a new task.","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"     * This method will ask the user for task details and add the task to the list.","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"     *","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"     * @param tskList The list of tasks to which the new task will be added.","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"     * @param ui The ui to print Message","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"     * @param store The saved task-list text file","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"    public void execute(TaskList tskList, Ui ui, Storage store) {","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"        tskList.addTask(tsk);","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"        ui.showTaskAdded();","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"        ui.printIndividualTask(tsk);","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"            store.save(tskList.getAllTasks());","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"            ui.printNumberOfTask(tskList);","lastModifiedDate":"2023-11-19"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"            ui.showError(\"Failed to save task: \" + e.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"     * Check if Command should end.","lastModifiedDate":"2023-11-16"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a boolean value for Parser parse function to evaluate","lastModifiedDate":"2023-11-16"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-11-18"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"        return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"kunkunkunkun":57}},{"path":"src/main/java/duke/commands/Command_DeleteTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a command to delete a task from the task list.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * It encapsulates all the information needed to delete a new task, including the task details.","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.commands;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"public class Command_DeleteTask extends Command","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"{","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"    private final int index;","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"    public Command_DeleteTask(int index) {","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"        this.index\u003dindex;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to delete a new task.","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"     * This method will ask the user for task details and delete the task from the list.","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"     *","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"     * @param tskList The list of tasks to which the new task will be added.","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"     * @param ui The ui to print Message","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"     * @param store The saved task-list text file","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"    public void execute(TaskList tskList, Ui ui, Storage store) {","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"        assert index\u003e\u003d0\u0026\u0026index\u003ctskList.storedTaskList.size() : \"index out of task list size\";","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"        tskList.deleteTask(index);","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"            store.save(tskList.getAllTasks());","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"            ui.showDeleteMsg();","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-11-13"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"            ui.showError(\"Failed to delete task: \" + e.getMessage());","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"     * Check if Command should end.","lastModifiedDate":"2023-11-16"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a boolean value for Parser parse function to evaluate","lastModifiedDate":"2023-11-16"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"        return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"kunkunkunkun":56}},{"path":"src/main/java/duke/commands/Command_DoAfter.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-18"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a command to add a task to the task list.","lastModifiedDate":"2023-11-18"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * It encapsulates all the information needed to add a new task, including the task details.","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-18"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-18"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-18"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-18"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.commands;","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"public class Command_DoAfter extends Command{","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    private final String userInput;","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"    public Command_DoAfter(String userInput) {","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"        this.userInput\u003duserInput;","lastModifiedDate":"2023-11-18"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"    private boolean isDate(String input)throws DateTimeParseException {","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"        boolean resultBool \u003d true;","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"        try{","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"            new Tasks().convertInputTime(input);","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"        } catch ( DateTimeParseException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"            resultBool\u003dfalse;","lastModifiedDate":"2023-11-18"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"        return resultBool;","lastModifiedDate":"2023-11-18"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"    private boolean isNum(String input)throws NumberFormatException {","lastModifiedDate":"2023-11-18"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"        boolean resultbool \u003d true;","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"        try{","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"            Integer.parseInt(input);","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"        } catch ( NumberFormatException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"            resultbool\u003dfalse;","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"        return resultbool;","lastModifiedDate":"2023-11-18"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"    private LocalDate getTaskLocalDate(Tasks tsk) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"        if(tsk instanceof Deadline) {","lastModifiedDate":"2023-11-18"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"            return tsk.convertStringToDate(((Deadline) tsk).getBy());","lastModifiedDate":"2023-11-18"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"        } else if (tsk instanceof Event) {","lastModifiedDate":"2023-11-18"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"            return tsk.convertStringToDate(((Event) tsk).getTo());","lastModifiedDate":"2023-11-18"},{"lineNumber":58,"author":{"gitId":"kunkunkunkun"},"content":"        } else{","lastModifiedDate":"2023-11-18"},{"lineNumber":59,"author":{"gitId":"kunkunkunkun"},"content":"            throw new DukeException(\"It\u0027s neither deadline or event task, unable to compare\");","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":62,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":63,"author":{"gitId":"kunkunkunkun"},"content":"    private LocalDate convertStringToDate(String input) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":64,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":65,"author":{"gitId":"kunkunkunkun"},"content":"        Tasks temp\u003dnew Tasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":66,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":67,"author":{"gitId":"kunkunkunkun"},"content":"        try {","lastModifiedDate":"2023-11-18"},{"lineNumber":68,"author":{"gitId":"kunkunkunkun"},"content":"            return temp.convertStringToDate(temp.convertInputTime(input));","lastModifiedDate":"2023-11-18"},{"lineNumber":69,"author":{"gitId":"kunkunkunkun"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"kunkunkunkun"},"content":"            throw new DukeException(\"Invalid date format: \" + input);","lastModifiedDate":"2023-11-18"},{"lineNumber":71,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":72,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":73,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":74,"author":{"gitId":"kunkunkunkun"},"content":"    private Tasks getTaskFromInput(String input, TaskList taskList) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":75,"author":{"gitId":"kunkunkunkun"},"content":"        int index \u003d Integer.parseInt(input) - 1;","lastModifiedDate":"2023-11-18"},{"lineNumber":76,"author":{"gitId":"kunkunkunkun"},"content":"        return taskList.storedTaskList.get(index);","lastModifiedDate":"2023-11-18"},{"lineNumber":77,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":78,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-18"},{"lineNumber":79,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to add a new task.","lastModifiedDate":"2023-11-18"},{"lineNumber":80,"author":{"gitId":"kunkunkunkun"},"content":"     * This method will ask the user for task details and add the task to the list.","lastModifiedDate":"2023-11-18"},{"lineNumber":81,"author":{"gitId":"kunkunkunkun"},"content":"     *","lastModifiedDate":"2023-11-18"},{"lineNumber":82,"author":{"gitId":"kunkunkunkun"},"content":"     * @param tskList The list of tasks to which the new task will be added.","lastModifiedDate":"2023-11-18"},{"lineNumber":83,"author":{"gitId":"kunkunkunkun"},"content":"     * @param ui The ui to print Message","lastModifiedDate":"2023-11-18"},{"lineNumber":84,"author":{"gitId":"kunkunkunkun"},"content":"     * @param store The saved task-list text file","lastModifiedDate":"2023-11-18"},{"lineNumber":85,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-18"},{"lineNumber":86,"author":{"gitId":"kunkunkunkun"},"content":"    public void execute(TaskList tskList, Ui ui, Storage store) throws DukeException,NumberFormatException {","lastModifiedDate":"2023-11-18"},{"lineNumber":87,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":88,"author":{"gitId":"kunkunkunkun"},"content":"        if (!userInput.startsWith(\"do \") || !userInput.contains(\"/after\")) {","lastModifiedDate":"2023-11-18"},{"lineNumber":89,"author":{"gitId":"kunkunkunkun"},"content":"            throw new DukeException(\"Invalid DoAfter format. Use \u0027do \u003cindex\u003e \" +","lastModifiedDate":"2023-11-18"},{"lineNumber":90,"author":{"gitId":"kunkunkunkun"},"content":"                                    \"/after \u003cyyyy-MM-dd\u003e or \u003cindex\u003e\u0027\");","lastModifiedDate":"2023-11-18"},{"lineNumber":91,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":92,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":93,"author":{"gitId":"kunkunkunkun"},"content":"        String[] parts \u003d userInput.split(\"\\\\s+/after\\\\s+\", 2);","lastModifiedDate":"2023-11-18"},{"lineNumber":94,"author":{"gitId":"kunkunkunkun"},"content":"        String firstPart \u003d parts[0].substring(3).trim(); // Task index","lastModifiedDate":"2023-11-18"},{"lineNumber":95,"author":{"gitId":"kunkunkunkun"},"content":"        String secondPart \u003d parts[1].trim(); // Task index or date","lastModifiedDate":"2023-11-18"},{"lineNumber":96,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":97,"author":{"gitId":"kunkunkunkun"},"content":"        if (!isNum(firstPart)) {","lastModifiedDate":"2023-11-18"},{"lineNumber":98,"author":{"gitId":"kunkunkunkun"},"content":"            throw new DukeException(\"First part must be a task index.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":99,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":100,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":101,"author":{"gitId":"kunkunkunkun"},"content":"        Tasks firstTask \u003d getTaskFromInput(firstPart, tskList);","lastModifiedDate":"2023-11-18"},{"lineNumber":102,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":103,"author":{"gitId":"kunkunkunkun"},"content":"        LocalDate firstDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":104,"author":{"gitId":"kunkunkunkun"},"content":"        LocalDate secondDate \u003d LocalDate.parse(\"1000-01-01\");","lastModifiedDate":"2023-11-18"},{"lineNumber":105,"author":{"gitId":"kunkunkunkun"},"content":"        Tasks secondTask \u003d new Tasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":106,"author":{"gitId":"kunkunkunkun"},"content":"        String result;","lastModifiedDate":"2023-11-18"},{"lineNumber":107,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":108,"author":{"gitId":"kunkunkunkun"},"content":"        if (isNum(secondPart)) {","lastModifiedDate":"2023-11-18"},{"lineNumber":109,"author":{"gitId":"kunkunkunkun"},"content":"            secondTask \u003d getTaskFromInput(secondPart, tskList);","lastModifiedDate":"2023-11-18"},{"lineNumber":110,"author":{"gitId":"kunkunkunkun"},"content":"        } else if (isDate(secondPart)){","lastModifiedDate":"2023-11-18"},{"lineNumber":111,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":112,"author":{"gitId":"kunkunkunkun"},"content":"            try{","lastModifiedDate":"2023-11-18"},{"lineNumber":113,"author":{"gitId":"kunkunkunkun"},"content":"                secondDate \u003d convertStringToDate(secondPart);","lastModifiedDate":"2023-11-18"},{"lineNumber":114,"author":{"gitId":"kunkunkunkun"},"content":"            } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-18"},{"lineNumber":115,"author":{"gitId":"kunkunkunkun"},"content":"                throw new DukeException(\" Wrong date format !!!\");","lastModifiedDate":"2023-11-18"},{"lineNumber":116,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":117,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":118,"author":{"gitId":"kunkunkunkun"},"content":"        } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":119,"author":{"gitId":"kunkunkunkun"},"content":"            throw new DukeException(\"Invalid second input\");","lastModifiedDate":"2023-11-18"},{"lineNumber":120,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":121,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":122,"author":{"gitId":"kunkunkunkun"},"content":"        if((firstTask instanceof ToDo)\u0026\u0026(secondTask instanceof ToDo)) {","lastModifiedDate":"2023-11-18"},{"lineNumber":123,"author":{"gitId":"kunkunkunkun"},"content":"            result \u003d \"Do \" + firstTask.getDescription() + \" after \" + secondTask.getDescription();","lastModifiedDate":"2023-11-18"},{"lineNumber":124,"author":{"gitId":"kunkunkunkun"},"content":"        } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":125,"author":{"gitId":"kunkunkunkun"},"content":"            firstDate \u003d getTaskLocalDate(firstTask);","lastModifiedDate":"2023-11-18"},{"lineNumber":126,"author":{"gitId":"kunkunkunkun"},"content":"            String secPartStr\u003dsecondPart;","lastModifiedDate":"2023-11-18"},{"lineNumber":127,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":128,"author":{"gitId":"kunkunkunkun"},"content":"            if(isNum(secondPart)){","lastModifiedDate":"2023-11-18"},{"lineNumber":129,"author":{"gitId":"kunkunkunkun"},"content":"                secondDate \u003d getTaskLocalDate(secondTask);","lastModifiedDate":"2023-11-18"},{"lineNumber":130,"author":{"gitId":"kunkunkunkun"},"content":"                secPartStr\u003dsecondTask.getDescription();","lastModifiedDate":"2023-11-18"},{"lineNumber":131,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":132,"author":{"gitId":"kunkunkunkun"},"content":"            if (firstDate.isAfter(secondDate)) {","lastModifiedDate":"2023-11-18"},{"lineNumber":133,"author":{"gitId":"kunkunkunkun"},"content":"                result \u003d \"Do \" + firstTask.getDescription() + \" after \" + secPartStr;","lastModifiedDate":"2023-11-18"},{"lineNumber":134,"author":{"gitId":"kunkunkunkun"},"content":"            } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":135,"author":{"gitId":"kunkunkunkun"},"content":"                secPartStr \u003d secondDate.toString();","lastModifiedDate":"2023-11-19"},{"lineNumber":136,"author":{"gitId":"kunkunkunkun"},"content":"                throw new DukeException(firstTask.getDescription() + \" cannot be placed after \" + secondPart);","lastModifiedDate":"2023-11-18"},{"lineNumber":137,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":138,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":139,"author":{"gitId":"kunkunkunkun"},"content":"        tskList.notes.add(result);","lastModifiedDate":"2023-11-18"},{"lineNumber":140,"author":{"gitId":"kunkunkunkun"},"content":"        tskList.printNotes();","lastModifiedDate":"2023-11-18"},{"lineNumber":141,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":142,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":143,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":144,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-18"},{"lineNumber":145,"author":{"gitId":"kunkunkunkun"},"content":"     * Check if Command should end.","lastModifiedDate":"2023-11-18"},{"lineNumber":146,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a boolean value for Parser parse function to evaluate","lastModifiedDate":"2023-11-18"},{"lineNumber":147,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-18"},{"lineNumber":148,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-18"},{"lineNumber":149,"author":{"gitId":"kunkunkunkun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-11-18"},{"lineNumber":150,"author":{"gitId":"kunkunkunkun"},"content":"        return false;","lastModifiedDate":"2023-11-18"},{"lineNumber":151,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":152,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-18"}],"authorContributionMap":{"kunkunkunkun":152}},{"path":"src/main/java/duke/commands/Command_Exit.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a command to end the conversation.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * It encapsulates all the information needed to end the conversation.","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.commands;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"public class Command_Exit extends Command {","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to print a Goodbye message from ui.","lastModifiedDate":"2023-11-16"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"     *","lastModifiedDate":"2023-11-16"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"     * @param ui The ui to print Message","lastModifiedDate":"2023-11-16"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"    public void execute(TaskList tskList, Ui ui, Storage store) {","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"        ui.ShowGoodByeMsg();","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"     * Check if Command should end.","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a boolean value for Parser parse function to evaluate","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"        return true;","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"kunkunkunkun":35}},{"path":"src/main/java/duke/commands/Command_Find.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-18"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a command to list all tasks from the task list.","lastModifiedDate":"2023-11-18"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * It encapsulates all the information needed to list all tasks.","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-18"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-18"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-18"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-18"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.commands;","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"public class Command_Find extends Command {","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"    private final String input;","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"    public Command_Find(String Input) {","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"        this.input\u003dInput;","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to print a Goodbye message from ui.","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"     * @param ui The ui that provide a printTaskList function to print all task","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"     * @param tskList The stored task list to be printed out.","lastModifiedDate":"2023-11-18"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"    public void execute(TaskList tskList, Ui ui, Storage store) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"        String item \u003d input.substring(5).trim();","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"        ArrayList\u003cTasks\u003e results \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"        ui.findCommand();","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"        for (Tasks T:tskList.storedTaskList) {","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"            if(T.getDescription().contains(item)){","lastModifiedDate":"2023-11-18"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"                results.add(T);","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"        if (!results.isEmpty()){","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"            ui.printTaskList(new TaskList(results));","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"        } else{","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"            System.out.println(\"No matching tasks found\");","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-18"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"     * Check if Command should end.","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a boolean value for Parser parse function to evaluate","lastModifiedDate":"2023-11-18"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-18"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-18"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-11-18"},{"lineNumber":58,"author":{"gitId":"kunkunkunkun"},"content":"        return false;","lastModifiedDate":"2023-11-18"},{"lineNumber":59,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-18"}],"authorContributionMap":{"kunkunkunkun":60}},{"path":"src/main/java/duke/commands/Command_List.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a command to list all tasks from the task list.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * It encapsulates all the information needed to list all tasks.","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.commands;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"public class Command_List extends Command {","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to print a Goodbye message from ui.","lastModifiedDate":"2023-11-16"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"     * @param ui The ui that provide a printTaskList function to print all task","lastModifiedDate":"2023-11-16"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"     * @param tskList The stored task list to be printed out.","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"    public void execute(TaskList tskList, Ui ui, Storage store) {","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"        ui.showListMsg();","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"        ui.printTaskList(tskList);","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"     * Check if Command should end.","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a boolean value for Parser parse function to evaluate","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"        return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"kunkunkunkun":36}},{"path":"src/main/java/duke/commands/Command_MarkingTask.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a command to mark or unmark a task from tasklist.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * It encapsulates all the information needed to mark or unmark a task from tasklist.","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.commands;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"public class Command_MarkingTask extends Command {","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"    private final String[] userInputs;","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"    public Command_MarkingTask(String[] UserInput) {","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"        this.userInputs\u003dUserInput;","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to analyse the input and do mark and unmarking function accordingly.","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"     * This method gets stored task list from the saved text file then check user input to analyse which task to be mark/unmark.","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"     *","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"     * @param tskList The list of stored tasks.","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"     * @param ui The ui that provides Marked and Unmarked message, and also a function to print individual task.","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"     * @param store The saved task list text file, provides a function to convert the text file to a task list","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"    public void execute(TaskList tskList, Ui ui, Storage store) {","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"        Tasks tsk \u003d tskList.storedTaskList.get(Integer.parseInt(userInputs[1]) - 1);","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"        if(userInputs[0].equals(\"mark\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"            tsk.setIsDone(true); //","lastModifiedDate":"2023-11-18"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"            ui.showMarkedMsg();","lastModifiedDate":"2023-11-13"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"        else if (userInputs[0].equals(\"unmark\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"            tsk.setIsDone(false); //","lastModifiedDate":"2023-11-18"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"            ui.showUnmarkedMsg();","lastModifiedDate":"2023-11-13"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"        ui.printTaskMsg(tsk.toString());","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"     * Check if Command should end.","lastModifiedDate":"2023-11-16"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a boolean value for Parser parse function to evaluate","lastModifiedDate":"2023-11-16"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-13"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-11-18"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"        return false;","lastModifiedDate":"2023-11-13"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"kunkunkunkun":58}},{"path":"src/main/java/duke/commands/Command_SearchByDate.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a command to search and print the event and deadline tasks that match user\u0027s input date.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the command pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * It encapsulates all the information needed to search and print the event and deadline tasks that match user\u0027s input date.","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.commands;","lastModifiedDate":"2023-11-16"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-11-16"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-11-16"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-16"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.DukeException;","lastModifiedDate":"2023-11-16"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Storage;","lastModifiedDate":"2023-11-16"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.TaskList;","lastModifiedDate":"2023-11-16"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"import duke.utility.Ui;","lastModifiedDate":"2023-11-16"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"public class Command_SearchByDate extends Command {","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"    private final String inputDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"    public Command_SearchByDate(String inputDate) {","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"        this.inputDate \u003d inputDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"    private boolean isTaskWithDate(Tasks tsk, String date){","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"        if(tsk instanceof Deadline\u0026\u0026date.equals(((Deadline) tsk).getBy())){","lastModifiedDate":"2023-11-18"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"            return true;","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"        }else if (tsk instanceof Event\u0026\u0026date.equals(((Event) tsk).getFrom())){","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"            return true;","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"        }else","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"            return tsk instanceof Event \u0026\u0026 date.equals(((Event) tsk).getTo());","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to find task that matches user input date.","lastModifiedDate":"2023-11-16"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"     * This method gets stored task list from the saved text file.","lastModifiedDate":"2023-11-16"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"     * then convert user input to a time format using InputTimeConvertor method in Task glass","lastModifiedDate":"2023-11-16"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"     * then search task in task list for deadline and event instance, filter the date that match input date","lastModifiedDate":"2023-11-16"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"     *","lastModifiedDate":"2023-11-16"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"     * @param tskList The list of stored tasks.","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"     * @exception DateTimeParseException catch wrong format date error","lastModifiedDate":"2023-11-16"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"     * @exception DukeException throw error message","lastModifiedDate":"2023-11-16"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-16"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"    public void execute(TaskList tskList, Ui ui, Storage store)throws DateTimeParseException, DukeException","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"    {","lastModifiedDate":"2023-11-16"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"        try{","lastModifiedDate":"2023-11-16"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"            for (Tasks t:tskList.storedTaskList) {","lastModifiedDate":"2023-11-18"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"                String TargetDate\u003dt.convertInputTime(inputDate);","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"                if(isTaskWithDate(t,TargetDate)){","lastModifiedDate":"2023-11-18"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"                    System.out.println(t.toString());","lastModifiedDate":"2023-11-16"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"                }","lastModifiedDate":"2023-11-16"},{"lineNumber":58,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-16"},{"lineNumber":59,"author":{"gitId":"kunkunkunkun"},"content":"        } catch (DateTimeParseException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"kunkunkunkun"},"content":"            throw new DukeException(\"Invalid date format. Please use yyyy-MM-dd.\");","lastModifiedDate":"2023-11-16"},{"lineNumber":61,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-16"},{"lineNumber":62,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":63,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":64,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":65,"author":{"gitId":"kunkunkunkun"},"content":"     * Check if Command should end.","lastModifiedDate":"2023-11-16"},{"lineNumber":66,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a boolean value for Parser parse function to evaluate","lastModifiedDate":"2023-11-16"},{"lineNumber":67,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":68,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-11-16"},{"lineNumber":69,"author":{"gitId":"kunkunkunkun"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-11-16"},{"lineNumber":70,"author":{"gitId":"kunkunkunkun"},"content":"        return false;","lastModifiedDate":"2023-11-16"},{"lineNumber":71,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":72,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-16"}],"authorContributionMap":{"kunkunkunkun":72}},{"path":"src/main/java/duke/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a deadline task with a specific due date.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is a kind of tasks type.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * This class extends the {@link Tasks} class and adds support for","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" * deadlines, represented by a date.","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"package duke.tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"public class Deadline extends Tasks {","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"    protected String by;","lastModifiedDate":"2023-11-16"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"    public Deadline(String description,Boolean isDone,String by) {","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"        this.by\u003dby;","lastModifiedDate":"2023-11-16"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"        this.description\u003ddescription;","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"        this.isDone\u003disDone;","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"        this.taskName \u003dEnums.D.toString();","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"    public void setBy(String by) {","lastModifiedDate":"2023-11-16"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    public String getBy() {","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"        return by;","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"     * it\u0027s an override function from its super class","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a string that contains the task details","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"     * which is task type, status, description and by when need to be done.","lastModifiedDate":"2023-11-16"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"    public String toString() {","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.by + \")\";","lastModifiedDate":"2023-11-16"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"kunkunkunkun":40}},{"path":"src/main/java/duke/tasks/Enums.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * it\u0027s a set of Enumerations which @link Tasks use to specify the Task type","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":"package duke.tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"public enum Enums {","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"    T, D, E","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kunkunkunkun":13}},{"path":"src/main/java/duke/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents an event task with a start and end date.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is a kind of tasks type.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * This class extends the {@link Tasks} class and adds support for","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" * event, represented by a pair of start and end date.","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"package duke.tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"public class Event extends Tasks {","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"    protected String from;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"    protected String to;","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"    public String getFrom() {","lastModifiedDate":"2023-11-16"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"        return from;","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"    public String getTo() {","lastModifiedDate":"2023-11-16"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"        return to;","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"    public void setFrom(String from) {","lastModifiedDate":"2023-11-16"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"    public void setTo(String to) {","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"    public Event(String description, Boolean isDone, String from, String to) {","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"        this.description\u003ddescription;","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"        this.isDone\u003disDone;","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"        this.taskName \u003dEnums.E.toString();","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"        this.from\u003dfrom;","lastModifiedDate":"2023-11-18"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"        this.to\u003dto;","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"     * it\u0027s an override function from its super class","lastModifiedDate":"2023-11-16"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a string that contains the task details","lastModifiedDate":"2023-11-16"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"     * which is task type, status, description and start time and end time.","lastModifiedDate":"2023-11-16"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"    public String toString() {","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.from +\" to: \"+this.to+ \")\";","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"kunkunkunkun":51}},{"path":"src/main/java/duke/tasks/Tasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a task with task description and status of the project weather it\u0027s done or undone.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class has the following subclasses Todo, Deadline, Event","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"package duke.tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-16"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-16"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-16"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"public class Tasks {","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"    protected String description;","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-10-18"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"    private static final DateTimeFormatter INPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2023-11-16"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"    private static final DateTimeFormatter OUTPUT_FORMAT \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"    protected String taskName;","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"    public Tasks(){}","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"    public Tasks(String description) {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-18"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-10-18"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"        this.taskName \u003d \" \";","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    public void setTaskName(String taskName) {","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"        this.taskName \u003d taskName;","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"    public String getTaskName() {","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"        return taskName;","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"    public String getDescription() {","lastModifiedDate":"2023-11-18"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"        return description;","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"    public boolean isDone() {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"        return isDone;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"    public void setIsDone(boolean done) {","lastModifiedDate":"2023-11-18"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"     * it\u0027s a function designed to take in a time value in string","lastModifiedDate":"2023-11-16"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"     * convert into \"yyyy-MM-dd\" format and return in MMM dd yyyy format.","lastModifiedDate":"2023-11-16"},{"lineNumber":58,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":59,"author":{"gitId":"kunkunkunkun"},"content":"    public String convertInputTime(String inputTime) throws DateTimeParseException {","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"kunkunkunkun"},"content":"        LocalDate ld \u003d LocalDate.parse(inputTime,INPUT_FORMAT);","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"kunkunkunkun"},"content":"        return ld.format(OUTPUT_FORMAT);","lastModifiedDate":"2023-11-18"},{"lineNumber":62,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":63,"author":{"gitId":"kunkunkunkun"},"content":"    public LocalDate convertStringToDate(String inputTime) throws DateTimeParseException {","lastModifiedDate":"2023-11-18"},{"lineNumber":64,"author":{"gitId":"kunkunkunkun"},"content":"        return LocalDate.parse(inputTime,OUTPUT_FORMAT);","lastModifiedDate":"2023-11-18"},{"lineNumber":65,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-16"},{"lineNumber":66,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":67,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":68,"author":{"gitId":"kunkunkunkun"},"content":"     * it\u0027s a function designed to be overridden by subclasses","lastModifiedDate":"2023-11-16"},{"lineNumber":69,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a string that contains the task details","lastModifiedDate":"2023-11-16"},{"lineNumber":70,"author":{"gitId":"kunkunkunkun"},"content":"     * which is task status, description.","lastModifiedDate":"2023-11-16"},{"lineNumber":71,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":72,"author":{"gitId":"kunkunkunkun"},"content":"    public String toString() {","lastModifiedDate":"2023-11-18"},{"lineNumber":73,"author":{"gitId":"kunkunkunkun"},"content":"        return \"[\"+this.getStatusIcon()+\"] \"+ this.description;","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":76,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":77,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":78,"author":{"gitId":"kunkunkunkun"},"content":"     * it\u0027s a function to return the string \"[X]\" or \"[ ]\" base on the task\u0027s status.","lastModifiedDate":"2023-11-16"},{"lineNumber":79,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":80,"author":{"gitId":"kunkunkunkun"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-10-18"},{"lineNumber":81,"author":{"gitId":"kunkunkunkun"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-10-18"},{"lineNumber":82,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":83,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":84,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"kunkunkunkun":84}},{"path":"src/main/java/duke/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a to-do task with description and status.","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is a kind of tasks type.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * This class extends the {@link Tasks} class and adds support for","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" * to-do, represented by description and status.","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"package duke.tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"public class ToDo extends Tasks {","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"    public ToDo(String description,Boolean isDone) {","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"        this.description\u003ddescription;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"        this.isDone\u003disDone;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"        this.taskName \u003dEnums.T.toString();","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"     * it\u0027s an override function from its super class","lastModifiedDate":"2023-11-16"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"     * Return a string that contains the task details","lastModifiedDate":"2023-11-16"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"     * which is task type, status, description.","lastModifiedDate":"2023-11-16"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    public String toString() {","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"kunkunkunkun":31}},{"path":"src/main/java/duke/utility/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * it\u0027s the exception class which extends from @link Exception","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the utility pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"package duke.utility;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"    public DukeException (String Message) {","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"        super(Message);","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"kunkunkunkun":16}},{"path":"src/main/java/duke/utility/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a class that takes in user input","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * and analyse their input logic then execute with respective commands","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the utility pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.utility;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command;","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command_AddTask;","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command_DeleteTask;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command_DoAfter;","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command_Exit;","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command_Find;","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command_List;","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command_MarkingTask;","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"import duke.commands.Command_SearchByDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-16"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"public class Parser {","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the method to analyse user input","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"     * This method will ask the user for command input","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"     * then it\u0027ll split the input to match the task type and run relative command","lastModifiedDate":"2023-11-16"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"     * it\u0027ll throw an error if user input message doesn\u0027t contain task of certain type","lastModifiedDate":"2023-11-16"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"     * @param input The user input gets from terminal","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"    public Command parse(String input) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"        assert input!\u003dnull:\"Please provide some task information\";","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"        String[] splitUserInput \u003d input.split(\" \");","lastModifiedDate":"2023-11-18"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"        String TaskType \u003d splitUserInput[0].trim().toLowerCase();","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"        switch (TaskType) {","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"            case \"bye\":","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"                return new Command_Exit();","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"            case \"list\":","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"                return new Command_List();","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"            case \"mark\":","lastModifiedDate":"2023-11-13"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"                checkInputLength(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"                return new Command_MarkingTask(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"            case \"unmark\":","lastModifiedDate":"2023-11-13"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"                checkInputLength(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"                return new Command_MarkingTask(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"            case \"todo\":","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"                checkInputLength(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"                return new Command_AddTask(new ToDo(splitUserInput[1], false));","lastModifiedDate":"2023-11-18"},{"lineNumber":58,"author":{"gitId":"kunkunkunkun"},"content":"            case \"deadline\":","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"kunkunkunkun"},"content":"                checkInputLength(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"kunkunkunkun"},"content":"                return parseDeadlineCommand(input);","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"kunkunkunkun"},"content":"            case \"event\":","lastModifiedDate":"2023-11-13"},{"lineNumber":62,"author":{"gitId":"kunkunkunkun"},"content":"                checkInputLength(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":63,"author":{"gitId":"kunkunkunkun"},"content":"                return parseEventCommand(input);","lastModifiedDate":"2023-11-18"},{"lineNumber":64,"author":{"gitId":"kunkunkunkun"},"content":"            case \"delete\":","lastModifiedDate":"2023-11-13"},{"lineNumber":65,"author":{"gitId":"kunkunkunkun"},"content":"                checkInputLength(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":66,"author":{"gitId":"kunkunkunkun"},"content":"                return new Command_DeleteTask(Integer.parseInt(splitUserInput[1]));","lastModifiedDate":"2023-11-18"},{"lineNumber":67,"author":{"gitId":"kunkunkunkun"},"content":"            case\"search\":","lastModifiedDate":"2023-11-16"},{"lineNumber":68,"author":{"gitId":"kunkunkunkun"},"content":"                checkInputLength(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":69,"author":{"gitId":"kunkunkunkun"},"content":"                return new Command_SearchByDate(splitUserInput[1]);","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"kunkunkunkun"},"content":"            case\"do\":","lastModifiedDate":"2023-11-18"},{"lineNumber":71,"author":{"gitId":"kunkunkunkun"},"content":"                checkInputLength(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":72,"author":{"gitId":"kunkunkunkun"},"content":"                return new Command_DoAfter(input);","lastModifiedDate":"2023-11-18"},{"lineNumber":73,"author":{"gitId":"kunkunkunkun"},"content":"            case\"find\":","lastModifiedDate":"2023-11-18"},{"lineNumber":74,"author":{"gitId":"kunkunkunkun"},"content":"                checkInputLength(splitUserInput);","lastModifiedDate":"2023-11-18"},{"lineNumber":75,"author":{"gitId":"kunkunkunkun"},"content":"                return new Command_Find(input);","lastModifiedDate":"2023-11-18"},{"lineNumber":76,"author":{"gitId":"kunkunkunkun"},"content":"            default:","lastModifiedDate":"2023-11-13"},{"lineNumber":77,"author":{"gitId":"kunkunkunkun"},"content":"                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-11-13"},{"lineNumber":78,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":79,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":80,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":81,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":82,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the method to check if the split user input has more than 2 parts","lastModifiedDate":"2023-11-16"},{"lineNumber":83,"author":{"gitId":"kunkunkunkun"},"content":"     * it\u0027ll throw an error if the input contains less than 2 parts or the second part is empty","lastModifiedDate":"2023-11-16"},{"lineNumber":84,"author":{"gitId":"kunkunkunkun"},"content":"     * @param splitInput The split user input passed from paser method","lastModifiedDate":"2023-11-16"},{"lineNumber":85,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":86,"author":{"gitId":"kunkunkunkun"},"content":"    private void checkInputLength(String[] splitInput) throws DukeException {","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"kunkunkunkun"},"content":"        if (splitInput.length \u003c 2 || splitInput[1].trim().isEmpty()) {","lastModifiedDate":"2023-11-13"},{"lineNumber":88,"author":{"gitId":"kunkunkunkun"},"content":"            throw new DukeException(\"The description of a command cannot be empty.\");","lastModifiedDate":"2023-11-13"},{"lineNumber":89,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":92,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":93,"author":{"gitId":"kunkunkunkun"},"content":"     * Add a deadline command if the user input meet the correct requirement.","lastModifiedDate":"2023-11-16"},{"lineNumber":94,"author":{"gitId":"kunkunkunkun"},"content":"     * This method check user input contains \"/by\",","lastModifiedDate":"2023-11-16"},{"lineNumber":95,"author":{"gitId":"kunkunkunkun"},"content":"     * if there isn\u0027t, it\u0027ll throw and invalid deadline format error","lastModifiedDate":"2023-11-16"},{"lineNumber":96,"author":{"gitId":"kunkunkunkun"},"content":"     * if there is, it\u0027ll extract description, by from the input and create a deadline task and add into task list","lastModifiedDate":"2023-11-16"},{"lineNumber":97,"author":{"gitId":"kunkunkunkun"},"content":"     * @param input The list of tasks to which the new task will be added.","lastModifiedDate":"2023-11-16"},{"lineNumber":98,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":99,"author":{"gitId":"kunkunkunkun"},"content":"    private Command parseDeadlineCommand(String input) throws DukeException {","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":101,"author":{"gitId":"kunkunkunkun"},"content":"        Deadline dl\u003dnew Deadline(\"\",false,\"\");","lastModifiedDate":"2023-11-18"},{"lineNumber":102,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":103,"author":{"gitId":"kunkunkunkun"},"content":"        if (input.contains(\"/by\")) {","lastModifiedDate":"2023-11-16"},{"lineNumber":104,"author":{"gitId":"kunkunkunkun"},"content":"            String[] parts \u003d input.split(\"\\\\s+/by\\\\s+\", 2);","lastModifiedDate":"2023-11-13"},{"lineNumber":105,"author":{"gitId":"kunkunkunkun"},"content":"            String Description \u003d parts[0];","lastModifiedDate":"2023-11-16"},{"lineNumber":106,"author":{"gitId":"kunkunkunkun"},"content":"            String by \u003d parts[1].trim();","lastModifiedDate":"2023-11-16"},{"lineNumber":107,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":108,"author":{"gitId":"kunkunkunkun"},"content":"            try{","lastModifiedDate":"2023-11-16"},{"lineNumber":109,"author":{"gitId":"kunkunkunkun"},"content":"                dl.setDescription(Description.substring(9).trim());","lastModifiedDate":"2023-11-18"},{"lineNumber":110,"author":{"gitId":"kunkunkunkun"},"content":"                dl.setBy(dl.convertInputTime(by.trim()));","lastModifiedDate":"2023-11-18"},{"lineNumber":111,"author":{"gitId":"kunkunkunkun"},"content":"            } catch (DateTimeParseException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":112,"author":{"gitId":"kunkunkunkun"},"content":"                throw new DukeException(\"Invalid date format. Please use yyyy-MM-dd.\");","lastModifiedDate":"2023-11-16"},{"lineNumber":113,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":114,"author":{"gitId":"kunkunkunkun"},"content":"        } else{","lastModifiedDate":"2023-11-18"},{"lineNumber":115,"author":{"gitId":"kunkunkunkun"},"content":"            throw new DukeException(\"Invalid deadline format. \" +","lastModifiedDate":"2023-11-19"},{"lineNumber":116,"author":{"gitId":"kunkunkunkun"},"content":"                    \"Use \u0027deadline \u003cdescription\u003e /by \u003cdate\u003e\u0027\");","lastModifiedDate":"2023-11-19"},{"lineNumber":117,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-16"},{"lineNumber":118,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":119,"author":{"gitId":"kunkunkunkun"},"content":"    return new Command_AddTask(dl);","lastModifiedDate":"2023-11-18"},{"lineNumber":120,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":122,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":123,"author":{"gitId":"kunkunkunkun"},"content":"     * Add an event command if the user input meet the correct requirement.","lastModifiedDate":"2023-11-16"},{"lineNumber":124,"author":{"gitId":"kunkunkunkun"},"content":"     * This method check user input contains \"/by\",","lastModifiedDate":"2023-11-16"},{"lineNumber":125,"author":{"gitId":"kunkunkunkun"},"content":"     * if there isn\u0027t, it\u0027ll throw and invalid event format error","lastModifiedDate":"2023-11-16"},{"lineNumber":126,"author":{"gitId":"kunkunkunkun"},"content":"     * if there is, it\u0027ll extract description, by, from and to value from the input","lastModifiedDate":"2023-11-16"},{"lineNumber":127,"author":{"gitId":"kunkunkunkun"},"content":"     * and create a deadline task and add into task list","lastModifiedDate":"2023-11-16"},{"lineNumber":128,"author":{"gitId":"kunkunkunkun"},"content":"     * @param input The list of tasks to which the new task will be added.","lastModifiedDate":"2023-11-16"},{"lineNumber":129,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":130,"author":{"gitId":"kunkunkunkun"},"content":"    private Command parseEventCommand(String input) throws DukeException {","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":132,"author":{"gitId":"kunkunkunkun"},"content":"        Event evt \u003d new Event(\"\",false,\"\",\"\");","lastModifiedDate":"2023-11-18"},{"lineNumber":133,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":134,"author":{"gitId":"kunkunkunkun"},"content":"        if (input.contains(\"/to\")\u0026\u0026input.contains(\"/from\")) {","lastModifiedDate":"2023-11-18"},{"lineNumber":135,"author":{"gitId":"kunkunkunkun"},"content":"            String[] parts \u003d input.split(\"\\\\s+/from\\\\s+\");","lastModifiedDate":"2023-11-13"},{"lineNumber":136,"author":{"gitId":"kunkunkunkun"},"content":"            String[] timeParts \u003d parts[1].split(\"\\\\s+/to\\\\s+\", 2);","lastModifiedDate":"2023-11-13"},{"lineNumber":137,"author":{"gitId":"kunkunkunkun"},"content":"            String description \u003dparts[0].substring(6).trim();","lastModifiedDate":"2023-11-18"},{"lineNumber":138,"author":{"gitId":"kunkunkunkun"},"content":"            String from \u003dtimeParts[0].trim();","lastModifiedDate":"2023-11-18"},{"lineNumber":139,"author":{"gitId":"kunkunkunkun"},"content":"            String to \u003dtimeParts[1].trim();","lastModifiedDate":"2023-11-18"},{"lineNumber":140,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":141,"author":{"gitId":"kunkunkunkun"},"content":"            try{","lastModifiedDate":"2023-11-16"},{"lineNumber":142,"author":{"gitId":"kunkunkunkun"},"content":"                evt.setDescription(description);","lastModifiedDate":"2023-11-18"},{"lineNumber":143,"author":{"gitId":"kunkunkunkun"},"content":"                evt.setFrom(evt.convertInputTime(from.trim()));","lastModifiedDate":"2023-11-18"},{"lineNumber":144,"author":{"gitId":"kunkunkunkun"},"content":"                evt.setTo(evt.convertInputTime(to.trim()));","lastModifiedDate":"2023-11-18"},{"lineNumber":145,"author":{"gitId":"kunkunkunkun"},"content":"            } catch (DateTimeParseException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":146,"author":{"gitId":"kunkunkunkun"},"content":"                throw new DukeException(\"Invalid date format. Please use yyyy-MM-dd.\");","lastModifiedDate":"2023-11-16"},{"lineNumber":147,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-16"},{"lineNumber":148,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":149,"author":{"gitId":"kunkunkunkun"},"content":"        } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":150,"author":{"gitId":"kunkunkunkun"},"content":"            throw new DukeException(\"Invalid event format. Use \u0027event \u003cdescription\u003e\"","lastModifiedDate":"2023-11-18"},{"lineNumber":151,"author":{"gitId":"kunkunkunkun"},"content":"                    + \"/from \u003cstart time\u003e /to \u003cend time\u003e\u0027\");","lastModifiedDate":"2023-11-18"},{"lineNumber":152,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-16"},{"lineNumber":153,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":154,"author":{"gitId":"kunkunkunkun"},"content":"        return new Command_AddTask(evt);","lastModifiedDate":"2023-11-18"},{"lineNumber":155,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":156,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-13"}],"authorContributionMap":{"kunkunkunkun":156}},{"path":"src/main/java/duke/utility/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a class that deals with loading tasks from text file into project","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * and saving task list to a text file","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the utility pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"package duke.utility;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Deadline;","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Event;","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.ToDo;","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"import java.io.File;","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-13"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-11-13"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-13"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"public class Storage","lastModifiedDate":"2023-11-13"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"{","lastModifiedDate":"2023-11-13"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    protected String filePath\u003d\"src/main/java/duke.txt\";","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"    protected ArrayList\u003cTasks\u003e loadedTasks\u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"    protected ArrayList\u003cString\u003e fileContent \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"    Ui ui\u003dnew Ui();","lastModifiedDate":"2023-11-13"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"    public Storage(String filePath) {","lastModifiedDate":"2023-11-13"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-11-13"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"    public Storage() {","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to load a text file from given path.","lastModifiedDate":"2023-11-16"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"     * This method will scan the content line-by-line from the given path.","lastModifiedDate":"2023-11-16"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"     * and write the line of text to FileContent","lastModifiedDate":"2023-11-16"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"     * if file is not at the correct place it\u0027ll throw an error","lastModifiedDate":"2023-11-16"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"     * returns the task list.","lastModifiedDate":"2023-11-16"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"    public ArrayList\u003cTasks\u003e load() throws DukeException","lastModifiedDate":"2023-11-13"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"    {","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"        File file \u003d new File(filePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"        this.loadedTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"            Scanner scan \u003dnew Scanner(file);","lastModifiedDate":"2023-11-18"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"            while (scan.hasNext()){","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"                fileContent.add(scan.nextLine());","lastModifiedDate":"2023-11-18"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"        } catch (FileNotFoundException e) {","lastModifiedDate":"2023-11-18"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"            ui.showLoadingError();","lastModifiedDate":"2023-11-13"},{"lineNumber":58,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"kunkunkunkun"},"content":"        loadedTasks\u003dconvertFileToTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"kunkunkunkun"},"content":"        return loadedTasks;","lastModifiedDate":"2023-11-18"},{"lineNumber":62,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":63,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":64,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":65,"author":{"gitId":"kunkunkunkun"},"content":"     * Extract strings from given start string and end string","lastModifiedDate":"2023-11-16"},{"lineNumber":66,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":67,"author":{"gitId":"kunkunkunkun"},"content":"    private String extractInBetweenString(String text, String start, String end) {","lastModifiedDate":"2023-11-18"},{"lineNumber":68,"author":{"gitId":"kunkunkunkun"},"content":"        if (text.contains(start) \u0026\u0026 text.contains(end)) {","lastModifiedDate":"2023-11-14"},{"lineNumber":69,"author":{"gitId":"kunkunkunkun"},"content":"            return text.substring(text.indexOf(start) + start.length(), text.indexOf(end)).trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"kunkunkunkun"},"content":"        return \"\";","lastModifiedDate":"2023-11-14"},{"lineNumber":72,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":73,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":74,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":75,"author":{"gitId":"kunkunkunkun"},"content":"     * Extract strings from given start string and end string","lastModifiedDate":"2023-11-16"},{"lineNumber":76,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":77,"author":{"gitId":"kunkunkunkun"},"content":"    private String extractEndingString(String text, String start, String end) {","lastModifiedDate":"2023-11-18"},{"lineNumber":78,"author":{"gitId":"kunkunkunkun"},"content":"        if (text.contains(start) \u0026\u0026 text.contains(end)) {","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"kunkunkunkun"},"content":"            return text.substring(text.indexOf(start) + start.length(), text.lastIndexOf(end)).trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"kunkunkunkun"},"content":"        return \"\";","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":84,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":85,"author":{"gitId":"kunkunkunkun"},"content":"     * Access string from FileContent and convert each string to task base on the task type","lastModifiedDate":"2023-11-16"},{"lineNumber":86,"author":{"gitId":"kunkunkunkun"},"content":"     * It\u0027ll return the task list","lastModifiedDate":"2023-11-16"},{"lineNumber":87,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":88,"author":{"gitId":"kunkunkunkun"},"content":"    public ArrayList\u003cTasks\u003e convertFileToTasks()","lastModifiedDate":"2023-11-18"},{"lineNumber":89,"author":{"gitId":"kunkunkunkun"},"content":"    {","lastModifiedDate":"2023-11-13"},{"lineNumber":90,"author":{"gitId":"kunkunkunkun"},"content":"        ArrayList\u003cTasks\u003e Result \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-13"},{"lineNumber":91,"author":{"gitId":"kunkunkunkun"},"content":"        for(String s:fileContent){","lastModifiedDate":"2023-11-18"},{"lineNumber":92,"author":{"gitId":"kunkunkunkun"},"content":"            String description \u003d s.substring(6).split(\"\\\\(\", 2)[0].trim();","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"kunkunkunkun"},"content":"            boolean isDone \u003d s.substring(4, 5).equals(\"X\");","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"kunkunkunkun"},"content":"            String by \u003d extractInBetweenString(s, \"by: \", \")\");","lastModifiedDate":"2023-11-18"},{"lineNumber":96,"author":{"gitId":"kunkunkunkun"},"content":"            String from \u003d extractInBetweenString(s, \"from: \", \"to: \");","lastModifiedDate":"2023-11-18"},{"lineNumber":97,"author":{"gitId":"kunkunkunkun"},"content":"            String to \u003d extractEndingString(s, \"to: \", \")\");","lastModifiedDate":"2023-11-18"},{"lineNumber":98,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"kunkunkunkun"},"content":"            switch (s.substring(1, 2)) {","lastModifiedDate":"2023-11-13"},{"lineNumber":100,"author":{"gitId":"kunkunkunkun"},"content":"                case \"T\":","lastModifiedDate":"2023-11-13"},{"lineNumber":101,"author":{"gitId":"kunkunkunkun"},"content":"                    Result.add(new ToDo(description, isDone));","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"kunkunkunkun"},"content":"                    break;","lastModifiedDate":"2023-11-13"},{"lineNumber":103,"author":{"gitId":"kunkunkunkun"},"content":"                case \"D\":","lastModifiedDate":"2023-11-13"},{"lineNumber":104,"author":{"gitId":"kunkunkunkun"},"content":"                    Result.add(new Deadline(description, isDone, by));","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"kunkunkunkun"},"content":"                    break;","lastModifiedDate":"2023-11-13"},{"lineNumber":106,"author":{"gitId":"kunkunkunkun"},"content":"                case \"E\":","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"kunkunkunkun"},"content":"                    Result.add(new Event(description, isDone, from, to));","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"kunkunkunkun"},"content":"                    break;","lastModifiedDate":"2023-11-13"},{"lineNumber":109,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":110,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":111,"author":{"gitId":"kunkunkunkun"},"content":"        return Result;","lastModifiedDate":"2023-11-13"},{"lineNumber":112,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":113,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":114,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":115,"author":{"gitId":"kunkunkunkun"},"content":"     * For each tasks in LoadedTasks inside @link Tasklist class","lastModifiedDate":"2023-11-16"},{"lineNumber":116,"author":{"gitId":"kunkunkunkun"},"content":"     * run toString for each task and write to the text file","lastModifiedDate":"2023-11-16"},{"lineNumber":117,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":118,"author":{"gitId":"kunkunkunkun"},"content":"    public void save(ArrayList\u003cTasks\u003e tasks) throws IOException {","lastModifiedDate":"2023-11-13"},{"lineNumber":119,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":120,"author":{"gitId":"kunkunkunkun"},"content":"        try {","lastModifiedDate":"2023-11-13"},{"lineNumber":121,"author":{"gitId":"kunkunkunkun"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"kunkunkunkun"},"content":"            FileWriter FW \u003d new FileWriter(file);","lastModifiedDate":"2023-11-13"},{"lineNumber":123,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":124,"author":{"gitId":"kunkunkunkun"},"content":"            for (Tasks t : loadedTasks) {","lastModifiedDate":"2023-11-18"},{"lineNumber":125,"author":{"gitId":"kunkunkunkun"},"content":"                FW.write(t.toString());","lastModifiedDate":"2023-11-18"},{"lineNumber":126,"author":{"gitId":"kunkunkunkun"},"content":"                FW.write(\"\\n\");","lastModifiedDate":"2023-11-13"},{"lineNumber":127,"author":{"gitId":"kunkunkunkun"},"content":"            }","lastModifiedDate":"2023-11-13"},{"lineNumber":128,"author":{"gitId":"kunkunkunkun"},"content":"            FW.close();","lastModifiedDate":"2023-11-13"},{"lineNumber":129,"author":{"gitId":"kunkunkunkun"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-11-13"},{"lineNumber":130,"author":{"gitId":"kunkunkunkun"},"content":"            throw new IOException(\"Unable to write to file:\"+filePath);","lastModifiedDate":"2023-11-13"},{"lineNumber":131,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":132,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":133,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"kunkunkunkun":133}},{"path":"src/main/java/duke/utility/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a class that stores all tasks and provide tasklist function;","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the utility pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"package duke.utility;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import java.io.File;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"public class TaskList extends Tasks","lastModifiedDate":"2023-11-13"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"{","lastModifiedDate":"2023-11-13"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"  protected String filePath\u003d new Storage().filePath;","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"  public ArrayList\u003cTasks\u003e storedTaskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"  public ArrayList\u003cString\u003e notes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"    public TaskList(ArrayList\u003cTasks\u003e loadedTasks) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"        File f \u003dnew File(filePath);","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"        this.storedTaskList\u003dloadedTasks;","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"    public TaskList() {","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to add task into task list","lastModifiedDate":"2023-11-16"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"     * Return the updated task list","lastModifiedDate":"2023-11-16"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"     *","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"     * @param taskToAdd Task to be added into the task","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"    public void addTask(Tasks taskToAdd) {","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"        storedTaskList.add(taskToAdd);","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to delete task from task list","lastModifiedDate":"2023-11-16"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"     * base on user specified index","lastModifiedDate":"2023-11-16"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"     *","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"     * @param index the index of the task from the task list","lastModifiedDate":"2023-11-16"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"        Tasks result\u003dstoredTaskList.get(index-1);","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"        storedTaskList.remove(index-1);","lastModifiedDate":"2023-11-18"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"     * Return all the tasks in a list","lastModifiedDate":"2023-11-16"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"    public ArrayList\u003cTasks\u003e getAllTasks() {","lastModifiedDate":"2023-11-18"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"        return storedTaskList;","lastModifiedDate":"2023-11-18"},{"lineNumber":58,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":59,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":60,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":61,"author":{"gitId":"kunkunkunkun"},"content":"     * Executes the command to print all task from task list","lastModifiedDate":"2023-11-16"},{"lineNumber":62,"author":{"gitId":"kunkunkunkun"},"content":"     * It loops through the task list and do toString to turn task into string","lastModifiedDate":"2023-11-16"},{"lineNumber":63,"author":{"gitId":"kunkunkunkun"},"content":"     * and print out","lastModifiedDate":"2023-11-16"},{"lineNumber":64,"author":{"gitId":"kunkunkunkun"},"content":"     * @param input the index of the task from the task list","lastModifiedDate":"2023-11-18"},{"lineNumber":65,"author":{"gitId":"kunkunkunkun"},"content":"     */","lastModifiedDate":"2023-11-16"},{"lineNumber":66,"author":{"gitId":"kunkunkunkun"},"content":"    public void printTaskList(ArrayList\u003cTasks\u003e input) {","lastModifiedDate":"2023-11-18"},{"lineNumber":67,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":68,"author":{"gitId":"kunkunkunkun"},"content":"        int i \u003d1;","lastModifiedDate":"2023-11-13"},{"lineNumber":69,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"kunkunkunkun"},"content":"        for (Tasks t:input) {","lastModifiedDate":"2023-11-18"},{"lineNumber":71,"author":{"gitId":"kunkunkunkun"},"content":"            System.out.println(i+t.toString());","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"kunkunkunkun"},"content":"            i++;","lastModifiedDate":"2023-11-13"},{"lineNumber":73,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-13"},{"lineNumber":74,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":75,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":76,"author":{"gitId":"kunkunkunkun"},"content":"    public void printNotes() {","lastModifiedDate":"2023-11-18"},{"lineNumber":77,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":78,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(\"All your notes are as follow\");","lastModifiedDate":"2023-11-18"},{"lineNumber":79,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":80,"author":{"gitId":"kunkunkunkun"},"content":"        int i \u003d1;","lastModifiedDate":"2023-11-18"},{"lineNumber":81,"author":{"gitId":"kunkunkunkun"},"content":"        for(String s: notes) {","lastModifiedDate":"2023-11-18"},{"lineNumber":82,"author":{"gitId":"kunkunkunkun"},"content":"            System.out.println(\"[\"+i+\"]\"+s);","lastModifiedDate":"2023-11-18"},{"lineNumber":83,"author":{"gitId":"kunkunkunkun"},"content":"            i++;","lastModifiedDate":"2023-11-18"},{"lineNumber":84,"author":{"gitId":"kunkunkunkun"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":85,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":86,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"kunkunkunkun":86}},{"path":"src/main/java/duke/utility/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"/**","lastModifiedDate":"2023-11-16"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":" * Represents a class that deals with user interaction","lastModifiedDate":"2023-11-16"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":" * it provides messages to be printed out and also read user input","lastModifiedDate":"2023-11-16"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":" * This class is part of the utility pattern implementation.","lastModifiedDate":"2023-11-16"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":" *","lastModifiedDate":"2023-11-16"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":" * @author Yan Kun","lastModifiedDate":"2023-11-16"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":" * @version 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":" * @since 1.0","lastModifiedDate":"2023-11-16"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":" */","lastModifiedDate":"2023-11-16"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"package duke.utility;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-13"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"public class Ui","lastModifiedDate":"2023-11-13"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"{","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"    //******** Generic String ********","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String LINE_BREAKER \u003d \"____________________________________________________________\\n\";","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String GREETING \u003d \"Hello! I\u0027m JohnCena\\n What can I do for you?\\n\";","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String FAREWELL \u003d \"Bye. Hope to see you again soon!\\n\";","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"    //******** Command Message ********","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String MSG_MARK \u003d \"Nice! I\u0027ve marked this task as done:\";","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String MSG_UNMARK \u003d \"OK, I\u0027ve marked this task as not done yet:\";","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String MSG_LIST \u003d \"Here are the duke.tasks in your list:\";","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String MSG_TASK_ADDED \u003d \"Got it. I\u0027ve added this task:\";","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String MSG_DELETE \u003d \"Noted. I\u0027ve removed this task:\";","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String COMMAND_FIND \u003d \"Here is the find result:\";","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    //******** Error Message ********","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String LOADING_ERROR \u003d \"Sorry, I couldn\u0027t find the file, \"","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"                                                + \"But i\u0027ll help you navigate to the correct place :D\";","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"    private static final String DUKE_LOGO \u003d","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"                  \" ____        _        \\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"    public void ShowWelcomeMsg() {","lastModifiedDate":"2023-11-18"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(LINE_BREAKER);","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(GREETING);","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"    public void ShowGoodByeMsg() {","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(FAREWELL);","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":53,"author":{"gitId":"kunkunkunkun"},"content":"    public void showMarkedMsg() {","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(MSG_MARK);","lastModifiedDate":"2023-11-18"},{"lineNumber":55,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":56,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":57,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":58,"author":{"gitId":"kunkunkunkun"},"content":"    public void showTaskAdded() {","lastModifiedDate":"2023-11-18"},{"lineNumber":59,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(MSG_TASK_ADDED);","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":62,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":63,"author":{"gitId":"kunkunkunkun"},"content":"    public void showListMsg() {","lastModifiedDate":"2023-11-18"},{"lineNumber":64,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(MSG_LIST);","lastModifiedDate":"2023-11-18"},{"lineNumber":65,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":66,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":67,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":68,"author":{"gitId":"kunkunkunkun"},"content":"    public void showDeleteMsg() {","lastModifiedDate":"2023-11-18"},{"lineNumber":69,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(MSG_DELETE);","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":71,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":72,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":73,"author":{"gitId":"kunkunkunkun"},"content":"    public void showUnmarkedMsg() {","lastModifiedDate":"2023-11-18"},{"lineNumber":74,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(MSG_UNMARK);","lastModifiedDate":"2023-11-18"},{"lineNumber":75,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":76,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":77,"author":{"gitId":"kunkunkunkun"},"content":"    public void showDukeLogo(){System.out.println(\"Hello from\\n\" + DUKE_LOGO);}","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print level 0 message */","lastModifiedDate":"2023-11-16"},{"lineNumber":80,"author":{"gitId":"kunkunkunkun"},"content":"    public void Lvl0Msg() {","lastModifiedDate":"2023-11-18"},{"lineNumber":81,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(LINE_BREAKER);","lastModifiedDate":"2023-11-18"},{"lineNumber":82,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.print(GREETING);","lastModifiedDate":"2023-11-18"},{"lineNumber":83,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(LINE_BREAKER);","lastModifiedDate":"2023-11-18"},{"lineNumber":84,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.print(FAREWELL);","lastModifiedDate":"2023-11-18"},{"lineNumber":85,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(LINE_BREAKER);","lastModifiedDate":"2023-11-18"},{"lineNumber":86,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":87,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":88,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":89,"author":{"gitId":"kunkunkunkun"},"content":"    public void showLoadingError() {","lastModifiedDate":"2023-11-18"},{"lineNumber":90,"author":{"gitId":"kunkunkunkun"},"content":"        showError(LOADING_ERROR);","lastModifiedDate":"2023-11-18"},{"lineNumber":91,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":92,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":93,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":94,"author":{"gitId":"kunkunkunkun"},"content":"    public void printTaskMsg(String toString) {","lastModifiedDate":"2023-11-18"},{"lineNumber":95,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(\"  \" + toString);","lastModifiedDate":"2023-11-18"},{"lineNumber":96,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":97,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":98,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":99,"author":{"gitId":"kunkunkunkun"},"content":"    public void printTaskList(TaskList tskList) {","lastModifiedDate":"2023-11-18"},{"lineNumber":100,"author":{"gitId":"kunkunkunkun"},"content":"        tskList.printTaskList(tskList.storedTaskList);","lastModifiedDate":"2023-11-18"},{"lineNumber":101,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":102,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":103,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":104,"author":{"gitId":"kunkunkunkun"},"content":"    public void showLine() {","lastModifiedDate":"2023-11-18"},{"lineNumber":105,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(LINE_BREAKER);","lastModifiedDate":"2023-11-18"},{"lineNumber":106,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":107,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-16"},{"lineNumber":108,"author":{"gitId":"kunkunkunkun"},"content":"    /** * print specific message */","lastModifiedDate":"2023-11-16"},{"lineNumber":109,"author":{"gitId":"kunkunkunkun"},"content":"    public void showError(String error){","lastModifiedDate":"2023-11-18"},{"lineNumber":110,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(\"Error: \"+error);","lastModifiedDate":"2023-11-18"},{"lineNumber":111,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":112,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":113,"author":{"gitId":"kunkunkunkun"},"content":"    public void findCommand(){","lastModifiedDate":"2023-11-18"},{"lineNumber":114,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(COMMAND_FIND);","lastModifiedDate":"2023-11-18"},{"lineNumber":115,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":116,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":117,"author":{"gitId":"kunkunkunkun"},"content":"    /** * read command from user */","lastModifiedDate":"2023-11-16"},{"lineNumber":118,"author":{"gitId":"kunkunkunkun"},"content":"    public String readCommand() {","lastModifiedDate":"2023-11-18"},{"lineNumber":119,"author":{"gitId":"kunkunkunkun"},"content":"        Scanner scan \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-18"},{"lineNumber":120,"author":{"gitId":"kunkunkunkun"},"content":"        return scan.nextLine().trim();","lastModifiedDate":"2023-11-18"},{"lineNumber":121,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-13"},{"lineNumber":122,"author":{"gitId":"kunkunkunkun"},"content":"    public void printNumberOfTask(TaskList tskList){","lastModifiedDate":"2023-11-19"},{"lineNumber":123,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(\"Now you have \"+ tskList.storedTaskList.size()+ \" tasks in the list\");","lastModifiedDate":"2023-11-19"},{"lineNumber":124,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":125,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-13"},{"lineNumber":126,"author":{"gitId":"kunkunkunkun"},"content":"    /**","lastModifiedDate":"2023-11-16"},{"lineNumber":127,"author":{"gitId":"kunkunkunkun"},"content":"     * print all tasks in the task list message","lastModifiedDate":"2023-11-16"},{"lineNumber":128,"author":{"gitId":"kunkunkunkun"},"content":"     * it runs tostring function to turn task into string then print out","lastModifiedDate":"2023-11-16"},{"lineNumber":129,"author":{"gitId":"kunkunkunkun"},"content":"     * */","lastModifiedDate":"2023-11-16"},{"lineNumber":130,"author":{"gitId":"kunkunkunkun"},"content":"    public void printIndividualTask(Tasks tsk){","lastModifiedDate":"2023-11-18"},{"lineNumber":131,"author":{"gitId":"kunkunkunkun"},"content":"        System.out.println(tsk.toString());","lastModifiedDate":"2023-11-18"},{"lineNumber":132,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":133,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"kunkunkunkun":133}},{"path":"src/test/java/DeadlineTaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"import duke.tasks.Tasks;","lastModifiedDate":"2023-11-18"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":"import org.junit.jupiter.api.BeforeAll;","lastModifiedDate":"2023-11-18"},{"lineNumber":3,"author":{"gitId":"kunkunkunkun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"kunkunkunkun"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"kunkunkunkun"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"kunkunkunkun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-18"},{"lineNumber":7,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":8,"author":{"gitId":"kunkunkunkun"},"content":"public class DeadlineTaskTest {","lastModifiedDate":"2023-11-18"},{"lineNumber":9,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":10,"author":{"gitId":"kunkunkunkun"},"content":"    static Tasks tsk;","lastModifiedDate":"2023-11-18"},{"lineNumber":11,"author":{"gitId":"kunkunkunkun"},"content":"    @BeforeAll","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"kunkunkunkun"},"content":"     public static void setUp() {","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"kunkunkunkun"},"content":"        tsk \u003d new Tasks(\"TaskTest\");","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"kunkunkunkun"},"content":"    @Test","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"     void testCreation() {","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"kunkunkunkun"},"content":"        assertEquals(\"TaskTest\",tsk.getDescription(),\"Description not matched\");","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"kunkunkunkun"},"content":"        assertFalse(tsk.isDone(),\"New task should be undone upon creation\");","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"kunkunkunkun"},"content":"        assertEquals(\" \",tsk.getTaskName(),\"New task should be empty string at first \");","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"kunkunkunkun"},"content":"    @Test","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"kunkunkunkun"},"content":"    void testConvertInputTime(){","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"kunkunkunkun"},"content":"        tsk \u003d new Tasks(\"TaskTest\");","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"kunkunkunkun"},"content":"        String test \u003d tsk.convertInputTime(\"2022-02-20\");","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"kunkunkunkun"},"content":"        assertEquals(\"Feb 20 2022\",test,\"Date is not properly converted into String\");","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"kunkunkunkun"},"content":"    @Test","lastModifiedDate":"2023-11-18"},{"lineNumber":31,"author":{"gitId":"kunkunkunkun"},"content":"    void testConvertStringToDate(){","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"kunkunkunkun"},"content":"        tsk \u003d new Tasks(\"TaskTest\");","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"kunkunkunkun"},"content":"        LocalDate ld \u003d tsk.convertStringToDate(\"Feb 20 2022\");","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"kunkunkunkun"},"content":"        assertEquals(LocalDate.parse(\"2022-02-20\",DateTimeFormatter.ofPattern(\"yyyy-MM-dd\")),ld,","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"kunkunkunkun"},"content":"                \"Date is not properly converted into Date\");","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"kunkunkunkun"},"content":"    @Test","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"kunkunkunkun"},"content":"    void testToString(){","lastModifiedDate":"2023-11-18"},{"lineNumber":40,"author":{"gitId":"kunkunkunkun"},"content":"        tsk \u003d new Tasks(\"TaskTest\");","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"kunkunkunkun"},"content":"        String test \u003d tsk.toString();","lastModifiedDate":"2023-11-18"},{"lineNumber":42,"author":{"gitId":"kunkunkunkun"},"content":"        assertEquals(\"[ ] TaskTest\",test,\"toString methods is not matching\");","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":44,"author":{"gitId":"kunkunkunkun"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"kunkunkunkun"},"content":"    @Test","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"kunkunkunkun"},"content":"    void testGetStatusIcon(){","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"kunkunkunkun"},"content":"        tsk \u003d new Tasks(\"TaskTest\");","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"kunkunkunkun"},"content":"        tsk.setIsDone(true);","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"kunkunkunkun"},"content":"        String test \u003d tsk.getStatusIcon();","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"kunkunkunkun"},"content":"        assertEquals(\"X\",test,\"getStatusIcon methods is not matching\");","lastModifiedDate":"2023-11-18"},{"lineNumber":51,"author":{"gitId":"kunkunkunkun"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":52,"author":{"gitId":"kunkunkunkun"},"content":"}","lastModifiedDate":"2023-11-18"}],"authorContributionMap":{"kunkunkunkun":52}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"kunkunkunkun"},"content":"list","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"kunkunkunkun"},"content":"task 1","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"kunkunkunkun":2}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"kunkunkunkun"},"content":"REM run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kunkunkunkun":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"kunkunkunkun"},"content":"# run the program, feed duke.commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"kunkunkunkun":1,"-":37}}]
