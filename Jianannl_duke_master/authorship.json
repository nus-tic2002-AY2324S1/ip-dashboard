[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"    mainClass.set(\"seedu.jabot.Duke\")","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"Jianannl":1,"-":41}},{"path":"src/main/java/seedu/jabot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.data.*;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.util.*;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"import java.io.File;","lastModifiedDate":"2023-11-18"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":" * Represent the initialisation of jabot","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e make up of the file path to load the saved","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":" * task list. e.g. \u003ccode\u003eC:/duke\u003c/code\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"public class Duke {","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    private Storage storage;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    private final Ui ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"     * Executing the jabot using the class and methods created.","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"    public void run() {","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"        ui.welcomeScreen();","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"        Parser parser \u003d new Parser();","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"        storage \u003d new Storage(System.getProperty(\"user.home\")+ File.separator + \"Desktop/task.txt\");","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"        while (!isExit) {","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"            try {","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"                Command c \u003d parser.parse(fullCommand);","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"                //assert that command c should not null, otherwise not operation will be executed","lastModifiedDate":"2023-11-18"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"                assert c !\u003d null;","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"            } finally {","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"                ui.showLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"     * To invoke the run method","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"        new Duke(System.getProperty(\"user.home\") + File.separator + \"Desktop/task.txt\").run();","lastModifiedDate":"2023-11-18"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":60}},{"path":"src/main/java/seedu/jabot/data/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.data;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.util.*;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":" * Represent the input commands keyed by users","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":" * which will be processed by the parser. A \u003ccode\u003eCommand\u003c/code\u003e make up of","lastModifiedDate":"2023-11-18"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":" * the specific commands and the data needed to do the specific operation.","lastModifiedDate":"2023-11-18"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":" * e.g. \u003ccode\u003etodo, running\u003c/code\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"public class Command {","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    protected String tCommand;","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    protected String tValue \u003d null;","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    protected LocalDate tDate \u003d null;","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    protected int tIndex;","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    protected ArrayList\u003cString\u003e tTmp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"    protected boolean iExit \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd){","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"        this.tCommand \u003d cmd;","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd, int index){","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"        this.tCommand \u003d cmd;","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"        this.tIndex \u003d index;","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd, String sTask){","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"        this.tCommand \u003d cmd;","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"        if(cmd.equals(\"find\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"            this.tValue \u003d sTask;","lastModifiedDate":"2023-11-18"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"        } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"            this.tTmp.add(sTask);","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd, LocalDate sTask){","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"        this.tCommand \u003d cmd;","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"        this.tDate \u003d sTask;","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd, String sTask, String sFrom){","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"        this.tCommand \u003d cmd;","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sTask);","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sFrom);","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd, String sTask, String sFrom, String sTo){","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"        this.tCommand \u003d cmd;","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sTask);","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sFrom);","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sTo);","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"     * Executing different commands that are input into jabot.","lastModifiedDate":"2023-11-18"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"     * @param tsk list of tasks added.","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"     * @param ui User interface of jabot.","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"     * @param sre to save/load of task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException If sub-methods in task list throw exceptions","lastModifiedDate":"2023-11-18"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"    public void execute(TaskList tsk, Ui ui, Storage sre) throws DukeException{","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"            switch(this.tCommand){","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"                case \"list\":","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"                    tsk.showList();","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"                    tsk.dueTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-18"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"                case \"find\":","lastModifiedDate":"2023-11-18"},{"lineNumber":66,"author":{"gitId":"Jianannl"},"content":"                    if(tValue !\u003d null){","lastModifiedDate":"2023-11-18"},{"lineNumber":67,"author":{"gitId":"Jianannl"},"content":"                        tsk.findTask(tValue);","lastModifiedDate":"2023-11-18"},{"lineNumber":68,"author":{"gitId":"Jianannl"},"content":"                    } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":69,"author":{"gitId":"Jianannl"},"content":"                        tsk.findTask(tDate);","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-18"},{"lineNumber":71,"author":{"gitId":"Jianannl"},"content":"                    tsk.dueTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":72,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"Jianannl"},"content":"                case \"bye\":","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"Jianannl"},"content":"                    this.iExit \u003d true;","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"Jianannl"},"content":"                    ui.sayBye();","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"Jianannl"},"content":"                case \"delete\":","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"Jianannl"},"content":"                    tsk.deleteTask(this.tIndex);","lastModifiedDate":"2023-11-18"},{"lineNumber":79,"author":{"gitId":"Jianannl"},"content":"                    tsk.showNumTask();","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"Jianannl"},"content":"                    tsk.dueTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":81,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Jianannl"},"content":"                case \"mark\":","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"Jianannl"},"content":"                    tsk.markTask(this.tIndex);","lastModifiedDate":"2023-11-18"},{"lineNumber":84,"author":{"gitId":"Jianannl"},"content":"                    tsk.showNumTask();","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"Jianannl"},"content":"                    tsk.dueTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":86,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"Jianannl"},"content":"                case \"unmark\":","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"Jianannl"},"content":"                    tsk.unmarkTask(this.tIndex);","lastModifiedDate":"2023-11-18"},{"lineNumber":89,"author":{"gitId":"Jianannl"},"content":"                    tsk.showNumTask();","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"Jianannl"},"content":"                    tsk.dueTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":91,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"Jianannl"},"content":"                case \"save\":","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"Jianannl"},"content":"                    sre.saveFile(tsk.tempList);","lastModifiedDate":"2023-11-18"},{"lineNumber":94,"author":{"gitId":"Jianannl"},"content":"                    ui.saveMsg();","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"Jianannl"},"content":"                case \"snooze\":","lastModifiedDate":"2023-11-18"},{"lineNumber":97,"author":{"gitId":"Jianannl"},"content":"                    tsk.snoozeTask(this.tIndex);","lastModifiedDate":"2023-11-18"},{"lineNumber":98,"author":{"gitId":"Jianannl"},"content":"                    tsk.dueTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":99,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-18"},{"lineNumber":100,"author":{"gitId":"Jianannl"},"content":"                case \"reschedule\":","lastModifiedDate":"2023-11-18"},{"lineNumber":101,"author":{"gitId":"Jianannl"},"content":"                    tsk.rescheduleTask(this.tIndex);","lastModifiedDate":"2023-11-18"},{"lineNumber":102,"author":{"gitId":"Jianannl"},"content":"                    tsk.dueTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":103,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-18"},{"lineNumber":104,"author":{"gitId":"Jianannl"},"content":"                case \"postpone\":","lastModifiedDate":"2023-11-18"},{"lineNumber":105,"author":{"gitId":"Jianannl"},"content":"                    tsk.postponeTask(this.tIndex);","lastModifiedDate":"2023-11-18"},{"lineNumber":106,"author":{"gitId":"Jianannl"},"content":"                    tsk.dueTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":107,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-18"},{"lineNumber":108,"author":{"gitId":"Jianannl"},"content":"                default:","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"Jianannl"},"content":"                    //assert that tTmp size should be more than or equal to 2,","lastModifiedDate":"2023-11-18"},{"lineNumber":110,"author":{"gitId":"Jianannl"},"content":"                    //if not addTask will not be executed correctly","lastModifiedDate":"2023-11-18"},{"lineNumber":111,"author":{"gitId":"Jianannl"},"content":"                    assert tTmp.size() \u003e\u003d2;","lastModifiedDate":"2023-11-18"},{"lineNumber":112,"author":{"gitId":"Jianannl"},"content":"                    tsk.addTask(tCommand, tTmp);","lastModifiedDate":"2023-11-18"},{"lineNumber":113,"author":{"gitId":"Jianannl"},"content":"                    tsk.showNumTask();","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"Jianannl"},"content":"                    tsk.dueTasks();","lastModifiedDate":"2023-11-18"},{"lineNumber":115,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"Jianannl"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"Jianannl"},"content":"        return this.iExit;","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":122}},{"path":"src/main/java/seedu/jabot/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.data;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.tasks.*;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":" * Represent the list where the tasks need to be added into.","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"public class TaskList {","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"    protected ArrayList\u003cTask\u003e tempList;","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"    protected static int maxTaskNo \u003d 0;","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"    public TaskList(){","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"        this.tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    public TaskList(ArrayList\u003cString\u003e tL) throws DukeException{","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"        toDo tmptoDo;","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        Deadline tmpDeadline;","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"        Event tmpEvent;","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"        ArrayList\u003cString\u003e tdWords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"        tempList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        for(String tLine : tL) {","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"            int i \u003d tLine.indexOf(\"|\");","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"            for (int j \u003d tLine.indexOf(\"|\", i+1); i !\u003d -1; j\u003dtLine.indexOf(\"|\", i+1)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"                if(j \u003d\u003d -1 \u0026\u0026 tLine.contains(\"Status\")){","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"                    if(tLine.contains(\"-\")){","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"                        tdWords.add(tLine.substring(i+2, tLine.indexOf(\"-\")).trim());","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"                        tdWords.add(tLine.substring(tLine.indexOf(\"-\")+1, tLine.indexOf(\"Status\")).trim());","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"                    } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"                        tdWords.add(tLine.substring(i+2, tLine.indexOf(\"Status\")).trim());","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"                    tdWords.add(tLine.substring(tLine.indexOf(\"Status\") + 7).trim());","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"                }else if(j \u003d\u003d -1){","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"                    tdWords.add(tLine.substring(i+2));","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"                else {","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"                    tdWords.add(tLine.substring(i+2, j).trim());","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"                i \u003d j;","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"            switch (tdWords.get(0)){","lastModifiedDate":"2023-11-18"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"                case \"0\":","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"                    if (tLine.startsWith(\"T\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"                        tmptoDo \u003d new toDo(tdWords.get(1));","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"                        tmptoDo.markNotDone();","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"                        tempList.add(tmptoDo);","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"                    } else if (tLine.startsWith(\"D\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"                        tmpDeadline \u003d new Deadline(tdWords.get(1));","lastModifiedDate":"2023-11-18"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"                        tmpDeadline.setBy(tdWords.get(2));","lastModifiedDate":"2023-11-18"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"                        tmpDeadline.markNotDone();","lastModifiedDate":"2023-11-18"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"                        if(tdWords.get(3).equals(\"POSTPONED\")){","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"                            tmpDeadline.postponeDeadline();","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"                        }else{","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"                            tmpDeadline.isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"                        }","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"                        tempList.add(tmpDeadline);","lastModifiedDate":"2023-11-18"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"                    } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"                        tmpEvent \u003d new Event(tdWords.get(1));","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"                        tmpEvent.setFrom(tdWords.get(2));","lastModifiedDate":"2023-11-18"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"                        tmpEvent.setTo(tdWords.get(3));","lastModifiedDate":"2023-11-18"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"                        tmpEvent.markNotDone();","lastModifiedDate":"2023-11-18"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"                        if(tdWords.get(4).equals(\"POSTPONED\")){","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"                            tmpEvent.postponeEvent();","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"Jianannl"},"content":"                        }else{","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"Jianannl"},"content":"                            tmpEvent.isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":68,"author":{"gitId":"Jianannl"},"content":"                        }","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"Jianannl"},"content":"                        tempList.add(tmpEvent);","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"Jianannl"},"content":"                case \"1\":","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"Jianannl"},"content":"                    if (tLine.startsWith(\"T\")) {","lastModifiedDate":"2023-11-18"},{"lineNumber":74,"author":{"gitId":"Jianannl"},"content":"                        tmptoDo \u003d new toDo(tdWords.get(1));","lastModifiedDate":"2023-11-18"},{"lineNumber":75,"author":{"gitId":"Jianannl"},"content":"                        tmptoDo.markAsDone();","lastModifiedDate":"2023-11-18"},{"lineNumber":76,"author":{"gitId":"Jianannl"},"content":"                        tempList.add(tmptoDo);","lastModifiedDate":"2023-11-18"},{"lineNumber":77,"author":{"gitId":"Jianannl"},"content":"                    } else if (tLine.startsWith(\"D\")) {","lastModifiedDate":"2023-11-18"},{"lineNumber":78,"author":{"gitId":"Jianannl"},"content":"                        tmpDeadline \u003d new Deadline(tdWords.get(1));","lastModifiedDate":"2023-11-18"},{"lineNumber":79,"author":{"gitId":"Jianannl"},"content":"                        tmpDeadline.setBy(tdWords.get(2));","lastModifiedDate":"2023-11-18"},{"lineNumber":80,"author":{"gitId":"Jianannl"},"content":"                        tmpDeadline.markAsDone();","lastModifiedDate":"2023-11-18"},{"lineNumber":81,"author":{"gitId":"Jianannl"},"content":"                        if(tdWords.get(3).equals(\"POSTPONED\")){","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"Jianannl"},"content":"                            tmpDeadline.postponeDeadline();","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"Jianannl"},"content":"                        }else{","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"Jianannl"},"content":"                            tmpDeadline.isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":85,"author":{"gitId":"Jianannl"},"content":"                        }","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"Jianannl"},"content":"                        tempList.add(tmpDeadline);","lastModifiedDate":"2023-11-18"},{"lineNumber":87,"author":{"gitId":"Jianannl"},"content":"                    } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":88,"author":{"gitId":"Jianannl"},"content":"                        tmpEvent \u003d new Event(tdWords.get(1));","lastModifiedDate":"2023-11-18"},{"lineNumber":89,"author":{"gitId":"Jianannl"},"content":"                        tmpEvent.setFrom(tdWords.get(2));","lastModifiedDate":"2023-11-18"},{"lineNumber":90,"author":{"gitId":"Jianannl"},"content":"                        tmpEvent.setTo(tdWords.get(3));","lastModifiedDate":"2023-11-18"},{"lineNumber":91,"author":{"gitId":"Jianannl"},"content":"                        tmpEvent.markAsDone();","lastModifiedDate":"2023-11-18"},{"lineNumber":92,"author":{"gitId":"Jianannl"},"content":"                        if(tdWords.get(4).equals(\"POSTPONED\")){","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"Jianannl"},"content":"                            tmpEvent.postponeEvent();","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"Jianannl"},"content":"                        }else{","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"Jianannl"},"content":"                            tmpEvent.isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":96,"author":{"gitId":"Jianannl"},"content":"                        }","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"Jianannl"},"content":"                        tempList.add(tmpEvent);","lastModifiedDate":"2023-11-18"},{"lineNumber":98,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-18"},{"lineNumber":99,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-18"},{"lineNumber":100,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"Jianannl"},"content":"            maxTaskNo++;","lastModifiedDate":"2023-11-18"},{"lineNumber":102,"author":{"gitId":"Jianannl"},"content":"            tdWords.clear();","lastModifiedDate":"2023-11-04"},{"lineNumber":103,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"Jianannl"},"content":"     * To add different tasks into the task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"Jianannl"},"content":"     * @param cmd command input by user.","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"Jianannl"},"content":"     * @param taskData Array list of parameters needed for the task.","lastModifiedDate":"2023-11-18"},{"lineNumber":111,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException when underlying method throws the same Exception.","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"Jianannl"},"content":"    public void addTask(String cmd, ArrayList\u003cString\u003e taskData) throws DukeException{","lastModifiedDate":"2023-11-18"},{"lineNumber":114,"author":{"gitId":"Jianannl"},"content":"        switch(cmd) {","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"Jianannl"},"content":"            case \"todo\":","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"Jianannl"},"content":"                this.tempList.add(new toDo(taskData.get(0)));","lastModifiedDate":"2023-11-18"},{"lineNumber":117,"author":{"gitId":"Jianannl"},"content":"                break;","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"Jianannl"},"content":"            case \"deadline\":","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"Jianannl"},"content":"                Deadline tDeadline \u003d new Deadline(taskData.get(0));","lastModifiedDate":"2023-11-18"},{"lineNumber":120,"author":{"gitId":"Jianannl"},"content":"                tDeadline.setBy(taskData.get(1));","lastModifiedDate":"2023-11-18"},{"lineNumber":121,"author":{"gitId":"Jianannl"},"content":"                tDeadline.isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":122,"author":{"gitId":"Jianannl"},"content":"                this.tempList.add(tDeadline);","lastModifiedDate":"2023-11-18"},{"lineNumber":123,"author":{"gitId":"Jianannl"},"content":"                break;","lastModifiedDate":"2023-11-04"},{"lineNumber":124,"author":{"gitId":"Jianannl"},"content":"            case \"event\":","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"Jianannl"},"content":"                Event tEvent \u003d new Event(taskData.get(0));","lastModifiedDate":"2023-11-18"},{"lineNumber":126,"author":{"gitId":"Jianannl"},"content":"                tEvent.setFrom(taskData.get(1));","lastModifiedDate":"2023-11-18"},{"lineNumber":127,"author":{"gitId":"Jianannl"},"content":"                tEvent.setTo(taskData.get(2));","lastModifiedDate":"2023-11-18"},{"lineNumber":128,"author":{"gitId":"Jianannl"},"content":"                tEvent.isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":129,"author":{"gitId":"Jianannl"},"content":"                tempList.add(tEvent);","lastModifiedDate":"2023-11-18"},{"lineNumber":130,"author":{"gitId":"Jianannl"},"content":"                break;","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":132,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \" + System.lineSeparator() + this.tempList.get(maxTaskNo) + System.lineSeparator());","lastModifiedDate":"2023-11-18"},{"lineNumber":133,"author":{"gitId":"Jianannl"},"content":"        maxTaskNo++;","lastModifiedDate":"2023-11-18"},{"lineNumber":134,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":135,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":137,"author":{"gitId":"Jianannl"},"content":"     * To delete tasks into the task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":138,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":139,"author":{"gitId":"Jianannl"},"content":"     * @param index the task no shown in the list displayed.","lastModifiedDate":"2023-11-18"},{"lineNumber":140,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":141,"author":{"gitId":"Jianannl"},"content":"    public void deleteTask(int index) throws DukeException{","lastModifiedDate":"2023-11-18"},{"lineNumber":142,"author":{"gitId":"Jianannl"},"content":"        try{","lastModifiedDate":"2023-11-18"},{"lineNumber":143,"author":{"gitId":"Jianannl"},"content":"            if (this.tempList.isEmpty()){","lastModifiedDate":"2023-11-18"},{"lineNumber":144,"author":{"gitId":"Jianannl"},"content":"                throw new DukeException(\"No task in the list!\");","lastModifiedDate":"2023-11-18"},{"lineNumber":145,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":146,"author":{"gitId":"Jianannl"},"content":"                this.tempList.remove(index);","lastModifiedDate":"2023-11-18"},{"lineNumber":147,"author":{"gitId":"Jianannl"},"content":"                maxTaskNo--;","lastModifiedDate":"2023-11-18"},{"lineNumber":148,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":149,"author":{"gitId":"Jianannl"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":150,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Task number does not exist! Please try again!\" + System.lineSeparator());","lastModifiedDate":"2023-11-18"},{"lineNumber":151,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":152,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":153,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":154,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":155,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":156,"author":{"gitId":"Jianannl"},"content":"     * To mark tasks into the task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":157,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":158,"author":{"gitId":"Jianannl"},"content":"     * @param index the task no shown in the list displayed.","lastModifiedDate":"2023-11-18"},{"lineNumber":159,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":160,"author":{"gitId":"Jianannl"},"content":"    public void markTask(int index) throws DukeException{","lastModifiedDate":"2023-11-18"},{"lineNumber":161,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":162,"author":{"gitId":"Jianannl"},"content":"            boolean aDeadline \u003d this.tempList.get(index) instanceof Deadline;","lastModifiedDate":"2023-11-18"},{"lineNumber":163,"author":{"gitId":"Jianannl"},"content":"            boolean anEvent \u003d this.tempList.get(index) instanceof Event;","lastModifiedDate":"2023-11-18"},{"lineNumber":164,"author":{"gitId":"Jianannl"},"content":"            if (this.tempList.isEmpty()){","lastModifiedDate":"2023-11-18"},{"lineNumber":165,"author":{"gitId":"Jianannl"},"content":"                throw new DukeException(\"No task in the list!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":166,"author":{"gitId":"Jianannl"},"content":"            } else if(this.tempList.get(index).getStatusIcon().equals(\"X\")){","lastModifiedDate":"2023-11-19"},{"lineNumber":167,"author":{"gitId":"Jianannl"},"content":"                System.out.println(\"Task is already marked as done!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":168,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":169,"author":{"gitId":"Jianannl"},"content":"                this.tempList.get(index).markAsDone();","lastModifiedDate":"2023-11-18"},{"lineNumber":170,"author":{"gitId":"Jianannl"},"content":"                if (aDeadline){","lastModifiedDate":"2023-11-18"},{"lineNumber":171,"author":{"gitId":"Jianannl"},"content":"                    ((Deadline) this.tempList.get(index)).isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":172,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":173,"author":{"gitId":"Jianannl"},"content":"                if(anEvent){","lastModifiedDate":"2023-11-18"},{"lineNumber":174,"author":{"gitId":"Jianannl"},"content":"                    ((Event) this.tempList.get(index)).isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":175,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":176,"author":{"gitId":"Jianannl"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + this.tempList.get(index) + System.lineSeparator());","lastModifiedDate":"2023-11-18"},{"lineNumber":177,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":178,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":179,"author":{"gitId":"Jianannl"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":180,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Task number does not exist! Please try again!\" + System.lineSeparator());","lastModifiedDate":"2023-11-18"},{"lineNumber":181,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":182,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":183,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":184,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":185,"author":{"gitId":"Jianannl"},"content":"     * To unmark tasks into the task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":186,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":187,"author":{"gitId":"Jianannl"},"content":"     * @param index the task no shown in the list displayed.","lastModifiedDate":"2023-11-18"},{"lineNumber":188,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":189,"author":{"gitId":"Jianannl"},"content":"    public void unmarkTask(int index) throws DukeException{","lastModifiedDate":"2023-11-18"},{"lineNumber":190,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":191,"author":{"gitId":"Jianannl"},"content":"            boolean aDeadline \u003d this.tempList.get(index) instanceof Deadline;","lastModifiedDate":"2023-11-18"},{"lineNumber":192,"author":{"gitId":"Jianannl"},"content":"            boolean anEvent \u003d this.tempList.get(index) instanceof Event;","lastModifiedDate":"2023-11-18"},{"lineNumber":193,"author":{"gitId":"Jianannl"},"content":"            if (this.tempList.isEmpty()){","lastModifiedDate":"2023-11-18"},{"lineNumber":194,"author":{"gitId":"Jianannl"},"content":"                throw new DukeException(\"No task in the list!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":195,"author":{"gitId":"Jianannl"},"content":"            } else if(this.tempList.get(index).getStatusIcon().equals(\" \")){","lastModifiedDate":"2023-11-19"},{"lineNumber":196,"author":{"gitId":"Jianannl"},"content":"              System.out.println(\"Task is not marked as done! Cannot unmark task.\");","lastModifiedDate":"2023-11-19"},{"lineNumber":197,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":198,"author":{"gitId":"Jianannl"},"content":"                this.tempList.get(index).markNotDone();","lastModifiedDate":"2023-11-18"},{"lineNumber":199,"author":{"gitId":"Jianannl"},"content":"                if (aDeadline){","lastModifiedDate":"2023-11-18"},{"lineNumber":200,"author":{"gitId":"Jianannl"},"content":"                    ((Deadline) this.tempList.get(index)).isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":201,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":202,"author":{"gitId":"Jianannl"},"content":"                if(anEvent){","lastModifiedDate":"2023-11-18"},{"lineNumber":203,"author":{"gitId":"Jianannl"},"content":"                    ((Event) this.tempList.get(index)).isDue();","lastModifiedDate":"2023-11-18"},{"lineNumber":204,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":205,"author":{"gitId":"Jianannl"},"content":"                System.out.println(\"OK, I\u0027ve unmarked this task as not done yet:\" + System.lineSeparator() + this.tempList.get(index) + System.lineSeparator());","lastModifiedDate":"2023-11-18"},{"lineNumber":206,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":207,"author":{"gitId":"Jianannl"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":208,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Task number does not exist! Please try again!\" + System.lineSeparator());","lastModifiedDate":"2023-11-18"},{"lineNumber":209,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":210,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":211,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":212,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":213,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":214,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":215,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":216,"author":{"gitId":"Jianannl"},"content":"     * To display tasks added into task list as a list.","lastModifiedDate":"2023-11-04"},{"lineNumber":217,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":218,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException throw exception if the list is empty.","lastModifiedDate":"2023-11-04"},{"lineNumber":219,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":220,"author":{"gitId":"Jianannl"},"content":"    public void showList() throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":221,"author":{"gitId":"Jianannl"},"content":"        if (this.tempList.isEmpty()) {","lastModifiedDate":"2023-11-18"},{"lineNumber":222,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"No task in the list!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":223,"author":{"gitId":"Jianannl"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":224,"author":{"gitId":"Jianannl"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-11-04"},{"lineNumber":225,"author":{"gitId":"Jianannl"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-11-04"},{"lineNumber":226,"author":{"gitId":"Jianannl"},"content":"            for (Task task : this.tempList) {","lastModifiedDate":"2023-11-18"},{"lineNumber":227,"author":{"gitId":"Jianannl"},"content":"                System.out.println(i + \".\" + task);","lastModifiedDate":"2023-11-04"},{"lineNumber":228,"author":{"gitId":"Jianannl"},"content":"                i++;","lastModifiedDate":"2023-11-04"},{"lineNumber":229,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":230,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":231,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":232,"author":{"gitId":"Jianannl"},"content":"    public void findTask(Object taskFind){","lastModifiedDate":"2023-11-18"},{"lineNumber":233,"author":{"gitId":"Jianannl"},"content":"        int lNo \u003d 1;","lastModifiedDate":"2023-11-18"},{"lineNumber":234,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"List of Tasks found with this specified statement:\");","lastModifiedDate":"2023-11-18"},{"lineNumber":235,"author":{"gitId":"Jianannl"},"content":"        if(taskFind instanceof String){","lastModifiedDate":"2023-11-18"},{"lineNumber":236,"author":{"gitId":"Jianannl"},"content":"            String checkW \u003d (String) taskFind;","lastModifiedDate":"2023-11-18"},{"lineNumber":237,"author":{"gitId":"Jianannl"},"content":"            for(Task checkT : this.tempList){","lastModifiedDate":"2023-11-18"},{"lineNumber":238,"author":{"gitId":"Jianannl"},"content":"                if(checkT instanceof toDo \u0026\u0026 ((toDo) checkT).checkDescription(checkW)){","lastModifiedDate":"2023-11-18"},{"lineNumber":239,"author":{"gitId":"Jianannl"},"content":"                    System.out.println(lNo + \".\" + checkT);","lastModifiedDate":"2023-11-18"},{"lineNumber":240,"author":{"gitId":"Jianannl"},"content":"                } else if(checkT instanceof Deadline \u0026\u0026 ((Deadline) checkT).checkDescription(checkW)){","lastModifiedDate":"2023-11-18"},{"lineNumber":241,"author":{"gitId":"Jianannl"},"content":"                    System.out.println(lNo + \".\" + checkT);","lastModifiedDate":"2023-11-18"},{"lineNumber":242,"author":{"gitId":"Jianannl"},"content":"                } else if(checkT instanceof Event \u0026\u0026 ((Event) checkT).checkDescription(checkW)){","lastModifiedDate":"2023-11-18"},{"lineNumber":243,"author":{"gitId":"Jianannl"},"content":"                    System.out.println(lNo + \".\" + checkT);","lastModifiedDate":"2023-11-18"},{"lineNumber":244,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":245,"author":{"gitId":"Jianannl"},"content":"                lNo++;","lastModifiedDate":"2023-11-18"},{"lineNumber":246,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":247,"author":{"gitId":"Jianannl"},"content":"        } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":248,"author":{"gitId":"Jianannl"},"content":"            LocalDate checkD \u003d (LocalDate) taskFind;","lastModifiedDate":"2023-11-18"},{"lineNumber":249,"author":{"gitId":"Jianannl"},"content":"            for(Task checkT : this.tempList){","lastModifiedDate":"2023-11-18"},{"lineNumber":250,"author":{"gitId":"Jianannl"},"content":"                if(checkT instanceof Deadline \u0026\u0026 checkT.checkDate(((Deadline) checkT).getBy(), checkD)){","lastModifiedDate":"2023-11-18"},{"lineNumber":251,"author":{"gitId":"Jianannl"},"content":"                    System.out.println(lNo + \".\" + checkT);","lastModifiedDate":"2023-11-18"},{"lineNumber":252,"author":{"gitId":"Jianannl"},"content":"                } else if(checkT instanceof Event){","lastModifiedDate":"2023-11-18"},{"lineNumber":253,"author":{"gitId":"Jianannl"},"content":"                    boolean cFrom \u003d checkT.checkDate(((Event) checkT).getEventFrom(), checkD);","lastModifiedDate":"2023-11-18"},{"lineNumber":254,"author":{"gitId":"Jianannl"},"content":"                    boolean cTo \u003d checkT.checkDate(((Event) checkT).getEventTo(), checkD);","lastModifiedDate":"2023-11-18"},{"lineNumber":255,"author":{"gitId":"Jianannl"},"content":"                    if(cFrom || cTo){","lastModifiedDate":"2023-11-18"},{"lineNumber":256,"author":{"gitId":"Jianannl"},"content":"                        System.out.println(lNo + \".\" + checkT);","lastModifiedDate":"2023-11-18"},{"lineNumber":257,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-18"},{"lineNumber":258,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":259,"author":{"gitId":"Jianannl"},"content":"                lNo++;","lastModifiedDate":"2023-11-18"},{"lineNumber":260,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":261,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":262,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":263,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":264,"author":{"gitId":"Jianannl"},"content":"    public void dueTasks(){","lastModifiedDate":"2023-11-18"},{"lineNumber":265,"author":{"gitId":"Jianannl"},"content":"        int dueTaskNum \u003d 0;","lastModifiedDate":"2023-11-18"},{"lineNumber":266,"author":{"gitId":"Jianannl"},"content":"        for (Task task : this.tempList){","lastModifiedDate":"2023-11-18"},{"lineNumber":267,"author":{"gitId":"Jianannl"},"content":"            if (task instanceof Deadline \u0026\u0026 ((Deadline) task).isDue()){","lastModifiedDate":"2023-11-18"},{"lineNumber":268,"author":{"gitId":"Jianannl"},"content":"                dueTaskNum++;","lastModifiedDate":"2023-11-18"},{"lineNumber":269,"author":{"gitId":"Jianannl"},"content":"            } else if (task instanceof Event \u0026\u0026 ((Event) task).isDue()){","lastModifiedDate":"2023-11-18"},{"lineNumber":270,"author":{"gitId":"Jianannl"},"content":"                dueTaskNum++;","lastModifiedDate":"2023-11-18"},{"lineNumber":271,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":272,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":273,"author":{"gitId":"Jianannl"},"content":"        if(dueTaskNum \u003e 0) {","lastModifiedDate":"2023-11-18"},{"lineNumber":274,"author":{"gitId":"Jianannl"},"content":"            System.out.println(\"There are \" + dueTaskNum + \" tasks that is due.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":275,"author":{"gitId":"Jianannl"},"content":"            System.out.println(\"please use snooze/reschedule/postpone along with task number according to the list to set another date\");","lastModifiedDate":"2023-11-18"},{"lineNumber":276,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":277,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":278,"author":{"gitId":"Jianannl"},"content":"    public void snoozeTask(int index) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":279,"author":{"gitId":"Jianannl"},"content":"        try{","lastModifiedDate":"2023-11-19"},{"lineNumber":280,"author":{"gitId":"Jianannl"},"content":"            boolean ifDeadline \u003d tempList.get(index) instanceof Deadline;","lastModifiedDate":"2023-11-18"},{"lineNumber":281,"author":{"gitId":"Jianannl"},"content":"            boolean ifEvent \u003d tempList.get(index) instanceof Event;","lastModifiedDate":"2023-11-18"},{"lineNumber":282,"author":{"gitId":"Jianannl"},"content":"            if(ifDeadline){","lastModifiedDate":"2023-11-18"},{"lineNumber":283,"author":{"gitId":"Jianannl"},"content":"                LocalDateTime datetimeBy \u003d (LocalDateTime) ((Deadline) tempList.get(index)).getBy();","lastModifiedDate":"2023-11-18"},{"lineNumber":284,"author":{"gitId":"Jianannl"},"content":"                ((Deadline) tempList.get(index)).setBy(datetimeBy.plusDays(7));","lastModifiedDate":"2023-11-18"},{"lineNumber":285,"author":{"gitId":"Jianannl"},"content":"                System.out.println(\"Deadline snoozed for 7 days!\");","lastModifiedDate":"2023-11-18"},{"lineNumber":286,"author":{"gitId":"Jianannl"},"content":"            } else if (ifEvent){","lastModifiedDate":"2023-11-18"},{"lineNumber":287,"author":{"gitId":"Jianannl"},"content":"                LocalDateTime datetimeFrom \u003d (LocalDateTime) ((Event) tempList.get(index)).getEventFrom();","lastModifiedDate":"2023-11-18"},{"lineNumber":288,"author":{"gitId":"Jianannl"},"content":"                LocalDateTime datetimeTo \u003d (LocalDateTime) ((Event) tempList.get(index)).getEventTo();","lastModifiedDate":"2023-11-18"},{"lineNumber":289,"author":{"gitId":"Jianannl"},"content":"                ((Event) tempList.get(index)).setFrom(datetimeFrom.plusDays(7));","lastModifiedDate":"2023-11-18"},{"lineNumber":290,"author":{"gitId":"Jianannl"},"content":"                ((Event) tempList.get(index)).setTo(datetimeTo.plusDays(7));","lastModifiedDate":"2023-11-18"},{"lineNumber":291,"author":{"gitId":"Jianannl"},"content":"                System.out.println(\"Event snoozed for 7 days!\");","lastModifiedDate":"2023-11-18"},{"lineNumber":292,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":293,"author":{"gitId":"Jianannl"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-11-19"},{"lineNumber":294,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Task number does not exist! Please try again!\" + System.lineSeparator());","lastModifiedDate":"2023-11-19"},{"lineNumber":295,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":296,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":297,"author":{"gitId":"Jianannl"},"content":"    public void postponeTask(int index) throws DukeException{","lastModifiedDate":"2023-11-19"},{"lineNumber":298,"author":{"gitId":"Jianannl"},"content":"        try{","lastModifiedDate":"2023-11-19"},{"lineNumber":299,"author":{"gitId":"Jianannl"},"content":"            boolean ifDeadline \u003d tempList.get(index) instanceof Deadline;","lastModifiedDate":"2023-11-18"},{"lineNumber":300,"author":{"gitId":"Jianannl"},"content":"            boolean ifEvent \u003d tempList.get(index) instanceof Event;","lastModifiedDate":"2023-11-18"},{"lineNumber":301,"author":{"gitId":"Jianannl"},"content":"            if(ifDeadline){","lastModifiedDate":"2023-11-18"},{"lineNumber":302,"author":{"gitId":"Jianannl"},"content":"                ((Deadline) tempList.get(index)).postponeDeadline();","lastModifiedDate":"2023-11-18"},{"lineNumber":303,"author":{"gitId":"Jianannl"},"content":"                System.out.println(\"Deadline postponed!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":304,"author":{"gitId":"Jianannl"},"content":"            } else if(ifEvent){","lastModifiedDate":"2023-11-18"},{"lineNumber":305,"author":{"gitId":"Jianannl"},"content":"                ((Event) tempList.get(index)).postponeEvent();","lastModifiedDate":"2023-11-18"},{"lineNumber":306,"author":{"gitId":"Jianannl"},"content":"                System.out.println(\"Event postponed!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":307,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":308,"author":{"gitId":"Jianannl"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-11-19"},{"lineNumber":309,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Task number does not exist! Please try again!\" + System.lineSeparator());","lastModifiedDate":"2023-11-19"},{"lineNumber":310,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":311,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":312,"author":{"gitId":"Jianannl"},"content":"    public void rescheduleTask(int index) throws DukeException{","lastModifiedDate":"2023-11-18"},{"lineNumber":313,"author":{"gitId":"Jianannl"},"content":"        try{","lastModifiedDate":"2023-11-19"},{"lineNumber":314,"author":{"gitId":"Jianannl"},"content":"            boolean isDeadline \u003d tempList.get(index) instanceof Deadline;","lastModifiedDate":"2023-11-18"},{"lineNumber":315,"author":{"gitId":"Jianannl"},"content":"            boolean isEvent \u003d tempList.get(index) instanceof Event;","lastModifiedDate":"2023-11-18"},{"lineNumber":316,"author":{"gitId":"Jianannl"},"content":"            if(isDeadline){","lastModifiedDate":"2023-11-18"},{"lineNumber":317,"author":{"gitId":"Jianannl"},"content":"                ((Deadline) tempList.get(index)).rescheduleDeadline();","lastModifiedDate":"2023-11-18"},{"lineNumber":318,"author":{"gitId":"Jianannl"},"content":"            } else if(isEvent){","lastModifiedDate":"2023-11-18"},{"lineNumber":319,"author":{"gitId":"Jianannl"},"content":"                ((Event) tempList.get(index)).rescheduleEvent();","lastModifiedDate":"2023-11-18"},{"lineNumber":320,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":321,"author":{"gitId":"Jianannl"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-11-19"},{"lineNumber":322,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Task number does not exist! Please try again!\" + System.lineSeparator());","lastModifiedDate":"2023-11-19"},{"lineNumber":323,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":324,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":325,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":326,"author":{"gitId":"Jianannl"},"content":"     * To print max no of tasks in the list when doing specific input commands.","lastModifiedDate":"2023-11-04"},{"lineNumber":327,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":328,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":329,"author":{"gitId":"Jianannl"},"content":"    public void showNumTask(){","lastModifiedDate":"2023-11-04"},{"lineNumber":330,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Now you have \" + maxTaskNo + \" tasks in the list.\" + System.lineSeparator());","lastModifiedDate":"2023-11-18"},{"lineNumber":331,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":332,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":333,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":333}},{"path":"src/main/java/seedu/jabot/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.exceptions;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"    public DukeException(String Msg){","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"        super(Msg);","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":6}},{"path":"src/main/java/seedu/jabot/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.util.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":" * Represent a task which is a deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object is represented","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":" * by the description of the task and the date to complete the task. e.g. \u003ccode\u003edeadline, today\u003c/code\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"    protected Object by;","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"    protected String due \u003d \"NA\";","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    public Deadline(String description) {","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"        super(description);","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    public void setBy(Object deadlineDate) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        if(deadlineDate instanceof LocalDateTime) {","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"            this.by \u003d deadlineDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"        } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"            this.by \u003d setDate((String) deadlineDate);","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"    public Object getBy() {","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"        return this.by;","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"    public boolean checkDescription(String word){","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"        return this.description.contains(word);","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"    public void postponeDeadline(){","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"        this.due \u003d \"POSTPONED\";","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"    public void rescheduleDeadline() throws DukeException{","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Please set Deadline: \");","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"        String rescheduleBy \u003d ui.readCommand();","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"        this.by \u003d setDate(rescheduleBy);","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Deadline postponed to \" + formatToString(this.by));","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"    public boolean isDue(){","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"        LocalDateTime timeNow \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-18"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"        boolean dateTime \u003d this.by instanceof LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"        boolean done \u003d this.isDone;","lastModifiedDate":"2023-11-18"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"        if(this.due.equals(\"POSTPONED\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"            return false;","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"        } else if(dateTime \u0026\u0026 !done){","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"            if(((LocalDateTime) this.by).isBefore(timeNow)){","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"                this.due \u003d \"DUE\";","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"                return true;","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"                this.due \u003d \"NOT DUE\";","lastModifiedDate":"2023-11-18"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"        return false;","lastModifiedDate":"2023-11-18"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"     * Formatting of additional information on the deadline to be saved into a file.","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"    public String toSave() {","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"        String tmpString \u003d formatToString(this.by);","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"        return \"D | \" + super.toSave() + \" | \" + tmpString + \" Status: \" + this.due;","lastModifiedDate":"2023-11-18"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"     * Formatting to show a deadline task in a list.","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Jianannl"},"content":"    @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"Jianannl"},"content":"    public String toString() {","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"Jianannl"},"content":"        String tString \u003d formatToString(this.by);","lastModifiedDate":"2023-11-18"},{"lineNumber":69,"author":{"gitId":"Jianannl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + tString + \")\" + \" Status: \" + this.due;","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":71}},{"path":"src/main/java/seedu/jabot/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.util.Ui;","lastModifiedDate":"2023-11-18"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":" * Represent a task which is an event. An \u003ccode\u003eEvent\u003c/code\u003e object is represented","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":" * by the description of the task and the date period of the event. e.g. \u003ccode\u003eevent, today, tomorrow\u003c/code\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"public class Event extends Task{","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"    protected Object eFrom;","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"    protected Object eTo;","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"    protected String due \u003d \"NA\";","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    private final Ui ui \u003d new Ui();","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    public Event(String description){","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"        super(description);","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    public void setFrom(Object from) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        boolean dateFrom \u003d from instanceof LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"        boolean stringFrom \u003d from instanceof String;","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        if(dateFrom){","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"            this.eFrom \u003d from;","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"        } else if(stringFrom){","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"            this.eFrom \u003d setDate((String) from);","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"    public void setTo(Object to) throws DukeException{","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"        boolean datetimeFrom \u003d this.eFrom instanceof LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"        boolean dateTo \u003d to instanceof LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"        boolean stringTo \u003d to instanceof String;","lastModifiedDate":"2023-11-18"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"        //Object to and eFrom should be in this three instance","lastModifiedDate":"2023-11-18"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"        assert (datetimeFrom || dateTo || stringTo);","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"        if(dateTo){","lastModifiedDate":"2023-11-18"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"            if(datetimeFrom \u0026\u0026 checkDatePeriod((LocalDateTime) this.eFrom, (LocalDateTime) to)){","lastModifiedDate":"2023-11-18"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"                this.eTo \u003d to;","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"                throw new DukeException(\"To date should be after from date! Please try again.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"        } else if (stringTo \u0026\u0026 setDate((String) to) instanceof LocalDateTime){","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"            if(datetimeFrom \u0026\u0026 checkDatePeriod((LocalDateTime) this.eFrom, (LocalDateTime) setDate((String) to))){","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"                this.eTo \u003d setDate((String) to);","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"                throw new DukeException(\"To date should be after from date! Please try again.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"            this.eTo \u003d setDate((String) to);","lastModifiedDate":"2023-11-18"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"    public Object getEventFrom() {","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"        return eFrom;","lastModifiedDate":"2023-11-18"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"    public Object getEventTo() {","lastModifiedDate":"2023-11-18"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"        return eTo;","lastModifiedDate":"2023-11-18"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"    public boolean checkDescription(String word){","lastModifiedDate":"2023-11-18"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"        return this.description.contains(word);","lastModifiedDate":"2023-11-18"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"    public boolean isDue(){","lastModifiedDate":"2023-11-18"},{"lineNumber":66,"author":{"gitId":"Jianannl"},"content":"        LocalDateTime timeNow \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-18"},{"lineNumber":67,"author":{"gitId":"Jianannl"},"content":"        boolean dateTime \u003d this.eFrom instanceof LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":68,"author":{"gitId":"Jianannl"},"content":"        boolean done \u003d this.isDone;","lastModifiedDate":"2023-11-18"},{"lineNumber":69,"author":{"gitId":"Jianannl"},"content":"        if(this.due.equals(\"POSTPONED\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"Jianannl"},"content":"            return false;","lastModifiedDate":"2023-11-18"},{"lineNumber":71,"author":{"gitId":"Jianannl"},"content":"        } else if(dateTime \u0026\u0026 !done){","lastModifiedDate":"2023-11-18"},{"lineNumber":72,"author":{"gitId":"Jianannl"},"content":"            if(((LocalDateTime) this.eFrom).isBefore(timeNow)){","lastModifiedDate":"2023-11-18"},{"lineNumber":73,"author":{"gitId":"Jianannl"},"content":"                this.due \u003d \"DUE\";","lastModifiedDate":"2023-11-18"},{"lineNumber":74,"author":{"gitId":"Jianannl"},"content":"                return true;","lastModifiedDate":"2023-11-18"},{"lineNumber":75,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":76,"author":{"gitId":"Jianannl"},"content":"                this.due \u003d \"NOT DUE\";","lastModifiedDate":"2023-11-18"},{"lineNumber":77,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":78,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":79,"author":{"gitId":"Jianannl"},"content":"        return false;","lastModifiedDate":"2023-11-18"},{"lineNumber":80,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":81,"author":{"gitId":"Jianannl"},"content":"    public void postponeEvent(){","lastModifiedDate":"2023-11-18"},{"lineNumber":82,"author":{"gitId":"Jianannl"},"content":"        this.due \u003d \"POSTPONED\";","lastModifiedDate":"2023-11-18"},{"lineNumber":83,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":84,"author":{"gitId":"Jianannl"},"content":"    public void rescheduleEvent() throws DukeException{","lastModifiedDate":"2023-11-18"},{"lineNumber":85,"author":{"gitId":"Jianannl"},"content":"        boolean checkFrom;","lastModifiedDate":"2023-11-18"},{"lineNumber":86,"author":{"gitId":"Jianannl"},"content":"        boolean checkTo;","lastModifiedDate":"2023-11-18"},{"lineNumber":87,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Please set new Event from date: \");","lastModifiedDate":"2023-11-18"},{"lineNumber":88,"author":{"gitId":"Jianannl"},"content":"        String rescheduleFrom \u003d ui.readCommand();","lastModifiedDate":"2023-11-18"},{"lineNumber":89,"author":{"gitId":"Jianannl"},"content":"        this.eFrom \u003d setDate(rescheduleFrom);","lastModifiedDate":"2023-11-18"},{"lineNumber":90,"author":{"gitId":"Jianannl"},"content":"        checkFrom \u003d this.eFrom instanceof LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":91,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Please set new Event to date: \");","lastModifiedDate":"2023-11-18"},{"lineNumber":92,"author":{"gitId":"Jianannl"},"content":"        String rescheduleTo \u003d ui.readCommand();","lastModifiedDate":"2023-11-18"},{"lineNumber":93,"author":{"gitId":"Jianannl"},"content":"        this.eTo \u003d setDate(rescheduleTo);","lastModifiedDate":"2023-11-18"},{"lineNumber":94,"author":{"gitId":"Jianannl"},"content":"        checkTo \u003d this.eTo instanceof LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":95,"author":{"gitId":"Jianannl"},"content":"        while((checkFrom \u0026\u0026 checkTo) \u0026\u0026 !(checkDatePeriod((LocalDateTime) this.eFrom, (LocalDateTime) this.eTo))){","lastModifiedDate":"2023-11-18"},{"lineNumber":96,"author":{"gitId":"Jianannl"},"content":"            System.out.println(\"To date should be after from date! Please key again.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":97,"author":{"gitId":"Jianannl"},"content":"            rescheduleTo \u003d ui.readCommand();","lastModifiedDate":"2023-11-18"},{"lineNumber":98,"author":{"gitId":"Jianannl"},"content":"            this.eTo \u003d setDate(rescheduleTo);","lastModifiedDate":"2023-11-18"},{"lineNumber":99,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":100,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Event has been rescheduled to \" + formatToString(this.eFrom) + \"-\" + formatToString(this.eTo));","lastModifiedDate":"2023-11-18"},{"lineNumber":101,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":102,"author":{"gitId":"Jianannl"},"content":"    public boolean checkDatePeriod(LocalDateTime start, LocalDateTime end){","lastModifiedDate":"2023-11-18"},{"lineNumber":103,"author":{"gitId":"Jianannl"},"content":"        return start.isBefore(end);","lastModifiedDate":"2023-11-18"},{"lineNumber":104,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":105,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"Jianannl"},"content":"     * Formatting of additional information on the event to be saved into a file.","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"Jianannl"},"content":"    public String toSave() {","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"Jianannl"},"content":"        String stringFrom \u003d formatToString(this.eFrom);","lastModifiedDate":"2023-11-18"},{"lineNumber":110,"author":{"gitId":"Jianannl"},"content":"        String stringTo \u003d formatToString(this.eTo);","lastModifiedDate":"2023-11-18"},{"lineNumber":111,"author":{"gitId":"Jianannl"},"content":"        return \"E | \" + super.toSave() + \" | \" + stringFrom + \" - \" + stringTo + \" Status: \" + this.due;","lastModifiedDate":"2023-11-18"},{"lineNumber":112,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"Jianannl"},"content":"     * Formatting to show an event task in a list.","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"Jianannl"},"content":"    public String toString(){","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"Jianannl"},"content":"        String strFrom \u003d formatToString(this.eFrom);","lastModifiedDate":"2023-11-18"},{"lineNumber":119,"author":{"gitId":"Jianannl"},"content":"        String strTo \u003d formatToString(this.eTo);","lastModifiedDate":"2023-11-18"},{"lineNumber":120,"author":{"gitId":"Jianannl"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + strFrom + \" to: \" + strTo + \")\" + \" Status: \" + this.due;","lastModifiedDate":"2023-11-18"},{"lineNumber":121,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":122}},{"path":"src/main/java/seedu/jabot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-18"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-18"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-18"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-11-18"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-18"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":" * Represent a task. A \u003ccode\u003eTask\u003c/code\u003e object is represented","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":" * by the description of the task and whether it is done or not.","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"public class Task {","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    protected String description;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"    public Task(String description) {","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"     * To get the status of whether a task is done or not.","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"     * To mark a task as done.","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"     * To mark a task as not done.","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"    public void markNotDone(){","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"     * To format the data of a task to be saved into a file.","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"    public String toSave(){","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"        String SI;","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"        if(this.getStatusIcon().equals(\"X\")){","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"            SI \u003d \"1\";","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"        } else{","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"            SI \u003d \"0\";","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"        return SI + \" | \" + this.description;","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"    public Object setDate(String aDate) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"        DateTimeFormatter dtFormatter;","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"        String dateTM \u003d \"\\\\d{2}[-/\\\\s]?(\\\\d{2}|[a-zA-Z]{3})[-/\\\\s]?\\\\d{4} \\\\d{2}[:\\\\s]?\\\\d{2}(AM|PM)?\";","lastModifiedDate":"2023-11-18"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"        Pattern dTpattern \u003d Pattern.compile(dateTM);","lastModifiedDate":"2023-11-18"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"        Matcher dTMatch \u003d dTpattern.matcher(aDate);","lastModifiedDate":"2023-11-18"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-18"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"            if (dTMatch.matches()) {","lastModifiedDate":"2023-11-18"},{"lineNumber":66,"author":{"gitId":"Jianannl"},"content":"                if (aDate.indexOf(\u0027:\u0027) \u003d\u003d -1) {","lastModifiedDate":"2023-11-18"},{"lineNumber":67,"author":{"gitId":"Jianannl"},"content":"                    switch (aDate.charAt(2)) {","lastModifiedDate":"2023-11-18"},{"lineNumber":68,"author":{"gitId":"Jianannl"},"content":"                        case \u0027/\u0027:","lastModifiedDate":"2023-11-18"},{"lineNumber":69,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-18"},{"lineNumber":71,"author":{"gitId":"Jianannl"},"content":"                        case \u0027-\u0027:","lastModifiedDate":"2023-11-18"},{"lineNumber":72,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-11-18"},{"lineNumber":73,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-18"},{"lineNumber":74,"author":{"gitId":"Jianannl"},"content":"                        case \u0027 \u0027:","lastModifiedDate":"2023-11-18"},{"lineNumber":75,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmma\");","lastModifiedDate":"2023-11-18"},{"lineNumber":76,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-18"},{"lineNumber":77,"author":{"gitId":"Jianannl"},"content":"                        default:","lastModifiedDate":"2023-11-18"},{"lineNumber":78,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HHmm\");","lastModifiedDate":"2023-11-18"},{"lineNumber":79,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-18"},{"lineNumber":80,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-18"},{"lineNumber":81,"author":{"gitId":"Jianannl"},"content":"                } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":82,"author":{"gitId":"Jianannl"},"content":"                    switch (aDate.charAt(2)) {","lastModifiedDate":"2023-11-18"},{"lineNumber":83,"author":{"gitId":"Jianannl"},"content":"                        case \u0027/\u0027:","lastModifiedDate":"2023-11-18"},{"lineNumber":84,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-11-18"},{"lineNumber":85,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-18"},{"lineNumber":86,"author":{"gitId":"Jianannl"},"content":"                        case \u0027-\u0027:","lastModifiedDate":"2023-11-18"},{"lineNumber":87,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-11-18"},{"lineNumber":88,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-18"},{"lineNumber":89,"author":{"gitId":"Jianannl"},"content":"                        case \u0027 \u0027:","lastModifiedDate":"2023-11-18"},{"lineNumber":90,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mma\");","lastModifiedDate":"2023-11-18"},{"lineNumber":91,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-18"},{"lineNumber":92,"author":{"gitId":"Jianannl"},"content":"                        default:","lastModifiedDate":"2023-11-18"},{"lineNumber":93,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\");","lastModifiedDate":"2023-11-18"},{"lineNumber":94,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-18"},{"lineNumber":95,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-18"},{"lineNumber":96,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":97,"author":{"gitId":"Jianannl"},"content":"                return LocalDateTime.parse(aDate, dtFormatter);","lastModifiedDate":"2023-11-18"},{"lineNumber":98,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":99,"author":{"gitId":"Jianannl"},"content":"                return aDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":100,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-18"},{"lineNumber":101,"author":{"gitId":"Jianannl"},"content":"        } catch (DateTimeParseException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":102,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Invalid date-time format! Please input date-time in the format of dd/MM/yyyy HH:mm(24hr format)\");","lastModifiedDate":"2023-11-18"},{"lineNumber":103,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":104,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":105,"author":{"gitId":"Jianannl"},"content":"    public boolean checkDate(Object dateToCheck, LocalDate date){","lastModifiedDate":"2023-11-18"},{"lineNumber":106,"author":{"gitId":"Jianannl"},"content":"        if(dateToCheck instanceof LocalDateTime){","lastModifiedDate":"2023-11-18"},{"lineNumber":107,"author":{"gitId":"Jianannl"},"content":"            return ((LocalDateTime) dateToCheck).toLocalDate().isEqual(date);","lastModifiedDate":"2023-11-18"},{"lineNumber":108,"author":{"gitId":"Jianannl"},"content":"        } else {","lastModifiedDate":"2023-11-18"},{"lineNumber":109,"author":{"gitId":"Jianannl"},"content":"            return false;","lastModifiedDate":"2023-11-18"},{"lineNumber":110,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":111,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":112,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"Jianannl"},"content":"    public String formatToString(Object taskD){","lastModifiedDate":"2023-11-18"},{"lineNumber":114,"author":{"gitId":"Jianannl"},"content":"        LocalDateTime tDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":115,"author":{"gitId":"Jianannl"},"content":"        String tString \u003d null;","lastModifiedDate":"2023-11-18"},{"lineNumber":116,"author":{"gitId":"Jianannl"},"content":"        if(taskD instanceof LocalDateTime){","lastModifiedDate":"2023-11-18"},{"lineNumber":117,"author":{"gitId":"Jianannl"},"content":"            tDate \u003d (LocalDateTime) taskD;","lastModifiedDate":"2023-11-18"},{"lineNumber":118,"author":{"gitId":"Jianannl"},"content":"            tString \u003d tDate.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mma\"));","lastModifiedDate":"2023-11-18"},{"lineNumber":119,"author":{"gitId":"Jianannl"},"content":"        } else if(taskD instanceof String){","lastModifiedDate":"2023-11-18"},{"lineNumber":120,"author":{"gitId":"Jianannl"},"content":"            tString \u003d (String) taskD;","lastModifiedDate":"2023-11-18"},{"lineNumber":121,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":122,"author":{"gitId":"Jianannl"},"content":"        return tString;","lastModifiedDate":"2023-11-18"},{"lineNumber":123,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":124,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"Jianannl"},"content":"     * To change how the information of the task should be output in a list","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":127,"author":{"gitId":"Jianannl"},"content":"    public String toString(){","lastModifiedDate":"2023-11-04"},{"lineNumber":128,"author":{"gitId":"Jianannl"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":131}},{"path":"src/main/java/seedu/jabot/tasks/toDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":" * Represent a task which needs to be done. A \u003ccode\u003etoDo\u003c/code\u003e object is represented","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":" * by the description of the task. e.g. \u003ccode\u003ecleaning\u003c/code\u003e","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"public class toDo extends Task {","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"    public toDo(String description){","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"        super(description);","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"    public boolean checkDescription(String word){","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"        return this.description.contains(word);","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"     * Formatting of additional information on the toDos to be saved into a file.","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    public String toSave(){","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"        return \"T | \" + super.toSave();","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"     * Formatting to show the todo task in a list.","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"    public String toString(){","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":27}},{"path":"src/main/java/seedu/jabot/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.util;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.data.Command;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":" * Represent an underlying component to transform the inputs by the user to","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":" * useful data to run to operations. A \u003ccode\u003eParser\u003c/code\u003e object is not represented by anything.","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":" * Mainly methods to transform the data.","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"public class Parser {","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    protected Command c;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    public Parser(){}","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"     * Transforming user inputs into key data for other methods.","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"     * @param sLine inputs keyed by the users.","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"     * @return useful inputs split to perform various operations.","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException if task number is invalid or when the input commands are incorrect.","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"    public Command parse(String sLine) throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"        try{","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"            if (sLine.trim().equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"list\");","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"bye\");","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().equalsIgnoreCase(\"save\")){","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"save\");","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"            else if (sLine.trim().toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"                int tNum \u003d Integer.parseInt(sLine.substring(sLine.indexOf(\"mark\") + 5));","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"mark\", tNum - 1);","lastModifiedDate":"2023-11-18"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"                int tNum \u003d Integer.parseInt(sLine.substring(sLine.indexOf(\"unmark\") + 7));","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"unmark\", tNum- 1);","lastModifiedDate":"2023-11-18"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"snooze\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"                int tNum \u003d Integer.parseInt(sLine.substring(sLine.indexOf(\"snooze\") + 7));","lastModifiedDate":"2023-11-18"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"snooze\", tNum - 1);","lastModifiedDate":"2023-11-18"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"reschedule\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"                int tNum \u003d Integer.parseInt(sLine.substring(sLine.indexOf(\"reschedule\") + 11));","lastModifiedDate":"2023-11-18"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"reschedule\", tNum - 1);","lastModifiedDate":"2023-11-18"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"postpone\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"                int tNum \u003d Integer.parseInt(sLine.substring(sLine.indexOf(\"postpone\") + 9));","lastModifiedDate":"2023-11-18"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"postpone\", tNum- 1);","lastModifiedDate":"2023-11-18"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"                String tdTask \u003d sLine.substring(sLine.indexOf(\"todo\") + 5).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"                if (tdTask.isBlank()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"                    throw new DukeException(\"No todo specified! Please input a todo.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"todo\", tdTask);","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"                String dTask \u003d sLine.substring(sLine.indexOf(\"deadline\") + 9, sLine.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"                String dDate \u003d sLine.substring(sLine.indexOf(\"/by\") + 4).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"                if (dTask.isBlank() || dDate.isBlank()) {","lastModifiedDate":"2023-11-18"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"                    throw new DukeException(\"No deadline or date specified! Please try again.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"deadline\", dTask, (dDate));","lastModifiedDate":"2023-11-18"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"                String etTask \u003d sLine.substring(sLine.indexOf(\"event\") + 6, sLine.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"                String etFrom \u003d sLine.substring(sLine.indexOf(\"/from\") + 6, sLine.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Jianannl"},"content":"                String etTo \u003d sLine.substring(sLine.indexOf(\"/to\") + 4).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"Jianannl"},"content":"                if(etTask.isBlank() || etFrom.isBlank() || etTo.isBlank()){","lastModifiedDate":"2023-11-18"},{"lineNumber":68,"author":{"gitId":"Jianannl"},"content":"                    throw new DukeException(\"No event or date specified! Please try again.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":69,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":70,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"event\", etTask, (etFrom), (etTo));","lastModifiedDate":"2023-11-18"},{"lineNumber":71,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"Jianannl"},"content":"                int tNum \u003d Integer.parseInt(sLine.substring(sLine.indexOf(\"delete\") + 7));","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"delete\", tNum-1);","lastModifiedDate":"2023-11-18"},{"lineNumber":75,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"find\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":76,"author":{"gitId":"Jianannl"},"content":"                String fTask \u003d sLine.substring(sLine.indexOf(\"find\") + 4).trim();","lastModifiedDate":"2023-11-18"},{"lineNumber":77,"author":{"gitId":"Jianannl"},"content":"                if(fTask.startsWith(\"/date\")){","lastModifiedDate":"2023-11-18"},{"lineNumber":78,"author":{"gitId":"Jianannl"},"content":"                    fTask \u003d fTask.substring(fTask.indexOf(\"/date\") + 5).trim();","lastModifiedDate":"2023-11-18"},{"lineNumber":79,"author":{"gitId":"Jianannl"},"content":"                    LocalDate tmpD \u003d convertDate(fTask);","lastModifiedDate":"2023-11-18"},{"lineNumber":80,"author":{"gitId":"Jianannl"},"content":"                    this.c \u003d new Command(\"find\", tmpD);","lastModifiedDate":"2023-11-18"},{"lineNumber":81,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":82,"author":{"gitId":"Jianannl"},"content":"                else {","lastModifiedDate":"2023-11-18"},{"lineNumber":83,"author":{"gitId":"Jianannl"},"content":"                    this.c \u003d new Command(\"find\", fTask);","lastModifiedDate":"2023-11-18"},{"lineNumber":84,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-18"},{"lineNumber":85,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"Jianannl"},"content":"                throw new DukeException(\"Pardon? I do not understand your input. Please try again\" + System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"Jianannl"},"content":"            return this.c;","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"Jianannl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Invalid Input! please key in a number.\" + System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"Jianannl"},"content":"        } catch (IndexOutOfBoundsException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":92,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Invalid Input! Please key in a correct input.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":93,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":97,"author":{"gitId":"Jianannl"},"content":"    public LocalDate convertDate(String aDate) throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":98,"author":{"gitId":"Jianannl"},"content":"        DateTimeFormatter dtFormatter;","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"Jianannl"},"content":"            switch (aDate.charAt(2)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"Jianannl"},"content":"                case \u0027/\u0027:","lastModifiedDate":"2023-11-04"},{"lineNumber":102,"author":{"gitId":"Jianannl"},"content":"                    dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy\");","lastModifiedDate":"2023-11-18"},{"lineNumber":103,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"Jianannl"},"content":"                case \u0027-\u0027:","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"Jianannl"},"content":"                    dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy\");","lastModifiedDate":"2023-11-18"},{"lineNumber":106,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"Jianannl"},"content":"                default:","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"Jianannl"},"content":"                    dtFormatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy\");","lastModifiedDate":"2023-11-18"},{"lineNumber":109,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"Jianannl"},"content":"            return LocalDate.parse(aDate, dtFormatter);","lastModifiedDate":"2023-11-18"},{"lineNumber":112,"author":{"gitId":"Jianannl"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Invalid date format! Please input date-time in the format of dd/MM/yyyy (24hr format)\");","lastModifiedDate":"2023-11-18"},{"lineNumber":114,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":116}},{"path":"src/main/java/seedu/jabot/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.util;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.tasks.Task;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import java.io.File;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":" * Represent the file path where the file with the list needs to be","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":" * saved/load from","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"public class Storage {","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    protected File sF;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    protected FileWriter wF;","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    protected Scanner scanF;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    public Storage(String filePath){","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        this.sF \u003d new File(filePath);","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"     * To save the list of task into a file at a file path.","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"     * @param aT the list of tasks.","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException when IOException is catch.","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"    public void saveFile(ArrayList\u003cTask\u003e aT) throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"            if(!this.sF.exists()){","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"                this.sF.createNewFile();","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"                System.out.println(\"File did not exist! A new file named Task.txt was created on the desktop.\");","lastModifiedDate":"2023-11-18"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"            this.wF \u003d new FileWriter(this.sF);","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"            for (Task task : aT) {","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"                String tFormat \u003d task.toSave();","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"                this.wF.write(tFormat);","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"                this.wF.write(System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"            this.wF.flush();","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"            this.wF.close();","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"File error! Unable to save.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"     * To load the list of task that was saved to the file path.","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"     * @return list of tasks loaded from the file path","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException when IOException is catch.","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"    public ArrayList\u003cString\u003e loadFile() throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"        ArrayList\u003cString\u003e tAL \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"            this.scanF \u003d new Scanner(this.sF);","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"            while (this.scanF.hasNext()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"                tAL.add(this.scanF.nextLine());","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"            return tAL;","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"No file to load!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":65}},{"path":"src/main/java/seedu/jabot/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.util;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":" * Represent the user interface to show messages and read inputs","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"public class Ui {","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"    protected String logo \u003d \" _____   _____   _____    _____   ______\\n\"","lastModifiedDate":"2023-11-18"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"            + \"|___  | /  _  \\\\ |  _  \\\\  /     \\\\ |_    _|\\n\"","lastModifiedDate":"2023-11-18"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"            + \" _  | | | |_| | |  _  / /  / \\\\  \\\\  |  |   \\n\"","lastModifiedDate":"2023-11-18"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"            + \"| |_| | |  _  | |  _  \\\\ \\\\  \\\\ /  /  |  |  \\n\"","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"            + \"|____/  |_| |_| |_____/  \\\\_____/   |__|   \\n\";","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    protected String dividerL \u003d \"________________________________________\";","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    protected Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    protected String Line;","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    public Ui(){}","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"     * To load the welcome screen.","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"    public void welcomeScreen(){","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        System.out.println(System.lineSeparator() + logo);","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Hello! I\u0027m JABOT\" + System.lineSeparator() + \"What can I do for you?\" + System.lineSeparator());","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"     * To show a divider on every command and reply from jabot.","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"    public void showLine(){","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"        System.out.println(dividerL + System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"     * To show error msg when jabot encounter problem.","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"     * @param errMsg the message related to the error","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"    public void showError(String errMsg){","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"        System.out.println(errMsg);","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"    public String readCommand(){","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"        this.Line \u003d this.in.nextLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"        return this.Line;","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"     * To show message when exiting jabot.","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"    public void sayBye(){","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"     * To show saving message when saving.","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"    public void saveMsg(){","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Saved. You\u0027re good to go! (FYI, task.txt is in desktop folder~)\");","lastModifiedDate":"2023-11-18"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":59}},{"path":"src/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"T | 0 | cleaning","lastModifiedDate":"2023-11-18"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"E | 0 | school holiday | 05 Dec 2023 08:00AM - 10 Dec 2023 23:59PM Status: NOT DUE","lastModifiedDate":"2023-11-18"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"D | 0 | assignment | Sunday Status: NA","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"D | 0 | assignment | 19 Nov 2023 23:59PM Status: NOT DUE","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"E | 0 | happy event! | 23 Nov 2023 00:00AM - 25 Nov 2023 23:59PM Status: NOT DUE","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"D | 0 | project work | 25 Nov 2023 23:59PM Status: POSTPONED","lastModifiedDate":"2023-11-18"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"E | 0 | super party | 22 Nov 2023 12:00PM - 23 Nov 2023 13:00PM Status: POSTPONED","lastModifiedDate":"2023-11-18"}],"authorContributionMap":{"Jianannl":7}},{"path":"src/test/java/seedu/jabot/data/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.data;","lastModifiedDate":"2023-11-18"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.tasks.toDo;","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.tasks.Deadline;","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.tasks.Event;","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-18"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-18"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-11-18"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-18"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"public class TaskListTest {","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"    protected ArrayList\u003cString\u003e inputLine \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    @Test","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    public void TaskList_testLoadingTasks() throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"        inputLine.add(\"T | 0 | cleaning\");","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"        inputLine.add(\"D | 1 | wash up | afternoon Status: NA\");","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        inputLine.add(\"E | 0 | super party | 23 Nov 2023 00:00AM - 25 Nov 2023 23:59PM Status: NOT DUE\");","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"        TaskList testTaskList \u003d new TaskList(inputLine);","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"        //check task created correctly as toDo","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"        assertTrue(testTaskList.tempList.get(0) instanceof toDo );","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        //check task created correctly as Deadline","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"        assertTrue(testTaskList.tempList.get(1) instanceof Deadline );","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"        //check task created correctly as Event","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"        assertTrue(testTaskList.tempList.get(2) instanceof Event );","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"        //check size of task list is equal to the number of task added","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"        assertEquals(3,testTaskList.tempList.size());","lastModifiedDate":"2023-11-18"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-18"}],"authorContributionMap":{"Jianannl":30}},{"path":"src/test/java/seedu/jabot/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.util;","lastModifiedDate":"2023-11-18"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-18"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-18"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-18"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2023-11-18"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"public class ParserTest {","lastModifiedDate":"2023-11-18"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"    @Test","lastModifiedDate":"2023-11-18"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"    public void convertDate_testReturnValue() throws DukeException {","lastModifiedDate":"2023-11-18"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"        //check converting string to localDate in ddmmyyyy","lastModifiedDate":"2023-11-18"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"        assertNotNull(new Parser().convertDate(\"20112023\"));","lastModifiedDate":"2023-11-18"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"        //check converting string to localDate in dd-mm-yyyy","lastModifiedDate":"2023-11-18"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"        assertNotNull(new Parser().convertDate(\"20-11-2023\"));","lastModifiedDate":"2023-11-18"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"        //check converting string to localDate in dd/mm/yyyy","lastModifiedDate":"2023-11-18"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"        assertNotNull(new Parser().convertDate(\"20/11/2023\"));","lastModifiedDate":"2023-11-18"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    @Test","lastModifiedDate":"2023-11-18"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"    public void convertDate_testThrowException(){","lastModifiedDate":"2023-11-18"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"        try{","lastModifiedDate":"2023-11-18"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"            //inputting random number in date format and test if exception is thrown","lastModifiedDate":"2023-11-18"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"            new Parser().convertDate(\"50789999\");","lastModifiedDate":"2023-11-18"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        } catch(DukeException e){","lastModifiedDate":"2023-11-18"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"            assertEquals(\"Invalid date format! Please input date-time in the format of dd/MM/yyyy (24hr format)\", e.getMessage());","lastModifiedDate":"2023-11-18"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-18"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-18"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-18"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-18"}],"authorContributionMap":{"Jianannl":28}}]
