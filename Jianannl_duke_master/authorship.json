[{"path":"src/main/java/seedu/jabot/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.data.*;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.util.*;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":" * Represent the initialisation of jabot","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e make up of the file path to load the saved","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":" * task list. e.g. \u003ccode\u003eC:/duke\u003c/code\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"public class Duke {","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"    private Storage storage;","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"    private TaskList tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    private Ui ui;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    private Parser Parser;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"        ui \u003d new Ui();","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"            tasks \u003d new TaskList(storage.loadFile());","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"            ui.showError(e.getMessage());","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"            tasks \u003d new TaskList();","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"     * Executing the jabot using the class and methods created.","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"    public void run() {","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"        ui.welcomeScreen();","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"        Parser \u003d new Parser();","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"        storage \u003d new Storage(\"C:/Users/leej32/Documents/duke/src/main/java/seedu/jabot/tasks.txt\");","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"        while (!isExit) {","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"            try {","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"                String fullCommand \u003d ui.readCommand();","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"                ui.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"                c.execute(tasks, ui, storage);","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"                ui.showError(e.getMessage());","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"            } finally {","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"                ui.showLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"     * To invoke the run method","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"        new Duke(\"C:/Users/leej32/Documents/duke/src/main/java/seedu/jabot/tasks.txt\").run();","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":57}},{"path":"src/main/java/seedu/jabot/data/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.data;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.util.*;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":" * Represent the input commands keyed by users","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":" * which was processed by the parser. A \u003ccode\u003eCommand\u003c/code\u003e make up of","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":" * the specifc commands and the data needed to do the specific operation.","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":" * e.g. \u003ccode\u003etodo, running\u003c/code\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"public class Command {","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"    protected String tComd;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    protected int tInd;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    protected ArrayList\u003cString\u003e tTmp \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    protected boolean iExit \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd){","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        this.tComd \u003d cmd;","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd, int ind){","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"        this.tComd \u003d cmd;","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        this.tInd \u003d ind;","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd, String sTask){","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"        this.tComd \u003d cmd;","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sTask);","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd, String sTask, String sFrom){","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"        this.tComd \u003d cmd;","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sTask);","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sFrom);","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"    public Command(String cmd, String sTask, String sFrom, String sTo){","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"        this.tComd \u003d cmd;","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sTask);","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sFrom);","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"        this.tTmp.add(sTo);","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"     * Executing different commands input into jabot.","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"     * @param tsk list of tasks added.","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"     * @param ui User interface of jabot.","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"     * @param sre to save/load of task list.","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"     * @return nothing. It is to execute the different command methods for the tasks.","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"     * @throws IllegalArgumentException If zone is \u003c\u003d 0.","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"    public void execute(TaskList tsk, Ui ui, Storage sre) throws DukeException{","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"            switch(this.tComd){","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"                case \"list\":","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"                    tsk.showList();","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"                case \"bye\":","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"                    this.iExit \u003d true;","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"                    ui.sayBye();","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"                case \"delete\":","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"                    tsk.delTask(tInd);","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"                    tsk.showNumTask();","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"                case \"mark\":","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"                    tsk.markTask(tInd);","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"                    tsk.showNumTask();","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"Jianannl"},"content":"                case \"unmark\":","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"Jianannl"},"content":"                    tsk.unmarkTask(tInd);","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"Jianannl"},"content":"                    tsk.showNumTask();","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Jianannl"},"content":"                case \"save\":","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"Jianannl"},"content":"                    sre.saveFile(tsk.tList);","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"Jianannl"},"content":"                    ui.saveMsg();","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"Jianannl"},"content":"                default:","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"Jianannl"},"content":"                    tsk.addTask(tComd, tTmp);","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"Jianannl"},"content":"                    tsk.showNumTask();","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Jianannl"},"content":"    public boolean isExit(){","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"Jianannl"},"content":"        return this.iExit;","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":85}},{"path":"src/main/java/seedu/jabot/data/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.data;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.tasks.*;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":" * Represent the list where the tasks need to be added into.","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"public class TaskList {","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"    protected ArrayList\u003cTask\u003e tList;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"    protected static int maxTno \u003d 0;","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"    public TaskList(){","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"        this.tList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    public TaskList(ArrayList\u003cString\u003e tL) throws DukeException{","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"        Task tmpT;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"        ArrayList\u003cString\u003e tdWords \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        tList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"        for(String tLine : tL) {","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"            int i \u003d tLine.indexOf(\"|\");","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"            for (int j \u003d tLine.indexOf(\"|\", i+1); i !\u003d -1; j\u003dtLine.indexOf(\"|\", i+1)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"                if(j \u003d\u003d -1){","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"                    if(tLine.contains(\"-\")){","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"                        tdWords.add(tLine.substring(i+1, tLine.indexOf(\"-\")).trim());","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"                        tdWords.add(tLine.substring(tLine.indexOf(\"-\")+1).trim());","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"                    } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"                        tdWords.add(tLine.substring(i+1).trim());","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"                } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"                    tdWords.add(tLine.substring(i+1, j).trim());","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"                i \u003d j;","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"            if (tLine.startsWith(\"T\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"                tmpT \u003d new toDo(tdWords.get(1));","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"            } else if (tLine.startsWith(\"D\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"                tmpT \u003d new Deadline(tdWords.get(1), tdWords.get(2));","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"                tmpT \u003d new Event(tdWords.get(1), tdWords.get(2), tdWords.get(3));","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"            switch (tdWords.get(0)){","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"                case \"0\":","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"                    tmpT.markNotDone();","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"                    break;","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"                case \"1\":","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"                    tmpT.markAsDone();","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"            tList.add(tmpT);","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"            maxTno++;","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"            tdWords.clear();","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"     * To add different tasks into the tasklist.","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"     * @param cmd command input by user.","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"     * @param a Array list of parameters needed for the task.","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException when underlying method throws the same Exception.","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"    public void addTask(String cmd, ArrayList\u003cString\u003e a) throws DukeException{","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"        switch(cmd) {","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"            case \"todo\":","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"                this.tList.add(new toDo(a.get(0)));","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Jianannl"},"content":"                break;","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"Jianannl"},"content":"            case \"deadline\":","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"Jianannl"},"content":"                this.tList.add(new Deadline(a.get(0), a.get(1)));","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"Jianannl"},"content":"                break;","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"Jianannl"},"content":"            case \"event\":","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Jianannl"},"content":"                this.tList.add(new Event(a.get(0), a.get(1), a.get(2)));","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"Jianannl"},"content":"                break;","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Got it. I\u0027ve added this task: \" + System.lineSeparator() + this.tList.get(maxTno));","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"Jianannl"},"content":"        maxTno++;","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"Jianannl"},"content":"     * To delete tasks into the tasklist.","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"Jianannl"},"content":"     * @param ind the task no shown in the list displayed.","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"Jianannl"},"content":"    public void delTask(int ind){","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"Jianannl"},"content":"        this.tList.remove(ind);","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"Jianannl"},"content":"        maxTno--;","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"Jianannl"},"content":"     * To mark tasks into the tasklist.","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"Jianannl"},"content":"     * @param ind the task no shown in the list displayed.","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"Jianannl"},"content":"    public void markTask(int ind) throws DukeException{","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"Jianannl"},"content":"        if (this.tList.isEmpty()){","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"No task in the list!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"Jianannl"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":97,"author":{"gitId":"Jianannl"},"content":"            this.tList.get(ind - 1).markAsDone();","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"Jianannl"},"content":"            System.out.println(\"Nice! I\u0027ve marked this task as done:\" + System.lineSeparator() + this.tList.get(ind - 1) + System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":102,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":103,"author":{"gitId":"Jianannl"},"content":"     * To unmark tasks into the tasklist.","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"Jianannl"},"content":"     * @param ind the task no shown in the list displayed.","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"Jianannl"},"content":"    public void unmarkTask(int ind) throws DukeException{","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"Jianannl"},"content":"        if (this.tList.isEmpty()){","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"No task in the list!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"Jianannl"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"Jianannl"},"content":"            this.tList.get(ind - 1).markNotDone();","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"Jianannl"},"content":"            System.out.println(\"OK, I\u0027ve unmarked this task as not done yet:\" + System.lineSeparator() + this.tList.get(ind - 1) + System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"Jianannl"},"content":"     * To display tasks added into tasklist as a list.","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException throw exception if the list is empty.","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"Jianannl"},"content":"    public void showList() throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"Jianannl"},"content":"        if (this.tList.isEmpty()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"No task in the list!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":124,"author":{"gitId":"Jianannl"},"content":"        } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"Jianannl"},"content":"            System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-11-04"},{"lineNumber":126,"author":{"gitId":"Jianannl"},"content":"            int i \u003d 1;","lastModifiedDate":"2023-11-04"},{"lineNumber":127,"author":{"gitId":"Jianannl"},"content":"            for (Task task : this.tList) {","lastModifiedDate":"2023-11-04"},{"lineNumber":128,"author":{"gitId":"Jianannl"},"content":"                System.out.println(i + \".\" + task);","lastModifiedDate":"2023-11-04"},{"lineNumber":129,"author":{"gitId":"Jianannl"},"content":"                i++;","lastModifiedDate":"2023-11-04"},{"lineNumber":130,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":131,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":132,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":133,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":134,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":135,"author":{"gitId":"Jianannl"},"content":"     * To print max no of tasks in the list when doing specific input commands.","lastModifiedDate":"2023-11-04"},{"lineNumber":136,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":137,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":138,"author":{"gitId":"Jianannl"},"content":"    public void showNumTask(){","lastModifiedDate":"2023-11-04"},{"lineNumber":139,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Now you have \" + maxTno + \" tasks in the list.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":140,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":141,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":142,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":142}},{"path":"src/main/java/seedu/jabot/exceptions/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.exceptions;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"public class DukeException extends Exception {","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"    public DukeException(String Msg){","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"        super(Msg);","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":6}},{"path":"src/main/java/seedu/jabot/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"T | 0 | cleaning","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"D | 1 | cleaning | 1","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"T | 0 | cleaning","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"D | 1 | cleaning | never","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"E | 1 | cleaning | today-tomorrow","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"E | 1 | tidying | 4pm-8pm","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"E | 1 | running | 20 Apr 2023, 18:00PM-21 Apr 2023, 18:20PM","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":7}},{"path":"src/main/java/seedu/jabot/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":" * Represent a task which is a deadline. A \u003ccode\u003eDeadline\u003c/code\u003e object is represented","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":" * by the description of the task and the date to complete the task. e.g. \u003ccode\u003edeadline, today\u003c/code\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"    protected String by;","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"    public Deadline(String description, String by) throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"        super(description);","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"     * Formatting of additional information on the deadline to be saved into a file.","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"    public String toSave(){","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"        return \"D | \" + super.toSave() + \" | \" + by;","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"     * Formatting to show a deadline task in a list.","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"    @Override","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"    public String toString() {","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":31}},{"path":"src/main/java/seedu/jabot/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":" * Represent a task which is an event. An \u003ccode\u003eEvent\u003c/code\u003e object is represented","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":" * by the description of the task and the date period of the event. e.g. \u003ccode\u003eevent, today, tomorrow\u003c/code\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"public class Event extends Task{","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"    protected String eFrom;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"    protected String eTo;","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"    public Event(String description, String from, String to){","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"        super(description);","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"        this.eFrom \u003d from;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"        this.eTo \u003d to;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"     * Formatting of additional information on the event to be saved into a file.","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"    public String toSave(){","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"        return \"E | \" + super.toSave() + \" | \" + this.eFrom + \" - \" + this.eTo;","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"     * Formatting to show an event task in a list.","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"    public String toString(){","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + this.eFrom + \" to: \" + this.eTo + \")\";","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":31}},{"path":"src/main/java/seedu/jabot/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":" * Represent a task. A \u003ccode\u003eTask\u003c/code\u003e object is represented","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":" * by the description of the task and whether it is done or not.","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"public class Task {","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"    protected String description;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"    public Task(String description) {","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"     * To get the status of whether a task is done or not.","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"        return (isDone ? \"X\" : \" \"); // mark done task with X","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"     * To mark a task as done.","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"    public void markAsDone() {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"        this.isDone \u003d true;","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"     * To mark a task as not done.","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"    public void markNotDone(){","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"     * To format the data of a task to be saved into a file.","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"    public String toSave(){","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"        String SI;","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"        if(this.getStatusIcon().equals(\"X\")){","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"            SI \u003d \"1\";","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"        } else{","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"            SI \u003d \"0\";","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"        return SI + \" | \" + this.description;","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"     * To change how the information of the task should be output in a list","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"    public String toString(){","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"        return \"[\" + this.getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":58}},{"path":"src/main/java/seedu/jabot/tasks/toDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.tasks;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":" * Represent a task which needs to be done. A \u003ccode\u003etoDo\u003c/code\u003e object is represented","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":" * by the description of the task. e.g. \u003ccode\u003etoDo\u003c/code\u003e","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"public class toDo extends Task {","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"    public toDo(String description){","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"        super(description);","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"     * Formatting of additional information on the toDos to be saved into a file.","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    public String toSave(){","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"        return \"T | \" + super.toSave();","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"     * Formatting to show the todo task in a list.","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"    public String toString(){","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":25}},{"path":"src/main/java/seedu/jabot/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.util;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.data.Command;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":" * Represent an underlying component to transform the inputs by the user to","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":" * useful data to run to operations. A \u003ccode\u003eParser\u003c/code\u003e object is not represented by anything.","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":" * Mainly methods to transform the data.","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"public class Parser {","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    protected Command c;","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    public Parser(){}","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"     * Transforming user inputs into key data for other methods.","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"     * @param sLine inputs keyed by the users.","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"     * @return useful inputs split to perform various operations.","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException if task number is invalid or when the input commands are incorrect.","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"    public Command parse(String sLine) throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"        try{","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"            if (sLine.trim().equalsIgnoreCase(\"list\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"list\");","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"bye\");","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().equalsIgnoreCase(\"save\")){","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"                this.c \u003d new Command(\"save\");","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"            else if (sLine.trim().toLowerCase().startsWith(\"mark\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"                    int tNum \u003d Integer.parseInt(sLine.substring(sLine.indexOf(\"mark\") + 5));","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"                    this.c \u003d new Command(\"mark\", tNum);","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"unmark\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"                    int tNum \u003d Integer.parseInt(sLine.substring(sLine.indexOf(\"unmark\") + 7));","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"                    this.c \u003d new Command(\"unmark\", tNum);","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"todo\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"                    String tdTask \u003d sLine.substring(sLine.indexOf(\"todo\") + 5).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"                    if (tdTask.isBlank()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"                        throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"                    this.c \u003d new Command(\"todo\", tdTask);","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"deadline\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"                    String dTask \u003d sLine.substring(sLine.indexOf(\"deadline\") + 9, sLine.indexOf(\"/by\")).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"                    String dDate \u003d sLine.substring(sLine.indexOf(\"/by\") + 4).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"                    if (dTask.isBlank()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"                        throw new IndexOutOfBoundsException();","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"                    this.c \u003d new Command(\"deadline\", dTask, checkForDate(dDate));","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"event\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"                    String etTask \u003d sLine.substring(sLine.indexOf(\"event\") + 6, sLine.indexOf(\"/from\")).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"                    String etFrom \u003d sLine.substring(sLine.indexOf(\"/from\") + 6, sLine.indexOf(\"/to\")).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"                    String etTo \u003d sLine.substring(sLine.indexOf(\"/to\") + 4).trim();","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"                    this.c \u003d new Command(\"event\", etTask, checkForDate(etFrom), checkForDate(etTo));","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"            } else if (sLine.trim().toLowerCase().startsWith(\"delete\")) {","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"                    int tNum \u003d Integer.parseInt(sLine.substring(sLine.indexOf(\"delete\") + 7));","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"                    this.c \u003d new Command(\"delete\", tNum);","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":66,"author":{"gitId":"Jianannl"},"content":"                    throw new DukeException(\"Pardon? I do not understand your input. Please try again\" + System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":67,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":68,"author":{"gitId":"Jianannl"},"content":"            return this.c;","lastModifiedDate":"2023-11-04"},{"lineNumber":69,"author":{"gitId":"Jianannl"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":70,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Oh No! No or invalid Command specified.\" + System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":71,"author":{"gitId":"Jianannl"},"content":"        } catch (NumberFormatException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":72,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Invalid Input! please key in a number.\" + System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":73,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":74,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":75,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":76,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":77,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":78,"author":{"gitId":"Jianannl"},"content":"     * Format date inputs into another date-time format.","lastModifiedDate":"2023-11-04"},{"lineNumber":79,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":80,"author":{"gitId":"Jianannl"},"content":"     * @param aDate inputs keyed by the users.","lastModifiedDate":"2023-11-04"},{"lineNumber":81,"author":{"gitId":"Jianannl"},"content":"     * @return date-time in dd MM yyyy HH:mm AM/PM format","lastModifiedDate":"2023-11-04"},{"lineNumber":82,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException if input date is not in a valid format.","lastModifiedDate":"2023-11-04"},{"lineNumber":83,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":84,"author":{"gitId":"Jianannl"},"content":"    public String checkForDate(String aDate) throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":85,"author":{"gitId":"Jianannl"},"content":"        DateTimeFormatter dtFormatter;","lastModifiedDate":"2023-11-04"},{"lineNumber":86,"author":{"gitId":"Jianannl"},"content":"        String dateTM \u003d \"(\\\\d{2}[-/\\\\s]?){2}\\\\d{4} \\\\d{2}[:\\\\s]?\\\\d{2}\";","lastModifiedDate":"2023-11-04"},{"lineNumber":87,"author":{"gitId":"Jianannl"},"content":"        Pattern dTPatt \u003d Pattern.compile(dateTM);","lastModifiedDate":"2023-11-04"},{"lineNumber":88,"author":{"gitId":"Jianannl"},"content":"        Matcher dTMatch \u003d dTPatt.matcher(aDate);","lastModifiedDate":"2023-11-04"},{"lineNumber":89,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":90,"author":{"gitId":"Jianannl"},"content":"            if (dTMatch.matches()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":91,"author":{"gitId":"Jianannl"},"content":"                if(aDate.indexOf(\u0027:\u0027) \u003d\u003d -1){","lastModifiedDate":"2023-11-04"},{"lineNumber":92,"author":{"gitId":"Jianannl"},"content":"                    switch (aDate.charAt(2)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":93,"author":{"gitId":"Jianannl"},"content":"                        case \u0027/\u0027:","lastModifiedDate":"2023-11-04"},{"lineNumber":94,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HHmm\");","lastModifiedDate":"2023-11-04"},{"lineNumber":95,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-04"},{"lineNumber":96,"author":{"gitId":"Jianannl"},"content":"                        case \u0027-\u0027:","lastModifiedDate":"2023-11-04"},{"lineNumber":97,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");","lastModifiedDate":"2023-11-04"},{"lineNumber":98,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-04"},{"lineNumber":99,"author":{"gitId":"Jianannl"},"content":"                        default :","lastModifiedDate":"2023-11-04"},{"lineNumber":100,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HHmm\");","lastModifiedDate":"2023-11-04"},{"lineNumber":101,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-04"},{"lineNumber":102,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":103,"author":{"gitId":"Jianannl"},"content":"                } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":104,"author":{"gitId":"Jianannl"},"content":"                    switch (aDate.charAt(2)) {","lastModifiedDate":"2023-11-04"},{"lineNumber":105,"author":{"gitId":"Jianannl"},"content":"                        case \u0027/\u0027:","lastModifiedDate":"2023-11-04"},{"lineNumber":106,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");","lastModifiedDate":"2023-11-04"},{"lineNumber":107,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-04"},{"lineNumber":108,"author":{"gitId":"Jianannl"},"content":"                        case \u0027-\u0027:","lastModifiedDate":"2023-11-04"},{"lineNumber":109,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\");","lastModifiedDate":"2023-11-04"},{"lineNumber":110,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-04"},{"lineNumber":111,"author":{"gitId":"Jianannl"},"content":"                        default:","lastModifiedDate":"2023-11-04"},{"lineNumber":112,"author":{"gitId":"Jianannl"},"content":"                            dtFormatter \u003d DateTimeFormatter.ofPattern(\"ddMMyyyy HH:mm\");","lastModifiedDate":"2023-11-04"},{"lineNumber":113,"author":{"gitId":"Jianannl"},"content":"                            break;","lastModifiedDate":"2023-11-04"},{"lineNumber":114,"author":{"gitId":"Jianannl"},"content":"                    }","lastModifiedDate":"2023-11-04"},{"lineNumber":115,"author":{"gitId":"Jianannl"},"content":"                }","lastModifiedDate":"2023-11-04"},{"lineNumber":116,"author":{"gitId":"Jianannl"},"content":"                LocalDateTime dDT \u003d LocalDateTime.parse(aDate, dtFormatter);","lastModifiedDate":"2023-11-04"},{"lineNumber":117,"author":{"gitId":"Jianannl"},"content":"                return dDT.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy, HH:mma\"));","lastModifiedDate":"2023-11-04"},{"lineNumber":118,"author":{"gitId":"Jianannl"},"content":"            } else {","lastModifiedDate":"2023-11-04"},{"lineNumber":119,"author":{"gitId":"Jianannl"},"content":"                return aDate;","lastModifiedDate":"2023-11-04"},{"lineNumber":120,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":121,"author":{"gitId":"Jianannl"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-04"},{"lineNumber":122,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"Invalid date-time format! Please input date-time in the format of dd/MM/yyyy HH:mm(24hr format)\");","lastModifiedDate":"2023-11-04"},{"lineNumber":123,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":124,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":125,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":125}},{"path":"src/main/java/seedu/jabot/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.util;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.tasks.Task;","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import seedu.jabot.exceptions.DukeException;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"import java.io.File;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"import java.io.IOException;","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":" * Represent the file path where the file with the list needs to be","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":" * saved/load from","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"public class Storage {","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    protected File sF;","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    protected FileWriter wF;","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    protected Scanner scanF;","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"    public Storage(String fPath){","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"        this.sF \u003d new File(fPath);","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"     * To save the list of task into a file at a file path.","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"     * @param aT the list of tasks.","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException when IOException is catch.","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"    public void saveFile(ArrayList\u003cTask\u003e aT) throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"            if(!this.sF.exists()){","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"                this.sF.createNewFile();","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"                System.out.println(\"File did not exist! A new file named Task.txt was created.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"            this.wF \u003d new FileWriter(this.sF);","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"            for (Task task : aT) {","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"                String tFormat \u003d task.toSave();","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"                this.wF.write(tFormat);","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"                this.wF.write(System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"            this.wF.flush();","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"            this.wF.close();","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"File error! Unable to save.\");","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"     * To load the list of task that was saved to the file path.","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"     *","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"     * @return list of tasks loaded from the file path","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"     * @throws DukeException when IOException is catch.","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"    public ArrayList\u003cString\u003e loadFile() throws DukeException {","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"        ArrayList\u003cString\u003e tAL \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"        try {","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"            this.scanF \u003d new Scanner(this.sF);","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"            while (this.scanF.hasNext()) {","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"                tAL.add(this.scanF.nextLine());","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"            }","lastModifiedDate":"2023-11-04"},{"lineNumber":60,"author":{"gitId":"Jianannl"},"content":"            return tAL;","lastModifiedDate":"2023-11-04"},{"lineNumber":61,"author":{"gitId":"Jianannl"},"content":"        } catch (FileNotFoundException e){","lastModifiedDate":"2023-11-04"},{"lineNumber":62,"author":{"gitId":"Jianannl"},"content":"            throw new DukeException(\"No file to load!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":63,"author":{"gitId":"Jianannl"},"content":"        }","lastModifiedDate":"2023-11-04"},{"lineNumber":64,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":65,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":65}},{"path":"src/main/java/seedu/jabot/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Jianannl"},"content":"package seedu.jabot.util;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"Jianannl"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"Jianannl"},"content":"/**","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"Jianannl"},"content":" * Represent the user interface to show messages and read inputs","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"Jianannl"},"content":" */","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"Jianannl"},"content":"public class Ui {","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"Jianannl"},"content":"    protected String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"Jianannl"},"content":"            + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"Jianannl"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"Jianannl"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"Jianannl"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"Jianannl"},"content":"    protected String dividerL \u003d \"________________________________________\";","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"Jianannl"},"content":"    protected Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"Jianannl"},"content":"    protected String Line;","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"Jianannl"},"content":"    public Ui(){}","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"Jianannl"},"content":"     * To load the welcome screen.","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"Jianannl"},"content":"    public void welcomeScreen(){","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Hello! I\u0027m Jabot\" + System.lineSeparator() + \"What can I do for you?\");","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"Jianannl"},"content":"     * To show a divider on every command and reply from jabot.","lastModifiedDate":"2023-11-04"},{"lineNumber":29,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":30,"author":{"gitId":"Jianannl"},"content":"    public void showLine(){","lastModifiedDate":"2023-11-04"},{"lineNumber":31,"author":{"gitId":"Jianannl"},"content":"        System.out.println(dividerL + System.lineSeparator());","lastModifiedDate":"2023-11-04"},{"lineNumber":32,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":33,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":34,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":35,"author":{"gitId":"Jianannl"},"content":"     * To show error msg when jabot encounter problem.","lastModifiedDate":"2023-11-04"},{"lineNumber":36,"author":{"gitId":"Jianannl"},"content":"     * @param errMsg the message related to the error","lastModifiedDate":"2023-11-04"},{"lineNumber":37,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":38,"author":{"gitId":"Jianannl"},"content":"    public void showError(String errMsg){","lastModifiedDate":"2023-11-04"},{"lineNumber":39,"author":{"gitId":"Jianannl"},"content":"        System.out.println(errMsg);","lastModifiedDate":"2023-11-04"},{"lineNumber":40,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":41,"author":{"gitId":"Jianannl"},"content":"    public String readCommand(){","lastModifiedDate":"2023-11-04"},{"lineNumber":42,"author":{"gitId":"Jianannl"},"content":"        this.Line \u003d this.in.nextLine();","lastModifiedDate":"2023-11-04"},{"lineNumber":43,"author":{"gitId":"Jianannl"},"content":"        return this.Line;","lastModifiedDate":"2023-11-04"},{"lineNumber":44,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":45,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":46,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":47,"author":{"gitId":"Jianannl"},"content":"     * To show message when exiting jabot.","lastModifiedDate":"2023-11-04"},{"lineNumber":48,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":49,"author":{"gitId":"Jianannl"},"content":"    public void sayBye(){","lastModifiedDate":"2023-11-04"},{"lineNumber":50,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-11-04"},{"lineNumber":51,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":52,"author":{"gitId":"Jianannl"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":53,"author":{"gitId":"Jianannl"},"content":"    /**","lastModifiedDate":"2023-11-04"},{"lineNumber":54,"author":{"gitId":"Jianannl"},"content":"     * To show saving message when saving.","lastModifiedDate":"2023-11-04"},{"lineNumber":55,"author":{"gitId":"Jianannl"},"content":"     */","lastModifiedDate":"2023-11-04"},{"lineNumber":56,"author":{"gitId":"Jianannl"},"content":"    public void saveMsg(){","lastModifiedDate":"2023-11-04"},{"lineNumber":57,"author":{"gitId":"Jianannl"},"content":"        System.out.println(\"Saving...\");","lastModifiedDate":"2023-11-04"},{"lineNumber":58,"author":{"gitId":"Jianannl"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":59,"author":{"gitId":"Jianannl"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"Jianannl":59}}]
