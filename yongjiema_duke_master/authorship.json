[{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongjiema"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"yongjiema"},"content":"    protected String by;","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"yongjiema"},"content":"    protected Deadline(String description, String by) {","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"yongjiema"},"content":"        super(description);","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"yongjiema"},"content":"        this.by \u003d by;","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"yongjiema"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"yongjiema"},"content":"    public String toString() {","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"yongjiema"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), by);","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"yongjiema"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"yongjiema":13}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongjiema"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-04"},{"lineNumber":2,"author":{"gitId":"yongjiema"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-04"},{"lineNumber":3,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"yongjiema"},"content":"    private static final String HORIZONTAL_LINE \u003d \"____________________________________________________________\";","lastModifiedDate":"2023-09-11"},{"lineNumber":6,"author":{"gitId":"yongjiema"},"content":"    private static final String COMMAND_BYE \u003d \"bye\";","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yongjiema"},"content":"    private static final String COMMAND_DEADLINE \u003d \"deadline\";","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"yongjiema"},"content":"    private static final String COMMAND_EVENT \u003d \"event\";","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"yongjiema"},"content":"    private static final String COMMAND_LIST \u003d \"list\";","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yongjiema"},"content":"    private static final String COMMAND_MARK \u003d \"mark\";","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yongjiema"},"content":"    private static final String COMMAND_TODO \u003d \"todo\";","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"yongjiema"},"content":"    private static final String COMMAND_UNMARK \u003d \"unmark\";","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"yongjiema"},"content":"    private enum ProgramAction {CONTINUE, EXIT}","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":17,"author":{"gitId":"yongjiema"},"content":"        /*","lastModifiedDate":"2023-09-04"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String logo \u003d \" ____        _        \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2019-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2019-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"yongjiema"},"content":"        */","lastModifiedDate":"2023-09-04"},{"lineNumber":25,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":26,"author":{"gitId":"yongjiema"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-04"},{"lineNumber":27,"author":{"gitId":"yongjiema"},"content":"        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":29,"author":{"gitId":"yongjiema"},"content":"        printMessage(String.join(System.lineSeparator(), new String[]{","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"yongjiema"},"content":"                \" Hello! I\u0027m DukeBot\",","lastModifiedDate":"2023-09-11"},{"lineNumber":31,"author":{"gitId":"yongjiema"},"content":"                \" What can I do for you?\"","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"yongjiema"},"content":"        }));","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-04"},{"lineNumber":34,"author":{"gitId":"yongjiema"},"content":"        do {","lastModifiedDate":"2023-09-04"},{"lineNumber":35,"author":{"gitId":"yongjiema"},"content":"            String input \u003d in.nextLine();","lastModifiedDate":"2023-09-04"},{"lineNumber":36,"author":{"gitId":"yongjiema"},"content":"            try {","lastModifiedDate":"2023-09-26"},{"lineNumber":37,"author":{"gitId":"yongjiema"},"content":"                if (handleInput(tasks, input) \u003d\u003d ProgramAction.EXIT) {","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"yongjiema"},"content":"                    break;","lastModifiedDate":"2023-09-04"},{"lineNumber":39,"author":{"gitId":"yongjiema"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":40,"author":{"gitId":"yongjiema"},"content":"            } catch (DukeException e) {","lastModifiedDate":"2023-09-26"},{"lineNumber":41,"author":{"gitId":"yongjiema"},"content":"                if (e instanceof InvalidCommandArgsDukeException) {","lastModifiedDate":"2023-09-26"},{"lineNumber":42,"author":{"gitId":"yongjiema"},"content":"                    printMessage(\" OOPS!!! \" + e.getMessage());","lastModifiedDate":"2023-09-26"},{"lineNumber":43,"author":{"gitId":"yongjiema"},"content":"                } else if (e instanceof UnknownCommandDukeException) {","lastModifiedDate":"2023-09-26"},{"lineNumber":44,"author":{"gitId":"yongjiema"},"content":"                    printMessage(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-09-26"},{"lineNumber":45,"author":{"gitId":"yongjiema"},"content":"                } else {","lastModifiedDate":"2023-09-26"},{"lineNumber":46,"author":{"gitId":"yongjiema"},"content":"                    printMessage(\" OOPS!!! An unhandled Duke exception occurred.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":47,"author":{"gitId":"yongjiema"},"content":"                }","lastModifiedDate":"2023-09-26"},{"lineNumber":48,"author":{"gitId":"yongjiema"},"content":"            }","lastModifiedDate":"2023-09-26"},{"lineNumber":49,"author":{"gitId":"yongjiema"},"content":"        } while (true);","lastModifiedDate":"2023-09-26"},{"lineNumber":50,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":51,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":52,"author":{"gitId":"yongjiema"},"content":"    private static ProgramAction handleInput(ArrayList\u003cTask\u003e tasks, String input) throws DukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":53,"author":{"gitId":"yongjiema"},"content":"        if (isForCommand(input, COMMAND_BYE)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":54,"author":{"gitId":"yongjiema"},"content":"            String commandArgs \u003d input.substring(COMMAND_BYE.length()).trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":55,"author":{"gitId":"yongjiema"},"content":"            handleByeCommand(commandArgs);","lastModifiedDate":"2023-09-26"},{"lineNumber":56,"author":{"gitId":"yongjiema"},"content":"            return ProgramAction.EXIT;","lastModifiedDate":"2023-09-26"},{"lineNumber":57,"author":{"gitId":"yongjiema"},"content":"        } else if (isForCommand(input, COMMAND_LIST)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":58,"author":{"gitId":"yongjiema"},"content":"            String commandArgs \u003d input.substring(COMMAND_LIST.length()).trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":59,"author":{"gitId":"yongjiema"},"content":"            handleListCommand(tasks, commandArgs);","lastModifiedDate":"2023-09-26"},{"lineNumber":60,"author":{"gitId":"yongjiema"},"content":"        } else if (isForCommand(input, COMMAND_MARK)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":61,"author":{"gitId":"yongjiema"},"content":"            String commandArgs \u003d input.substring(COMMAND_MARK.length()).trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":62,"author":{"gitId":"yongjiema"},"content":"            handleMarkCommand(tasks, commandArgs);","lastModifiedDate":"2023-09-26"},{"lineNumber":63,"author":{"gitId":"yongjiema"},"content":"        } else if (isForCommand(input, COMMAND_UNMARK)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":64,"author":{"gitId":"yongjiema"},"content":"            String commandArgs \u003d input.substring(COMMAND_UNMARK.length()).trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":65,"author":{"gitId":"yongjiema"},"content":"            handleUnmarkCommand(tasks, commandArgs);","lastModifiedDate":"2023-09-26"},{"lineNumber":66,"author":{"gitId":"yongjiema"},"content":"        } else if (isForCommand(input, COMMAND_TODO)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":67,"author":{"gitId":"yongjiema"},"content":"            String commandArgs \u003d input.substring(COMMAND_TODO.length()).trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":68,"author":{"gitId":"yongjiema"},"content":"            handleTodoCommand(tasks, commandArgs);","lastModifiedDate":"2023-09-26"},{"lineNumber":69,"author":{"gitId":"yongjiema"},"content":"        } else if (isForCommand(input, COMMAND_DEADLINE)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":70,"author":{"gitId":"yongjiema"},"content":"            String commandArgs \u003d input.substring(COMMAND_DEADLINE.length()).trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":71,"author":{"gitId":"yongjiema"},"content":"            handleDeadlineCommand(tasks, commandArgs);","lastModifiedDate":"2023-09-26"},{"lineNumber":72,"author":{"gitId":"yongjiema"},"content":"        } else if (isForCommand(input, COMMAND_EVENT)) {","lastModifiedDate":"2023-09-26"},{"lineNumber":73,"author":{"gitId":"yongjiema"},"content":"            String commandArgs \u003d input.substring(COMMAND_EVENT.length()).trim();","lastModifiedDate":"2023-09-26"},{"lineNumber":74,"author":{"gitId":"yongjiema"},"content":"            handleEventCommand(tasks, commandArgs);","lastModifiedDate":"2023-09-26"},{"lineNumber":75,"author":{"gitId":"yongjiema"},"content":"        } else {","lastModifiedDate":"2023-09-26"},{"lineNumber":76,"author":{"gitId":"yongjiema"},"content":"            throw new UnknownCommandDukeException(\"Input: \" + input);","lastModifiedDate":"2023-09-26"},{"lineNumber":77,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":78,"author":{"gitId":"yongjiema"},"content":"        return ProgramAction.CONTINUE;","lastModifiedDate":"2023-09-26"},{"lineNumber":79,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":80,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":81,"author":{"gitId":"yongjiema"},"content":"    private static void handleByeCommand(String args) throws InvalidCommandArgsDukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":82,"author":{"gitId":"yongjiema"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":83,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The bye command should not take any arguments.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":84,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":85,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":86,"author":{"gitId":"yongjiema"},"content":"        printMessage(\" Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-09-26"},{"lineNumber":87,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":88,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":89,"author":{"gitId":"yongjiema"},"content":"    private static void handleListCommand(ArrayList\u003cTask\u003e tasks, String args) throws InvalidCommandArgsDukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":90,"author":{"gitId":"yongjiema"},"content":"        if (!args.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":91,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The list command should not take any arguments.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":92,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":93,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":94,"author":{"gitId":"yongjiema"},"content":"        String[] lines \u003d new String[tasks.size()];","lastModifiedDate":"2023-09-11"},{"lineNumber":95,"author":{"gitId":"yongjiema"},"content":"        for (int i \u003d 0; i \u003c tasks.size(); i++) {","lastModifiedDate":"2023-09-11"},{"lineNumber":96,"author":{"gitId":"yongjiema"},"content":"            Task task \u003d tasks.get(i);","lastModifiedDate":"2023-09-11"},{"lineNumber":97,"author":{"gitId":"yongjiema"},"content":"            lines[i] \u003d String.format(\" %d.%s\", i + 1, task.toString());","lastModifiedDate":"2023-09-18"},{"lineNumber":98,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":99,"author":{"gitId":"yongjiema"},"content":"        printMessage(String.join(System.lineSeparator(), lines), true);","lastModifiedDate":"2023-09-26"},{"lineNumber":100,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":101,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":102,"author":{"gitId":"yongjiema"},"content":"    private static void handleMarkCommand(ArrayList\u003cTask\u003e tasks, String args) throws InvalidCommandArgsDukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":103,"author":{"gitId":"yongjiema"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":104,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The task number to be marked cannot be empty.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":105,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":106,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":107,"author":{"gitId":"yongjiema"},"content":"        Integer taskNumber \u003d tryParseInt(args);","lastModifiedDate":"2023-09-26"},{"lineNumber":108,"author":{"gitId":"yongjiema"},"content":"        if (taskNumber \u003d\u003d null || taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":109,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"Invalid task number to be marked.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":110,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":111,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":112,"author":{"gitId":"yongjiema"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":113,"author":{"gitId":"yongjiema"},"content":"        task.setDone(true);","lastModifiedDate":"2023-09-11"},{"lineNumber":114,"author":{"gitId":"yongjiema"},"content":"        printMessage(String.join(System.lineSeparator(), new String[]{","lastModifiedDate":"2023-09-26"},{"lineNumber":115,"author":{"gitId":"yongjiema"},"content":"                \" Nice! I\u0027ve marked this task as done:\",","lastModifiedDate":"2023-09-11"},{"lineNumber":116,"author":{"gitId":"yongjiema"},"content":"                \"   \" + task.toString()","lastModifiedDate":"2023-09-18"},{"lineNumber":117,"author":{"gitId":"yongjiema"},"content":"        }));","lastModifiedDate":"2023-09-11"},{"lineNumber":118,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":119,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":120,"author":{"gitId":"yongjiema"},"content":"    private static void handleUnmarkCommand(ArrayList\u003cTask\u003e tasks, String args) throws InvalidCommandArgsDukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":121,"author":{"gitId":"yongjiema"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":122,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The task number to be unmarked cannot be empty.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":123,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":124,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":125,"author":{"gitId":"yongjiema"},"content":"        Integer taskNumber \u003d tryParseInt(args);","lastModifiedDate":"2023-09-26"},{"lineNumber":126,"author":{"gitId":"yongjiema"},"content":"        if (taskNumber \u003d\u003d null || taskNumber \u003c 1 || taskNumber \u003e tasks.size()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":127,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"Invalid task number to be unmarked.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":128,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":129,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":130,"author":{"gitId":"yongjiema"},"content":"        Task task \u003d tasks.get(taskNumber - 1);","lastModifiedDate":"2023-09-11"},{"lineNumber":131,"author":{"gitId":"yongjiema"},"content":"        task.setDone(false);","lastModifiedDate":"2023-09-11"},{"lineNumber":132,"author":{"gitId":"yongjiema"},"content":"        printMessage(String.join(System.lineSeparator(), new String[]{","lastModifiedDate":"2023-09-26"},{"lineNumber":133,"author":{"gitId":"yongjiema"},"content":"                \" OK, I\u0027ve marked this task as not done yet:\",","lastModifiedDate":"2023-09-11"},{"lineNumber":134,"author":{"gitId":"yongjiema"},"content":"                \"   \" + task.toString()","lastModifiedDate":"2023-09-18"},{"lineNumber":135,"author":{"gitId":"yongjiema"},"content":"        }));","lastModifiedDate":"2023-09-11"},{"lineNumber":136,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":137,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":138,"author":{"gitId":"yongjiema"},"content":"    private static void handleTodoCommand(ArrayList\u003cTask\u003e tasks, String args) throws InvalidCommandArgsDukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":139,"author":{"gitId":"yongjiema"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":140,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The description of a todo cannot be empty.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":141,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":142,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":143,"author":{"gitId":"yongjiema"},"content":"        Todo toto \u003d new Todo(args);","lastModifiedDate":"2023-09-26"},{"lineNumber":144,"author":{"gitId":"yongjiema"},"content":"        tasks.add(toto);","lastModifiedDate":"2023-09-18"},{"lineNumber":145,"author":{"gitId":"yongjiema"},"content":"        printAddMessage(toto, tasks.size());","lastModifiedDate":"2023-09-26"},{"lineNumber":146,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":147,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":148,"author":{"gitId":"yongjiema"},"content":"    private static void handleDeadlineCommand(ArrayList\u003cTask\u003e tasks, String args) throws InvalidCommandArgsDukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":149,"author":{"gitId":"yongjiema"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":150,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The description of a deadline cannot be empty.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":151,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":152,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":153,"author":{"gitId":"yongjiema"},"content":"        String[] array \u003d args.split(\" /by \", -1);","lastModifiedDate":"2023-09-26"},{"lineNumber":154,"author":{"gitId":"yongjiema"},"content":"        if (array.length !\u003d 2) {","lastModifiedDate":"2023-09-18"},{"lineNumber":155,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The \\\"/by {date/time}\\\" of a deadline is required.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":156,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-04"},{"lineNumber":157,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":158,"author":{"gitId":"yongjiema"},"content":"        Deadline deadline \u003d new Deadline(array[0], array[1]);","lastModifiedDate":"2023-09-18"},{"lineNumber":159,"author":{"gitId":"yongjiema"},"content":"        tasks.add(deadline);","lastModifiedDate":"2023-09-18"},{"lineNumber":160,"author":{"gitId":"yongjiema"},"content":"        printAddMessage(deadline, tasks.size());","lastModifiedDate":"2023-09-26"},{"lineNumber":161,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":162,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":163,"author":{"gitId":"yongjiema"},"content":"    private static void handleEventCommand(ArrayList\u003cTask\u003e tasks, String args) throws InvalidCommandArgsDukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":164,"author":{"gitId":"yongjiema"},"content":"        if (args.isEmpty()) {","lastModifiedDate":"2023-09-26"},{"lineNumber":165,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The description of a event cannot be empty.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":166,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-26"},{"lineNumber":167,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":168,"author":{"gitId":"yongjiema"},"content":"        String[] array \u003d args.split(\" /from \", -1);","lastModifiedDate":"2023-09-26"},{"lineNumber":169,"author":{"gitId":"yongjiema"},"content":"        if (array.length !\u003d 2) {","lastModifiedDate":"2023-09-18"},{"lineNumber":170,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The \\\"/from {date/time}\\\" of a event is required.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":171,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":172,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":173,"author":{"gitId":"yongjiema"},"content":"        String[] fromToArray \u003d array[1].split(\" /to \", -1);","lastModifiedDate":"2023-09-18"},{"lineNumber":174,"author":{"gitId":"yongjiema"},"content":"        if (fromToArray.length !\u003d 2) {","lastModifiedDate":"2023-09-18"},{"lineNumber":175,"author":{"gitId":"yongjiema"},"content":"            throw new InvalidCommandArgsDukeException(\"The \\\"/to {date/time}\\\" of a event is required.\");","lastModifiedDate":"2023-09-26"},{"lineNumber":176,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-18"},{"lineNumber":177,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-26"},{"lineNumber":178,"author":{"gitId":"yongjiema"},"content":"        Event event \u003d new Event(array[0], fromToArray[0], fromToArray[1]);","lastModifiedDate":"2023-09-18"},{"lineNumber":179,"author":{"gitId":"yongjiema"},"content":"        tasks.add(event);","lastModifiedDate":"2023-09-18"},{"lineNumber":180,"author":{"gitId":"yongjiema"},"content":"        printAddMessage(event, tasks.size());","lastModifiedDate":"2023-09-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":182,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":183,"author":{"gitId":"yongjiema"},"content":"    private static void printMessage(String message) {","lastModifiedDate":"2023-09-26"},{"lineNumber":184,"author":{"gitId":"yongjiema"},"content":"        printMessage(message, false);","lastModifiedDate":"2023-09-26"},{"lineNumber":185,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":186,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":187,"author":{"gitId":"yongjiema"},"content":"    private static void printMessage(String message, boolean skipEmptyMessage) {","lastModifiedDate":"2023-09-26"},{"lineNumber":188,"author":{"gitId":"yongjiema"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-11"},{"lineNumber":189,"author":{"gitId":"yongjiema"},"content":"        if (!skipEmptyMessage || !message.isEmpty()) {","lastModifiedDate":"2023-09-11"},{"lineNumber":190,"author":{"gitId":"yongjiema"},"content":"            System.out.println(message);","lastModifiedDate":"2023-09-11"},{"lineNumber":191,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":192,"author":{"gitId":"yongjiema"},"content":"        System.out.println(HORIZONTAL_LINE);","lastModifiedDate":"2023-09-11"},{"lineNumber":193,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":194,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":195,"author":{"gitId":"yongjiema"},"content":"    private static void printAddMessage(Task addedTask, int tasksLatestSize) {","lastModifiedDate":"2023-09-26"},{"lineNumber":196,"author":{"gitId":"yongjiema"},"content":"        printMessage(String.join(System.lineSeparator(), new String[]{","lastModifiedDate":"2023-09-26"},{"lineNumber":197,"author":{"gitId":"yongjiema"},"content":"                \" Got it. I\u0027ve added this task:\",","lastModifiedDate":"2023-09-18"},{"lineNumber":198,"author":{"gitId":"yongjiema"},"content":"                \"   \" + addedTask.toString(),","lastModifiedDate":"2023-09-18"},{"lineNumber":199,"author":{"gitId":"yongjiema"},"content":"                String.format(\" Now you have %d tasks in the list.\", tasksLatestSize)","lastModifiedDate":"2023-09-18"},{"lineNumber":200,"author":{"gitId":"yongjiema"},"content":"        }));","lastModifiedDate":"2023-09-18"},{"lineNumber":201,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":202,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":203,"author":{"gitId":"yongjiema"},"content":"    private static boolean isForCommand(String input, String commandName) {","lastModifiedDate":"2023-09-26"},{"lineNumber":204,"author":{"gitId":"yongjiema"},"content":"        return input.equals(commandName) || input.startsWith(commandName + \" \");","lastModifiedDate":"2023-09-18"},{"lineNumber":205,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":206,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":207,"author":{"gitId":"yongjiema"},"content":"    private static Integer tryParseInt(String s) {","lastModifiedDate":"2023-09-11"},{"lineNumber":208,"author":{"gitId":"yongjiema"},"content":"        try {","lastModifiedDate":"2023-09-11"},{"lineNumber":209,"author":{"gitId":"yongjiema"},"content":"            return Integer.parseInt(s);","lastModifiedDate":"2023-09-11"},{"lineNumber":210,"author":{"gitId":"yongjiema"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-09-11"},{"lineNumber":211,"author":{"gitId":"yongjiema"},"content":"            return null;","lastModifiedDate":"2023-09-11"},{"lineNumber":212,"author":{"gitId":"yongjiema"},"content":"        }","lastModifiedDate":"2023-09-11"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"yongjiema":203,"-":11}},{"path":"src/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongjiema"},"content":"public abstract class DukeException extends Exception {","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"yongjiema"},"content":"    public DukeException(String errorMessage) {","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"yongjiema"},"content":"        super(errorMessage);","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"yongjiema"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"yongjiema":5}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongjiema"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"yongjiema"},"content":"    protected String from;","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"yongjiema"},"content":"    protected String to;","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"yongjiema"},"content":"    protected Event(String description, String from, String to) {","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"yongjiema"},"content":"        super(description);","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"yongjiema"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"yongjiema"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"yongjiema"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"yongjiema"},"content":"    public String toString() {","lastModifiedDate":"2023-09-18"},{"lineNumber":13,"author":{"gitId":"yongjiema"},"content":"        return String.format(\"[E]%s (from: %s to: %s)\", super.toString(), from, to);","lastModifiedDate":"2023-09-18"},{"lineNumber":14,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":15,"author":{"gitId":"yongjiema"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"yongjiema":15}},{"path":"src/main/java/InvalidCommandArgsDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongjiema"},"content":"public class InvalidCommandArgsDukeException extends DukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"yongjiema"},"content":"    public InvalidCommandArgsDukeException(String errorMessage) {","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"yongjiema"},"content":"        super(errorMessage);","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"yongjiema"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"yongjiema":5}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongjiema"},"content":"public abstract class Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"yongjiema"},"content":"    protected String description;","lastModifiedDate":"2023-09-11"},{"lineNumber":3,"author":{"gitId":"yongjiema"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":5,"author":{"gitId":"yongjiema"},"content":"    protected Task(String description) {","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"yongjiema"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yongjiema"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-09-11"},{"lineNumber":8,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":9,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":10,"author":{"gitId":"yongjiema"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-09-11"},{"lineNumber":11,"author":{"gitId":"yongjiema"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-09-11"},{"lineNumber":12,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":13,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":14,"author":{"gitId":"yongjiema"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-09-11"},{"lineNumber":15,"author":{"gitId":"yongjiema"},"content":"        return isDone;","lastModifiedDate":"2023-09-11"},{"lineNumber":16,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":17,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":18,"author":{"gitId":"yongjiema"},"content":"    public void setDescription(String description) {","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"yongjiema"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":22,"author":{"gitId":"yongjiema"},"content":"    public String getDescription() {","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"yongjiema"},"content":"        return description;","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"yongjiema"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-11"},{"lineNumber":27,"author":{"gitId":"yongjiema"},"content":"        return isDone ? \"X\" : \" \";","lastModifiedDate":"2023-09-11"},{"lineNumber":28,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-11"},{"lineNumber":29,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":30,"author":{"gitId":"yongjiema"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":31,"author":{"gitId":"yongjiema"},"content":"    public String toString() {","lastModifiedDate":"2023-09-18"},{"lineNumber":32,"author":{"gitId":"yongjiema"},"content":"        return String.format(\"[%s] %s\", getStatusIcon(), getDescription());","lastModifiedDate":"2023-09-18"},{"lineNumber":33,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"yongjiema"},"content":"}","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"yongjiema":34}},{"path":"src/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongjiema"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-18"},{"lineNumber":2,"author":{"gitId":"yongjiema"},"content":"    protected Todo(String description) {","lastModifiedDate":"2023-09-18"},{"lineNumber":3,"author":{"gitId":"yongjiema"},"content":"        super(description);","lastModifiedDate":"2023-09-18"},{"lineNumber":4,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":5,"author":{"gitId":"yongjiema"},"content":"","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"yongjiema"},"content":"    @Override","lastModifiedDate":"2023-09-18"},{"lineNumber":7,"author":{"gitId":"yongjiema"},"content":"    public String toString() {","lastModifiedDate":"2023-09-18"},{"lineNumber":8,"author":{"gitId":"yongjiema"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-18"},{"lineNumber":9,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-18"},{"lineNumber":10,"author":{"gitId":"yongjiema"},"content":"}","lastModifiedDate":"2023-09-18"}],"authorContributionMap":{"yongjiema":10}},{"path":"src/main/java/UnknownCommandDukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"yongjiema"},"content":"public class UnknownCommandDukeException extends DukeException {","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"yongjiema"},"content":"    public UnknownCommandDukeException(String errorMessage) {","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"yongjiema"},"content":"        super(errorMessage);","lastModifiedDate":"2023-09-26"},{"lineNumber":4,"author":{"gitId":"yongjiema"},"content":"    }","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"yongjiema"},"content":"}","lastModifiedDate":"2023-09-26"}],"authorContributionMap":{"yongjiema":5}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"yongjiema"},"content":"blah","lastModifiedDate":"2023-09-26"},{"lineNumber":2,"author":{"gitId":"yongjiema"},"content":"list 1","lastModifiedDate":"2023-09-26"},{"lineNumber":3,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-11"},{"lineNumber":4,"author":{"gitId":"yongjiema"},"content":"todo","lastModifiedDate":"2023-09-26"},{"lineNumber":5,"author":{"gitId":"yongjiema"},"content":"todo borrow book","lastModifiedDate":"2023-09-18"},{"lineNumber":6,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-11"},{"lineNumber":7,"author":{"gitId":"yongjiema"},"content":"deadline","lastModifiedDate":"2023-09-26"},{"lineNumber":8,"author":{"gitId":"yongjiema"},"content":"deadline return book","lastModifiedDate":"2023-09-26"},{"lineNumber":9,"author":{"gitId":"yongjiema"},"content":"deadline return book /by","lastModifiedDate":"2023-09-26"},{"lineNumber":10,"author":{"gitId":"yongjiema"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-09-18"},{"lineNumber":11,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-18"},{"lineNumber":12,"author":{"gitId":"yongjiema"},"content":"event","lastModifiedDate":"2023-09-26"},{"lineNumber":13,"author":{"gitId":"yongjiema"},"content":"event project meeting /from","lastModifiedDate":"2023-09-26"},{"lineNumber":14,"author":{"gitId":"yongjiema"},"content":"event project meeting /from Mon 2pm","lastModifiedDate":"2023-09-26"},{"lineNumber":15,"author":{"gitId":"yongjiema"},"content":"event project meeting /to","lastModifiedDate":"2023-09-26"},{"lineNumber":16,"author":{"gitId":"yongjiema"},"content":"event project meeting /to 4pm","lastModifiedDate":"2023-09-26"},{"lineNumber":17,"author":{"gitId":"yongjiema"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-09-18"},{"lineNumber":18,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-11"},{"lineNumber":19,"author":{"gitId":"yongjiema"},"content":"mark","lastModifiedDate":"2023-09-11"},{"lineNumber":20,"author":{"gitId":"yongjiema"},"content":"mark 0","lastModifiedDate":"2023-09-11"},{"lineNumber":21,"author":{"gitId":"yongjiema"},"content":"mark 9","lastModifiedDate":"2023-09-18"},{"lineNumber":22,"author":{"gitId":"yongjiema"},"content":"mark 1","lastModifiedDate":"2023-09-11"},{"lineNumber":23,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-11"},{"lineNumber":24,"author":{"gitId":"yongjiema"},"content":"mark 2","lastModifiedDate":"2023-09-11"},{"lineNumber":25,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-11"},{"lineNumber":26,"author":{"gitId":"yongjiema"},"content":"mark 3","lastModifiedDate":"2023-09-18"},{"lineNumber":27,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-18"},{"lineNumber":28,"author":{"gitId":"yongjiema"},"content":"unmark","lastModifiedDate":"2023-09-26"},{"lineNumber":29,"author":{"gitId":"yongjiema"},"content":"unmark 0","lastModifiedDate":"2023-09-26"},{"lineNumber":30,"author":{"gitId":"yongjiema"},"content":"unmark 9","lastModifiedDate":"2023-09-26"},{"lineNumber":31,"author":{"gitId":"yongjiema"},"content":"unmark 1","lastModifiedDate":"2023-09-11"},{"lineNumber":32,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-11"},{"lineNumber":33,"author":{"gitId":"yongjiema"},"content":"unmark 2","lastModifiedDate":"2023-09-18"},{"lineNumber":34,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-18"},{"lineNumber":35,"author":{"gitId":"yongjiema"},"content":"unmark 3","lastModifiedDate":"2023-09-18"},{"lineNumber":36,"author":{"gitId":"yongjiema"},"content":"list","lastModifiedDate":"2023-09-18"},{"lineNumber":37,"author":{"gitId":"yongjiema"},"content":"bye 1","lastModifiedDate":"2023-09-26"},{"lineNumber":38,"author":{"gitId":"yongjiema"},"content":"bye","lastModifiedDate":"2023-09-11"}],"authorContributionMap":{"yongjiema":38}}]
