[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"# craby.Duke project template","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"3. After that, locate the `src/main/java/craby.Duke.java` file, right-click it, and choose `Run craby.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    mainClass.set(\"craby.Duke\")","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    archiveBaseName \u003d \"craby\"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":2,"-":40}},{"path":"data/craby.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Task 2 (by: 2023/10/20 2359)","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Task 3 (by: 2023/6/27 0000)","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Return book (by: 2023/1/2 1800)","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"[E][ ✓ ] Orientation event a (from: 2019/10/4 0000)","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"[E][҉҉҉] Team project meeting (from: 2019/10/2 0900 to: 2019/10/2 1130)","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"[T][҉҉҉] Test sort","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Test sort (by: 2023/10/20 0000)","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Test (by: 2023/10/17 2359)","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Test (by: 2023/10/15 2359)","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"[E][҉҉҉] Test (from: 2023/10/15 2359 to: 2023/10/14 2359)","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Test (by: 2023/10/21 2359)","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Test (by: 2023/10/15 2359)","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"amber-le":12}},{"path":"src/main/java/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.*;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * AddTaskCommand class is a class that handle the add command.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" * It implements the CommandInterface.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the add command.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"public class AddTaskCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the add command.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * It will add the task to the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        if (input.contains(\"/by\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            String[] formatDeadline \u003d input.split(\"/by\");","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            handleBy(input, tasks, formatDeadline);","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        if (input.contains(\"/from\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            String[] formatEvent \u003d input.split(\"/from\");","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            handleFrom(input, tasks, formatEvent);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        tasks.add(new Todo(input));","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        printAddMessage(input, tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    private static void handleFrom(String input, List\u003cTask\u003e tasks, String[] formatEvent) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        if (formatEvent.length \u003c\u003d 1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        if (formatEvent[1].contains((\"/to\"))) {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"            String[] timeEvent \u003d formatEvent[1].split(\"/to\");","lastModifiedDate":"2023-09-12"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            tasks.add(new Event(formatEvent[0].trim(), timeEvent[0], timeEvent[1]));","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            tasks.add(new Event(formatEvent[0].trim(), formatEvent[1]));","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        printAddMessage(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"    private static void handleBy(String input, List\u003cTask\u003e tasks, String[] formatDeadline) {","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"        if (formatDeadline.length \u003c\u003d 1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"            tasks.add(new Deadline(formatDeadline[0].trim(), formatDeadline[1]));","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"            printAddMessage(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":67}},{"path":"src/main/java/command/BlahCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class BlahCommand extends CrabyMessage implements CommandInterface{","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"     * This method will print out the blah message.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @return","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        printBlahMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":21}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":" * ByeCommand class is a class that handle the bye command.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * It implements the CommandInterface.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the bye command.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"public class ByeCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * This method will print out the bye message.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @return","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        printByeMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":25}},{"path":"src/main/java/command/CommandInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":" * CommandInterface is an interface that handle the command.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the command.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"public interface CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    short handleCommand(String input, List\u003cTask\u003e tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":12}},{"path":"src/main/java/command/DeleteAllCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class DeleteAllCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * This method will delete all the tasks in the list.","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @return","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        printDeleteAllMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        tasks.clear();","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":23}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class DeleteCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * This method will delete the task from the list.","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @return 0.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"            printEmptyList();","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"            int tmp \u003d input.indexOf(\"t\");","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"            String checkDelete \u003d input.substring(tmp + 2).trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"            int checkNum \u003d (Integer.parseInt(checkDelete)) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            if (checkNum \u003e\u003d tasks.size() || checkNum \u003c 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"                printNumOutOfTask(tasks.size());","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"                return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            printDeleteMessage(tasks.get(checkNum).toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            tasks.remove(checkNum);","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            printCountTask(tasks.size());","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException nfe) {","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            printDeleteErrorMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":39}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"public class FindCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     * This method will find the user keyword from the list and print out.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @return 0.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            printSortByEmptyList();","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        String keyword \u003d inputArr[1].trim().toLowerCase();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        List\u003cString\u003e listFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            String tmp \u003d task.toString();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            String tmp1 \u003d tmp.toLowerCase();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            if (tmp1.contains(keyword)) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"                listFound.add(tmp);","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        if (listFound.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            printNoMatchingTasks();","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            printFindMessage(listFound);","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"amber-le":41}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import io.HelpMessage;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * This class will print out the help message.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class HelpCommand extends HelpMessage implements CommandInterface {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * This method will print out all the tasks in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @return 0.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        printHelpMessage();","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"amber-le":25}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"public class ListCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     * This method will print out all the tasks in the list.","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @return 0.","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            printEmptyList();","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        printListMessage(tasks);","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":27}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class MarkCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * This method will mark the task as done.","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @return","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"            printEmptyList();","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"            int tmp \u003d input.indexOf(\"k\");","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"            String checkMark \u003d input.substring(tmp + 1).trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"            int checkNum \u003d (Integer.parseInt(checkMark)) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            if (checkNum \u003e\u003d tasks.size() || checkNum \u003c 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"                printNumOutOfTask(tasks.size());","lastModifiedDate":"2023-10-11"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"                return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            tasks.get(checkNum).setIsDone(true);","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            printMarkMessage(tasks.get(checkNum).toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            printMarkNumFormatExceptionMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":39}},{"path":"src/main/java/command/SortByCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import io.Sort;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"public class SortByCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"            printEmptyList();","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        List \u003cString\u003e allowedSort \u003d List.of(\"type\", \"t\", \"type1\", \"t1\", \"date\", \"d\");","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        String checkSort \u003d input.substring(6).trim().toLowerCase();","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        if (allowedSort.contains(checkSort)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"            Sort sort \u003d new Sort();","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            sort.sort(input, tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"            printListMessage(tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"            printSortByErrorMessage();","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"amber-le":30}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * This class represents a unmark command.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class UnmarkCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * This method will mark the task as done.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @return","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    public short handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            printEmptyList();","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            int tmp \u003d input.indexOf(\"k\");","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            String checkMark \u003d input.substring(tmp + 1).trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            int checkNum \u003d (Integer.parseInt(checkMark)) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            if (checkNum \u003e\u003d tasks.size() || checkNum \u003c 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"                printNumOutOfTask(tasks.size());","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"                return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            tasks.get(checkNum).setIsDone(false);","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            printUnmarkMessage(tasks.get(checkNum).toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"            return 0;","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"            printUnmarkNumFormatExceptionMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        return 0;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":42}},{"path":"src/main/java/craby/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package craby;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Craby;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"     * This is the main method.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"     * @param args the input from the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"        Craby.crabySysterm();","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"amber-le":10,"-":3}},{"path":"src/main/java/exceptions/InputBlankException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package exceptions;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":" * InputBlankException is an exception that handle the blank input.","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"public class InputBlankException extends Exception {","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":6}},{"path":"src/main/java/io/CrabyMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":" * CrabyMessage class is a class that store all the messages that CrabY will use.","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * because the file quite long, I separate the help message into another file.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the command.","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"public class CrabyMessage {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public static void printHello() {","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        System.out.println(line + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"                \"   ____                  _      __   __\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"                \"  / ___|  _ __    __ _  | |__   \\\\ \\\\ / /\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"                \" | |     | \u0027__|  / _` | | \u0027_ \\\\   \\\\ V /\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"                \" | |___  | |    | (_| | | |_) |   | |\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"                \"  \\\\____| |_|     \\\\__,_| |_.__/    |_|\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"                System.lineSeparator() + line);","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        System.out.println(\"   Hi Amber ♡, I\u0027m CrabY 🦀\"","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"                + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"                \"   How can I help you today? ˃ᴗ˂\");","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤Type \\\"help\\\" if you need to see the list of command\" + System.lineSeparator() + line);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    public static final String line \u003d \"  ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈◦•✩•◦┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\";","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"    public static final String blank \u003d \"   \";","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Bye Amber ♡, hope to see you again soon!\");","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        System.out.println(","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"                \"               __   ♡   __\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"                        \"              /           \\\\\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"                        \"             (  / @   @ \\\\  )\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"                        \"              \\\\(_ _\\\\_/_ _)/\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"                        \"            (\\\\ `-/     \\\\-\u0027 /)\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"                        \"             \\\"\u003d\u003d\u003d\\\\     /\u003d\u003d\u003d\\\"\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"                        \"              .\u003d\u003d\u0027)___(`\u003d\u003d.\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"                        \"               .\u003d\u0027     `\u003d.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"    public static void printInputBlankExceptionMessage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Oops!!! The description cannot be empty.\");","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤Type \\\"help\\\" if you need to see the list of command\" + System.lineSeparator() + line);","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"    public static void printNumOutOfTask(int input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        System.out.print(blank + \"Oops!!! Something wrong! Your list only have 1 ➞ \");","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        System.out.println(input + \" tasks.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Please try again with another number ☘\");","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"    public static void printAddMessage(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"✎ added:\");","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ \" + input + \" - to your list\");","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"        printCountTask(tasks.size());","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"    public static void printDateTimeParseExceptionMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Please enter in this format after used /by or /from and /to\");","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ Try with: \\\"/by dd/mm/yyyy hhmm\\\" e.g: /by 12/12/2020 1800\");","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"          or: \\\"/by mon\\\" - CrabY will put the date to the next Monday\");","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"    //Print Delete all Message","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"    public static void printDeleteAllMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"✂ Ok, I clean up all your tasks\");","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ Let\u0027s start a new checklist\");","lastModifiedDate":"2023-10-11"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"    // Print DeleteCommand Message","lastModifiedDate":"2023-10-11"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"    public static void printDeleteMessage(String input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"✂ Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-11"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ \" + input + \" - in your list\");","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"    public static void printCountTask(int input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Now you have: \" + input + \" in your list \\uD83D\\uDDCE.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"    public static void printDeleteErrorMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ Try with: delete [integer] e.g: delete 1\");","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"          or: deleteall to delete all the tasks in your list.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"    //Print ListCommand Message","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"    public static String printEndOfList \u003d blank + \" ꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦\";","lastModifiedDate":"2023-10-14"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"    public static String printStartOfList \u003d blank + \" ╭─────────────────────────────────╮\";","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"    public static void printEmptyList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"        System.out.println(printStartOfList);","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"    ░░░░ Your list is empty! ░░░░\");","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"        System.out.println(printEndOfList);","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-14"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"    public static void printListMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-11"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"        System.out.println(printStartOfList);","lastModifiedDate":"2023-10-14"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"  Here are the tasks in your list:\");","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"            if (i \u003c\u003d 9) {","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"                System.out.println(\"   \" + i + \".  \" + tasks.get(i - 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"            } else if (i \u003e 99) {","lastModifiedDate":"2023-10-11"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"                System.out.println(\"   \" + i + \" \" + tasks.get(i - 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"            } else {","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"                System.out.println(\"   \" + i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"        System.out.println(printEndOfList);","lastModifiedDate":"2023-10-14"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-14"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"    //Print MarkCommand Message","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"    public static void printMarkMessage(String input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Nice! I\u0027ve marked this task as DONE ツ:\");","lastModifiedDate":"2023-10-11"},{"lineNumber":129,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ \" + input);","lastModifiedDate":"2023-10-11"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"    public static void printMarkNumFormatExceptionMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ Try with: mark [integer] e.g: mark 1\");","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"    //Print UnmarkCommand Message","lastModifiedDate":"2023-10-11"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"    public static void printUnmarkMessage(String input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"OK, I\u0027ve marked this task as ☉⌓☉ NOT DONE yet:\");","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ \" + input);","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":144,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":146,"author":{"gitId":"amber-le"},"content":"    public static void printUnmarkNumFormatExceptionMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ Try with: unmark [integer] e.g: unmark 1\");","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-11"},{"lineNumber":150,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":151,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"amber-le"},"content":"    //Print FindCommand Message","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"amber-le"},"content":"    public static void printFindMessage(List\u003cString\u003e listFound) {","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"amber-le"},"content":"        System.out.println(printStartOfList);","lastModifiedDate":"2023-10-14"},{"lineNumber":155,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"⌖ Here are the matching tasks in your list:\");","lastModifiedDate":"2023-10-12"},{"lineNumber":156,"author":{"gitId":"amber-le"},"content":"        for (String s : listFound) {","lastModifiedDate":"2023-10-12"},{"lineNumber":157,"author":{"gitId":"amber-le"},"content":"            System.out.println(blank + s);","lastModifiedDate":"2023-10-12"},{"lineNumber":158,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":159,"author":{"gitId":"amber-le"},"content":"        System.out.println(printEndOfList);","lastModifiedDate":"2023-10-14"},{"lineNumber":160,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-12"},{"lineNumber":161,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":162,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":163,"author":{"gitId":"amber-le"},"content":"    public static void printNoMatchingTasks() {","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"✘ No matching tasks in your list.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":165,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ Please try with another keyword ☘\");","lastModifiedDate":"2023-10-12"},{"lineNumber":166,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":168,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"amber-le"},"content":"    //Print SortByCommand Message","lastModifiedDate":"2023-10-12"},{"lineNumber":170,"author":{"gitId":"amber-le"},"content":"    public static void printSortByErrorMessage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ Try with: sortby [type/date] e.g: sortby type\");","lastModifiedDate":"2023-10-12"},{"lineNumber":173,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-12"},{"lineNumber":174,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":175,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"amber-le"},"content":"    public static void printSortByEmptyList() {","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Oops!!! your list are empty.\");","lastModifiedDate":"2023-10-12"},{"lineNumber":178,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╰┈➤ Please add some tasks before use Sortby ☘\");","lastModifiedDate":"2023-10-12"},{"lineNumber":179,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-12"},{"lineNumber":180,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":181,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":182,"author":{"gitId":"amber-le"},"content":"    //Print BlahCommand Message","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"amber-le"},"content":"    public static void printBlahMessage() {","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"Oops!!! I\u0027m sorry, but I don\u0027t know what that means ☘\");","lastModifiedDate":"2023-10-14"},{"lineNumber":185,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-14"},{"lineNumber":186,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":188,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"amber-le":188}},{"path":"src/main/java/io/HelpMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import static io.CrabyMessage.blank;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import static io.CrabyMessage.line;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class HelpMessage {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"     ❉⊱• Welcome to Craby\u0027s help page! •⊰❉\");","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + \"╚════ ▣ Here are the list of commands: ▣ ════╝\");","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"1. list - list all the tasks\");","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. list\");","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"2. \u003ctask description\u003e - add a todo task\");","lastModifiedDate":"2023-10-13"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. read book\");","lastModifiedDate":"2023-10-13"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"3. \u003ctask description\u003e /by \u003cdd/mm/yyy hhmm\u003e - add a deadline task\");","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   Note: you can use /by Mon -\u003e CrabY will automatically fill the date (next Monday) for you\");","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. TIC2002 quiz 8 /by 2/12/2023 1800\");","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"4. event \u003ctask description\u003e /from \u003cdd/mm/yyy hhmm\u003e /to \u003cdd/mm/yyy hhmm\u003e - add an event task\");","lastModifiedDate":"2023-10-13"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   Note: you can use /from Fri -\u003e CrabY will automatically fill the date (next Friday) for you\");","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. project meeting /from 2/12/2023 1800 /to 2/12/2023 2000\");","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"5. mark \u003ctask number\u003e - mark a task as DONE\");","lastModifiedDate":"2023-10-13"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. mark 1\");","lastModifiedDate":"2023-10-13"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"7. unmark \u003ctask number\u003e - mark a task as UNDONE\");","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. unmark 1\");","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"8. delete \u003ctask number\u003e - delete a task\");","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. delete 1\");","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"9. deleteall - delete all the tasks\");","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. deleteall\");","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"10. find \u003ckeyword\u003e - find a task with the keyword\");","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. find book\");","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"11. sort \u003ctype/type1/t/t1/date/d\u003e - sort the list by type or date\");","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"    Note: type1 or t1 will sort the list by type in revers\");","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. sort t\");","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"12. help - show the list of commands\");","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. help\");","lastModifiedDate":"2023-10-13"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"13. bye - exit the program\");","lastModifiedDate":"2023-10-13"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        System.out.println(blank + blank + \"   ╰┈➤e.g. bye\");","lastModifiedDate":"2023-10-13"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        System.out.println(line);","lastModifiedDate":"2023-10-13"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"amber-le":51}},{"path":"src/main/java/io/Sort.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.Collections;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":" * This class will sort the list of tasks.","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":" * type/t: sort by task type.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":" * type1/t1: sort by task type in reverse order.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":" * date/d: sort by date.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"public class Sort {","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     * This method will sort the list of tasks.","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"    public void sort(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        if (input.equals(\"type\") || input.equals(\"t\")) {","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            sortByType(tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        if (input.equals(\"type1\") || input.equals(\"t1\")) {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            sortByType1(tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        sortByDate(tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    private static void sortByDate(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        Collections.sort(tasks, new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"                LocalDateTime task1Time \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"                LocalDateTime task2Time \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"                if (task1 instanceof Deadline) {","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"                    task1Time \u003d ((Deadline) task1).getTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"                } else if (task1 instanceof Event) {","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"                    task1Time \u003d ((Event) task1).getTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"                if (task2 instanceof Deadline) {","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"                    task2Time \u003d ((Deadline) task2).getTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"                } else if (task2 instanceof Event) {","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"                    task2Time \u003d ((Event) task2).getTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"                if (task1Time \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"                    return 1;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"                if (task2Time \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"                    return -1;","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"                return task1Time.compareTo(task2Time);","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"    private static void sortByType1(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        Collections.sort(tasks, new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"            @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"            public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"                return task2.toString().compareTo(task1.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"        });","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"    private static void sortByType(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"        Collections.sort(tasks, new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"            @Override","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"            public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"                return task1.toString().compareTo(task2.toString());","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"        });","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"amber-le":85}},{"path":"src/main/java/io/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.io.*;","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import java.io.File;","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"public class TaskStorage {","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    String filePath;","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    String directoryPath \u003d \"./data\";","lastModifiedDate":"2023-09-25"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    File folder \u003d new File(directoryPath);","lastModifiedDate":"2023-09-25"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    File file \u003d new File(\"./data/craby.txt\");","lastModifiedDate":"2023-09-25"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    public TaskStorage(String filePath) {","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"     * This method will save the tasks into the file.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-09-24"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"                content.append(task.toStorageString());","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"                content.append(System.lineSeparator());","lastModifiedDate":"2023-09-24"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-24"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2023-09-24"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"            writer.write(content.toString());","lastModifiedDate":"2023-09-24"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            writer.close();","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-24"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"     * This method will load the tasks from the file.","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"     * @return the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            try {","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"                loadLine(reader, tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"                reader.close();","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-10-14"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"            folder.mkdir();","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"            save(tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        return tasks;","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"    private static void loadLine(BufferedReader reader, List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        String line;","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"            boolean isDone \u003d isDone(line);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"            addByType(tasks, line, isDone);","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"    private static void addByType(List\u003cTask\u003e tasks, String line, boolean isDone) {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        char checkType \u003d line.charAt(1);","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"        String content \u003d line.substring(9);","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        switch (checkType) {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-09-24"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"                String[] formatDeadline \u003d content.split(\" \\\\(by:\");","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"                String tmp \u003d formatDeadline[1].substring(0, formatDeadline[1].length() - 1);","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"                Deadline deadline \u003d new Deadline(formatDeadline[0], tmp);","lastModifiedDate":"2023-10-07"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"                deadline.setIsDone(isDone);","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"                tasks.add(deadline);","lastModifiedDate":"2023-09-24"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-24"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-09-24"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"                String[] formatEvent \u003d content.split(\" \\\\(from:\");","lastModifiedDate":"2023-09-24"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"                String time \u003d formatEvent[1];","lastModifiedDate":"2023-09-24"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"                time \u003d time.substring(0, time.length() - 1);","lastModifiedDate":"2023-09-24"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"                Event event;","lastModifiedDate":"2023-10-08"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"                if (time.contains(\"to:\")) {","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"                    String[] tmp1 \u003d time.split(\" to: \");","lastModifiedDate":"2023-10-08"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"                    event \u003d new Event(formatEvent[0], tmp1[0], tmp1[1]);","lastModifiedDate":"2023-10-08"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"                } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"                    event \u003d new Event(formatEvent[0], time);","lastModifiedDate":"2023-10-10"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-10"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"                event.setIsDone(isDone);","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"                tasks.add(event);","lastModifiedDate":"2023-09-24"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"            default:","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"                Todo todo \u003d new Todo(content);","lastModifiedDate":"2023-09-24"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"                todo.setIsDone(isDone);","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"                tasks.add(todo);","lastModifiedDate":"2023-09-24"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"    private static boolean isDone(String line) {","lastModifiedDate":"2023-10-14"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-10-14"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"        if (line.charAt(5) \u003d\u003d \u0027✓\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-10-14"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"        return isDone;","lastModifiedDate":"2023-10-14"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":110}},{"path":"src/main/java/task/Craby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import command.*;","lastModifiedDate":"2023-09-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import exceptions.InputBlankException;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import io.TaskStorage;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import task.Keyword;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":" * This class is the main class of the program.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":" * It will handle the input from the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"public class Craby extends CrabyMessage {","lastModifiedDate":"2023-09-12"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    private static final TaskStorage taskStorage \u003d new TaskStorage(\"./data/craby.txt\");","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     * This method will print out the logo and the hello message.","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"     * It will also handle the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    public static void crabySysterm() {","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        printHello();","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d taskStorage.load();","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        while (true) {","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            input \u003d input.trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            boolean exit \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"                exit \u003d handleInput(input, tasks);","lastModifiedDate":"2023-09-25"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            } catch (InputBlankException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"                printInputBlankExceptionMessage();","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"            if (exit) {","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"     * This method will handle the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"     * @return true if the user input bye.","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"     * @throws InputBlankException if the input is blank.","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"    private static boolean handleInput(String input, List\u003cTask\u003e tasks) throws InputBlankException {","lastModifiedDate":"2023-09-25"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        if (input.isBlank()) throw new InputBlankException();","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        String checkInput;","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"            checkInput \u003d input.split(\" \")[0];","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"            throw new InputBlankException();","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        checkInput \u003d checkInput.toUpperCase().trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-24"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"            Keyword keyWords \u003d Keyword.valueOf(checkInput);","lastModifiedDate":"2023-09-24"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"            switch (keyWords) {","lastModifiedDate":"2023-09-24"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"                case LIST:","lastModifiedDate":"2023-09-24"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"                    handleListCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"                case BLAH:","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"                    handleBlahCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"                case BYE:","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"                    exit \u003d handleByeCommand(input, tasks);","lastModifiedDate":"2023-09-25"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-09-12"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"                case MARK:","lastModifiedDate":"2023-09-24"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"                    handleMarkCommand(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-09-12"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"                case UNMARK:","lastModifiedDate":"2023-09-24"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"                    handleUnmarkCommand(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-09-12"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"                case DELETE:","lastModifiedDate":"2023-09-24"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"                    handleDeleteCommand(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"                case DELETEALL:","lastModifiedDate":"2023-09-24"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"                    handleDeleteAllCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-10-12"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"                case FIND:","lastModifiedDate":"2023-10-12"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"                    handleFindCommand(input, tasks);","lastModifiedDate":"2023-10-12"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"                case SORTBY:","lastModifiedDate":"2023-10-12"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"                    handleSortByCommand(input, tasks);","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"                case HELP:","lastModifiedDate":"2023-10-12"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"                    handleHelpCommand(input, tasks);","lastModifiedDate":"2023-10-13"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-10-13"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"                case TODO:","lastModifiedDate":"2023-10-12"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"                case DEADLINE:","lastModifiedDate":"2023-10-12"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"                case EVENT:","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"                    input \u003d input.substring(checkInput.length());","lastModifiedDate":"2023-10-12"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"                    addTaskCommand(input, tasks);","lastModifiedDate":"2023-10-12"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-10-12"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-24"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"        } catch (IllegalArgumentException ie) {","lastModifiedDate":"2023-09-24"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"            addTaskCommand(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"        return exit;","lastModifiedDate":"2023-09-12"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"    private static void handleHelpCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-13"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"        new HelpCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-10-13"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"    private static void addTaskCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"        new AddTaskCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"    private static void handleUnmarkCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"        new UnmarkCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"    private static void handleMarkCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"        new MarkCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"    private static void handleDeleteCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":129,"author":{"gitId":"amber-le"},"content":"        new DeleteCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"    private static void handleDeleteAllCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"        new DeleteAllCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"    private static void handleBlahCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"        new BlahCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"    private static void handleListCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":143,"author":{"gitId":"amber-le"},"content":"        new ListCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":144,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":145,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":146,"author":{"gitId":"amber-le"},"content":"    private static void handleSortByCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":147,"author":{"gitId":"amber-le"},"content":"        new SortByCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-10-12"},{"lineNumber":148,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":149,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":150,"author":{"gitId":"amber-le"},"content":"    private static void handleFindCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":151,"author":{"gitId":"amber-le"},"content":"        new FindCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-10-12"},{"lineNumber":152,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":153,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":154,"author":{"gitId":"amber-le"},"content":"    private static boolean handleByeCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-25"},{"lineNumber":155,"author":{"gitId":"amber-le"},"content":"        new ByeCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-25"},{"lineNumber":156,"author":{"gitId":"amber-le"},"content":"        return true;","lastModifiedDate":"2023-09-12"},{"lineNumber":157,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":158,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":158}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import utils.DateTimeUtils;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.text.ParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.text.SimpleDateFormat;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-07"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.Date;","lastModifiedDate":"2023-10-07"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":" * This class represents a deadline task.","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2023-10-07"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     * It will use for the sort function.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        return time;","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"     * This class represents a deadline task that user input have /by","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     * @param description","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"     * @param timeString","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    public Deadline(String description, String timeString) {","lastModifiedDate":"2023-10-07"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        timeString \u003d timeString.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        LocalDateTime dateTime \u003d DateTimeUtils.parseNextDay(timeString);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"            this.time \u003d dateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        String[] isTime \u003d timeString.split(\" \");","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        if (isTime.length \u003e 1) {","lastModifiedDate":"2023-10-07"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            this.time \u003d handleDateTime(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"            this.time \u003d handleDateTime(timeString + \" 0000\");","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object to the format requirement.","lastModifiedDate":"2023-10-10"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        String timeString \u003d this.time.format(DateTimeFormatter.ofPattern(TIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-10-07"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"                + \" (before: \" + timeString.trim() + \")\";","lastModifiedDate":"2023-10-12"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"     * This method is to save the data to the local file","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        return \"[D]\" + super.toString()","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"                + \" (by: \" + time.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")) + \")\";","lastModifiedDate":"2023-10-07"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"amber-le":71}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import utils.DateTimeUtils;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    public LocalDateTime time;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime time1;","lastModifiedDate":"2023-10-08"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * It will use for the sort function.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        return time;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"     * This class represents a event task that user input only have /from","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"     * @param description","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"     * @param timeString","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"    public Event(String description, String timeString) {","lastModifiedDate":"2023-10-08"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        formatTimeString(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"     * This method will format the time string to the correct format.","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"     * @param timeString the time string from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"     *                   if user never put the time, it will set the time to 0000.","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    private void formatTimeString(String timeString) {","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        timeString \u003d timeString.trim();","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        LocalDateTime dateTime \u003d DateTimeUtils.parseNextDay(timeString);","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        if (dateTime !\u003dnull){","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"            this.time \u003d dateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        String[] isTime \u003d timeString.split(\" \");","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        if (isTime.length \u003e 1) {","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            this.time \u003d handleDateTime(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"            this.time \u003d handleDateTime(timeString + \" 0000\");","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"     * This class represents a event task that user input have /from and /to","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"     * @param description","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"     * @param timeString","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"     * @param timeStringTo","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"    public Event(String description, String timeString, String timeStringTo) {","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        formatTimeString(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"        timeStringTo \u003d timeStringTo.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"        LocalDateTime dateTime \u003d DateTimeUtils.parseNextDay(timeStringTo);","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        if (dateTime !\u003dnull){","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"            this.time1 \u003d dateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"        String[] isTime1 \u003d timeStringTo.split(\" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        if (isTime1.length \u003e 1) {","lastModifiedDate":"2023-10-08"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"            this.time1 \u003d handleDateTime(timeStringTo);","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"            this.time1 \u003d handleDateTime(timeStringTo + \" 0000\");","lastModifiedDate":"2023-10-10"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object to the format requirement.","lastModifiedDate":"2023-10-10"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"        String timeString \u003d this.time.format(DateTimeFormatter.ofPattern(TIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-10-14"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"        if (this.time1 \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"            return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-12"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"                    + \" (from: \" + timeString + \")\";","lastModifiedDate":"2023-10-12"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"        boolean isSameDay \u003d this.time.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"                .equals(this.time1.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")));","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"        String timeString1;","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"        if (isSameDay) {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"            timeString1 \u003d this.time1.format(DateTimeFormatter.ofPattern(\"hh:mma\"));","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"            timeString1 \u003d this.time1.format(DateTimeFormatter.ofPattern(TIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"                + \" (from: \" + timeString + \" ➞ to: \" + timeString1 + \")\";","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"     * This method is to save the data to the local file","lastModifiedDate":"2023-10-10"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"        if (this.time1 \u003d\u003d null) {","lastModifiedDate":"2023-10-08"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"            return \"[E]\" + super.toString()","lastModifiedDate":"2023-10-08"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"                    + \" (from: \" + time.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")) + \")\";","lastModifiedDate":"2023-10-08"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"        return \"[E]\" + super.toString()","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"                + \" (from: \" + time.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")) +","lastModifiedDate":"2023-10-08"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"                \" to: \" + time1.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")) + \")\";","lastModifiedDate":"2023-10-08"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"amber-le":118}},{"path":"src/main/java/task/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * This enum class contains all the keywords that the user can use for the command.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public enum Keyword {","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    LIST, BLAH, BYE, MARK, UNMARK, DELETE, DELETEALL, FIND, HELP, TODO, DEADLINE, EVENT, SORTBY;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":8}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class Task {","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    public static final String TIME_OUTPUT_FORMAT \u003d \"d MMM yyyy, E - hh:mma\";","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    protected String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    protected boolean isDone \u003d false;","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     * @return the status icon of the task","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        return (isDone ? \" ✓ \" : \"҉҉҉\");","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    public void setIsDone(boolean done) {","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        return isDone;","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object to the format requirement.","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime handleDateTime(String time) {","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        // check the format of the time user input","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        if (time.contains(\"/\")) {","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            String[] checkFormat \u003d time.split(\"/\");","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            if (checkFormat[0].length() \u003c\u003d 2) {","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"            } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            String[] checkFormat \u003d time.split(\"-\");","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"            if (checkFormat[0].length() \u003e 2) {","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"            } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        return LocalDateTime.parse(time, formatter);","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"     * @return the type, description, status of the task","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        // Capitalize the first letter of the description","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"        this.description \u003d this.description.substring(0, 1).toUpperCase()","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"                + this.description.substring(1);","lastModifiedDate":"2023-10-08"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-10-11"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"     * This method is to save the data to the local file","lastModifiedDate":"2023-10-10"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        return this.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"amber-le":78}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * This class represents a todo task.","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"     * This is the constructor of the todo task.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * This method returns the string representation of the todo task.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @return the string representation of the todo task.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"amber-le":24}},{"path":"src/main/java/utils/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package utils;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"public class DateTimeUtils {","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    public static LocalDateTime parseNextDay(String dateStr) {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"        if (!Arrays.asList(\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\",","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"                        \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\")","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"                .contains(dateStr.toLowerCase())) {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"            return null;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        List\u003cDayOfWeek\u003e dayOfWeeks \u003d Arrays.asList(DayOfWeek.values());","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        int dayIndex \u003d dayOfWeeks.indexOf(DayOfWeek.valueOf(dateStr.toUpperCase()));","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        int currentDayIndex \u003d now.getDayOfWeek().getValue();","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        int daysToAdd \u003d dayIndex - currentDayIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        if (daysToAdd \u003c 1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            daysToAdd +\u003d 7;","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        // set time to end of day","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        now \u003d now.withHour(23);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        now \u003d now.withMinute(59);","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        return now.plusDays(daysToAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"amber-le":30}},{"path":"src/main/java/utils/DayOfWeek.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package utils;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * This enum class contains all the days of the week.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public enum DayOfWeek {","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    SUN, MON, TUE, WED, THU, FRI, SAT, SUNDAY,","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"amber-le":9}},{"path":"src/test/java/command/AddTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import command.AddTaskCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(){","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand();","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input\", tasks);","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input1\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input2\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(3, tasks.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":22}},{"path":"src/test/java/command/BlahCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"class BlahCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        BlahCommand blahCommand \u003d new BlahCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        blahCommand.handleCommand(\"input\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":20}},{"path":"src/test/java/command/ByeCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"class ByeCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"        ByeCommand byeCommand \u003d new ByeCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"        byeCommand.handleCommand(\"bye\", null);","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"        assertEquals(0, byeCommand.handleCommand(\"bye\", null));","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":15}},{"path":"src/test/java/command/DeleteAllCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"class DeleteAllCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        taskList.add(event);","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        System.out.println(\"Have \" + taskList.size() + \" tasks\");","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        DeleteAllCommand deleteAllCommand \u003d new DeleteAllCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        deleteAllCommand.handleCommand(\"deleteall\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        assertEquals(0, taskList.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":27}},{"path":"src/test/java/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"class DeleteCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        deleteCommand.handleCommand(\"delete 1\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(0, tasks.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":24}},{"path":"src/test/java/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"class ListCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        taskList.add(event);","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        listCommand.handleCommand(\"list\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        assertAll(\"list\",","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"                () -\u003e assertEquals(2, taskList.size()),","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"                () -\u003e assertEquals(\"[T][҉҉҉] Test description\", taskList.get(0).toString()),","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"                () -\u003e assertEquals(\"[E][҉҉҉] Test description (from: 20 Oct 2023, 11PM - Friday)\", taskList.get(1).toString()));","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":29}},{"path":"src/test/java/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"class MarkCommandTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        markCommand.handleCommand(\"1\", taskList);","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        assertEquals(true, todo.getIsDone() );","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":24}},{"path":"src/test/java/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"class UnmarkCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        markCommand.handleCommand(\"mark 1\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        unmarkCommand.handleCommand(\"unmark 1\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        assertEquals(false, todo.getIsDone() );","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":25}},{"path":"src/test/java/io/TaskStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.io.File;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"class TaskStorageTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    void save() {","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        /*generate code to test save function","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        * 1. create a file","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        * 2. create a list of tasks","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        * 3. save the list of tasks","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        * 4. check if the file is created","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        * 5. check if the file is empty","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        * 6. check if the file is not empty","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        */","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        File f \u003d new File(\"./data/craby.txt\");","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        tasks.add(new Deadline(\"test\", \"12/12/2020 1200\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"./data/craby.txt\");","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        assertTrue(f.exists());","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        assertTrue(f.length() \u003e 0);","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        assertFalse(f.length() \u003d\u003d 0);","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        // DO WE NEED TO DELETE THE FILE?","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        f.delete();","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"    void load() {","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        // generate the code to test load function","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        // 1. create a file","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        // 2. create a list of tasks","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        // 3. save the list of tasks","lastModifiedDate":"2023-10-09"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        // 4. load the list of tasks","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        // 5. check if the list of tasks is empty","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        // 6. check if the list of tasks is not empty","lastModifiedDate":"2023-10-09"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        File f \u003d new File(\"./data/craby.txt\");","lastModifiedDate":"2023-10-09"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        tasks.add(new Deadline(\"test\", \"12/12/2020 1200\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"./data/craby.txt\");","lastModifiedDate":"2023-10-09"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-10-09"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks1 \u003d taskStorage.load();","lastModifiedDate":"2023-10-09"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        assertTrue(tasks1.size() \u003d\u003d 1);","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        f.delete();","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":55}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        Deadline deadline \u003d new Deadline(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(\"[D][҉҉҉] Test description (by: 20 Oct 2023, 11PM - Friday)\", deadline.toString());","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    public void toStorageString() {","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        Deadline deadline \u003d new Deadline(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(\"[D][҉҉҉] Test description (by: 2023/10/20 2359)\", deadline.toStorageString());","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":23}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"class EventTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    void testToString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"//        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"//        assertEquals(\"[E][҉҉҉] Test description (from: 20 Oct 2023, 11PM - Friday)\", event.toString());","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    void toStorageString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"[E][҉҉҉] Test description (from: 2023/10/20 2359)\", event.toStorageString());","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":20}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"class TaskTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    void getStatusIcon() {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    void setDone(boolean b) {","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"         Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"         task.setIsDone(true);","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"         assertEquals(true, task.getIsDone());","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"         task.setIsDone(false);","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"         assertEquals(false, task.getIsDone());","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    void getIsDone() {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        assertEquals(false, task.getIsDone());","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"    void handleDateTime() {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"2023-10-20T23:59\", event.handleDateTime(\"2023/10/20 2359\").toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"    void testToString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"[҉҉҉] Test description\", task.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    void toStorageString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"[҉҉҉] Test description\", task.toStorageString());","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":47}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"find BOOK","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"  list","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"todo Task 1","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"Task 2 /by                    2023/10/20 2359","lastModifiedDate":"2023-10-07"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"deadline Task 3 /by 2023-06-27","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"   deadline return book /by 2/1/2023 1800","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"orientation event a /from 4/10/2019","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"Event team project meeting /from 2/10/2019 0900 /to 2/10/2019 1130","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"   mark 3","lastModifiedDate":"2023-10-11"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"mark 5","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"unmark 3","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"mark 9","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"LisT","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"find BOOK","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"find Amber","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"find 2023","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"find love","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"   list","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"deleteall","lastModifiedDate":"2023-09-25"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"bye","lastModifiedDate":"2023-09-01"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"amber-le":24}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"java -classpath ..\\bin craby.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/craby/*.java","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":1,"-":37}}]
