[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"# craby.Duke project template","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"3. After that, locate the `src/main/java/craby.Duke.java` file, right-click it, and choose `Run craby.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2023-10-17"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2023-10-17"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":2,"-":22}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    mainClass.set(\"craby.Duke\")","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    archiveBaseName \u003d \"craby\"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":2,"-":40}},{"path":"data/amber.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"[D][ ✓ ] Task to check sort by date - on top after use sort date/d (by: 1993/7/3 0530)","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"[E][҉҉҉] Chang \u0026 Felicia\u0027s wedding (from: 2023/11/4 1800 to: 2023/11/4 2200)","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"[D][ ✓ ] TIC2002 quiz (by: 2023/11/4 2200)","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"[E][҉҉҉] TMA2031 - Final Exam (from: 2023/11/25 0900 to: 2023/11/25 1100)","lastModifiedDate":"2023-10-16"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"[E][҉҉҉] TIC2002 - Final Exam (from: 2023/12/4 1300 to: 2023/12/4 1430)","lastModifiedDate":"2023-10-16"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"[E][҉҉҉] Learn front end (from: 2023/12/4 1300 to: 2023/12/31 2300)","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"[D][ ✓ ] TIC3901 - Presentation 1 (by: 2024/1/1 1200)","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] TIC3901 - Report 2 (by: 2024/1/28 0000)","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Video call with Grandpa (by: 2024/3/1 1200)","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] TIC3901 - Report 3 (by: 2024/3/17 0000)","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] TIC3901 - Presentation 2 (by: 2024/4/14 0000)","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"[T][҉҉҉] Oder FoodPanda for dinner every weekday","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"[T][ ✓ ] Drink more water","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"[T][҉҉҉] Check undo mark","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"amber-le":14}},{"path":"data/felix.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"[E][҉҉҉] Test sort by date: this one will on top if system correct (from: 2023/10/19 2359)","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"[D][҉҉҉] Test sort by type (by: 2024/1/1 1200)","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"[E][҉҉҉] Test sort by date (from: 2024/1/1 1300)","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"[T][ ✓ ] Test mark","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"[T][҉҉҉] Test undo mark","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"[T][҉҉҉] Test unmark","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"[T][҉҉҉] Test undo delete","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"amber-le":7}},{"path":"src/main/java/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":" * AddTaskCommand class is a class that handle the add command.","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":" * It implements the CommandInterface.","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the deadline format.","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the event format.","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the todo format.","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"public class AddTaskCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the add command.","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"     * It will add the task to the list.","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"     * It will print out the add message.","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"     * It will print out the date time parse exception message.","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        if (input.contains(\"/by\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"            String[] formatDeadline \u003d input.split(\"/by\");","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            handleBy(input, tasks, formatDeadline);","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        if (input.contains(\"/from\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"            String[] formatEvent \u003d input.split(\"/from\");","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"            handleFrom(input, tasks, formatEvent);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        tasks.add(new Todo(input));","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        printAddMessage(input, tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"    private static void handleFrom(String input, List\u003cTask\u003e tasks, String[] formatEvent) {","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        if (formatEvent.length \u003c\u003d 1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"            handleTo(tasks, formatEvent);","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"            printAddMessage(input, tasks);","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        } catch (DateTimeException d) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"    private static void handleTo(List\u003cTask\u003e tasks, String[] formatEvent) {","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"        if (formatEvent[1].contains((\"/to\"))) {","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"            String[] timeEvent \u003d formatEvent[1].split(\"/to\");","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"            tasks.add(new Event(formatEvent[0].trim(), timeEvent[0], timeEvent[1]));","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"            tasks.add(new Event(formatEvent[0].trim(), formatEvent[1]));","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"    private static void handleBy(String input, List\u003cTask\u003e tasks, String[] formatDeadline) {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"        if (formatDeadline.length \u003c\u003d 1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"            tasks.add(new Deadline(formatDeadline[0].trim(), formatDeadline[1]));","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"            printAddMessage(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":83}},{"path":"src/main/java/command/BlahCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class BlahCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"     * This method will print out the blah message.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        printBlahMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":19}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * ByeCommand class is a class that handle the bye command.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * It implements the CommandInterface.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the bye command.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"public class ByeCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * This method will print out the bye message.","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        printByeMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":24}},{"path":"src/main/java/command/CommandInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":" * CommandInterface is an interface that handle the command.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the command.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public interface CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    void handleCommand(String input, List\u003cTask\u003e tasks);","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":13}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class DeleteCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * This method will delete the task from the list.","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        input \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        assert input.length() \u003e\u003d 6;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        String checkDelete \u003d input.substring(6).trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        if (checkDelete.equals(\"all\")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            printDeleteAllMessage();","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            tasks.clear();","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            int checkNum \u003d (Integer.parseInt(checkDelete)) - 1;","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            if (checkNum \u003e\u003d tasks.size() || checkNum \u003c 0) {","lastModifiedDate":"2023-09-12"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"                printNumOutOfTask(tasks.size());","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"                return;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"            printDeleteMessage(tasks.get(checkNum).toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            tasks.remove(checkNum);","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            printCountTask(tasks.size());","lastModifiedDate":"2023-10-11"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException nfe) {","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"            printDeleteErrorMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":45}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"public class FindCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     * This method will find the user keyword from the list and print out.","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        assert inputArr.length \u003e 1;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        String keyword \u003d inputArr[1].trim().toLowerCase();","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        List\u003cString\u003e listFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            String tmpAdd \u003d task.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            boolean isContain \u003d tmpAdd.toLowerCase().contains(keyword);","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            if (isContain) {","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"                listFound.add(tmpAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        if (listFound.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"            printNoMatchingTasks();","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            printFindMessage(listFound, keyword);","lastModifiedDate":"2023-10-19"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"amber-le":43}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.HelpMessage;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * This class will print out the help message.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class HelpCommand extends HelpMessage implements CommandInterface {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * This method will print out all the tasks in the list.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        printHelpMessage();","lastModifiedDate":"2023-10-13"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"amber-le":25}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class ListCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * This method will print out all the tasks in the list.","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"            printEmptyList();","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        printListMessage(tasks);","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":27}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class MarkCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * This method will mark the task as done.","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        input \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            Integer checkNum \u003d getInteger(input, tasks);","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            if (checkNum \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"                return;","lastModifiedDate":"2023-10-21"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            tasks.get(checkNum).setIsDone(true);","lastModifiedDate":"2023-10-11"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            printMarkMessage(tasks.get(checkNum).toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            printMarkNumFormatExceptionMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"    private static Integer getInteger(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        String checkMark \u003d input.substring(4).trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        int checkNum \u003d (Integer.parseInt(checkMark)) - 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        if (checkNum \u003e\u003d tasks.size() || checkNum \u003c 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            printNumOutOfTask(tasks.size());","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"            return null;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        return checkNum;","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":49}},{"path":"src/main/java/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import io.Sort;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"public class SortCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        List\u003cString\u003e allowedSort \u003d List.of(\"type\", \"t\", \"type-r\", \"tr\", \"date\", \"d\");","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        String checkSort \u003d input.substring(4).trim().toLowerCase();","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        if (allowedSort.contains(checkSort)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"            Sort sort \u003d new Sort();","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            sort.sort(checkSort, tasks);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"            printListMessage(tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"            printSortErrorMessage();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"amber-le":30}},{"path":"src/main/java/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.Stack;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class UndoCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    public static Stack\u003cList\u003cTask\u003e\u003e stackTaskList \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public static Stack\u003cString\u003e stackInput \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    private static final List\u003cString\u003e NOT_ALLOWED_UNDO \u003d Arrays.asList(\"list\", \"find\", \"help\", \"undo\", \"blah\");","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    private static boolean isPutInStack(String input) {","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        input \u003d inputArr[0].trim().toLowerCase();","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        return NOT_ALLOWED_UNDO.contains(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    public static void putInToStack(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        if (!isPutInStack(input)) {","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"            List\u003cTask\u003e cloneTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"                cloneTasks.add(task.clone());","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            stackTaskList.push(cloneTasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            stackInput.push(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        if (stackTaskList.isEmpty() || stackInput.isEmpty()) {","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            printUndoError();","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        String command \u003d stackInput.pop().toLowerCase();","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        String customizeMessage \u003d \"add - \";","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        if (command.contains(\"delete\") || command.contains(\"mark\") || command.contains(\"sort\")) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"            customizeMessage \u003d \" \";","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e prevTask \u003d stackTaskList.peek();","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        stackTaskList.pop();","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        tasks.clear();","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        tasks.addAll(prevTask);","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        printUndoMessage(command, customizeMessage);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"amber-le":54}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * This class represents a unmark command.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class UnmarkCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * This method will mark the task as done.","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        input \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            Integer checkNum \u003d getInteger(input, tasks);","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            if (checkNum \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"                return;","lastModifiedDate":"2023-10-21"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            tasks.get(checkNum).setIsDone(false);","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            printUnmarkMessage(tasks.get(checkNum).toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-11"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            printUnmarkNumFormatExceptionMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    private static Integer getInteger(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        int tmp \u003d input.indexOf(\"k\");","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        assert tmp !\u003d -1;","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        String checkMark \u003d input.substring(tmp + 1).trim();","lastModifiedDate":"2023-10-25"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        int checkNum \u003d (Integer.parseInt(checkMark)) - 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        if (checkNum \u003e\u003d tasks.size() || checkNum \u003c 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"            printNumOutOfTask(tasks.size());","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            return null;","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        return checkNum;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":52}},{"path":"src/main/java/craby/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package craby;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Craby;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"     * This is the main method.","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"     * @param args the input from the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"        Craby.crabySystem();","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"amber-le":10,"-":3}},{"path":"src/main/java/exceptions/InputBlankException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package exceptions;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * InputBlankException is an exception that handle the blank input.","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class InputBlankException extends Exception {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":8}},{"path":"src/main/java/exceptions/MyCustomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package exceptions;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * MyCustomException is an exception that handle the blank description.","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class MyCustomException extends Throwable {","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"amber-le":7}},{"path":"src/main/java/io/CrabyMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":" * CrabyMessage class is a class that store all the messages that CrabY will use.","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * because the file quite long, I separate the help message into another file.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the command.","lastModifiedDate":"2023-10-11"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"public class CrabyMessage {","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public static final String LINE \u003d \"  ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈◦•✩•◦┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\";","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    public static final String SPACES \u003d \"   \";","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    public static void printHello() {","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"                \"   ____                  _      __   __\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"                \"  / ___|  _ __    __ _  | |__   \\\\ \\\\ / /\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"                \" | |     | \u0027__|  / _` | | \u0027_ \\\\   \\\\ V /\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"                \" | |___  | |    | (_| | | |_) |   | |\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"                \"  \\\\____| |_|     \\\\__,_| |_.__/    |_|\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"                System.lineSeparator() + LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Hello! I\u0027m CrabY 🦀, what\u0027s your name? ˃ᴗ˂\");","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    public static void printEmptyName() {","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! The name cannot be empty.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"NOTE: if you use the same name that used before\");","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤You can continue to use the previous list of tasks.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"    public static void printNameError() {","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! The name cannot contain special character.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"NOTE: if you use the same name that used before\");","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤You can continue to use the previous list of tasks.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-25"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"    public static void printNameSameWithKeyWord() {","lastModifiedDate":"2023-10-25"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Before you start, pls give me your name. (your input cannot same with the keyword)\");","lastModifiedDate":"2023-10-25"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"NOTE: if you use the same name that used before\");","lastModifiedDate":"2023-10-25"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤You can continue to use the previous list of tasks.\");","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"    public static void printFirstMessage(String name) {","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Hi \" + name + \" ♡, How can I help you today?\");","lastModifiedDate":"2023-10-19"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤Type \\\"help\\\" if you sure how to work with CrabY ☘\"","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"                + System.lineSeparator() + LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Bye Amber ♡, hope to see you again soon!\");","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        System.out.println(","lastModifiedDate":"2023-10-11"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"                \"               __   ♡   __\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"                        \"              /           \\\\\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"                        \"             (  / @   @ \\\\  )\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"                        \"              \\\\(_ _\\\\_/_ _)/\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"                        \"            (\\\\ `-/     \\\\-\u0027 /)\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"                        \"             \\\"\u003d\u003d\u003d\\\\     /\u003d\u003d\u003d\\\"\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"                        \"              .\u003d\u003d\u0027)___(`\u003d\u003d.\" + System.lineSeparator() +","lastModifiedDate":"2023-10-11"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"                        \"               .\u003d\u0027     `\u003d.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"    public static void printInputBlankExceptionMessage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! The description cannot be empty.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤Type \\\"help\\\" if you need to see the list of command\" + System.lineSeparator() + LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"    public static void printEmptyListForAllCommand(String input) {","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! your list are empty.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Please add some tasks before use \" + inputArr[0].trim() + \" ☘\");","lastModifiedDate":"2023-10-19"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"    public static void printNumOutOfTask(int input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        System.out.print(SPACES + \"Oops!!! Something wrong! Your list only have 1 ➞ \");","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"        System.out.println(input + \" tasks.\");","lastModifiedDate":"2023-10-11"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Please try again with another number ☘\");","lastModifiedDate":"2023-10-19"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"    public static void printAddMessage(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-11"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"✎ added:\");","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ \" + input + \" - to your list\");","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"        printCountTask(tasks.size());","lastModifiedDate":"2023-10-12"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"    public static void printCountTask(int input) {","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Now you have: \" + input + \" tasks in your list \\uD83D\\uDDCE.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"    public static void printDateTimeParseExceptionMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Please enter in this format after used /by or /from and /to\");","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: \\\"/by dd/mm/yyyy hhmm\\\" e.g: /by 12/12/2020 1800\");","lastModifiedDate":"2023-10-19"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"          or: \\\"/by mon\\\" - CrabY will put the date to the next Monday\");","lastModifiedDate":"2023-10-19"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"    //Print Delete all Message","lastModifiedDate":"2023-10-14"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"    public static void printDeleteAllMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"✂ Ok, I clean up all your tasks\");","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Let\u0027s start a new checklist\");","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"    // Print DeleteCommand Message","lastModifiedDate":"2023-10-11"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"    public static void printDeleteMessage(String input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"✂ Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-19"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ \" + input + \" - in your list\");","lastModifiedDate":"2023-10-19"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"    public static void printDeleteErrorMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: delete [integer] e.g: delete 1\");","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"          or: deleteall to delete all the tasks in your list.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"    //Print ListCommand Message","lastModifiedDate":"2023-10-11"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"    public static final String PRINT_END_OF_LIST \u003d SPACES + \" ꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦\";","lastModifiedDate":"2023-10-19"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"    public static final String PRINT_START_OF_LIST \u003d SPACES + \" ╭─────────────────────────────────╮\";","lastModifiedDate":"2023-10-19"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"    public static void printEmptyList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_START_OF_LIST);","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ░░░░ Your list is empty! ░░░░\");","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"     Let\u0027s start a new checklist\");","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_END_OF_LIST);","lastModifiedDate":"2023-10-19"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"    public static void printListMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-11"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_START_OF_LIST);","lastModifiedDate":"2023-10-19"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"  Here are the tasks in your list:\");","lastModifiedDate":"2023-10-19"},{"lineNumber":129,"author":{"gitId":"amber-le"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"            if (i \u003c\u003d 9) {","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"                System.out.println(\"   \" + i + \".  \" + tasks.get(i - 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"            } else if (i \u003e 99) {","lastModifiedDate":"2023-10-11"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"                System.out.println(\"   \" + i + \" \" + tasks.get(i - 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"            } else {","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"                System.out.println(\"   \" + i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_END_OF_LIST);","lastModifiedDate":"2023-10-19"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"    //Print MarkCommand Message","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"    public static void printMarkMessage(String input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":143,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Nice! I\u0027ve marked this task as DONE ツ:\");","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ \" + input);","lastModifiedDate":"2023-10-19"},{"lineNumber":145,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":146,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":147,"author":{"gitId":"amber-le"},"content":"    public static void printMarkNumFormatExceptionMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":148,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":149,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: mark [integer] e.g: mark 1\");","lastModifiedDate":"2023-10-19"},{"lineNumber":150,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":151,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"amber-le"},"content":"    //Print UnmarkCommand Message","lastModifiedDate":"2023-10-11"},{"lineNumber":153,"author":{"gitId":"amber-le"},"content":"    public static void printUnmarkMessage(String input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":154,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"OK, I\u0027ve marked this task as ☉⌓☉ NOT DONE yet:\");","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ \" + input);","lastModifiedDate":"2023-10-19"},{"lineNumber":156,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":157,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":158,"author":{"gitId":"amber-le"},"content":"    public static void printUnmarkNumFormatExceptionMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":159,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":160,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: unmark [integer] e.g: unmark 1\");","lastModifiedDate":"2023-10-19"},{"lineNumber":161,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":162,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":163,"author":{"gitId":"amber-le"},"content":"    //Print FindCommand Message","lastModifiedDate":"2023-10-12"},{"lineNumber":164,"author":{"gitId":"amber-le"},"content":"    public static void printFindMessage(List\u003cString\u003e listFound, String keyword) {","lastModifiedDate":"2023-10-19"},{"lineNumber":165,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"⌖ Here are the list task matching with \\\"\" + keyword + \"\\\":\");","lastModifiedDate":"2023-10-19"},{"lineNumber":166,"author":{"gitId":"amber-le"},"content":"        for (String s : listFound) {","lastModifiedDate":"2023-10-12"},{"lineNumber":167,"author":{"gitId":"amber-le"},"content":"            System.out.println(SPACES + s);","lastModifiedDate":"2023-10-19"},{"lineNumber":168,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":169,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":170,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":171,"author":{"gitId":"amber-le"},"content":"    public static void printNoMatchingTasks() {","lastModifiedDate":"2023-10-12"},{"lineNumber":172,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"✘ No matching tasks in your list.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Please try with another keyword ☘\");","lastModifiedDate":"2023-10-19"},{"lineNumber":174,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":175,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":176,"author":{"gitId":"amber-le"},"content":"    //Print SortByCommand Message","lastModifiedDate":"2023-10-12"},{"lineNumber":177,"author":{"gitId":"amber-le"},"content":"    public static void printSortErrorMessage() {","lastModifiedDate":"2023-10-16"},{"lineNumber":178,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":179,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: sort [type/typerevert/date] e.g: sort type\");","lastModifiedDate":"2023-10-19"},{"lineNumber":180,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":181,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":182,"author":{"gitId":"amber-le"},"content":"    //Print BlahCommand Message","lastModifiedDate":"2023-10-14"},{"lineNumber":183,"author":{"gitId":"amber-le"},"content":"    public static void printBlahMessage() {","lastModifiedDate":"2023-10-14"},{"lineNumber":184,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! I\u0027m sorry, but I don\u0027t know what that means ☘\");","lastModifiedDate":"2023-10-19"},{"lineNumber":185,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":186,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":187,"author":{"gitId":"amber-le"},"content":"    //Print UndoCommand Message","lastModifiedDate":"2023-10-15"},{"lineNumber":188,"author":{"gitId":"amber-le"},"content":"    public static void printUndoMessage(String command, String customizeMessage) {","lastModifiedDate":"2023-10-17"},{"lineNumber":189,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Undo Successful!!!\");","lastModifiedDate":"2023-10-19"},{"lineNumber":190,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤I\u0027ve undo your command:\" + customizeMessage + command);","lastModifiedDate":"2023-10-19"},{"lineNumber":191,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":192,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":193,"author":{"gitId":"amber-le"},"content":"    public static void printUndoError() {","lastModifiedDate":"2023-10-15"},{"lineNumber":194,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Undo unsuccessful. I already undo all the input you just entered.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":195,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤Please try again with another command ☘\");","lastModifiedDate":"2023-10-19"},{"lineNumber":196,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":197,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":198,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":199,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"amber-le":199}},{"path":"src/main/java/io/HelpMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import static io.CrabyMessage.SPACES;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import static io.CrabyMessage.LINE;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class HelpMessage {","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"        System.out.println(","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ❉⊱•  Welcome to Craby\u0027s help page! •⊰❉\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"                SPACES + \"╚════ ▣ Here are the list of commands: ▣ ════╝\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"                SPACES + \"1.  list - list all the tasks\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. list\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"                SPACES + \"2.  \u003ctask description\u003e - add a todo task\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. read book\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"                SPACES + \"3.  \u003ctask description\u003e /by \u003cdd/mm/yyy hhmm\u003e - add a deadline task\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    Note: you can use /by Mon -\u003e CrabY will automatically fill the date (next Monday) for you\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. TIC2002 quiz 8 /by 2/12/2023 1800\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"                SPACES + \"4.  event \u003ctask description\u003e /from \u003cdd/mm/yyy hhmm\u003e /to \u003cdd/mm/yyy hhmm\u003e - add an event task\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    Note: you can use /from Fri -\u003e CrabY will automatically fill the date (next Friday) for you\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. project meeting /from 2/12/2023 1800 /to 2/12/2023 2000\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"                SPACES + \"5.  mark \u003ctask number\u003e - mark a task as DONE\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. mark 1\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"                SPACES + \"6.  unmark \u003ctask number\u003e - mark a task as UNDONE\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. unmark 1\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"                SPACES + \"7.  delete \u003ctask number\u003e - delete a task\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. delete 1\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"                SPACES + \"8.  delete all - delete all the tasks\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. delete all\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"                SPACES + \"9.  find \u003ckeyword\u003e - find a task with the keyword\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. find book\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"                SPACES + \"10. sort \u003ctype/type-r/t/tr/date/d\u003e - sort the list by type or date\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    Note: type-r or tr will sort the list by type in revert order\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. sort t\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"                SPACES + \"11. undo - undo your previous command (except: list, find, help, blah commands)\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. undo\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"                SPACES + \"12. help - show the list of commands\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. help\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"                SPACES + \"13. bye - exit the program\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"                SPACES + \"    ╰┈➤e.g. bye\" + System.lineSeparator() + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"                SPACES + \"*** NOTE: if you use the same name that used before\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"                SPACES + \"╰┈➤CrabY will load the data and you can continue to use the previous list of tasks.\" + System.lineSeparator() +","lastModifiedDate":"2023-10-19"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"                LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"amber-le":58}},{"path":"src/main/java/io/Sort.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"public class Sort {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public void sort(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        if (input.equals(\"type\") || input.equals(\"t\")) {","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"            System.out.println(\"   Sorting by type...\");","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"            tasks.sort(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"                @Override public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"                    return task1.toString().compareTo(task2.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"            });","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        } else if (input.equals(\"type-r\") || input.equals(\"tr\")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"            System.out.println(\"   Sorting by type revert order...\");","lastModifiedDate":"2023-10-16"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            tasks.sort(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"                @Override public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"                    return task2.toString().compareTo(task1.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            });","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            System.out.println(\"   Sorting by date...\");","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            tasks.sort(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"                @Override public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"                    LocalDateTime task1Time \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"                    LocalDateTime task2Time \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"                    if (task1 instanceof Deadline) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"                        task1Time \u003d ((Deadline) task1).getTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"                    } else if (task1 instanceof Event) {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"                        task1Time \u003d ((Event) task1).getFromTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"                    }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"                    if (task2 instanceof Deadline) {","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"                        task2Time \u003d ((Deadline) task2).getTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"                    } else if (task2 instanceof Event) {","lastModifiedDate":"2023-10-12"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"                        task2Time \u003d ((Event) task2).getFromTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"                    }","lastModifiedDate":"2023-10-12"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"                    if (task1Time \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"                        return 1;","lastModifiedDate":"2023-10-12"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"                    }","lastModifiedDate":"2023-10-12"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"                    if (task2Time \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"                        return -1;","lastModifiedDate":"2023-10-12"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"                    }","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"                    return task1Time.compareTo(task2Time);","lastModifiedDate":"2023-10-12"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"            });","lastModifiedDate":"2023-10-12"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"amber-le":55}},{"path":"src/main/java/io/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"import java.io.File;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"public class TaskStorage {","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    String filePath;","lastModifiedDate":"2023-09-24"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    private final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    File folder \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    File file;","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    public TaskStorage(String fileName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        file \u003d new File(DIRECTORY_PATH + \"/\" + fileName);","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        this.filePath \u003d DIRECTORY_PATH + \"/\" + fileName;","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"     * This method will save the tasks into the file.","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"     * If the file does not exist, it will create a new file.","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"     * If the file is empty, it will delete the file.","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            boolean mkdir \u003d folder.mkdir();","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            assert mkdir;","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"                content.append(task.toStorageString());","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"                content.append(System.lineSeparator());","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            //assert file.exists();","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            writer.write(content.toString());","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"            writer.close();","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"        // delete the file if it is empty","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        if (file.exists() \u0026\u0026 file.length() \u003d\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"            file.delete();","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"     * This method will load the tasks from the file same name as the username.","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"     * If the file does not exist, it will create a new file.","lastModifiedDate":"2023-10-25"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"     * @return the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-24"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"            try {","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-09-24"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"                loadLine(reader, tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"                reader.close();","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-10-21"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"                ;","lastModifiedDate":"2023-10-21"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"            save(tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"        return tasks;","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"    private static void loadLine(BufferedReader reader, List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"        String line;","lastModifiedDate":"2023-09-24"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-24"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"            boolean isDone \u003d isDone(line);","lastModifiedDate":"2023-10-14"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"            addByType(tasks, line, isDone);","lastModifiedDate":"2023-10-14"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"    private static void addByType(List\u003cTask\u003e tasks, String line, boolean isDone) {","lastModifiedDate":"2023-10-14"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"        assert line.length() \u003e 9;","lastModifiedDate":"2023-10-21"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"        char checkType \u003d line.charAt(1);","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"        String content \u003d line.substring(9);","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"        switch (checkType) {","lastModifiedDate":"2023-10-14"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-09-24"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"                Deadline deadline \u003d getDeadline(isDone, content);","lastModifiedDate":"2023-10-25"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"                tasks.add(deadline);","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"                Event event \u003d getEvent(isDone, content);","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"                tasks.add(event);","lastModifiedDate":"2023-10-25"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"            default:","lastModifiedDate":"2023-10-25"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"                Todo todo \u003d new Todo(content);","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"                todo.setIsDone(isDone);","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"                tasks.add(todo);","lastModifiedDate":"2023-10-25"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"    private static Deadline getDeadline(boolean isDone, String content) {","lastModifiedDate":"2023-10-25"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"        String[] formatDeadline \u003d content.split(\" \\\\(by:\");","lastModifiedDate":"2023-09-24"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"        assert formatDeadline.length \u003e 0;","lastModifiedDate":"2023-10-21"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"        String tmp \u003d formatDeadline[1].substring(0, formatDeadline[1].length() - 1);","lastModifiedDate":"2023-10-07"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"        Deadline deadline \u003d new Deadline(formatDeadline[0], tmp);","lastModifiedDate":"2023-10-07"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"        deadline.setIsDone(isDone);","lastModifiedDate":"2023-10-11"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"        return deadline;","lastModifiedDate":"2023-10-25"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"    private static Event getEvent(boolean isDone, String content) {","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"        String[] formatEvent \u003d content.split(\" \\\\(from:\");","lastModifiedDate":"2023-09-24"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"        assert formatEvent.length \u003e 0;","lastModifiedDate":"2023-10-21"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"        String time \u003d formatEvent[1];","lastModifiedDate":"2023-09-24"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"        time \u003d time.substring(0, time.length() - 1);","lastModifiedDate":"2023-09-24"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"        Event event;","lastModifiedDate":"2023-10-08"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"        if (time.contains(\"to:\")) {","lastModifiedDate":"2023-10-08"},{"lineNumber":129,"author":{"gitId":"amber-le"},"content":"            String[] tmp1 \u003d time.split(\" to: \");","lastModifiedDate":"2023-10-08"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"            event \u003d new Event(formatEvent[0], tmp1[0], tmp1[1]);","lastModifiedDate":"2023-10-08"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"            event \u003d new Event(formatEvent[0], time);","lastModifiedDate":"2023-10-10"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"        event.setIsDone(isDone);","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"        return event;","lastModifiedDate":"2023-10-25"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"    private static boolean isDone(String line) {","lastModifiedDate":"2023-10-14"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"        boolean isDone \u003d false;","lastModifiedDate":"2023-10-14"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"        assert line.length() \u003e 5;","lastModifiedDate":"2023-10-21"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"        if (line.charAt(5) \u003d\u003d \u0027✓\u0027) {","lastModifiedDate":"2023-10-14"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"            isDone \u003d true;","lastModifiedDate":"2023-10-14"},{"lineNumber":143,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-25"},{"lineNumber":144,"author":{"gitId":"amber-le"},"content":"        return isDone;","lastModifiedDate":"2023-10-14"},{"lineNumber":145,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":146,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":146}},{"path":"src/main/java/task/Craby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"import command.AddTaskCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import command.UndoCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import command.DeleteCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import command.ListCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import command.MarkCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import command.SortCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import command.BlahCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import command.ByeCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import command.FindCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import command.HelpCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"import command.UnmarkCommand;","lastModifiedDate":"2023-10-18"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"import exceptions.MyCustomException;","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"import exceptions.InputBlankException;","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"import io.TaskStorage;","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"import java.util.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"import static command.UndoCommand.putInToStack;","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"import java.util.stream.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":" * This class is the main class of the program.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":" * It will handle the input from the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"public class Craby extends CrabyMessage {","lastModifiedDate":"2023-09-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    private static TaskStorage taskStorage;","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    private static final String REGEX \u003d \".*[^a-zA-Z0-9\\\\s].*\";","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     * This method will print out the logo and the hello message.","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"     * It will also handle the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    public static void crabySystem() {","lastModifiedDate":"2023-10-18"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        printHello();","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        String name \u003d checkName(scanner);","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        assert name !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        printFirstMessage(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        taskStorage \u003d new TaskStorage(name.toLowerCase() + \".txt\");","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d taskStorage.load();","lastModifiedDate":"2023-09-24"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        while (true) {","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            input \u003d input.trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            boolean exit \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"            putInToStack(input, tasks); // use for undo command","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"                exit \u003d handleInput(input, tasks);","lastModifiedDate":"2023-09-25"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            } catch (InputBlankException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"                printInputBlankExceptionMessage();","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"            if (exit) {","lastModifiedDate":"2023-09-12"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"    private static String checkName(Scanner scanner) {","lastModifiedDate":"2023-10-19"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        String name \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-10-19"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"        while (name.isBlank()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"            printEmptyName();","lastModifiedDate":"2023-10-19"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"            name \u003d scanner.nextLine();","lastModifiedDate":"2023-10-19"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"        Matcher matcher \u003d pattern.matcher(name);","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"        while (matcher.find()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"            printNameError();","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"            name \u003d scanner.nextLine();","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        boolean isKeyword \u003d isKeyword(name);","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        while (isKeyword) {","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"            printNameSameWithKeyWord();","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"            name \u003d scanner.nextLine();","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"            isKeyword \u003d isKeyword(name);","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"        return name;","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"    private static boolean isKeyword(String name) {","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"        return Stream.of(\"list\", \"blah\", \"bye\", \"mark\", \"unmark\", \"delete\", \"find\", \"sort\", \"help\", \"undo\")","lastModifiedDate":"2023-10-25"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"                .anyMatch(name.toLowerCase()::equalsIgnoreCase);","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"     * This method will handle the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-11"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-09"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"     * @return true if the user input bye.","lastModifiedDate":"2023-10-09"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"     * @throws InputBlankException if the input is blank.","lastModifiedDate":"2023-10-09"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"    private static boolean handleInput(String input, List\u003cTask\u003e tasks) throws InputBlankException {","lastModifiedDate":"2023-09-25"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"            throw new InputBlankException();","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"        boolean exit \u003d false;","lastModifiedDate":"2023-09-12"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"        String checkInput;","lastModifiedDate":"2023-09-12"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"            checkInput \u003d input.split(\" \")[0];","lastModifiedDate":"2023-09-12"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"            throw new InputBlankException();","lastModifiedDate":"2023-09-12"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"        checkInput \u003d checkInput.toUpperCase().trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"        if (isBlankDescription(checkInput, exit)) {","lastModifiedDate":"2023-10-25"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"            return exit;","lastModifiedDate":"2023-10-25"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-24"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"            Keyword keyWords \u003d Keyword.valueOf(checkInput);","lastModifiedDate":"2023-09-24"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"            switch (keyWords) {","lastModifiedDate":"2023-09-24"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"            case LIST:","lastModifiedDate":"2023-09-24"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"                handleListCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"            case BLAH:","lastModifiedDate":"2023-09-24"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"                handleBlahCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"            case BYE:","lastModifiedDate":"2023-09-24"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"                handleByeCommand(input, tasks);","lastModifiedDate":"2023-10-21"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"                exit \u003d true;","lastModifiedDate":"2023-10-21"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"            case MARK:","lastModifiedDate":"2023-09-24"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"                handleMarkCommand(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"            case UNMARK:","lastModifiedDate":"2023-09-24"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"                handleUnmarkCommand(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"            case DELETE:","lastModifiedDate":"2023-09-24"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"                handleDeleteCommand(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"            case FIND:","lastModifiedDate":"2023-10-12"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"                handleFindCommand(input, tasks);","lastModifiedDate":"2023-10-12"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-12"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"            case SORT:","lastModifiedDate":"2023-10-16"},{"lineNumber":129,"author":{"gitId":"amber-le"},"content":"                handleSortByCommand(input, tasks);","lastModifiedDate":"2023-10-12"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-12"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"            case HELP:","lastModifiedDate":"2023-10-12"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"                handleHelpCommand(input, tasks);","lastModifiedDate":"2023-10-13"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-13"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"            case UNDO:","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"                handleUndoCommand(input, tasks);","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"            case TODO:","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"            case DEADLINE:","lastModifiedDate":"2023-10-12"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"            case EVENT:","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"            default:","lastModifiedDate":"2023-10-25"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"                input \u003d input.substring(checkInput.length());","lastModifiedDate":"2023-10-12"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"                addTaskCommand(input, tasks);","lastModifiedDate":"2023-10-12"},{"lineNumber":143,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":145,"author":{"gitId":"amber-le"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":146,"author":{"gitId":"amber-le"},"content":"            addTaskCommand(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":147,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":148,"author":{"gitId":"amber-le"},"content":"        return exit;","lastModifiedDate":"2023-09-12"},{"lineNumber":149,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":150,"author":{"gitId":"amber-le"},"content":"    private static boolean isBlankDescription(String checkInput, boolean exit) {","lastModifiedDate":"2023-10-25"},{"lineNumber":151,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":152,"author":{"gitId":"amber-le"},"content":"            if (checkInput.equals(\"/FROM\") || checkInput.equals(\"/BY\") || checkInput.equals(\"/TO\")) {","lastModifiedDate":"2023-10-25"},{"lineNumber":153,"author":{"gitId":"amber-le"},"content":"                throw new MyCustomException();","lastModifiedDate":"2023-10-25"},{"lineNumber":154,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":155,"author":{"gitId":"amber-le"},"content":"        } catch (MyCustomException e) {","lastModifiedDate":"2023-10-25"},{"lineNumber":156,"author":{"gitId":"amber-le"},"content":"            printInputBlankExceptionMessage();","lastModifiedDate":"2023-10-25"},{"lineNumber":157,"author":{"gitId":"amber-le"},"content":"            return true;","lastModifiedDate":"2023-10-25"},{"lineNumber":158,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":159,"author":{"gitId":"amber-le"},"content":"        return false;","lastModifiedDate":"2023-10-25"},{"lineNumber":160,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":161,"author":{"gitId":"amber-le"},"content":"    private static void handleUndoCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"amber-le"},"content":"        new UndoCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-10-15"},{"lineNumber":163,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-10-15"},{"lineNumber":164,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":165,"author":{"gitId":"amber-le"},"content":"    private static void handleHelpCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-13"},{"lineNumber":166,"author":{"gitId":"amber-le"},"content":"        new HelpCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-10-13"},{"lineNumber":167,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":168,"author":{"gitId":"amber-le"},"content":"    private static void addTaskCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":169,"author":{"gitId":"amber-le"},"content":"        new AddTaskCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":170,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":171,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":172,"author":{"gitId":"amber-le"},"content":"    private static void handleUnmarkCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":173,"author":{"gitId":"amber-le"},"content":"        new UnmarkCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":174,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":175,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":176,"author":{"gitId":"amber-le"},"content":"    private static void handleMarkCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":177,"author":{"gitId":"amber-le"},"content":"        new MarkCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":178,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":179,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":180,"author":{"gitId":"amber-le"},"content":"    private static void handleDeleteCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-12"},{"lineNumber":181,"author":{"gitId":"amber-le"},"content":"        new DeleteCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":182,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":183,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":184,"author":{"gitId":"amber-le"},"content":"    private static void handleBlahCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":185,"author":{"gitId":"amber-le"},"content":"        new BlahCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":186,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":187,"author":{"gitId":"amber-le"},"content":"    private static void handleListCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":188,"author":{"gitId":"amber-le"},"content":"        new ListCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":189,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":190,"author":{"gitId":"amber-le"},"content":"    private static void handleSortByCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":191,"author":{"gitId":"amber-le"},"content":"        new SortCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-10-18"},{"lineNumber":192,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":193,"author":{"gitId":"amber-le"},"content":"    private static void handleFindCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":194,"author":{"gitId":"amber-le"},"content":"        new FindCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-10-12"},{"lineNumber":195,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":196,"author":{"gitId":"amber-le"},"content":"    private static void handleByeCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-25"},{"lineNumber":197,"author":{"gitId":"amber-le"},"content":"        new ByeCommand().handleCommand(input, tasks);","lastModifiedDate":"2023-09-25"},{"lineNumber":198,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":199,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":199}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import utils.DateTimeUtils;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * This class represents a deadline task.","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2023-10-07"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * It will use for the sort function.","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        return time;","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"     * This class represents a deadline task that user input have /by","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"     * @param description","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"     * @param timeString","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"    public Deadline(String description, String timeString) {","lastModifiedDate":"2023-10-07"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        timeString \u003d timeString.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        LocalDateTime dateTime \u003d DateTimeUtils.parseNextDay(timeString);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            this.time \u003d dateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        String[] isTime \u003d timeString.split(\" \");","lastModifiedDate":"2023-10-07"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        if (isTime.length \u003e 1) {","lastModifiedDate":"2023-10-07"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"            this.time \u003d handleDateTime(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            this.time \u003d handleDateTime(timeString + \" 0000\");","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-10"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object to the format requirement.","lastModifiedDate":"2023-10-10"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        String timeString \u003d this.time.format(DateTimeFormatter.ofPattern(TIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        return \"[D]\" + super.toString() + \" (before: \" + timeString.trim() + \")\";","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"     * This method is to save the data to the local file","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + time.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")) + \")\";","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"     * This method will clone the task.","lastModifiedDate":"2023-10-25"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"     * It will use for the undo function.","lastModifiedDate":"2023-10-25"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object to the format requirement.","lastModifiedDate":"2023-10-25"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"    public Task clone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"        Deadline clone \u003d new Deadline(this.description, this.time.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        clone.setIsDone(this.isDone);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"        return clone;","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"amber-le":78}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import utils.DateTimeUtils;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    public LocalDateTime fromTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime toTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * It will use for the sort function.","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    public LocalDateTime getFromTime() {","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        return fromTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"     * This class represents an event task that user input only have /from","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"     * @param description","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"     * @param timeString","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    public Event(String description, String timeString) {","lastModifiedDate":"2023-10-08"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        formatTimeString(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"     * This method will format the time string to the correct format.","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"     * @param timeString the time string from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"     *                   if user never put the time, it will set the time to 0000.","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"    private void formatTimeString(String timeString) {","lastModifiedDate":"2023-10-08"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        timeString \u003d timeString.trim();","lastModifiedDate":"2023-10-08"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        LocalDateTime dateTime \u003d DateTimeUtils.parseNextDay(timeString);","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            this.fromTime \u003d dateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        String[] isTime \u003d timeString.split(\" \");","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        if (isTime.length \u003e 1) {","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"            this.fromTime \u003d handleDateTime(timeString);","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"            this.fromTime \u003d handleDateTime(timeString + \" 0000\");","lastModifiedDate":"2023-10-16"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"     * This class represents an event task that user input have /from and /to","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"     * It will format the time string to the correct format.","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"     * It will use for the sort date function.","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"    public Event(String description, String timeString, String timeStringTo) {","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"        formatTimeString(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"        timeStringTo \u003d timeStringTo.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"        LocalDateTime dateTime \u003d DateTimeUtils.parseNextDay(timeStringTo);","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"            this.toTime \u003d dateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        String[] isTime1 \u003d timeStringTo.split(\" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"        if (isTime1.length \u003e 1) {","lastModifiedDate":"2023-10-08"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"            this.toTime \u003d handleDateTime(timeStringTo);","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"            this.toTime \u003d handleDateTime(timeStringTo + \" 0000\");","lastModifiedDate":"2023-10-16"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-10"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"     * It will use for the sort date function.","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object to the format requirement.","lastModifiedDate":"2023-10-10"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"        String timeString \u003d this.fromTime.format(DateTimeFormatter.ofPattern(TIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"        if (this.toTime \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"            return \"[E]\" + super.toString() + \" (from: \" + timeString + \")\";","lastModifiedDate":"2023-10-25"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"        boolean isSameDay \u003d this.fromTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"                .equals(this.toTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"        String timeString1;","lastModifiedDate":"2023-10-12"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"        if (isSameDay) {","lastModifiedDate":"2023-10-14"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"            timeString1 \u003d this.toTime.format(DateTimeFormatter.ofPattern(\"hh:mma\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"            timeString1 \u003d this.toTime.format(DateTimeFormatter.ofPattern(TIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-10-16"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + timeString + \" ➞ to: \" + timeString1 + \")\";","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"     * This method is to save the data to the local file","lastModifiedDate":"2023-10-10"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"     * It will use for the save function.","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"        if (this.toTime \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"            return \"[E]\" + super.toString() + \" (from: \" +","lastModifiedDate":"2023-10-25"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"                    fromTime.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")) + \")\";","lastModifiedDate":"2023-10-25"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"        return \"[E]\" + super.toString() + \" (from: \" + fromTime.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")) +","lastModifiedDate":"2023-10-25"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"                \" to: \" + toTime.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")) + \")\";","lastModifiedDate":"2023-10-25"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"     * This method is to clone the event object.","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"     * It will use for the undo function.","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"    public Event clone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(this.description, this.fromTime.format(DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\")));","lastModifiedDate":"2023-10-17"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"        event.setIsDone(this.isDone);","lastModifiedDate":"2023-10-17"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"        event.toTime \u003d this.toTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"        return event;","lastModifiedDate":"2023-10-17"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"amber-le":125}},{"path":"src/main/java/task/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * This enum class contains all the keywords that the user can use for the command.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public enum Keyword {","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    LIST, BLAH, BYE, MARK, UNMARK, DELETE, FIND,","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    HELP, TODO, DEADLINE, EVENT, SORT, UNDO,","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":9}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import static io.CrabyMessage.printDateTimeParseExceptionMessage;","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"public class Task {","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    public static final String TIME_OUTPUT_FORMAT \u003d \"d MMM yyyy, E - hh:mma\";","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    protected String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"     * @return the status icon of the task","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-10-11"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        return (isDone ? \" ✓ \" : \"҉҉҉\");","lastModifiedDate":"2023-10-11"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    public void setIsDone(boolean done) {","lastModifiedDate":"2023-10-11"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-09-01"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    public boolean getIsDone() {","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        return isDone;","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object to the format requirement.","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime handleDateTime(String time) {","lastModifiedDate":"2023-10-08"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        // check the format of the time user input","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2023-10-08"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        if (time.contains(\"/\")) {","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"            String[] checkFormat \u003d time.split(\"/\");","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"            if (checkFormat[0].length() \u003c\u003d 2) {","lastModifiedDate":"2023-10-08"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"            } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"            String[] checkFormat \u003d time.split(\"-\");","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"            if (checkFormat[0].length() \u003e 2) {","lastModifiedDate":"2023-10-08"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"            } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"                formatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-08"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"        return LocalDateTime.parse(time, formatter);","lastModifiedDate":"2023-10-08"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"     * @return the type, description, status of the task","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        // Capitalize the first letter of the description","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        this.description \u003d this.description.substring(0, 1).toUpperCase() + this.description.substring(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-10-11"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"     * This method is to save the data to the local file","lastModifiedDate":"2023-10-10"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"        return this.toString();","lastModifiedDate":"2023-10-07"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"     * This method is to clone the task.","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"     * It will use for the undo command.","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"     * @return the clone task.","lastModifiedDate":"2023-10-25"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"    public Task clone() {","lastModifiedDate":"2023-10-19"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"        Task cloneTask \u003d new Task(this.description);","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"        cloneTask.setIsDone(this.isDone);","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"        return cloneTask;","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"amber-le":91}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * This class represents a todo task.","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"     * This is the constructor of the todo task.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * This method returns the string representation of the todo task.","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     * @return the string representation of the todo task.","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"     * This method is to clone the task.","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"     * It will use for the undo command.","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"     * @return the clone task.","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"    public Todo clone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(this.description);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        todo.isDone \u003d this.isDone;","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        return todo;","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"amber-le":40}},{"path":"src/main/java/utils/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package utils;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"public class DateTimeUtils {","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    public static LocalDateTime parseNextDay(String dateStr) {","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"        if (!Arrays.asList(\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\",","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"                        \"monday\", \"tuesday\", \"wednesday\", \"thursday\", \"friday\", \"saturday\", \"sunday\", \"today\")","lastModifiedDate":"2023-10-16"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"                .contains(dateStr.toLowerCase())) {","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"            return null;","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        now \u003d now.withHour(23);","lastModifiedDate":"2023-10-16"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        now \u003d now.withMinute(59);","lastModifiedDate":"2023-10-16"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        now \u003d now.withSecond(59);","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        if(dateStr.toLowerCase().contains(\"today\")){","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"            return now;","lastModifiedDate":"2023-10-16"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        List\u003cDayOfWeek\u003e dayOfWeeks \u003d Arrays.asList(DayOfWeek.values());","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        int dayIndex \u003d dayOfWeeks.indexOf(DayOfWeek.valueOf(dateStr.toUpperCase()));","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        int currentDayIndex \u003d now.getDayOfWeek().getValue();","lastModifiedDate":"2023-10-14"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        int daysToAdd \u003d dayIndex - currentDayIndex;","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        if (daysToAdd \u003c 1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            daysToAdd +\u003d 7;","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        // set time to end of day","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        return now.plusDays(daysToAdd);","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"amber-le":34}},{"path":"src/main/java/utils/DayOfWeek.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package utils;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * This enum class contains all the days of the week.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public enum DayOfWeek {","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    SUN, MON, TUE, WED, THU, FRI, SAT, SUNDAY,","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY;","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"amber-le":9}},{"path":"src/test/java/command/AddTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import command.AddTaskCommand;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(){","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand();","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input\", tasks);","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input1\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input2\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(3, tasks.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":22}},{"path":"src/test/java/command/BlahCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"class BlahCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        BlahCommand blahCommand \u003d new BlahCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        blahCommand.handleCommand(\"blah\", tasks);","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":20}},{"path":"src/test/java/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"class DeleteCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"todo test\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"deadline test /by 2020-08-25\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"event test /at 2020-08-25\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        deleteCommand.handleCommand(\"delete 1\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(3, tasks.size());","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        deleteCommand.handleCommand(\"      delete          all\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(0, tasks.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":27}},{"path":"src/test/java/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"class ListCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        taskList.add(event);","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        listCommand.handleCommand(\"list\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        assertAll(\"list\",","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"                () -\u003e assertEquals(2, taskList.size()),","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"                () -\u003e assertEquals(\"[T][҉҉҉] Test description\", taskList.get(0).toString()),","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"                () -\u003e assertEquals(\"[E][҉҉҉] Test description (from: 20 Oct 2023, 11PM - Friday)\", taskList.get(1).toString()));","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":29}},{"path":"src/test/java/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"class MarkCommandTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        markCommand.handleCommand(\"mark 1\", taskList);","lastModifiedDate":"2023-10-25"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        assertTrue(todo.getIsDone());","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":24}},{"path":"src/test/java/command/SortCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"class SortCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"todo test\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"check deadline test /by 2023-08-25\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"present /from 2020-04-20\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        SortCommand sortCommand \u003d new SortCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        sortCommand.handleCommand(\"sort date\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        assertTrue(tasks.get(0).toString().toLowerCase().contains(\"present\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        sortCommand.handleCommand(\"sort type\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        assertTrue(tasks.get(0).toString().toLowerCase().contains(\"check\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"amber-le":28}},{"path":"src/test/java/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"class UnmarkCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        markCommand.handleCommand(\"mark 1\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        unmarkCommand.handleCommand(\"unmark 1\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        assertFalse(todo.getIsDone());","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":25}},{"path":"src/test/java/io/TaskStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.io.File;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"class TaskStorageTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test void save() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        File f \u003d new File(\"./data/craby.txt\");","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        tasks.add(new Deadline(\"test\", \"12/12/2020 1200\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"craby.txt\");","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        assertTrue(f.exists());","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        assertTrue(f.length() \u003e 0);","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        assertNotEquals(0, f.length());","lastModifiedDate":"2023-10-25"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        f.delete();","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    @Test void load() {","lastModifiedDate":"2023-10-25"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        File f \u003d new File(\"./data/craby.txt\");","lastModifiedDate":"2023-10-09"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        tasks.add(new Deadline(\"test\", \"12/12/2020 1200\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"craby.txt\");","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-10-09"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks1 \u003d taskStorage.load();","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        assertEquals(1, tasks1.size());","lastModifiedDate":"2023-10-25"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":38}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        Deadline deadline \u003d new Deadline(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(\"[D][҉҉҉] Test description (before: 20 Oct 2023, Fri - 11:59PM)\", deadline.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    public void toStorageString() {","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        Deadline deadline \u003d new Deadline(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(\"[D][҉҉҉] Test description (by: 2023/10/20 2359)\", deadline.toStorageString());","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":23}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"class EventTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    void testToString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"[E][҉҉҉] Test description (from: 20 Oct 2023, Fri - 11:59PM)\", event.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    void toStorageString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"[E][҉҉҉] Test description (from: 2023/10/20 2359)\", event.toStorageString());","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":20}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"class TaskTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    void getStatusIcon() {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    void setDone() {","lastModifiedDate":"2023-10-25"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        task.setIsDone(true);","lastModifiedDate":"2023-10-11"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assertTrue(task.getIsDone());","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        task.setIsDone(false);","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2023-10-25"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    void getIsDone() {","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        assertFalse(task.getIsDone());","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"    void handleDateTime() {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"2023-10-20T23:59\", event.handleDateTime(\"2023/10/20 2359\").toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"    void testToString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"[҉҉҉] Test description\", task.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    void toStorageString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"[҉҉҉] Test description\", task.toStorageString());","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":47}},{"path":"src/test/java/utils/DateTimeUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package utils;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import java.time.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import java.util.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"class DateTimeUtilsTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    void parseNextDay() {","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"2023-10-25T23:59\", Objects.requireNonNull(DateTimeUtils.parseNextDay(\"today\")).toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"amber-le":15}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"Amber","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"find test","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"  list","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"Test mark","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"test unmark","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"Test undo mark","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"mark 1","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"mark     2","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"unmark 2","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"mark 3","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"test sort by type /by 2024-01-01 1200","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"test sort by date /from 2024-01-01 1300","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"test sort by date: this one will on top if system correct /from 2024-04-01 1600","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"sort t","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"sort d","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"sort tr","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"test delete all","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"Test undo delete","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"Test delete","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"find sort","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"find [d]","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"delete 9","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"delete 8","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"delete all","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"todo learn front end /from 04-12-2023 1300 /to 2023-12-31 2300","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"TIC3901 - Presentation 1 /by 2024-01-01 1200","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"TIC3901 - Report 2 /by 28/01/2024","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"Video call with Grandpa /by 2024-03-01 1200","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"Deadline TIC3901 - Report 3 /by 2024/03/17","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"TIC3901 - Presentation 2 /by 14-04-2024","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"mark 2","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"Chang \u0026 Felicia\u0027s wedding /from 04/11/2023 1800 /to 2023-11-04 2200","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        mark 3","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"TIC2002 - Final Exam /from 04-12-2023 1300 /to 04-12-2023 1430","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"Task to delete","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"unmark            3","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"Oder FoodPanda for dinner every weekday","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"Task to check sort by date - on top after use sort date/d /by 1993/07/03 0530","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"TIC2002 quiz /by 2023-11-04 2200","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"MARK 12","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"Event to check undo /from 2/10/2019 0900 /to 2/10/2019 1130","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"liSt","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"find tic","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"find [d]","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"   blah","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"List","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"sort T","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"mark 12","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"mark 6","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"sort tr","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"delete                       2","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"LisT","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"TMA2031 - Final Exam /from 25/11/2023 0900 /to 25/11/2023 1100","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"Drink more water","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"sort datE","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"mark 99","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"LisT","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"check undo mark","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"check multiple undo","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"check undo add task","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"sort tr","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"mark 14","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"delete all","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"     delete        all","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"help","lastModifiedDate":"2023-10-16"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"bye CrabY","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"amber-le":91}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"java -classpath ..\\bin craby.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/craby/*.java","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"java -classpath ../bin craby/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":2,"-":36}}]
