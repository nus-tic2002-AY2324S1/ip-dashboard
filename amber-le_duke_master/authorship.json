[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"# CrabY 🦀 Personal Assistant Chat bot","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"Welcome to your **CrabY project**. This one is a part of TIC2002 Introduction to Software Engineering module.","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"This project is a simple chatbot that helps you to manage things to remember, optimized for users who prefer to type over mouse/GUI.","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"2. Open the project into Intellij as follows:","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"   2. Select the project directory, and click `OK`.","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"   3. If there are any further prompts, accept the defaults.","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"3. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"4. After that, locate the `src/main/java/craby.Duke.java` file, right-click it, and choose `Run craby.Duke.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     ____                  _      __   __","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    / ___|  _ __    __ _  | |__   \\ \\ / /","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"   | |     | \u0027__|  / _` | | \u0027_ \\   \\ V /","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"   | |___  | |    | (_| | | |_) |   | |","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    \\____| |_|     \\__,_| |_.__/    |_|","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"   ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈◦•✩•◦┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"   Hi Amber ♡, CrabY 🦀 here!","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"   Which checklist do you want to work on today? (｡◕‿◕｡)","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"   ╰┈➤You can typing: \"School\" | \"Work\" | \"Personal\" |","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"                  or  [checklist-name] if you wanna creat a new list.","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":19,"-":11}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    mainClass.set(\"craby.Duke\")","lastModifiedDate":"2023-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    archiveBaseName \u003d \"craby\"","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":2,"-":40}},{"path":"data/amber.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"D || 1 || Task to check sort by date - on top after use sort date/d || 1993/7/3 0530","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"E || 0 || Chang \u0026 Felicia\u0027s wedding || 2023/11/4 1800 || 2023/11/4 2200","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"D || 1 || TIC2002 quiz || 2023/11/4 2200","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"E || 0 || TMA2031 - Final Exam || 2023/11/25 0900 || 2023/11/25 1100","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"E || 0 || TIC2002 - Final Exam || 2023/12/4 1300 || 2023/12/4 1430","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"E || 0 || Learn front end || 2023/12/4 1300 || 2023/12/31 2300","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"D || 1 || TIC3901 - Presentation 1 || 2024/1/1 1200","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC3901 - Report 2 || 2024/1/28 0000","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"D || 0 || Video call with Grandpa || 2024/3/1 1200","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC3901 - Report 3 || 2024/3/17 0000","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC3901 - Presentation 2 || 2024/4/14 0000","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"T || 0 || Oder FoodPanda for dinner every weekday","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"T || 1 || Drink more water","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"T || 0 || Check undo mark","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"amber-le":14}},{"path":"data/personal.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"T || 0 || Drink more water","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"E || 1 || Chang \u0026 Felicia\u0027s wedding || 2023/11/4 1800 || 2023/11/4 2200","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"T || 0 || Check and buy the flight tickets to return back home after final exam","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"D || 0 || Buy some household items || 2023/11/11 0000","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"T || 1 || Call grandparents every weekend","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"amber-le":5}},{"path":"data/report.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"T || 0 || TIC2002 - finish project","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC2002 - submit project || 2023/11/19 0000","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"E || 0 || TIC2002 - sent draft to Prof || 2023/11/9 2359 || 2023/11/15 0000","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"E || 0 || Group meeting || 2024/1/1 0900 || 2024/1/1 1300","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"amber-le":4}},{"path":"data/school.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC2901 - Make the slide to presentation || 2023/10/31 2359","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"E || 1 || TIC2901 - make a video introduction || 2023/10/31 2359","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"D || 1 || TIC2002 - quiz || 2023/11/4 2200","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC2901 - Written Submission || 2023/11/16 2359","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"E || 0 || TMA2031 - Final Exam || 2023/11/25 0900 || 2023/11/25 1100","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"E || 0 || TIC2002 - Final Exam || 2023/12/4 1300 || 2023/12/4 1430","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"D || 1 || TIC3901 - Presentation 1 || 2024/1/1 1200","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC3901 - Report 2 || 2024/1/28 2359","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC3901 - Report 3 || 2024/3/17 2359","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC3901 - Presentation 2 || 2024/4/14 2359","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"amber-le":10}},{"path":"data/work.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"D || 0 || Get a new job || 2023/12/31 0000","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"T || 0 || Make a website with some simple game","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"T || 0 || Make this chatbot become a wesite","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"E || 0 || Creat some projects to apply job || 2023/11/9 2359 || 2023/12/31 0000","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"amber-le":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"## Introduction","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"CrabY 🦀 is a Chat bot that helps you to manage things to remember, optimized for users who prefer to type over mouse/GUI.","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"## Getting Started","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"1. When you start CrabY, you should see something like:","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    ","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":" ```","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     ____                  _      __   __","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    / ___|  _ __    __ _  | |__   \\ \\ / /","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"   | |     | \u0027__|  / _` | | \u0027_ \\   \\ V /","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"   | |___  | |    | (_| | | |_) |   | |","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    \\____| |_|     \\__,_| |_.__/    |_|","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"   ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈◦•✩•◦┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"   Hi ♡, CrabY 🦀 here!","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"   Which checklist do you want to work on today? (｡◕‿◕｡)","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"   ╰┈➤You can typing: \"School\" | \"Work\" | \"Personal\" |","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"                  or  [checklist-name] if you wanna creat a new list.","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":" ```","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"1. Type `School` to start working on the school checklist.","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"2. Type `help` to see the list of commands if you not sure what CrabY can do for you.","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"3. Refer to the Features below for details of each command.","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"4. Type `bye` to exit the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"5. The data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"6. Using the same name at the start of the program to continue working on the same checklist.","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"•──✦ Enjoy your time ✦──•","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"* Add a task","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"* Delete a task","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"* Mark a task as done","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"* Unmark a task","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"* List all tasks","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"* Checklists for different task lists","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"* Find tasks by keyword","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"* Sort tasks by date","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"* Sort tasks by type","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"* Switch between different task lists","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"* Undo previous command","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"* Help message","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"* Exit the program","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"### Feature-Add","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"CrabY can add 3 types of tasks: todo, deadline and event.","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"* Todo: A task with only a description.","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"* Deadline: A task with a description and a deadline. — Must use `/by` to specify the deadline.","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"    ","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"    E.g. `return book /by 2020-02-02 1800`","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"* Event: A task with a description and a time. — Must use `/from` to specify the time.","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"    E.g. `project meeting /from 2020-02-02 1400`","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"### Feature-Delete","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"Delete a task by index: Delete a task by its index in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"E.g. `delete 1` - will delete the first task in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"### Feature-Mark \u0026 Unmark","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"Mark a task as done: Mark a task as done by its index in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"E.g. `mark 1` - will mark the first task in the task list as done.","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"Unmark a task: Unmark a task as done by its index in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"E.g. `unmark 2` - will unmark the second task in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"### Feature-List","lastModifiedDate":"2023-11-08"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"List all tasks: List all tasks in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"E.g. `list` - will list all tasks in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"### Feature-Checklist","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"Show all task lists: Show all task lists. ","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"E.g. `checklist` - will list all task lists.","lastModifiedDate":"2023-11-08"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"### Feature-Find","lastModifiedDate":"2023-11-08"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"Find tasks by keyword: Find tasks in the task list by keyword.","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"E.g. `find book` - will list all tasks in the task list that contains the keyword `book`.","lastModifiedDate":"2023-11-08"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"### Feature-Sort","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"Sort tasks by date: Sort tasks in the task list by date.","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"E.g. `sort date` - will sort all tasks in the task list by date.","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"Sort tasks by type: Sort tasks in the task list by type.","lastModifiedDate":"2023-11-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"E.g. `sort type` - will sort all tasks in the task list by type.","lastModifiedDate":"2023-11-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"### Feature-Switch","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"Switch between different task lists: Switch between different task lists.","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"E.g. `switch` - CrabY will ask you to choose a task list to switch to.","lastModifiedDate":"2023-11-08"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"`school` - will switch to the school task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"### Feature-Undo","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"Type `undo` to undo the previous command. Note: you can only undo add, delete, mark, unmark, sort commands.","lastModifiedDate":"2023-11-08"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"### Feature-Help","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"Type `help` to show a help message.","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"### Feature-Exit","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"Type `bye` to exit the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"* `help` - Show help message","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"* `find` - Find tasks by keyword","lastModifiedDate":"2023-11-08"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"* `list` - List all tasks","lastModifiedDate":"2023-11-08"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"* `checklists` - Show all task lists","lastModifiedDate":"2023-11-08"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"* `sort` - Sort tasks by date or type","lastModifiedDate":"2023-11-08"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"* `switch` - Switch between different task lists","lastModifiedDate":"2023-11-08"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"* `undo` - Undo previous command","lastModifiedDate":"2023-11-08"},{"lineNumber":143,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":144,"author":{"gitId":"amber-le"},"content":"* `bye` - Exit the program","lastModifiedDate":"2023-11-08"},{"lineNumber":145,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"amber-le"},"content":"* `todo` - Add a todo task","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"amber-le"},"content":"* `deadline` - Add a deadline task","lastModifiedDate":"2023-11-08"},{"lineNumber":149,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"amber-le"},"content":"* `event` - Add an event task","lastModifiedDate":"2023-11-08"},{"lineNumber":151,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":152,"author":{"gitId":"amber-le"},"content":"* `delete` - Delete a task","lastModifiedDate":"2023-11-08"},{"lineNumber":153,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":154,"author":{"gitId":"amber-le"},"content":"* `mark` - Mark a task as done","lastModifiedDate":"2023-11-08"},{"lineNumber":155,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":156,"author":{"gitId":"amber-le"},"content":"* `unmark` - Unmark a task","lastModifiedDate":"2023-11-08"},{"lineNumber":157,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":"Example of usage: ","lastModifiedDate":"2019-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":162,"author":{"gitId":"amber-le"},"content":"`read book`","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":166,"author":{"gitId":"amber-le"},"content":"```","lastModifiedDate":"2023-11-08"},{"lineNumber":167,"author":{"gitId":"amber-le"},"content":"   ✎ added:","lastModifiedDate":"2023-11-08"},{"lineNumber":168,"author":{"gitId":"amber-le"},"content":"   ╰┈➤ read book - to your list","lastModifiedDate":"2023-11-08"},{"lineNumber":169,"author":{"gitId":"amber-le"},"content":"   Now you have: 1 tasks in your list 🗎.","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"amber-le"},"content":"  ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈◦•✩•◦┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"amber-le"},"content":"```","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":173,"author":{"gitId":"amber-le"},"content":"Example of usage:","lastModifiedDate":"2023-11-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":175,"author":{"gitId":"amber-le"},"content":"`mark 1`","lastModifiedDate":"2023-11-08"},{"lineNumber":176,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"amber-le"},"content":"Expected outcome:","lastModifiedDate":"2023-11-08"},{"lineNumber":178,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":179,"author":{"gitId":"amber-le"},"content":"```","lastModifiedDate":"2023-11-08"},{"lineNumber":180,"author":{"gitId":"amber-le"},"content":"   Nice! I\u0027ve marked this task as DONE ツ:","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"amber-le"},"content":"   ╰┈➤ [T][ ✓ ] Read book","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"amber-le"},"content":"  ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈◦•✩•◦┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-11-08"},{"lineNumber":184,"author":{"gitId":"amber-le"},"content":"Example of usage:","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":186,"author":{"gitId":"amber-le"},"content":"`bye`","lastModifiedDate":"2023-11-08"},{"lineNumber":187,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":188,"author":{"gitId":"amber-le"},"content":"Expected outcome:","lastModifiedDate":"2023-11-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":190,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":191,"author":{"gitId":"amber-le"},"content":"      Bye ♡, hope to see you again soon! •ᴗ•","lastModifiedDate":"2023-11-08"},{"lineNumber":192,"author":{"gitId":"amber-le"},"content":"  ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈◦•✩•◦┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"amber-le"},"content":"               __   ♡   __","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"amber-le"},"content":"              /           \\","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"amber-le"},"content":"             (  / @   @ \\  )","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"amber-le"},"content":"              \\(_ _\\_/_ _)/","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"amber-le"},"content":"            (\\ `-/     \\-\u0027 /)","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"amber-le"},"content":"             \"\u003d\u003d\u003d\\     /\u003d\u003d\u003d\"","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"amber-le"},"content":"              .\u003d\u003d\u0027)___(`\u003d\u003d.","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"amber-le"},"content":"               .\u003d\u0027     `\u003d.","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"amber-le":179,"-":22}},{"path":"docs/Report.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"# CrabY 🦀 Project Report","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"## User Stories","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"1. As a user, I want to be able to add a task to the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to store different types of tasks.","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to store tasks with the autoformatting of date and time.","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"2. As a user, I want to be able to delete a task from the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to delete a task by its index in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to delete all tasks at one time if the user wants to clear the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"3. As a user, I want to be able to mark a task as done or unmark a task as undone.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to mark a task as done by its index in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to unmark a task as undone by its index in the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to mark all tasks as done at one time if the user wants to mark all tasks as done.","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to unmark all tasks as undone at one time if the user wants to unmark all tasks as","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"      undone.","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"4. As a user, I want to be able to find a task by its description.","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to find a task by its description or type or date or time of the task.","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"5. As a user, I want to be able to sort the task list by its description or type or date","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to sort the task list by its description or type or date or time of the task.","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"6. As a user, I want to be able to reuse the task list after I exit the program and get back to the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to save the task list to a local file.","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to load the task list from a local file.","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    - Delete the local file when it empties the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"    - Create a new local file when it creates a new task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"7. As a user, I want to be able to see the list of commands that I can use when I forget how to use the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"8. As a user, I want to be able to see all the tasks in the task list that I have added.","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"9. As a user, I want to be able to undo the previous command.","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"    - The task list should be able to undo all the previous commands from I start the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"10. As a user, I want to be able to switch between different task lists, so I just need to type, no need to close the","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    program and open it again.","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"11. As a user, I want to be able to see all checklists that I have created, so I can choose which checklist I want to","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"    switch to.","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"## Non-Functional Requirements","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"1. The program should be able to run on any platform.","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"2. The program should be able to run on any device.","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"3. The program should be able to run on any screen size.","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"4. The program should be able to run on Mac, Windows, and Linux.","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"## Showcase","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"1. Show the output Duke shows when you launch the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"   ![img_2.png](images/img_2.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"   ![img_3.png](images/img_3.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"2. Todo, Deadlines, Events Give examples of command(s) and expected outputs for adding different types of tasks.","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"    * Todo","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"   ![img_4.png](images/img_4.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"    * Deadline","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"   ![img_5.png](images/img_5.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"    * Event","lastModifiedDate":"2023-11-08"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"   ![img_12.png](images/img_12.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"3. The List Gives examples of command(s) and expected outputs for listing tasks.","lastModifiedDate":"2023-11-08"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"   ![img_6.png](images/img_6.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"4. Mark, Unmark Give examples of command(s) and expected outputs for marking/unmarking tasks as done.","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"    * Mark","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"   ![img_8.png](images/img_8.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"   ![img_9.png](images/img_9.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"    * Unmark","lastModifiedDate":"2023-11-08"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"   ![img_7.png](images/img_7.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"   ![img_11.png](images/img_11.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"5. Errors Describe what kind of errors Duke can handle. E.g., give different types of incorrect commands (and the","lastModifiedDate":"2023-11-08"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"   expected outputs) it can handle","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"    - If the user types in an invalid index, CrabY will show the error message and ask the user to type in a valid","lastModifiedDate":"2023-11-08"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"      index.","lastModifiedDate":"2023-11-08"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"   ![img_10.png](images/img_10.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"   ![img_13.png](images/img_13.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"   **Note that:** CrabY can handle cases insensitive and multiple space in the input.","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"    - If the user types in an invalid date or time, CrabY will show the error message and ask the user to type in a","lastModifiedDate":"2023-11-08"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"      valid date or time.","lastModifiedDate":"2023-11-09"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"   ![img_14.png](images/img_14.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"    - If the user puts the blank space in the description or just enter, CrabY will show the error message and ask the","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"      user to type in a valid description.","lastModifiedDate":"2023-11-09"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"   ![img_15.png](images/img_15.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"    - If the user types in an invalid command, CrabY will still add to the task list.","lastModifiedDate":"2023-11-08"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"    - Craby can handel 4 types of the date format, user can put the time or not, if the user doesn\u0027t put the time, CrabY","lastModifiedDate":"2023-11-08"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"      will put the time to 12:00AM.","lastModifiedDate":"2023-11-08"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"        - dd/mm/yyyy hhmm","lastModifiedDate":"2023-11-08"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"        - yyyy/mm/dd hhmm","lastModifiedDate":"2023-11-08"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"        - dd-mm-yyyy hhmm","lastModifiedDate":"2023-11-08"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"        - yyyy-mm-dd hhmm","lastModifiedDate":"2023-11-08"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"6. Delete Give examples of command(s) and expected outputs for deleting tasks.","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":129,"author":{"gitId":"amber-le"},"content":"   ![img_16.png](images/img_16.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"7. Save Give a sample of the tasks as they are stored in the hard disk.","lastModifiedDate":"2023-11-08"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"   ![img_17.png](images/img_17.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"   ** Note that I had covered in case someone wanted to break my data with || which I used to detect when loading data","lastModifiedDate":"2023-11-09"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"   files","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"   ![img_18.png](images/img_18.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"   example:","lastModifiedDate":"2023-11-09"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"   ![img_19.png](images/img_19.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":143,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":144,"author":{"gitId":"amber-le"},"content":"   ![img_20.png](images/img_20.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":145,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":146,"author":{"gitId":"amber-le"},"content":"8. Dates Give examples (i.e., screenshots of commands and outputs) of how your Duke uses dates/times in meaningful ways","lastModifiedDate":"2023-11-08"},{"lineNumber":147,"author":{"gitId":"amber-le"},"content":"   i.e., what commands can use dates/times in meaningful ways? E.g., is it possible to list deadlines/events on a","lastModifiedDate":"2023-11-08"},{"lineNumber":148,"author":{"gitId":"amber-le"},"content":"   specific","lastModifiedDate":"2023-11-08"},{"lineNumber":149,"author":{"gitId":"amber-le"},"content":"   day? Does it detect invalid dates given by the user?","lastModifiedDate":"2023-11-08"},{"lineNumber":150,"author":{"gitId":"amber-le"},"content":"    - You can add the date and time by using the format `dd/mm/yyyy hhmm` or `yyyy/mm/dd hhmm` or `dd-mm-yyyy hhmm` or","lastModifiedDate":"2023-11-09"},{"lineNumber":151,"author":{"gitId":"amber-le"},"content":"      `yyyy-mm-dd hhmm`.","lastModifiedDate":"2023-11-09"},{"lineNumber":152,"author":{"gitId":"amber-le"},"content":"    - More than that, you can use the natural date format","lastModifiedDate":"2023-11-09"},{"lineNumber":153,"author":{"gitId":"amber-le"},"content":"      e.g.","lastModifiedDate":"2023-11-09"},{"lineNumber":154,"author":{"gitId":"amber-le"},"content":"      `mon` or `monday` will be interpreted as the date of the next Monday in the calendar.","lastModifiedDate":"2023-11-09"},{"lineNumber":155,"author":{"gitId":"amber-le"},"content":"      ...","lastModifiedDate":"2023-11-09"},{"lineNumber":156,"author":{"gitId":"amber-le"},"content":"      `sun` or `sunday` will be interpreted as the date of the next Sunday in the calendar.","lastModifiedDate":"2023-11-09"},{"lineNumber":157,"author":{"gitId":"amber-le"},"content":"      `today` will be interpreted as the date of today in the calendar.","lastModifiedDate":"2023-11-09"},{"lineNumber":158,"author":{"gitId":"amber-le"},"content":"      `tmr` or `tomorrow` will be interpreted as the date of tomorrow in the calendar.","lastModifiedDate":"2023-11-09"},{"lineNumber":159,"author":{"gitId":"amber-le"},"content":"      `eom` or `end of month` will be interpreted as the date of the end of this month in the calendar.","lastModifiedDate":"2023-11-09"},{"lineNumber":160,"author":{"gitId":"amber-le"},"content":"      `eoy` or `end of year` will be interpreted as the date of the end of this year in the calendar.","lastModifiedDate":"2023-11-09"},{"lineNumber":161,"author":{"gitId":"amber-le"},"content":"    - If you don\u0027t put the time, the system will put the time to 12:00AM.","lastModifiedDate":"2023-11-09"},{"lineNumber":162,"author":{"gitId":"amber-le"},"content":"    - If the year is the same as the current year, the system will not display the year to make it easier to read.","lastModifiedDate":"2023-11-09"},{"lineNumber":163,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":164,"author":{"gitId":"amber-le"},"content":"    ![img_21.png](images/img_21.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":165,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":166,"author":{"gitId":"amber-le"},"content":"    - In the event task, if /to same day as /from, the system will only display the date once.","lastModifiedDate":"2023-11-09"},{"lineNumber":167,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":168,"author":{"gitId":"amber-le"},"content":"    ![img_22.png](images/img_22.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":169,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"amber-le"},"content":"9. Find Give examples of command(s) and expected outputs for searching for tasks.","lastModifiedDate":"2023-11-08"},{"lineNumber":171,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":172,"author":{"gitId":"amber-le"},"content":"   ![img_23.png](images/img_23.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":173,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":174,"author":{"gitId":"amber-le"},"content":"10. GUI/individual feature If you implement a GUI, give some screenshots. If you implement an individual feature,","lastModifiedDate":"2023-11-09"},{"lineNumber":175,"author":{"gitId":"amber-le"},"content":"    describe that feature.","lastModifiedDate":"2023-11-09"},{"lineNumber":176,"author":{"gitId":"amber-le"},"content":"    - C-Undo","lastModifiedDate":"2023-11-08"},{"lineNumber":177,"author":{"gitId":"amber-le"},"content":"        + You can undo the previous command by typing `undo` and then enter.","lastModifiedDate":"2023-11-08"},{"lineNumber":178,"author":{"gitId":"amber-le"},"content":"        + You can undo the add, delete, mark, unmark, and sort command.","lastModifiedDate":"2023-11-08"},{"lineNumber":179,"author":{"gitId":"amber-le"},"content":"        + You can undo all tasks to the task they start the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":180,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":181,"author":{"gitId":"amber-le"},"content":"    - C-Sort","lastModifiedDate":"2023-11-08"},{"lineNumber":182,"author":{"gitId":"amber-le"},"content":"        + You can sort the task list by its type or date and time of the task.","lastModifiedDate":"2023-11-08"},{"lineNumber":183,"author":{"gitId":"amber-le"},"content":"        + If you want to sort the task list by its type, you can type `sort type` or `sort t` and then enter.","lastModifiedDate":"2023-11-08"},{"lineNumber":184,"author":{"gitId":"amber-le"},"content":"        + If you want to sort the task list by its type reverse, you can type `sort type-r` or `sort tr` and then enter.","lastModifiedDate":"2023-11-08"},{"lineNumber":185,"author":{"gitId":"amber-le"},"content":"        + If you want to sort the task list by its date and time, you can type `sort date` or `sort d` and then enter.","lastModifiedDate":"2023-11-08"},{"lineNumber":186,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":187,"author":{"gitId":"amber-le"},"content":"    - C-Help","lastModifiedDate":"2023-11-08"},{"lineNumber":188,"author":{"gitId":"amber-le"},"content":"        + You can see the list of commands that you can use by typing `help` and then enter.","lastModifiedDate":"2023-11-08"},{"lineNumber":189,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":190,"author":{"gitId":"amber-le"},"content":"    - C-NaturalDates (matching last student number: 3)","lastModifiedDate":"2023-11-08"},{"lineNumber":191,"author":{"gitId":"amber-le"},"content":"        + Support more natural date formats e.g., Mon in a user command can be interpreted as the date of the next","lastModifiedDate":"2023-11-09"},{"lineNumber":192,"author":{"gitId":"amber-le"},"content":"          Monday in the calendar.","lastModifiedDate":"2023-11-09"},{"lineNumber":193,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"amber-le"},"content":"11. Other features Describe other features you implement (i.e., not described above), if any e.g., optional increments.","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"amber-le"},"content":"    - When the system starts, the user can choose the checklist that they want to work on.","lastModifiedDate":"2023-11-08"},{"lineNumber":197,"author":{"gitId":"amber-le"},"content":"    - Reason for doing this feature: When I put a lot of tasks in the list, I want to separate them into different","lastModifiedDate":"2023-11-08"},{"lineNumber":198,"author":{"gitId":"amber-le"},"content":"      categories, so I can work on them one by one, and it will be easier to manage.","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"amber-le"},"content":"    - How to use this feature:","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"amber-le"},"content":"        + You can choose the checklist that they want to work on by typing the name of the checklist at the beginning","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"amber-le"},"content":"          of the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":202,"author":{"gitId":"amber-le"},"content":"        + If you want to create a new checklist, they can type the name of the checklist that they want to create.","lastModifiedDate":"2023-11-08"},{"lineNumber":203,"author":{"gitId":"amber-le"},"content":"        + If you type in the name of an existing checklist, they can continue working on the checklist that already has","lastModifiedDate":"2023-11-09"},{"lineNumber":204,"author":{"gitId":"amber-le"},"content":"          the tasks they set before.","lastModifiedDate":"2023-11-09"},{"lineNumber":205,"author":{"gitId":"amber-le"},"content":"        + If you want to switch to another checklist, they can type `switch` and then enter. After that, the user","lastModifiedDate":"2023-11-08"},{"lineNumber":206,"author":{"gitId":"amber-le"},"content":"          can type the checklist name that they want to work on.","lastModifiedDate":"2023-11-08"},{"lineNumber":207,"author":{"gitId":"amber-le"},"content":"        + If you want to see all the checklists that they have created, they can type `checklists` and then enter.","lastModifiedDate":"2023-11-08"},{"lineNumber":208,"author":{"gitId":"amber-le"},"content":"          After that, you can see all the checklists that they have created.","lastModifiedDate":"2023-11-08"},{"lineNumber":209,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":210,"author":{"gitId":"amber-le"},"content":"     ![img_1.png](images/img_1.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":211,"author":{"gitId":"amber-le"},"content":"12. MoreOOP Give a class diagram to match your code. Do not use auto-generated diagrams. Omit less important classes, attributes, methods. Follow the given UML notation exactly.","lastModifiedDate":"2023-11-09"},{"lineNumber":212,"author":{"gitId":"amber-le"},"content":"    ","lastModifiedDate":"2023-11-09"},{"lineNumber":213,"author":{"gitId":"amber-le"},"content":"    - Class Diagram","lastModifiedDate":"2023-11-09"},{"lineNumber":214,"author":{"gitId":"amber-le"},"content":"    ","lastModifiedDate":"2023-11-09"},{"lineNumber":215,"author":{"gitId":"amber-le"},"content":"    Give at least one object diagram illustrating the state of your program at some point. It should include at least one object of each of the important classes in your project.","lastModifiedDate":"2023-11-09"},{"lineNumber":216,"author":{"gitId":"amber-le"},"content":"    ","lastModifiedDate":"2023-11-09"},{"lineNumber":217,"author":{"gitId":"amber-le"},"content":"    - Object Diagram","lastModifiedDate":"2023-11-09"},{"lineNumber":218,"author":{"gitId":"amber-le"},"content":"    ","lastModifiedDate":"2023-11-09"},{"lineNumber":219,"author":{"gitId":"amber-le"},"content":"    Give at least one sequence diagram illustrating an object interaction in your product.","lastModifiedDate":"2023-11-09"},{"lineNumber":220,"author":{"gitId":"amber-le"},"content":"    ","lastModifiedDate":"2023-11-09"},{"lineNumber":221,"author":{"gitId":"amber-le"},"content":"    - Sequence Diagram","lastModifiedDate":"2023-11-09"},{"lineNumber":222,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":223,"author":{"gitId":"amber-le"},"content":"13. A-JavaDoc: Give at least 2 javadoc comments from you code.","lastModifiedDate":"2023-11-09"},{"lineNumber":224,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":225,"author":{"gitId":"amber-le"},"content":"    ![img_24.png](images/img_24.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":226,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":227,"author":{"gitId":"amber-le"},"content":"    ![img_25.png](images/img_25.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":228,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":229,"author":{"gitId":"amber-le"},"content":"14. A-JUnit: Give 2-3 JUnit test methods from your code.","lastModifiedDate":"2023-11-09"},{"lineNumber":230,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":231,"author":{"gitId":"amber-le"},"content":"    ![img_26.png](images/img_26.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":232,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":233,"author":{"gitId":"amber-le"},"content":"    ![img_27.png](images/img_27.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":234,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":235,"author":{"gitId":"amber-le"},"content":"15. A-Assertions: Give at least 2 code segments that contain assertions you added to your code.","lastModifiedDate":"2023-11-09"},{"lineNumber":236,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":237,"author":{"gitId":"amber-le"},"content":"    ![img_28.png](images/img_28.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":238,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":239,"author":{"gitId":"amber-le"},"content":"    ![img_29.png](images/img_29.png)","lastModifiedDate":"2023-11-09"},{"lineNumber":240,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":241,"author":{"gitId":"amber-le"},"content":"16. Suggested test commands Give a list of commands a tester can execute in sequence to examine your product. Cover all features in a reasonable order.","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"amber-le":241}},{"path":"src/main/java/command/AddTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-21"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-10-21"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-21"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-21"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-07"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":" * Adds a task to the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":" * AddTaskCommand class is a class that handles the add command.","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"public class AddTaskCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Adds the task to the list.","lastModifiedDate":"2023-11-07"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     * It will print out the message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-11"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        input \u003d input.trim();","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        if (input.contains(\"/by\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            String[] formatDeadline \u003d input.split(\"/by\");","lastModifiedDate":"2023-09-12"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            handleBy(input, tasks, formatDeadline);","lastModifiedDate":"2023-10-14"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        if (input.contains(\"/from\")) {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            String[] formatEvent \u003d input.split(\"/from\");","lastModifiedDate":"2023-09-12"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            handleFrom(input, tasks, formatEvent);","lastModifiedDate":"2023-10-14"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        tasks.add(new Todo(input));","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        printAddMessage(input, tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    private static void handleFrom(String input, List\u003cTask\u003e tasks, String[] formatEvent) {","lastModifiedDate":"2023-10-14"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        if (formatEvent.length \u003c\u003d 1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"            handleTo(tasks, formatEvent);","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            printAddMessage(input, tasks);","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        } catch (DateTimeException d) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"    private static void handleTo(List\u003cTask\u003e tasks, String[] formatEvent) {","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        if (formatEvent[1].contains((\"/to\"))) {","lastModifiedDate":"2023-09-12"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"            String[] timeEvent \u003d formatEvent[1].split(\"/to\");","lastModifiedDate":"2023-09-12"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"            tasks.add(new Event(formatEvent[0].trim(), timeEvent[0], timeEvent[1]));","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-09-12"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"            tasks.add(new Event(formatEvent[0].trim(), formatEvent[1]));","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"    private static void handleBy(String input, List\u003cTask\u003e tasks, String[] formatDeadline) {","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"        if (formatDeadline.length \u003c\u003d 1) {","lastModifiedDate":"2023-10-14"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-10-14"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"            tasks.add(new Deadline(formatDeadline[0].trim(), formatDeadline[1]));","lastModifiedDate":"2023-10-14"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"            printAddMessage(input, tasks);","lastModifiedDate":"2023-09-12"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"            printDateTimeParseExceptionMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":75}},{"path":"src/main/java/command/BlahCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class BlahCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends a blah message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        printBlahMessage();","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":16}},{"path":"src/main/java/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.HelloAndByeMessage;","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * ByeCommand class is a class that handles the bye command.","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * It implements the CommandInterface.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the bye command.","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"public class ByeCommand extends HelloAndByeMessage implements CommandInterface {","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends bye message to the user.","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        printByeMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":21}},{"path":"src/main/java/command/ChecklistCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import java.io.File;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class ChecklistCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends the Checklist task message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        String folderPath \u003d \"./data\";","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        File folder \u003d new File(folderPath);","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        if (!folder.exists() \u0026\u0026 !folder.isDirectory()) {","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"            folder.mkdir();","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        File[] files \u003d folder.listFiles();","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        printChecklistMessage(files);","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"amber-le":26}},{"path":"src/main/java/command/CommandCreator.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Keyword;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":" * CommandCreator class is a class that creates the command.","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":" * It has a method to create the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"public class CommandCreator {","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * Returns the command based on the keyword.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @param keyword The keyword of the command.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @return The command.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    public CommandInterface create(Keyword keyword) {","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        switch (keyword) {","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        case LIST:","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            return new ListCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        case BLAH:","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            return new BlahCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        case BYE:","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"            return new ByeCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        case MARK:","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            return new MarkCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        case UNMARK:","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            return new UnmarkCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        case DELETE:","lastModifiedDate":"2023-10-31"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            return new DeleteCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        case FIND:","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            return new FindCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        case SORT:","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            return new SortCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        case HELP:","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            return new HelpCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        case UNDO:","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            return new UndoCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        case CHECKLISTS:","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        case CHECKLIST:","lastModifiedDate":"2023-11-09"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"            return new ChecklistCommand();","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        case SWITCH:","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            return new SwitchCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        case ADD:","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        case TODO:","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        case DEADLINE:","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        case EVENT:","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        case DEFAULT:","lastModifiedDate":"2023-10-31"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        default:","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"            return new AddTaskCommand();","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"amber-le":54}},{"path":"src/main/java/command/CommandInterface.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":" * CommandInterface is an interface that handles the command.","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the command.","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public interface CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * Sends the input command to the handleCommand method.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * This method is to handle any command from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    void handleCommand(String input, List\u003cTask\u003e tasks);","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":21}},{"path":"src/main/java/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * DeleteCommand class is a class that handles the delete command.","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * It implements the CommandInterface.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the delete command.","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"public class DeleteCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    Integer DELETE_LENGTH \u003d 6;","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends the deleted message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     * This method will delete the task from the list.","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        input \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        assert input.length() \u003e\u003d DELETE_LENGTH;","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        String checkDelete \u003d input.substring(DELETE_LENGTH).trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        if (checkDelete.equals(\"all\")) {","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            printDeleteAllMessage();","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            tasks.clear();","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"            int checkNum \u003d (Integer.parseInt(checkDelete)) - 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            boolean isNumOutOfTask \u003d checkNum \u003e\u003d tasks.size() || checkNum \u003c 0;","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            if (isNumOutOfTask) {","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"                printNumOutOfTask(tasks.size());","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"                return;","lastModifiedDate":"2023-10-21"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            printDeleteMessage(tasks.get(checkNum).toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"            tasks.remove(checkNum);","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"            printCountTask(tasks.size());","lastModifiedDate":"2023-10-11"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException nfe) {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            printDeleteErrorMessage();","lastModifiedDate":"2023-10-11"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":51}},{"path":"src/main/java/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"public class FindCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    private static final Integer FIND_LENGTH \u003d 4;","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends the list of tasks that contain the keyword to the user.","lastModifiedDate":"2023-11-07"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        input \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        String keyword \u003d input.substring(FIND_LENGTH).trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        List\u003cString\u003e listFound \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            String tmpAdd \u003d task.toString();","lastModifiedDate":"2023-10-16"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            boolean isContain \u003d tmpAdd.toLowerCase().contains(keyword);","lastModifiedDate":"2023-10-25"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            if (isContain) {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"                listFound.add(tmpAdd);","lastModifiedDate":"2023-10-16"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        if (listFound.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            printNoMatchingTasks(keyword);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            printFindMessage(listFound, keyword);","lastModifiedDate":"2023-10-19"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"amber-le":40}},{"path":"src/main/java/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.HelpMessage;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-13"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * This class will print out the help message.","lastModifiedDate":"2023-10-14"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class HelpCommand extends HelpMessage implements CommandInterface {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends the help message to the user.","lastModifiedDate":"2023-11-07"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        printHelpMessage();","lastModifiedDate":"2023-10-13"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        printHelpMessage1();","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"amber-le":23}},{"path":"src/main/java/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class ListCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends the list task message to the user.","lastModifiedDate":"2023-11-07"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-09-12"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"            printEmptyList();","lastModifiedDate":"2023-10-16"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        printListMessage(tasks);","lastModifiedDate":"2023-10-11"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":24}},{"path":"src/main/java/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class MarkCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    Integer MARK_LENGTH \u003d 4;","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends a mark message to the user and mark the task as done.","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        input \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        String checkMark \u003d input.substring(MARK_LENGTH).trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        if (checkMark.equals(\"all\")) {","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"            printMarkAllMessage();","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"                task.setDone(true);","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            Integer checkNum \u003d getInteger(checkMark, tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"            if (checkNum \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"                return;","lastModifiedDate":"2023-10-21"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            tasks.get(checkNum).setDone(true);","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"            printMarkMessage(tasks.get(checkNum).toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-11"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            printMarkErrorMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"    private static Integer getInteger(String checkMark, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        int checkNum \u003d (Integer.parseInt(checkMark)) - 1;","lastModifiedDate":"2023-10-25"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        if (checkNum \u003e\u003d tasks.size() || checkNum \u003c 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"            printNumOutOfTask(tasks.size());","lastModifiedDate":"2023-10-25"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            return null;","lastModifiedDate":"2023-10-25"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        return checkNum;","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":52}},{"path":"src/main/java/command/SortCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import utils.Sort;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * SortCommand class is a class that handles the sort command.","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" * It implements the CommandInterface.","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the sort command.","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"public class SortCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-10-18"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    Integer SORT_LENGTH \u003d 4;","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends the sorted list task message to the user and sort the list.","lastModifiedDate":"2023-11-07"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        List\u003cString\u003e allowedSort \u003d List.of(\"type\", \"t\", \"type-r\", \"tr\", \"date\", \"d\");","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        String checkSort \u003d input.substring(SORT_LENGTH).trim().toLowerCase();","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        if (allowedSort.contains(checkSort)) {","lastModifiedDate":"2023-10-14"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            Sort sort \u003d new Sort();","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            sort.sort(checkSort, tasks);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            printListMessage(tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            printSortErrorMessage();","lastModifiedDate":"2023-10-16"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-12"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"}],"authorContributionMap":{"amber-le":39}},{"path":"src/main/java/command/SwitchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-27"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * SwitchCommand class is a class that handles the switch command.","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * It implements the CommandInterface.","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the switch command.","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"public class SwitchCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends a switch message to the user and switch to another checklist.","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-27"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        // switch to another checklist","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        printSwitchMessage();","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        task.Craby.crabySystem(false);","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-27"}],"authorContributionMap":{"amber-le":24}},{"path":"src/main/java/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.Stack;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":" * UndoCommand class is a class that handles the undo command.","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":" * It implements the CommandInterface.","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the undo command.","lastModifiedDate":"2023-10-27"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-27"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"public class UndoCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    private static Stack\u003cList\u003cTask\u003e\u003e stackTaskList \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    private static Stack\u003cString\u003e stackInput \u003d new Stack\u003c\u003e();","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    private static final List\u003cString\u003e NOT_ALLOWED_UNDO \u003d","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"            Arrays.asList(\"list\", \"find\", \"help\", \"undo\", \"blah\", \"switch\");","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends the undo message to the user and undo the previous command.","lastModifiedDate":"2023-11-07"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        if (stackTaskList.isEmpty() || stackInput.isEmpty()) {","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            printUndoError();","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        String command \u003d stackInput.pop().toLowerCase();","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e prevTask \u003d stackTaskList.peek();","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        stackTaskList.pop();","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        tasks.clear();","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        tasks.addAll(prevTask);","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        printUndoMessage(command);","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"     * This method will check if the input is allowed to undo or not.","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"     * If it is allowed, it will return true.","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"     * Otherwise, it will return false.","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    private static boolean isNotPutOnStack(String input) {","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        input \u003d inputArr[0].trim().toLowerCase();","lastModifiedDate":"2023-10-19"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        return NOT_ALLOWED_UNDO.contains(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"     * Adds the input and the list of tasks into the stack.","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"     * This method will check if the input is allowed to undo.","lastModifiedDate":"2023-10-27"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"     * If it is allowed, it will push the input and the list of tasks into the stack.","lastModifiedDate":"2023-10-27"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"     * Otherwise, it will not push the input and the list of tasks into the stack.","lastModifiedDate":"2023-10-27"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"    public static void putOnTheStack(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"        if (isNotPutOnStack(input)) {","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e cloneTasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2023-10-19"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"            cloneTasks.add(task.clone());","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"        stackTaskList.push(cloneTasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        stackInput.push(input);","lastModifiedDate":"2023-10-19"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-18"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"amber-le":72}},{"path":"src/main/java/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import io.CrabyMessage;","lastModifiedDate":"2023-10-11"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * This class represents an unmark command.","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class UnmarkCommand extends CrabyMessage implements CommandInterface {","lastModifiedDate":"2023-09-24"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    Integer UNMARK_LENGTH \u003d 6;","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc Sends the unmark message to the user and unmark the task.","lastModifiedDate":"2023-11-07"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-24"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    public void handleCommand(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-21"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        assert input !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        assert tasks !\u003d null;","lastModifiedDate":"2023-10-21"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        if (tasks.isEmpty()) {","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            printEmptyListForAllCommand(input);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-21"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        input \u003d input.toLowerCase().trim();","lastModifiedDate":"2023-10-16"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        String checkUnmark \u003d input.substring(UNMARK_LENGTH).trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        if (checkUnmark.equals(\"all\")) {","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"            printUnmarkAllMessage();","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"                task.setDone(false);","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"            Integer checkNum \u003d getInteger(checkUnmark, tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            if (checkNum \u003d\u003d null) {","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"                return;","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            tasks.get(checkNum).setDone(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"            printUnmarkMessage(tasks.get(checkNum).toString());","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        } catch (NumberFormatException | StringIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-11"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            printUnmarkErrorMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    private static Integer getInteger(String checkUnmark, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        int checkNum \u003d (Integer.parseInt(checkUnmark)) - 1;","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        if (checkNum \u003e\u003d tasks.size() || checkNum \u003c 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            printNumOutOfTask(tasks.size());","lastModifiedDate":"2023-10-25"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"            return null;","lastModifiedDate":"2023-10-25"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        return checkNum;","lastModifiedDate":"2023-10-25"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":55}},{"path":"src/main/java/craby/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package craby;","lastModifiedDate":"2023-10-08"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Craby;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"     * Sends a message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"     * This is the main method.","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"     * @param args the input from the user.","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"        Craby.crabySystem(true);","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"amber-le":12,"-":3}},{"path":"src/main/java/exceptions/InputBlankException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package exceptions;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * InputBlankException is an exception that handles the blank input.","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class InputBlankException extends Exception {","lastModifiedDate":"2023-09-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":8}},{"path":"src/main/java/exceptions/MyCustomException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package exceptions;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-25"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * MyCustomException is an exception that handles the blank description.","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class MyCustomException extends Throwable {","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"amber-le":7}},{"path":"src/main/java/io/CrabyMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-11"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import java.io.*;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-11"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-11"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-11"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * CrabyMessage class is a class that stores all the messages that CrabY will use.","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * Because the file is quite long, I separate the help, hello and bye messages into another file.","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" * It has a method to handle the command.","lastModifiedDate":"2023-10-11"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"public class CrabyMessage {","lastModifiedDate":"2023-10-11"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    public static final String LINE \u003d \"  ┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈◦•✩•◦┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈┈\";","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    public static final String SPACES \u003d \"   \";","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    private static final String PRINT_END_OF_LIST \u003d SPACES + \"꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦꒷꒦\";","lastModifiedDate":"2023-11-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    private static final String PRINT_START_OF_LIST \u003d SPACES + \"╭─────────────────────────────────────╮\";","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    public static String checkListName;","lastModifiedDate":"2023-10-28"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"     * Sends the blank input message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    public static void printInputBlankExceptionMessage() {","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! The description cannot be empty.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        System.out.println(","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"                SPACES + \"╰┈➤Type \\\"help\\\" if you need to see the list of command\" + System.lineSeparator() + LINE);","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"     * Sends the hello message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    public static void printEmptyListForAllCommand(String input) {","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        String[] inputArr \u003d input.split(\" \");","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! your list are empty (╯︵╰,)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Please add some tasks before use \" + inputArr[0].trim() + \" ☘\");","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"     * Sends the invalid number message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    public static void printNumOutOfTask(int input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        System.out.print(SPACES + \"Oops!!! Something wrong! Your list only have 1 ➞ \");","lastModifiedDate":"2023-10-19"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        System.out.println(input + \" tasks (╯︵╰,)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Please try again with another number ☘\");","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"     * Sends the task added message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"    public static void printAddMessage(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-11"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"✎ added:\");","lastModifiedDate":"2023-10-19"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ \" + input + \" - to your list\");","lastModifiedDate":"2023-10-19"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"        printCountTask(tasks.size());","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"     * Sends the task count message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"    public static void printCountTask(int input) {","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Now you have: \" + input + \" tasks in your list \\uD83D\\uDDCE.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"     * Sends the wrong date format message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"    public static void printDateTimeParseExceptionMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format (╯︵╰,)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Please enter in this format after used /by or /from and /to\");","lastModifiedDate":"2023-10-19"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: \\\"/by dd/mm/yyyy hhmm\\\" e.g: /by 12/12/2020 1800\");","lastModifiedDate":"2023-10-19"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"          or: \\\"/by mon\\\" - CrabY will put the date to the next Monday\");","lastModifiedDate":"2023-10-19"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"     * Sends the delete-all message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"    public static void printDeleteAllMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"✂ Ok, I clean up all your tasks\");","lastModifiedDate":"2023-10-19"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Let\u0027s start a new checklist\");","lastModifiedDate":"2023-10-19"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"     * Sends the deleted message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"    public static void printDeleteMessage(String input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"✂ Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-19"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ \" + input + \" - in your list\");","lastModifiedDate":"2023-10-19"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"     * Sends the delete error message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"    public static void printDeleteErrorMessage() {","lastModifiedDate":"2023-10-11"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format (╯︵╰,)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: delete [integer] e.g: delete 1\");","lastModifiedDate":"2023-10-19"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"          or: delete all to delete all the tasks in your list.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"     * Sends the list an empty message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"    public static void printEmptyList() {","lastModifiedDate":"2023-10-11"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_START_OF_LIST);","lastModifiedDate":"2023-10-19"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \" ░░░░ Your \" + checkListName.toUpperCase() + \" list is empty! ░░░░\");","lastModifiedDate":"2023-10-28"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"      Let\u0027s start a new checklist\");","lastModifiedDate":"2023-10-19"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_END_OF_LIST);","lastModifiedDate":"2023-10-19"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"     * Sends the list tasks message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-08"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":129,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"    public static void printListMessage(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-11"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_START_OF_LIST);","lastModifiedDate":"2023-10-19"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Here are the tasks in your \" + checkListName.toUpperCase() + \" list:\");","lastModifiedDate":"2023-10-28"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {","lastModifiedDate":"2023-10-12"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"            if (i \u003c\u003d 9) {","lastModifiedDate":"2023-10-11"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"                System.out.println(\"   \" + i + \".  \" + tasks.get(i - 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"            } else if (i \u003e 99) {","lastModifiedDate":"2023-10-11"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"                System.out.println(\"   \" + i + \" \" + tasks.get(i - 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"            } else {","lastModifiedDate":"2023-10-11"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"                System.out.println(\"   \" + i + \". \" + tasks.get(i - 1));","lastModifiedDate":"2023-10-12"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-11"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-11"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_END_OF_LIST);","lastModifiedDate":"2023-10-19"},{"lineNumber":143,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":144,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":145,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":146,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":147,"author":{"gitId":"amber-le"},"content":"     * Sends the mark message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":148,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":149,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":150,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":151,"author":{"gitId":"amber-le"},"content":"    public static void printMarkMessage(String input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":152,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Nice! I\u0027ve marked this task as DONE ツ:\");","lastModifiedDate":"2023-10-19"},{"lineNumber":153,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ \" + input);","lastModifiedDate":"2023-10-19"},{"lineNumber":154,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":155,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":156,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":157,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":158,"author":{"gitId":"amber-le"},"content":"     * Sends the mark-all messages to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":159,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":160,"author":{"gitId":"amber-le"},"content":"    public static void printMarkAllMessage() {","lastModifiedDate":"2023-11-08"},{"lineNumber":161,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Congratulations! You have COMPLETED all your tasks.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":162,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-11-08"},{"lineNumber":163,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":164,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":165,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":166,"author":{"gitId":"amber-le"},"content":"     * Sends the mark-error message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":167,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":168,"author":{"gitId":"amber-le"},"content":"    public static void printMarkErrorMessage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":169,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format (╯︵╰,)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":170,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: mark [integer] e.g: mark 1\");","lastModifiedDate":"2023-10-19"},{"lineNumber":171,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"          or: mark all - to mark all the tasks in your list.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":172,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":173,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":174,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":175,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":176,"author":{"gitId":"amber-le"},"content":"     * Sends the unmark message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":177,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":178,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":179,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":180,"author":{"gitId":"amber-le"},"content":"    public static void printUnmarkMessage(String input) {","lastModifiedDate":"2023-10-11"},{"lineNumber":181,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"OK, I\u0027ve marked this task as ☉⌓☉ NOT DONE yet:\");","lastModifiedDate":"2023-10-19"},{"lineNumber":182,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ \" + input);","lastModifiedDate":"2023-10-19"},{"lineNumber":183,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":184,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":185,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":186,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":187,"author":{"gitId":"amber-le"},"content":"     * Sends the unmark-all message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":188,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":189,"author":{"gitId":"amber-le"},"content":"    public static void printUnmarkAllMessage() {","lastModifiedDate":"2023-11-08"},{"lineNumber":190,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"OK, I\u0027ve marked ALL tasks as ☉⌓☉ NOT DONE yet:\");","lastModifiedDate":"2023-11-08"},{"lineNumber":191,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-11-08"},{"lineNumber":192,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":193,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":194,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":195,"author":{"gitId":"amber-le"},"content":"     * Sends the unmark-error message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":196,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":197,"author":{"gitId":"amber-le"},"content":"    public static void printUnmarkErrorMessage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":198,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format (╯︵╰,)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":199,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: unmark [integer] or e.g: unmark 1\");","lastModifiedDate":"2023-11-08"},{"lineNumber":200,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"          or: unmark all - to unmark all the tasks in your list.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":201,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":202,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-11"},{"lineNumber":203,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":204,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":205,"author":{"gitId":"amber-le"},"content":"     * Sends the find error message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":206,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":207,"author":{"gitId":"amber-le"},"content":"     * @param listFound the list of tasks that match with the keyword.","lastModifiedDate":"2023-11-03"},{"lineNumber":208,"author":{"gitId":"amber-le"},"content":"     * @param keyword   the keyword that user wants to find.","lastModifiedDate":"2023-11-08"},{"lineNumber":209,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":210,"author":{"gitId":"amber-le"},"content":"    public static void printFindMessage(List\u003cString\u003e listFound, String keyword) {","lastModifiedDate":"2023-10-19"},{"lineNumber":211,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"⌖ Here are the list tasks matching with \\\"\" + keyword + \"\\\":\");","lastModifiedDate":"2023-10-31"},{"lineNumber":212,"author":{"gitId":"amber-le"},"content":"        for (String s : listFound) {","lastModifiedDate":"2023-10-12"},{"lineNumber":213,"author":{"gitId":"amber-le"},"content":"            System.out.println(SPACES + s);","lastModifiedDate":"2023-10-19"},{"lineNumber":214,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":215,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":216,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":217,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":218,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":219,"author":{"gitId":"amber-le"},"content":"     * Sends no match message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":220,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":221,"author":{"gitId":"amber-le"},"content":"     * @param keyword the keyword that user wants to find.","lastModifiedDate":"2023-11-08"},{"lineNumber":222,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":223,"author":{"gitId":"amber-le"},"content":"    public static void printNoMatchingTasks(String keyword) {","lastModifiedDate":"2023-10-31"},{"lineNumber":224,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"✘ No tasks matching with \\\"\" + keyword + \"\\\" in your list.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":225,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Please try with another keyword ☘\");","lastModifiedDate":"2023-10-19"},{"lineNumber":226,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":227,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":228,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":229,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":230,"author":{"gitId":"amber-le"},"content":"     * Sends the sort message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":231,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":232,"author":{"gitId":"amber-le"},"content":"    public static void printSortErrorMessage() {","lastModifiedDate":"2023-10-16"},{"lineNumber":233,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Looks like you used the wrong format (╯︵╰,)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":234,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤ Try with: sort [type/date] e.g: sort type\");","lastModifiedDate":"2023-11-08"},{"lineNumber":235,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":236,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":237,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":238,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":239,"author":{"gitId":"amber-le"},"content":"     * Sends the blah message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":240,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":241,"author":{"gitId":"amber-le"},"content":"    public static void printBlahMessage() {","lastModifiedDate":"2023-10-14"},{"lineNumber":242,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! I\u0027m sorry, but I don\u0027t know what that means ☘\");","lastModifiedDate":"2023-10-19"},{"lineNumber":243,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":244,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":245,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":246,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":247,"author":{"gitId":"amber-le"},"content":"     * Sends the undo message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":248,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":249,"author":{"gitId":"amber-le"},"content":"     * @param command the command that user wants to undo.","lastModifiedDate":"2023-11-08"},{"lineNumber":250,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":251,"author":{"gitId":"amber-le"},"content":"    public static void printUndoMessage(String command) {","lastModifiedDate":"2023-10-31"},{"lineNumber":252,"author":{"gitId":"amber-le"},"content":"        String customizeMessage \u003d \"add - \";","lastModifiedDate":"2023-10-31"},{"lineNumber":253,"author":{"gitId":"amber-le"},"content":"        boolean isCustomize \u003d command.contains(\"delete\") || command.contains(\"mark\") || command.contains(\"sort\");","lastModifiedDate":"2023-10-31"},{"lineNumber":254,"author":{"gitId":"amber-le"},"content":"        if (isCustomize) {","lastModifiedDate":"2023-10-31"},{"lineNumber":255,"author":{"gitId":"amber-le"},"content":"            customizeMessage \u003d \" \";","lastModifiedDate":"2023-10-31"},{"lineNumber":256,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":257,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Undo Successful!!!\");","lastModifiedDate":"2023-10-19"},{"lineNumber":258,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤I\u0027ve undo your command:\" + customizeMessage + command);","lastModifiedDate":"2023-10-19"},{"lineNumber":259,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":260,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":261,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":262,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":263,"author":{"gitId":"amber-le"},"content":"     * Sends the undo error message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":264,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":265,"author":{"gitId":"amber-le"},"content":"    public static void printUndoError() {","lastModifiedDate":"2023-10-15"},{"lineNumber":266,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Undo unsuccessful. I already undo all the input you just entered.\");","lastModifiedDate":"2023-10-19"},{"lineNumber":267,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤Please try again with another command ☘\");","lastModifiedDate":"2023-10-19"},{"lineNumber":268,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-19"},{"lineNumber":269,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":270,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":271,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":272,"author":{"gitId":"amber-le"},"content":"     * Sends the switch message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":273,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":274,"author":{"gitId":"amber-le"},"content":"    public static void printSwitchMessage() {","lastModifiedDate":"2023-10-27"},{"lineNumber":275,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Which checklist do you want to switch to? (｡◕‿◕｡)\");","lastModifiedDate":"2023-10-28"},{"lineNumber":276,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤You can typing: \\\"School\\\" | \\\"Work\\\" | \\\"Personal\\\" |\");","lastModifiedDate":"2023-10-28"},{"lineNumber":277,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"               or  [checklist-name] if you want to creat a new list.\");","lastModifiedDate":"2023-10-28"},{"lineNumber":278,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-27"},{"lineNumber":279,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":280,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":281,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":282,"author":{"gitId":"amber-le"},"content":"     * Sends the checklist message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":283,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":284,"author":{"gitId":"amber-le"},"content":"    public static void printChecklistMessage(File[] files) {","lastModifiedDate":"2023-11-08"},{"lineNumber":285,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_START_OF_LIST);","lastModifiedDate":"2023-11-08"},{"lineNumber":286,"author":{"gitId":"amber-le"},"content":"        if (files !\u003d null) {","lastModifiedDate":"2023-11-08"},{"lineNumber":287,"author":{"gitId":"amber-le"},"content":"            System.out.println(SPACES + \"Here are categories of your checklist:\");","lastModifiedDate":"2023-11-08"},{"lineNumber":288,"author":{"gitId":"amber-le"},"content":"            printChecklist(files);","lastModifiedDate":"2023-11-09"},{"lineNumber":289,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":290,"author":{"gitId":"amber-le"},"content":"            System.out.println(SPACES + \"You don\u0027t have any checklist yet.\");","lastModifiedDate":"2023-11-09"},{"lineNumber":291,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":292,"author":{"gitId":"amber-le"},"content":"        System.out.println(PRINT_END_OF_LIST);","lastModifiedDate":"2023-11-09"},{"lineNumber":293,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-11-09"},{"lineNumber":294,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":295,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":296,"author":{"gitId":"amber-le"},"content":"    private static void printChecklist(File[] files) {","lastModifiedDate":"2023-11-09"},{"lineNumber":297,"author":{"gitId":"amber-le"},"content":"        for (File file : files) {","lastModifiedDate":"2023-11-08"},{"lineNumber":298,"author":{"gitId":"amber-le"},"content":"            if (!file.isFile()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":299,"author":{"gitId":"amber-le"},"content":"                continue;","lastModifiedDate":"2023-11-09"},{"lineNumber":300,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-11-09"},{"lineNumber":301,"author":{"gitId":"amber-le"},"content":"            String fileName \u003d file.getName();","lastModifiedDate":"2023-11-08"},{"lineNumber":302,"author":{"gitId":"amber-le"},"content":"            int indexOfLastDot \u003d fileName.lastIndexOf(\".\");","lastModifiedDate":"2023-11-08"},{"lineNumber":303,"author":{"gitId":"amber-le"},"content":"            if (indexOfLastDot \u003e 0) {","lastModifiedDate":"2023-11-08"},{"lineNumber":304,"author":{"gitId":"amber-le"},"content":"                fileName \u003d fileName.substring(0, indexOfLastDot).toUpperCase();","lastModifiedDate":"2023-11-08"},{"lineNumber":305,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":306,"author":{"gitId":"amber-le"},"content":"            System.out.println(SPACES + \"……✎ \" + fileName + \" \\uD83D\\uDDCE.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":307,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":308,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":309,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-11"},{"lineNumber":310,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"}],"authorContributionMap":{"amber-le":310}},{"path":"src/main/java/io/HelloAndByeMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-31"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * HelloAndByeMessage class is a class that handle some message when Craby start.","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" * It has a method to print out the hello and bye message.","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"public class HelloAndByeMessage extends CrabyMessage {","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"     * Sends the hello message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    public static void printHello() {","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE + System.lineSeparator() +","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"                                   \"   ____                  _      __   __\" + System.lineSeparator() +","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"                                   \"  / ___|  _ __    __ _  | |__   \\\\ \\\\ / /\" + System.lineSeparator() +","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"                                   \" | |     | \u0027__|  / _` | | \u0027_ \\\\   \\\\ V /\" + System.lineSeparator() +","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"                                   \" | |___  | |    | (_| | | |_) |   | |\" + System.lineSeparator() +","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"                                   \"  \\\\____| |_|     \\\\__,_| |_.__/    |_|\" + System.lineSeparator() +","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"                                   System.lineSeparator() + LINE);","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Hi ♡, CrabY 🦀 here!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Which checklist do you want to work on today? (｡◕‿◕｡)\");","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤You can typing: \\\"School\\\" | \\\"Work\\\" | \\\"Personal\\\" |\");","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"               or  [checklist-name] if you wanna creat a new list.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"     * Sends the empty type name message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    public static void printEmptyTypeName() {","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! The [checklist-name] cannot be empty.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"NOTE: if you use the same [checklist-name] that used before\");","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤You can continue to use the previous list of tasks.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"     * Sends the type name error message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    public static void printTypeNameError() {","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! The [checklist-name] cannot contain special character.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"NOTE: if you use the same [checklist-name] that used before\");","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤You can continue to use the previous list of tasks.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"     * Sends the name same with keyword message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"    public static void printNameSameWithKeyWord() {","lastModifiedDate":"2023-10-31"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Oops!!! Before you start, pls give me [checklist-name].\");","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤Your input cannot same with my keyword\");","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"NOTE: if you use the same [checklist-name] that used before\");","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤You can continue to use the previous list of tasks.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"     * Sends the first message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"     * @param input the input from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"    public static void printFirstMessage(String input) {","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        checkListName \u003d input;","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Ok I got it! Let start with your ➞ \" + input + \" list.\");","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"        System.out.println(","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"                SPACES + \"╰┈➤Type \\\"help\\\" if you need to see what I can do for you\" + System.lineSeparator() + LINE);","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"     * Sends the bye message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"    public static void printByeMessage() {","lastModifiedDate":"2023-10-31"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"Bye ♡, hope to see you again soon! •ᴗ•\");","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-10-31"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"        System.out.println(        \"               __   ♡   __\" + System.lineSeparator() +","lastModifiedDate":"2023-11-12"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"                                   \"              /           \\\\\" + System.lineSeparator() +","lastModifiedDate":"2023-11-12"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"                                   \"             (  / @   @ \\\\  )\" + System.lineSeparator() +","lastModifiedDate":"2023-11-12"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"                                   \"              \\\\(_ _\\\\_/_ _)/\" + System.lineSeparator() +","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"                                   \"            (\\\\ `-/     \\\\-\u0027 /)\" + System.lineSeparator() +","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"                                   \"             \\\"\u003d\u003d\u003d\\\\     /\u003d\u003d\u003d\\\"\" + System.lineSeparator() +","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"                                   \"              .\u003d\u003d\u0027)___(`\u003d\u003d.\" + System.lineSeparator() +","lastModifiedDate":"2023-11-12"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"                                   \"               .\u003d\u0027     `\u003d.\");","lastModifiedDate":"2023-11-12"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"}],"authorContributionMap":{"amber-le":88}},{"path":"src/main/java/io/HelpMessage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * HelpMessage class is a class that handles the help message.","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" * It has a method to print out the list of commands that what CrabY can do.","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"public class HelpMessage extends CrabyMessage {","lastModifiedDate":"2023-11-01"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"     * Sends the help message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    public static void printHelpMessage() {","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ❉⊱•  Welcome to Craby\u0027s help page! •⊰❉\");","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╚════ ▣ Here are the list of commands: ▣ ════╝\");","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"1.  list - list all the tasks\");","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. list\");","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"2.  \u003ctask description\u003e - add a todo task\");","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. read book\");","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"3.  \u003ctask description\u003e /by \u003cdd/mm/yyy hhmm\u003e - add a deadline task\");","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    Note: /by Mon -\u003e CrabY will automatically fill the date (next Monday)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. TIC2002 quiz 8 /by 2/12/2023 1800\");","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES +","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"                \"4.  event \u003ctask description\u003e /from \u003cdd/mm/yyy hhmm\u003e /to \u003cdd/mm/yyy hhmm\u003e - add an event task\");","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    Note: /from Fri -\u003e CrabY will automatically fill the date (next \" + \"Friday)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. project meeting /from 2/12/2023 1800 /to 2/12/2023 2000\");","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"5.  mark \u003ctask number\u003e - mark a task as DONE\");","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. mark 1\");","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    Note: mark all -\u003e CrabY will mark ALL the tasks as DONE\");","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"6.  unmark \u003ctask number\u003e - mark a task as NOT DONE YET\");","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. unmark 1\");","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    Note: unmark all -\u003e CrabY will mark ALL the tasks as NOT DONE YET\");","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"7.  delete \u003ctask number\u003e - delete a task\");","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. delete 1\");","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    Note: delete all -\u003e CrabY will delete ALL the tasks\");","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-11-01"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"     * Sends the help message to the user.","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"    public static void printHelpMessage1() {","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"8.  find \u003ckeyword\u003e - find a task with the keyword\");","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. find book\");","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"9.  sort \u003ctype/type-r/t/tr/date/d\u003e - sort the list by type or date\");","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    Note: type-r or tr will sort the list by type in revert order\");","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. sort t\");","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"10. undo - undo your previous command (except: list, find, help, blah commands)\");","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. undo\");","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"11. switch - switch to another list\");","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES +","lastModifiedDate":"2023-11-08"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"                \"    ╰┈➤after that CrabY will ask you to enter the name of the list that you want to switch to\");","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"12. help - show the list of commands\");","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. help\");","lastModifiedDate":"2023-11-08"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"13. bye - exit the program\");","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"    ╰┈➤e.g. bye\");","lastModifiedDate":"2023-11-08"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"        System.out.println();","lastModifiedDate":"2023-11-08"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"*** NOTE: if you use the same [List-name] that used before\");","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"        System.out.println(SPACES + \"╰┈➤you can continue to use the previous list of tasks.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"        System.out.println(LINE);","lastModifiedDate":"2023-11-08"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"amber-le":75}},{"path":"src/main/java/io/TaskStorage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-09-24"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-09-24"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-09-24"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.io.BufferedReader;","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.io.BufferedWriter;","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.io.FileReader;","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"import java.io.File;","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-09-24"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-09-24"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"public class TaskStorage {","lastModifiedDate":"2023-09-24"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    String filePath;","lastModifiedDate":"2023-09-24"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    private final String DIRECTORY_PATH \u003d \"./data\";","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"    File folder \u003d new File(DIRECTORY_PATH);","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    File file;","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    public TaskStorage(String fileName) {","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        file \u003d new File(DIRECTORY_PATH + \"/\" + fileName);","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        this.filePath \u003d DIRECTORY_PATH + \"/\" + fileName;","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     * Sends the list of tasks as input and save the tasks into the file.","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"     * This method will save the tasks into the file.","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"     * If the file does not exist, it will create a new file.","lastModifiedDate":"2023-10-25"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"     * If the file is empty, it will delete the file.","lastModifiedDate":"2023-10-25"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-27"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"     * @param tasks the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    public void save(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        if (!folder.exists()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            boolean mkdir \u003d folder.mkdir();","lastModifiedDate":"2023-10-21"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            assert mkdir;","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-24"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            StringBuilder content \u003d new StringBuilder();","lastModifiedDate":"2023-09-24"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            for (Task task : tasks) {","lastModifiedDate":"2023-09-24"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"                content.append(task.toStorageString());","lastModifiedDate":"2023-10-07"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"                content.append(System.lineSeparator());","lastModifiedDate":"2023-09-24"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(this.filePath));","lastModifiedDate":"2023-09-24"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"            writer.write(content.toString());","lastModifiedDate":"2023-09-24"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            writer.close();","lastModifiedDate":"2023-09-24"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-09-24"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-09-24"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        // delete the file if it is empty","lastModifiedDate":"2023-10-25"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"        if (file.exists() \u0026\u0026 file.length() \u003d\u003d 0) {","lastModifiedDate":"2023-10-25"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"            file.delete();","lastModifiedDate":"2023-10-25"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"     * This method will load the tasks from the file same name as the username.","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"     * If the file does not exist, it will create a new file.","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-21"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"     * @return the list of tasks.","lastModifiedDate":"2023-10-10"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"    public List\u003cTask\u003e load() {","lastModifiedDate":"2023-09-24"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-09-24"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-09-25"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"            try {","lastModifiedDate":"2023-09-24"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"                BufferedReader reader \u003d new BufferedReader(new FileReader(filePath));","lastModifiedDate":"2023-09-24"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"                loadLine(reader, tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"                reader.close();","lastModifiedDate":"2023-10-14"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-10-21"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"            save(tasks);","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"        return tasks;","lastModifiedDate":"2023-10-14"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"     * Returns the list of tasks loaded from the file.","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"     * Load the line from the file","lastModifiedDate":"2023-11-08"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"     * line format: type || status || description || time (optional) || time (optional)","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"     * type: T, D, E","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"     * status: 0, 1","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"     * description: String","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"     * time: yyyy/MM/dd HHmm","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"     * @param reader the reader to read the file","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"     * @param tasks  the list of tasks to store the tasks","lastModifiedDate":"2023-11-03"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"    private static void loadLine(BufferedReader reader, List\u003cTask\u003e tasks) throws IOException {","lastModifiedDate":"2023-10-14"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"        String line;","lastModifiedDate":"2023-09-24"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"        while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-09-24"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"            String[] split \u003d line.split(\"\\\\|\\\\|\");","lastModifiedDate":"2023-10-31"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"            String type \u003d split[0].trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"            String status \u003d split[1].trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"            String description \u003d split[2].trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"            switch (type) {","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"            case \"T\":","lastModifiedDate":"2023-10-31"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"                tasks.add(new Todo(description));","lastModifiedDate":"2023-10-31"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"            case \"D\":","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"                String time \u003d split[3].trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"                tasks.add(new Deadline(description, time));","lastModifiedDate":"2023-10-31"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"            case \"E\":","lastModifiedDate":"2023-10-31"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"                String startTime \u003d split[3].trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"                if (split.length \u003d\u003d 5) {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"                    String endTime \u003d split[4].trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"                    tasks.add(new Event(description, startTime, endTime));","lastModifiedDate":"2023-10-31"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"                    break;","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"                tasks.add(new Event(description, startTime));","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-31"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"            default:","lastModifiedDate":"2023-10-31"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"            if (status.equals(\"1\")) {","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"                tasks.get(tasks.size() - 1).setDone(true);","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-25"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-10"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-24"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-21"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":128}},{"path":"src/main/java/task/Craby.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import command.CommandInterface;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import command.CommandCreator;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import exceptions.MyCustomException;","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import exceptions.InputBlankException;","lastModifiedDate":"2023-09-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import io.HelloAndByeMessage;","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import io.TaskStorage;","lastModifiedDate":"2023-09-24"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"import static command.UndoCommand.putOnTheStack;","lastModifiedDate":"2023-11-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":" * This class is the main class of the program.","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":" * It will handle the input from the user.","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":" * It will print out the message to the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":" * It will save the data to the file.","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":" * It will load the data from the file.","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"public class Craby extends HelloAndByeMessage {","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    private static TaskStorage taskStorage;","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"    private static final String REGEX \u003d \".*[^a-zA-Z0-9\\\\s].*\";","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    private static final Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"     * Sends a greeting to the user if it is the first time the user\u0027s runs the program.","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"     * This method will print out the logo and the hello message.","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"     * @param is1stTime the arguments from the command line.","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    public static void crabySystem(boolean is1stTime) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        if (is1stTime) {","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"            printHello();","lastModifiedDate":"2023-10-11"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        String nameOfList \u003d checkListName(scanner);","lastModifiedDate":"2023-10-31"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        assert nameOfList !\u003d null;","lastModifiedDate":"2023-10-27"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        printFirstMessage(nameOfList);","lastModifiedDate":"2023-10-27"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        taskStorage \u003d new TaskStorage(nameOfList.toLowerCase() + \".txt\");","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d taskStorage.load();","lastModifiedDate":"2023-09-24"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        while (true) {","lastModifiedDate":"2023-09-12"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"            String input \u003d scanner.nextLine();","lastModifiedDate":"2023-09-12"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            input \u003d input.trim();","lastModifiedDate":"2023-09-12"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"            // the data store in the file slip by || so replace it to | to not make the data wrong","lastModifiedDate":"2023-11-01"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"            while (input.contains(\"||\")) {","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"                input \u003d input.replaceAll(\"\\\\|\\\\|\", \"|\");","lastModifiedDate":"2023-10-31"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"            boolean isExit \u003d false;","lastModifiedDate":"2023-10-31"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"            putOnTheStack(input, tasks); // use for undo command","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"            try {","lastModifiedDate":"2023-09-12"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"                isExit \u003d handleInput(input, tasks);","lastModifiedDate":"2023-10-31"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"            } catch (InputBlankException e) {","lastModifiedDate":"2023-09-12"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"                printInputBlankExceptionMessage();","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"            if (isExit) {","lastModifiedDate":"2023-10-31"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"                break;","lastModifiedDate":"2023-09-12"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"    private static String checkListName(Scanner scanner) {","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        String listName \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"        while (listName.isBlank()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"            printEmptyTypeName();","lastModifiedDate":"2023-10-27"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"            listName \u003d scanner.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"        Pattern pattern \u003d Pattern.compile(REGEX);","lastModifiedDate":"2023-10-19"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        Matcher matcher \u003d pattern.matcher(listName);","lastModifiedDate":"2023-10-31"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"        while (matcher.find()) {","lastModifiedDate":"2023-10-19"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"            printTypeNameError();","lastModifiedDate":"2023-10-27"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"            listName \u003d scanner.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-19"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"        boolean isKeyword \u003d isKeyword(listName);","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"        while (isKeyword) {","lastModifiedDate":"2023-10-25"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"            printNameSameWithKeyWord();","lastModifiedDate":"2023-10-25"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"            listName \u003d scanner.nextLine();","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"            isKeyword \u003d isKeyword(listName);","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"        return listName;","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"    private static boolean isKeyword(String name) {","lastModifiedDate":"2023-10-25"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"        return Stream.of(\"list\", \"blah\", \"bye\", \"mark\", \"unmark\", \"delete\", \"find\", \"sort\", \"help\", \"undo\")","lastModifiedDate":"2023-10-25"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"                .anyMatch(name.toLowerCase()::equalsIgnoreCase);","lastModifiedDate":"2023-10-25"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"    private static boolean handleInput(String input, List\u003cTask\u003e tasks) throws InputBlankException {","lastModifiedDate":"2023-09-25"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"        if (input.isBlank()) {","lastModifiedDate":"2023-10-25"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"            throw new InputBlankException();","lastModifiedDate":"2023-10-25"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-25"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"        String checkInput;","lastModifiedDate":"2023-09-12"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-09-12"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"            checkInput \u003d input.split(\" \")[0];","lastModifiedDate":"2023-09-12"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"        } catch (ArrayIndexOutOfBoundsException e) {","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"            throw new InputBlankException();","lastModifiedDate":"2023-09-12"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"        checkInput \u003d checkInput.toUpperCase().trim();","lastModifiedDate":"2023-09-24"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-10-25"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"            // check if the input is blank","lastModifiedDate":"2023-10-31"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"            checkBlankDescription(checkInput);","lastModifiedDate":"2023-10-31"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"            Keyword keyWords \u003d getKeyword(checkInput);","lastModifiedDate":"2023-10-31"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"            // check if the description is blank","lastModifiedDate":"2023-11-01"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"            if (Arrays.asList(Keyword.ADD, Keyword.TODO, Keyword.DEADLINE, Keyword.EVENT).contains(keyWords)) {","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"                input \u003d input.substring(checkInput.length());","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"            if (input.isBlank()) {","lastModifiedDate":"2023-10-31"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"                throw new InputBlankException();","lastModifiedDate":"2023-10-31"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"            // handle the input","lastModifiedDate":"2023-11-01"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"            CommandCreator commandCreator \u003d new CommandCreator();","lastModifiedDate":"2023-11-12"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"            CommandInterface command \u003d commandCreator.create(keyWords);","lastModifiedDate":"2023-11-12"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"            command.handleCommand(input, tasks);","lastModifiedDate":"2023-11-12"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"            boolean isExit \u003d keyWords \u003d\u003d Keyword.BYE || keyWords \u003d\u003d Keyword.SWITCH;","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"            if (isExit) {","lastModifiedDate":"2023-10-31"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"                return true;","lastModifiedDate":"2023-10-31"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-09-12"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"            taskStorage.save(tasks);","lastModifiedDate":"2023-09-24"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"        } catch (MyCustomException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"amber-le"},"content":"            printInputBlankExceptionMessage();","lastModifiedDate":"2023-10-31"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"            return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-24"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"        return false;","lastModifiedDate":"2023-10-31"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"    private static Keyword getKeyword(String checkInput) {","lastModifiedDate":"2023-10-31"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"        try {","lastModifiedDate":"2023-10-31"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"            return Keyword.valueOf(checkInput);","lastModifiedDate":"2023-11-01"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"            // if the input is not a keyword,","lastModifiedDate":"2023-11-08"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"            // it will be a task","lastModifiedDate":"2023-10-31"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"            return Keyword.DEFAULT;","lastModifiedDate":"2023-10-31"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-12"},{"lineNumber":143,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":144,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":145,"author":{"gitId":"amber-le"},"content":"    private static void checkBlankDescription(String checkInput) throws MyCustomException {","lastModifiedDate":"2023-10-31"},{"lineNumber":146,"author":{"gitId":"amber-le"},"content":"        boolean isBlank \u003d checkInput.equals(\"/FROM\") || checkInput.equals(\"/BY\") || checkInput.equals(\"/TO\");","lastModifiedDate":"2023-10-31"},{"lineNumber":147,"author":{"gitId":"amber-le"},"content":"        if (isBlank) {","lastModifiedDate":"2023-10-31"},{"lineNumber":148,"author":{"gitId":"amber-le"},"content":"            throw new MyCustomException();","lastModifiedDate":"2023-10-31"},{"lineNumber":149,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":150,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-12"},{"lineNumber":151,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":152,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-12"}],"authorContributionMap":{"amber-le":152}},{"path":"src/main/java/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import utils.DateTimeUtils;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-07"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-07"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-07"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * This class represents a deadline task.","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * It extends from the Task class.","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime time;","lastModifiedDate":"2023-10-07"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * Returns the LocalDateTime object.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * It will use it for the sort function.","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    public LocalDateTime getTime() {","lastModifiedDate":"2023-10-12"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        return time;","lastModifiedDate":"2023-10-12"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"     * Adds a deadline tasks.","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     * @param timeString  the time of the task.","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"    public Deadline(String description, String timeString) {","lastModifiedDate":"2023-10-07"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        assert timeString !\u003d null;","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        timeString \u003d timeString.trim();","lastModifiedDate":"2023-10-07"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        LocalDateTime dateTime \u003d DateTimeUtils.parseNextDay(timeString);","lastModifiedDate":"2023-10-14"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"            this.time \u003d dateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        String[] isTime \u003d timeString.split(\" \");","lastModifiedDate":"2023-10-07"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        if (isTime.length \u003e 1) {","lastModifiedDate":"2023-10-07"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            this.time \u003d handleDateTime(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-07"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"            this.time \u003d handleDateTime(timeString + TIME_END_DAY);","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-07"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        String timeString;","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"        if (now.getYear() \u003d\u003d this.time.getYear()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"            timeString \u003d this.time.format(DateTimeFormatter.ofPattern(DATE_TIME_OUTPUT_FORMAT_THIS_YEAR));","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"            timeString \u003d this.time.format(DateTimeFormatter.ofPattern(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        return \"[D]\" + super.toString() + \" || before: \" + timeString.trim();","lastModifiedDate":"2023-11-08"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-07"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        String type \u003d \"D\";","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"        String description \u003d this.description;","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"        String time \u003d this.time.format(DateTimeFormatter.ofPattern(DATE_TIME_STORAGE_DEFAULT_FORMAT));","lastModifiedDate":"2023-11-09"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        return type + \" || \" + status + \" || \" + description + \" || \" + time;","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-25"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"    public Task clone() {","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"        Deadline clone \u003d new Deadline(this.description,","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"                                      this.time.format(DateTimeFormatter.ofPattern(DATE_TIME_STORAGE_DEFAULT_FORMAT)));","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"        clone.setDone(this.isDone);","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"        return clone;","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"amber-le":86}},{"path":"src/main/java/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import utils.DateTimeUtils;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-08"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * Event is a task that has a description and a time.","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" * It is a subclass of Task.","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime fromTime;","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime toTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     * Returns fromTime.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     * This method is to handle the date and time.","lastModifiedDate":"2023-10-14"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     * It will use it for the sort function.","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object","lastModifiedDate":"2023-10-14"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    public LocalDateTime getFromTime() {","lastModifiedDate":"2023-10-16"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        return fromTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"     * Returns an event task that user input have /from and /to","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     * This class represents an event task that user input only have /from","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-12"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"     * @param description the description of the event task.","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"     * @param timeString  the time string from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    public Event(String description, String timeString) {","lastModifiedDate":"2023-10-08"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        formatTimeString(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"     * This method will format the time string to the correct format.","lastModifiedDate":"2023-10-09"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"     * @param timeString the time string from the user.","lastModifiedDate":"2023-10-09"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"    private void formatTimeString(String timeString) {","lastModifiedDate":"2023-10-08"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        timeString \u003d timeString.trim();","lastModifiedDate":"2023-10-08"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        LocalDateTime dateTime \u003d DateTimeUtils.parseNextDay(timeString);","lastModifiedDate":"2023-10-14"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"            this.fromTime \u003d dateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"        String[] isTime \u003d timeString.split(\" \");","lastModifiedDate":"2023-10-08"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"        if (isTime.length \u003e 1) {","lastModifiedDate":"2023-10-08"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"            this.fromTime \u003d handleDateTime(timeString);","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"            this.fromTime \u003d handleDateTime(timeString + TIME_START_DAY);","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"     * Returns an event task that user input have /from and /to","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"     * This class represents an event task that user input have /from and /to","lastModifiedDate":"2023-10-25"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"     * It will format the time string to the correct format.","lastModifiedDate":"2023-10-25"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"     * It will use it for the sort date function.","lastModifiedDate":"2023-11-08"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"     * @param description  the description of the event task.","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"     * @param timeString   the time string from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"     * @param timeStringTo the time string from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"    public Event(String description, String timeString, String timeStringTo) {","lastModifiedDate":"2023-10-10"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"        formatTimeString(timeString);","lastModifiedDate":"2023-10-08"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        timeStringTo \u003d timeStringTo.trim();","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"        LocalDateTime dateTime \u003d DateTimeUtils.parseNextDay(timeStringTo);","lastModifiedDate":"2023-10-14"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        if (dateTime !\u003d null) {","lastModifiedDate":"2023-10-14"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"            this.toTime \u003d dateTime;","lastModifiedDate":"2023-10-16"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"            return;","lastModifiedDate":"2023-10-14"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"        String[] isTime1 \u003d timeStringTo.split(\" \");","lastModifiedDate":"2023-10-10"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"        if (isTime1.length \u003e 1) {","lastModifiedDate":"2023-10-08"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"            this.toTime \u003d handleDateTime(timeStringTo);","lastModifiedDate":"2023-10-16"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"            this.toTime \u003d handleDateTime(timeStringTo + TIME_END_DAY);","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-09"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"        String timeString;","lastModifiedDate":"2023-11-09"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"        if (now.getYear() \u003d\u003d this.fromTime.getYear()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"            timeString \u003d this.fromTime.format(DateTimeFormatter.ofPattern(DATE_TIME_OUTPUT_FORMAT_THIS_YEAR));","lastModifiedDate":"2023-11-09"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"            timeString \u003d this.fromTime.format(DateTimeFormatter.ofPattern(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-11-09"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"        if (this.toTime \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"            return \"[E]\" + super.toString() + \" || from: \" + timeString;","lastModifiedDate":"2023-11-08"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-12"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"        boolean isSameDay \u003d this.fromTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"))","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"                                         .equals(this.toTime.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\")));","lastModifiedDate":"2023-10-25"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"        String timeString1;","lastModifiedDate":"2023-10-12"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"        if (isSameDay) {","lastModifiedDate":"2023-10-14"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"            timeString1 \u003d this.toTime.format(DateTimeFormatter.ofPattern(\"hh:mma\"));","lastModifiedDate":"2023-10-16"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"        } else if (now.getYear() \u003d\u003d this.toTime.getYear()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"            timeString1 \u003d this.toTime.format(DateTimeFormatter.ofPattern(DATE_TIME_OUTPUT_FORMAT_THIS_YEAR));","lastModifiedDate":"2023-11-09"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-12"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"            timeString1 \u003d this.toTime.format(DateTimeFormatter.ofPattern(DATE_TIME_OUTPUT_FORMAT));","lastModifiedDate":"2023-11-09"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-09-10"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"        return \"[E]\" + super.toString() + \" || from: \" + timeString + \" ➞ to: \" + timeString1;","lastModifiedDate":"2023-11-08"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-08"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-08"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"        String type \u003d \"E\";","lastModifiedDate":"2023-10-31"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-10-31"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"        String description \u003d this.description;","lastModifiedDate":"2023-10-31"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"        String time \u003d this.fromTime.format(DateTimeFormatter.ofPattern(DATE_TIME_STORAGE_DEFAULT_FORMAT));","lastModifiedDate":"2023-11-09"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"        if (this.toTime \u003d\u003d null) {","lastModifiedDate":"2023-10-16"},{"lineNumber":125,"author":{"gitId":"amber-le"},"content":"            return type + \" || \" + status + \" || \" + description + \" || \" + time;","lastModifiedDate":"2023-10-31"},{"lineNumber":126,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":127,"author":{"gitId":"amber-le"},"content":"        String timeOfTo \u003d this.toTime.format(DateTimeFormatter.ofPattern(DATE_TIME_STORAGE_DEFAULT_FORMAT));","lastModifiedDate":"2023-11-09"},{"lineNumber":128,"author":{"gitId":"amber-le"},"content":"        return type + \" || \" + status + \" || \" + description + \" || \" + time + \" || \" + timeOfTo;","lastModifiedDate":"2023-10-31"},{"lineNumber":129,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":130,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":131,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":132,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":133,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":134,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":135,"author":{"gitId":"amber-le"},"content":"    public Task clone() {","lastModifiedDate":"2023-11-12"},{"lineNumber":136,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(this.description,","lastModifiedDate":"2023-11-09"},{"lineNumber":137,"author":{"gitId":"amber-le"},"content":"                                this.fromTime.format(DateTimeFormatter.ofPattern(DATE_TIME_STORAGE_DEFAULT_FORMAT)));","lastModifiedDate":"2023-11-09"},{"lineNumber":138,"author":{"gitId":"amber-le"},"content":"        event.setDone(this.isDone);","lastModifiedDate":"2023-10-31"},{"lineNumber":139,"author":{"gitId":"amber-le"},"content":"        event.toTime \u003d this.toTime;","lastModifiedDate":"2023-10-17"},{"lineNumber":140,"author":{"gitId":"amber-le"},"content":"        return event;","lastModifiedDate":"2023-10-17"},{"lineNumber":141,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":142,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"amber-le":142}},{"path":"src/main/java/task/Keyword.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-24"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-24"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * This enum class contains all the keywords that the user can use for the command.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public enum Keyword {","lastModifiedDate":"2023-09-24"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    LIST, BLAH, BYE, MARK, UNMARK, DELETE, FIND, HELP, SORT, UNDO, SWITCH, TODO, DEADLINE, EVENT, ADD, DEFAULT,","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    CHECKLISTS, CHECKLIST","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-24"}],"authorContributionMap":{"amber-le":9}},{"path":"src/main/java/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-08"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-08"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":" * This class represents a task.","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"public abstract class Task {","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    public static final String DATE_TIME_OUTPUT_FORMAT \u003d \"d MMM yyyy, E hh:mma\";","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    public static final String DATE_TIME_OUTPUT_FORMAT_THIS_YEAR \u003d \"d MMM, E hh:mma\";","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    public static final String DATE_TIME_STORAGE_DEFAULT_FORMAT \u003d \"yyyy/M/d HHmm\";","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public static final String TIME_START_DAY \u003d \" 0000\";","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    public static final String TIME_END_DAY \u003d \" 2359\";","lastModifiedDate":"2023-11-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    protected String description;","lastModifiedDate":"2023-09-01"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     * Returns a task.","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-07"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    public Task(String description) {","lastModifiedDate":"2023-09-01"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-01"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     * Returns the status icon of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"     * @return the status icon of the task","lastModifiedDate":"2023-10-11"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-10-11"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        return (isDone ? \" ✓ \" : \"҉҉҉\");","lastModifiedDate":"2023-10-11"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"     * Sends new status to the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"     * This method is to set the task is done or not.","lastModifiedDate":"2023-10-27"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    public void setDone(boolean done) {","lastModifiedDate":"2023-10-31"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        isDone \u003d done;","lastModifiedDate":"2023-09-01"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-27"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"     * Returns the task is done or not.","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"     * This method is to get the task done or not.","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"    public boolean getDone() {","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        return isDone;","lastModifiedDate":"2023-10-10"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"     * Returns the date and time of the task.","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"     * It will cover four different formats of the date and time.","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-14"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"     * @param time the time string from the user.","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object to the format requirement.","lastModifiedDate":"2023-10-14"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"    protected LocalDateTime handleDateTime(String time) {","lastModifiedDate":"2023-10-08"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"        // check the format of the time user input","lastModifiedDate":"2023-10-10"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2023-10-08"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"        if (time.contains(\"/\")) {","lastModifiedDate":"2023-10-08"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"            formatter \u003d getDateTimeSlashFormatter(time);","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"            formatter \u003d getDateTimeDashFormatter(time);","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        return LocalDateTime.parse(time, formatter);","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"    private static DateTimeFormatter getDateTimeDashFormatter(String time) {","lastModifiedDate":"2023-10-31"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2023-10-31"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"        String[] checkFormat \u003d time.split(\"-\");","lastModifiedDate":"2023-10-08"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        if (checkFormat[0].length() \u003e 2) {","lastModifiedDate":"2023-10-08"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-M-d HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-08"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"d-M-yyyy HHmm\");","lastModifiedDate":"2023-10-08"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-08"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"        return formatter;","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"    private static DateTimeFormatter getDateTimeSlashFormatter(String time) {","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"        DateTimeFormatter formatter;","lastModifiedDate":"2023-10-31"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"        String[] checkFormat \u003d time.split(\"/\");","lastModifiedDate":"2023-10-31"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"        if (checkFormat[0].length() \u003c\u003d 2) {","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"d/M/yyyy HHmm\");","lastModifiedDate":"2023-10-31"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"            formatter \u003d DateTimeFormatter.ofPattern(\"yyyy/M/d HHmm\");","lastModifiedDate":"2023-10-31"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-31"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"        return formatter;","lastModifiedDate":"2023-10-31"},{"lineNumber":92,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-08"},{"lineNumber":93,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-08"},{"lineNumber":94,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":95,"author":{"gitId":"amber-le"},"content":"     * Returns task in string format.","lastModifiedDate":"2023-11-03"},{"lineNumber":96,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":97,"author":{"gitId":"amber-le"},"content":"     * @return the type, description, status of the task","lastModifiedDate":"2023-10-10"},{"lineNumber":98,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":99,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-01"},{"lineNumber":100,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-01"},{"lineNumber":101,"author":{"gitId":"amber-le"},"content":"        // Capitalize the first letter of the description","lastModifiedDate":"2023-10-14"},{"lineNumber":102,"author":{"gitId":"amber-le"},"content":"        this.description \u003d this.description.substring(0, 1).toUpperCase() + this.description.substring(1);","lastModifiedDate":"2023-10-25"},{"lineNumber":103,"author":{"gitId":"amber-le"},"content":"        return \"[\" + getStatusIcon() + \"] \" + this.description;","lastModifiedDate":"2023-10-11"},{"lineNumber":104,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-01"},{"lineNumber":105,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-01"},{"lineNumber":106,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":107,"author":{"gitId":"amber-le"},"content":"     * Returns a task in string format.","lastModifiedDate":"2023-11-08"},{"lineNumber":108,"author":{"gitId":"amber-le"},"content":"     * This method is to save the data to the local file.","lastModifiedDate":"2023-11-03"},{"lineNumber":109,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":110,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-07"},{"lineNumber":111,"author":{"gitId":"amber-le"},"content":"        String status \u003d isDone ? \"1\" : \"0\";","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"amber-le"},"content":"        String description \u003d this.description;","lastModifiedDate":"2023-10-31"},{"lineNumber":113,"author":{"gitId":"amber-le"},"content":"        return status + \" || \" + description;","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-07"},{"lineNumber":115,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":116,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":117,"author":{"gitId":"amber-le"},"content":"     * Returns a clone of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":118,"author":{"gitId":"amber-le"},"content":"     * This method is to clone the task.","lastModifiedDate":"2023-10-25"},{"lineNumber":119,"author":{"gitId":"amber-le"},"content":"     * It will use it for the undo command.","lastModifiedDate":"2023-11-08"},{"lineNumber":120,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":121,"author":{"gitId":"amber-le"},"content":"     * @return the clone task.","lastModifiedDate":"2023-10-25"},{"lineNumber":122,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":123,"author":{"gitId":"amber-le"},"content":"    public abstract Task clone();","lastModifiedDate":"2023-11-12"},{"lineNumber":124,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-01"}],"authorContributionMap":{"amber-le":124}},{"path":"src/main/java/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-09-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" * This class represents a todo task.","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":" * Todo is a subclass of Task.","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"public class Todo extends Task {","lastModifiedDate":"2023-09-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-14"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"     * Returns a todo task.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"     * This is the constructor of the todo task.","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * @param description the description of the todo task.","lastModifiedDate":"2023-10-14"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-14"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    public Todo(String description) {","lastModifiedDate":"2023-09-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        super(description);","lastModifiedDate":"2023-09-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-09-12"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    public String toString() {","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        return \"[T]\" + super.toString();","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"    public String toStorageString() {","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        String type \u003d \"T\";","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        return type + \" || \" + super.toStorageString();","lastModifiedDate":"2023-10-31"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-25"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"    @Override","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"    public Task clone() {","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(this.description);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"        todo.isDone \u003d this.isDone;","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        return todo;","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"amber-le":47}},{"path":"src/main/java/utils/DateTimeUtils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package utils;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import java.util.Arrays;","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":" * This class represents a DateTimeUtils.","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":" * It is a utility class for handling date and time.","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"public class DateTimeUtils {","lastModifiedDate":"2023-10-14"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * Returns the DateTimeFormatter object.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     * This method will handle the date and time.","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * Use will input the date and time in natural language.","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * It will return the date and time in the correct format.","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"     * @param dateTimeStr the time string from the user.","lastModifiedDate":"2023-11-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"     * @return The LocalDateTime object","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    public static LocalDateTime parseNextDay(String dateTimeStr) {","lastModifiedDate":"2023-11-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        LocalDateTime now \u003d LocalDateTime.now();","lastModifiedDate":"2023-11-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        int index \u003d dateTimeStr.indexOf(\" \");","lastModifiedDate":"2023-11-09"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        String getDate;","lastModifiedDate":"2023-11-09"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        String getTimes \u003d \"\";","lastModifiedDate":"2023-11-09"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2023-11-09"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"            getDate \u003d dateTimeStr;","lastModifiedDate":"2023-11-09"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"            getDate \u003d dateTimeStr.substring(0, index).trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"            getTimes \u003d dateTimeStr.substring(index).trim();","lastModifiedDate":"2023-11-09"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        if (!Arrays.asList(\"mon\", \"tue\", \"wed\", \"thu\", \"fri\", \"sat\", \"sun\", \"monday\", \"tuesday\", \"wednesday\",","lastModifiedDate":"2023-11-09"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"                           \"thursday\", \"friday\", \"saturday\", \"sunday\", \"today\", \"tmr\", \"tomorrow\", \"eoy\", \"end of year\",","lastModifiedDate":"2023-11-09"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"                           \"eom\", \"end of month\").contains(getDate.toLowerCase())) {","lastModifiedDate":"2023-11-09"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"            return null;","lastModifiedDate":"2023-10-14"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-14"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        if (getTimes.isBlank()) {","lastModifiedDate":"2023-11-09"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"            now \u003d now.withHour(23);","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"            now \u003d now.withMinute(59);","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-11-09"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            now \u003d now.withHour(Integer.parseInt(getTimes.substring(0, 2)));","lastModifiedDate":"2023-11-09"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"            now \u003d now.withMinute(Integer.parseInt(getTimes.substring(2)));","lastModifiedDate":"2023-11-09"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        LocalDateTime now1 \u003d specialCase(dateTimeStr, now);","lastModifiedDate":"2023-11-09"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"        if (now1 !\u003d null) {","lastModifiedDate":"2023-11-09"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"            return now1;","lastModifiedDate":"2023-11-09"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        int daysToAdd \u003d dayOfWeek(dateTimeStr, now);","lastModifiedDate":"2023-11-09"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        return now.plusDays(daysToAdd);","lastModifiedDate":"2023-11-09"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"    private static int dayOfWeek(String dateTimeStr, LocalDateTime now) {","lastModifiedDate":"2023-11-09"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"        List\u003cDayOfWeek\u003e dayOfWeeks \u003d Arrays.asList(DayOfWeek.values());","lastModifiedDate":"2023-11-09"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"        int dayIndex \u003d dayOfWeeks.indexOf(DayOfWeek.valueOf(dateTimeStr.toUpperCase()));","lastModifiedDate":"2023-11-09"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"        int currentDayIndex \u003d now.getDayOfWeek().getValue();","lastModifiedDate":"2023-11-09"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"        int daysToAdd \u003d dayIndex - currentDayIndex;","lastModifiedDate":"2023-11-09"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"        if (daysToAdd \u003c 1) {","lastModifiedDate":"2023-11-09"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"            daysToAdd +\u003d 7;","lastModifiedDate":"2023-11-09"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"        return daysToAdd;","lastModifiedDate":"2023-11-09"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-11-09"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-09"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"    private static LocalDateTime specialCase(String dateTimeStr, LocalDateTime now) {","lastModifiedDate":"2023-11-09"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"        if (dateTimeStr.toLowerCase().contains(\"today\")) {","lastModifiedDate":"2023-11-09"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"            return now;","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"        boolean isTomorrow \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"                dateTimeStr.toLowerCase().contains(\"tomorrow\") || dateTimeStr.toLowerCase().contains(\"tmr\");","lastModifiedDate":"2023-11-09"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"        if (isTomorrow) {","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"            return now.plusDays(1);","lastModifiedDate":"2023-10-27"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"        boolean isEndOfYear \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"                dateTimeStr.toLowerCase().contains(\"eoy\") || dateTimeStr.toLowerCase().contains(\"end of year\");","lastModifiedDate":"2023-11-09"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"        if (isEndOfYear) {","lastModifiedDate":"2023-11-09"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"            return now.withMonth(12).withDayOfMonth(31);","lastModifiedDate":"2023-11-09"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"        boolean isEndOfMonth \u003d","lastModifiedDate":"2023-11-09"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"                dateTimeStr.toLowerCase().contains(\"eom\") || dateTimeStr.toLowerCase().contains(\"end of month\");","lastModifiedDate":"2023-11-09"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"        if (isEndOfMonth) {","lastModifiedDate":"2023-11-09"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"            return now.withDayOfMonth(now.getMonth().maxLength());","lastModifiedDate":"2023-11-09"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-11-09"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"        return null;","lastModifiedDate":"2023-11-09"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-14"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"amber-le":87}},{"path":"src/main/java/utils/DayOfWeek.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package utils;","lastModifiedDate":"2023-10-14"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-14"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"/**","lastModifiedDate":"2023-10-14"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":" * This enum class contains all the days of the week.","lastModifiedDate":"2023-10-14"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":" */","lastModifiedDate":"2023-10-14"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public enum DayOfWeek {","lastModifiedDate":"2023-10-14"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"    SUN, MON, TUE, WED, THU, FRI, SAT, SUNDAY,","lastModifiedDate":"2023-10-14"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY, SATURDAY","lastModifiedDate":"2023-10-27"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"amber-le":9}},{"path":"src/main/java/utils/Sort.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package utils;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-12"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-10-12"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-12"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-12"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.Comparator;","lastModifiedDate":"2023-10-12"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-12"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"public class Sort {","lastModifiedDate":"2023-10-12"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"     * Returns the sorted list of tasks according to the input.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"     *","lastModifiedDate":"2023-11-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"     * @param input The input from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    public void sort(String input, List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-12"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        if (input.equals(\"type\") || input.equals(\"t\")) {","lastModifiedDate":"2023-10-12"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"            sortByType(tasks);","lastModifiedDate":"2023-10-27"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        } else if (input.equals(\"type-r\") || input.equals(\"tr\")) {","lastModifiedDate":"2023-10-27"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"            sortByTypeRevert(tasks);","lastModifiedDate":"2023-10-27"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        } else {","lastModifiedDate":"2023-10-27"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"            sortByDate(tasks);","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        }","lastModifiedDate":"2023-10-27"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    private static void sortByType(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-27"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"        System.out.println(\"   Sorting by type...\");","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"        tasks.sort(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"            @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"            public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-10-27"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"                return task1.toString().compareTo(task2.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        });","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"    private static void sortByTypeRevert(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-27"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"        System.out.println(\"   Sorting by type revert order...\");","lastModifiedDate":"2023-10-16"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"        tasks.sort(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"            @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"            public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-10-27"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"                return task2.toString().compareTo(task1.toString());","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-14"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"        });","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-27"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"    private static void sortByDate(List\u003cTask\u003e tasks) {","lastModifiedDate":"2023-10-27"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"        System.out.println(\"   Sorting by date...\");","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"        tasks.sort(new Comparator\u003cTask\u003e() {","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"            @Override","lastModifiedDate":"2023-10-27"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"            public int compare(Task task1, Task task2) {","lastModifiedDate":"2023-10-27"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"                LocalDateTime task1Time \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"                LocalDateTime task2Time \u003d null;","lastModifiedDate":"2023-10-12"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"                if (task1 instanceof Deadline) {","lastModifiedDate":"2023-10-12"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"                    task1Time \u003d ((Deadline) task1).getTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"                } else if (task1 instanceof Event) {","lastModifiedDate":"2023-10-12"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"                    task1Time \u003d ((Event) task1).getFromTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"                if (task2 instanceof Deadline) {","lastModifiedDate":"2023-10-12"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"                    task2Time \u003d ((Deadline) task2).getTime();","lastModifiedDate":"2023-10-12"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"                } else if (task2 instanceof Event) {","lastModifiedDate":"2023-10-12"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"                    task2Time \u003d ((Event) task2).getFromTime();","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-27"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"                if (task1Time \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"                    return 1;","lastModifiedDate":"2023-10-12"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"                if (task2Time \u003d\u003d null) {","lastModifiedDate":"2023-10-12"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"                    return -1;","lastModifiedDate":"2023-10-12"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"                }","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"                return task1Time.compareTo(task2Time);","lastModifiedDate":"2023-10-12"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"            }","lastModifiedDate":"2023-10-12"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"        });","lastModifiedDate":"2023-10-12"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-12"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-14"}],"authorContributionMap":{"amber-le":77}},{"path":"src/test/java/command/AddTaskCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"public class AddTaskCommandTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    public void handleCommand() {","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand();","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input\", tasks);","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input1 /by tomorrow\", tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input2 /from today /to sunday\", tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(3, tasks.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":21}},{"path":"src/test/java/command/BlahCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"class BlahCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        BlahCommand blahCommand \u003d new BlahCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        blahCommand.handleCommand(\"blah\", tasks);","lastModifiedDate":"2023-10-18"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assertEquals(0, tasks.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":20}},{"path":"src/test/java/command/DeleteCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"class DeleteCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"todo test\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"deadline test /by 2020-08-25\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"event test /at 2020-08-25\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        deleteCommand.handleCommand(\"delete 1\", tasks);","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(3, tasks.size());","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        deleteCommand.handleCommand(\"      delete          all\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(0, tasks.size());","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":26}},{"path":"src/test/java/command/ListCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Event;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertAll;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"class ListCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        taskList.add(event);","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        ListCommand listCommand \u003d new ListCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        listCommand.handleCommand(\"list\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        assertAll(\"list\", () -\u003e assertEquals(2, taskList.size()),","lastModifiedDate":"2023-10-27"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"                () -\u003e assertEquals(\"[T][҉҉҉] Test description\", taskList.get(0).toString()),","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"                () -\u003e assertEquals(\"[E][҉҉҉] Test description (from: 20 Oct 2023, 11PM - Friday)\",","lastModifiedDate":"2023-10-27"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"                        taskList.get(1).toString()));","lastModifiedDate":"2023-10-27"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":30}},{"path":"src/test/java/command/MarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"class MarkCommandTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-09"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        Deadline deadline \u003d new Deadline(\"test\", \"2023/10/20 2359\");","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-09"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        taskList.add(deadline);","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        markCommand.handleCommand(\"mark 1\", taskList);","lastModifiedDate":"2023-10-25"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        assertTrue(todo.getDone());","lastModifiedDate":"2023-10-31"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        assertFalse(deadline.getDone());","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"amber-le":30}},{"path":"src/test/java/command/SortCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-19"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"class SortCommandTest {","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"        AddTaskCommand addTaskCommand \u003d new AddTaskCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"todo test\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"check deadline test /by 2023-08-25\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"present /from 2020-04-20\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        addTaskCommand.handleCommand(\"input\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        SortCommand sortCommand \u003d new SortCommand();","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        sortCommand.handleCommand(\"sort date\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        assertTrue(tasks.get(0).toString().toLowerCase().contains(\"present\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        sortCommand.handleCommand(\"sort type\", tasks);","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        assertTrue(tasks.get(0).toString().toLowerCase().contains(\"check\"));","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-19"}],"authorContributionMap":{"amber-le":28}},{"path":"src/test/java/command/UnmarkCommandTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package command;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Todo;","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"class UnmarkCommandTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    void handleCommand() {","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        Todo todo \u003d new Todo(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        taskList.add(todo);","lastModifiedDate":"2023-10-10"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        MarkCommand markCommand \u003d new MarkCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        markCommand.handleCommand(\"mark 1\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        UnmarkCommand unmarkCommand \u003d new UnmarkCommand();","lastModifiedDate":"2023-10-10"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        unmarkCommand.handleCommand(\"unmark 1\", taskList);","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        assertFalse(todo.getDone());","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":25}},{"path":"src/test/java/io/TaskStorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package io;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import task.Deadline;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import task.Task;","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import java.io.File;","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"import java.util.List;","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"class TaskStorageTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"    @Test void save() {","lastModifiedDate":"2023-10-25"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        File f \u003d new File(\"./data/craby.txt\");","lastModifiedDate":"2023-10-09"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        tasks.add(new Deadline(\"test\", \"12/12/2020 1200\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"craby.txt\");","lastModifiedDate":"2023-10-25"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-10-09"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"        assertTrue(f.exists());","lastModifiedDate":"2023-10-09"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"        assertTrue(f.length() \u003e 0);","lastModifiedDate":"2023-10-09"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        assertNotEquals(0, f.length());","lastModifiedDate":"2023-10-25"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        f.delete();","lastModifiedDate":"2023-10-09"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"    @Test void load() {","lastModifiedDate":"2023-10-25"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-09"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        tasks.add(new Deadline(\"test\", \"12/12/2020 1200\"));","lastModifiedDate":"2023-10-09"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"        TaskStorage taskStorage \u003d new TaskStorage(\"craby.txt\");","lastModifiedDate":"2023-10-25"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"        taskStorage.save(tasks);","lastModifiedDate":"2023-10-09"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"        List\u003cTask\u003e tasks1 \u003d taskStorage.load();","lastModifiedDate":"2023-10-09"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"        assertEquals(1, tasks1.size());","lastModifiedDate":"2023-10-25"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"amber-le":40}},{"path":"src/test/java/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2023-10-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"public class DeadlineTest {","lastModifiedDate":"2023-10-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    public void testToString() {","lastModifiedDate":"2023-10-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"        Deadline deadline \u003d new Deadline(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(\"[D][҉҉҉] Test description (before: 20 Oct 2023, Fri - 11:59PM)\", deadline.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-09"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    public void toStorageString() {","lastModifiedDate":"2023-10-09"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"        Deadline deadline \u003d new Deadline(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-09"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        Assertions.assertEquals(\"D || 0 || test description || 2023/10/20 2359\", deadline.toStorageString());","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-09"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-09"}],"authorContributionMap":{"amber-le":19}},{"path":"src/test/java/task/EventTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"class EventTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    void testToString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"[E][҉҉҉] Test description (from: 20 Oct 2023, Fri - 11:59PM)\", event.toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    void toStorageString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"E || 0 || test description || 2023/10/20 2359\", event.toStorageString());","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":20}},{"path":"src/test/java/task/TaskTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package task;","lastModifiedDate":"2023-10-10"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-10-27"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2023-10-27"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2023-10-27"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"class TaskTest {","lastModifiedDate":"2023-10-10"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"    void getStatusIcon() {","lastModifiedDate":"2023-10-10"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-11"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"    void setDone() {","lastModifiedDate":"2023-10-25"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"        task.setDone(true);","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"        assertTrue(task.getDone());","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"        task.setDone(false);","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"        assertFalse(task.getDone());","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"    void getIsDone() {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"        assertFalse(task.getDone());","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"    void handleDateTime() {","lastModifiedDate":"2023-10-10"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"        Event event \u003d new Event(\"test description\", \"2023/10/20 2359\");","lastModifiedDate":"2023-10-10"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"2023-10-20T23:59\", event.handleDateTime(\"2023/10/20 2359\").toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"    void testToString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"[҉҉҉] Test description\", task.toString());","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-10"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"    void toStorageString() {","lastModifiedDate":"2023-10-10"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"        Task task \u003d new Task(\"test description\");","lastModifiedDate":"2023-10-10"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"0 || test description\", task.toStorageString());","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"amber-le":48}},{"path":"src/test/java/utils/DateTimeUtilsTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"package utils;","lastModifiedDate":"2023-10-25"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"import java.util.Objects;","lastModifiedDate":"2023-10-27"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-10-27"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-10-25"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"class DateTimeUtilsTest {","lastModifiedDate":"2023-10-25"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"    @Test","lastModifiedDate":"2023-10-25"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"    void parseNextDay() {","lastModifiedDate":"2023-10-25"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"        assertEquals(\"2023-10-25T23:59\", Objects.requireNonNull(DateTimeUtils.parseNextDay(\"today\")).toString());","lastModifiedDate":"2023-10-25"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"    }","lastModifiedDate":"2023-10-25"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-25"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"}","lastModifiedDate":"2023-10-25"}],"authorContributionMap":{"amber-le":14}},{"path":"text-ui-test/data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"D || 1 || Task to check sort by date - on top after use sort date/d || 1993/7/3 0530","lastModifiedDate":"2023-11-09"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"E || 0 || Chang \u0026 Felicia\u0027s wedding || 2023/11/4 1800 || 2023/11/4 2200","lastModifiedDate":"2023-11-09"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"D || 1 || TIC2002 quiz || 2023/11/4 2200","lastModifiedDate":"2023-11-09"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"E || 0 || TMA2031 - Final Exam || 2023/11/25 0900 || 2023/11/25 1100","lastModifiedDate":"2023-11-09"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"E || 0 || Learn front end || 2023/11/30 2359 || 2023/12/31 2300","lastModifiedDate":"2023-11-09"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"E || 0 || TIC2002 - Final Exam || 2023/12/4 1300 || 2023/12/4 1430","lastModifiedDate":"2023-11-09"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"D || 1 || TIC3901 - Presentation 1 || 2024/1/1 1200","lastModifiedDate":"2023-11-09"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC3901 - Report 2 || 2024/1/28 0000","lastModifiedDate":"2023-11-09"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"D || 0 || Video call with Grandpa || 2024/3/1 1200","lastModifiedDate":"2023-11-09"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC3901 - Report 3 || 2024/3/17 0000","lastModifiedDate":"2023-11-09"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"D || 0 || TIC3901 - Presentation 2 || 2024/4/14 0000","lastModifiedDate":"2023-11-09"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"T || 0 || Oder FoodPanda for dinner every weekday","lastModifiedDate":"2023-11-09"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"T || 0 || Drink more water","lastModifiedDate":"2023-11-09"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"T || 0 || Check undo mark","lastModifiedDate":"2023-11-09"}],"authorContributionMap":{"amber-le":14}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"amber-le"},"content":"School","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"amber-le"},"content":"find test","lastModifiedDate":"2023-10-19"},{"lineNumber":3,"author":{"gitId":"amber-le"},"content":"  list","lastModifiedDate":"2023-10-19"},{"lineNumber":4,"author":{"gitId":"amber-le"},"content":"Test mark","lastModifiedDate":"2023-10-19"},{"lineNumber":5,"author":{"gitId":"amber-le"},"content":"test unmark","lastModifiedDate":"2023-10-19"},{"lineNumber":6,"author":{"gitId":"amber-le"},"content":"Test undo mark","lastModifiedDate":"2023-10-19"},{"lineNumber":7,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":8,"author":{"gitId":"amber-le"},"content":"mark 1","lastModifiedDate":"2023-10-19"},{"lineNumber":9,"author":{"gitId":"amber-le"},"content":"mark     2","lastModifiedDate":"2023-10-19"},{"lineNumber":10,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":11,"author":{"gitId":"amber-le"},"content":"unmark 2","lastModifiedDate":"2023-10-19"},{"lineNumber":12,"author":{"gitId":"amber-le"},"content":"mark 3","lastModifiedDate":"2023-10-19"},{"lineNumber":13,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":14,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-19"},{"lineNumber":15,"author":{"gitId":"amber-le"},"content":"test sort by type /by 2024-01-01 1200","lastModifiedDate":"2023-10-19"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"test sort by date /from 2024-01-01 1300","lastModifiedDate":"2023-10-19"},{"lineNumber":17,"author":{"gitId":"amber-le"},"content":"test sort by date: this one will on top if system correct /from 2024-04-01 1600","lastModifiedDate":"2023-10-21"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"sort t","lastModifiedDate":"2023-10-19"},{"lineNumber":19,"author":{"gitId":"amber-le"},"content":"sort d","lastModifiedDate":"2023-10-19"},{"lineNumber":20,"author":{"gitId":"amber-le"},"content":"sort tr","lastModifiedDate":"2023-10-19"},{"lineNumber":21,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-19"},{"lineNumber":22,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"test delete all","lastModifiedDate":"2023-10-19"},{"lineNumber":24,"author":{"gitId":"amber-le"},"content":"Test undo delete","lastModifiedDate":"2023-10-19"},{"lineNumber":25,"author":{"gitId":"amber-le"},"content":"Test delete","lastModifiedDate":"2023-10-19"},{"lineNumber":26,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":27,"author":{"gitId":"amber-le"},"content":"find sort","lastModifiedDate":"2023-10-19"},{"lineNumber":28,"author":{"gitId":"amber-le"},"content":"find [d]","lastModifiedDate":"2023-10-19"},{"lineNumber":29,"author":{"gitId":"amber-le"},"content":"delete 9","lastModifiedDate":"2023-10-19"},{"lineNumber":30,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":31,"author":{"gitId":"amber-le"},"content":"delete 8","lastModifiedDate":"2023-10-19"},{"lineNumber":32,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":33,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-19"},{"lineNumber":34,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-19"},{"lineNumber":35,"author":{"gitId":"amber-le"},"content":"delete all","lastModifiedDate":"2023-10-19"},{"lineNumber":36,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"amber-le"},"content":"todo learn front end /from 04-12-2023 1300 /to 2023-12-31 2300","lastModifiedDate":"2023-10-21"},{"lineNumber":38,"author":{"gitId":"amber-le"},"content":"TIC3901 - Presentation 1 /by 2024-01-01 1200","lastModifiedDate":"2023-10-21"},{"lineNumber":39,"author":{"gitId":"amber-le"},"content":"TIC3901 - Report 2 /by 28/01/2024","lastModifiedDate":"2023-10-16"},{"lineNumber":40,"author":{"gitId":"amber-le"},"content":"Video call with Grandpa /by 2024-03-01 1200","lastModifiedDate":"2023-10-21"},{"lineNumber":41,"author":{"gitId":"amber-le"},"content":"Deadline TIC3901 - Report 3 /by 2024/03/17","lastModifiedDate":"2023-10-16"},{"lineNumber":42,"author":{"gitId":"amber-le"},"content":"TIC3901 - Presentation 2 /by 14-04-2024","lastModifiedDate":"2023-10-16"},{"lineNumber":43,"author":{"gitId":"amber-le"},"content":"mark 2","lastModifiedDate":"2023-10-16"},{"lineNumber":44,"author":{"gitId":"amber-le"},"content":"Chang \u0026 Felicia\u0027s wedding /from 04/11/2023 1800 /to 2023-11-04 2200","lastModifiedDate":"2023-10-16"},{"lineNumber":45,"author":{"gitId":"amber-le"},"content":"        mark 3","lastModifiedDate":"2023-10-11"},{"lineNumber":46,"author":{"gitId":"amber-le"},"content":"TIC2002 - Final Exam /from 04-12-2023 1300 /to 04-12-2023 1430","lastModifiedDate":"2023-10-16"},{"lineNumber":47,"author":{"gitId":"amber-le"},"content":"Task to delete","lastModifiedDate":"2023-10-16"},{"lineNumber":48,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-16"},{"lineNumber":49,"author":{"gitId":"amber-le"},"content":"unmark            3","lastModifiedDate":"2023-10-12"},{"lineNumber":50,"author":{"gitId":"amber-le"},"content":"Oder FoodPanda for dinner every weekday","lastModifiedDate":"2023-10-16"},{"lineNumber":51,"author":{"gitId":"amber-le"},"content":"Task to check sort by date - on top after use sort date/d /by 1993/07/03 0530","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"amber-le"},"content":"TIC2002 quiz /by 2023-11-04 2200","lastModifiedDate":"2023-10-21"},{"lineNumber":53,"author":{"gitId":"amber-le"},"content":"MARK 12","lastModifiedDate":"2023-10-16"},{"lineNumber":54,"author":{"gitId":"amber-le"},"content":"","lastModifiedDate":"2023-10-16"},{"lineNumber":55,"author":{"gitId":"amber-le"},"content":"Event to check undo /from 2/10/2019 0900 /to 2/10/2019 1130","lastModifiedDate":"2023-10-16"},{"lineNumber":56,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-16"},{"lineNumber":57,"author":{"gitId":"amber-le"},"content":"liSt","lastModifiedDate":"2023-10-16"},{"lineNumber":58,"author":{"gitId":"amber-le"},"content":"find tic","lastModifiedDate":"2023-10-16"},{"lineNumber":59,"author":{"gitId":"amber-le"},"content":"find [d]","lastModifiedDate":"2023-10-16"},{"lineNumber":60,"author":{"gitId":"amber-le"},"content":"   blah","lastModifiedDate":"2023-10-16"},{"lineNumber":61,"author":{"gitId":"amber-le"},"content":"List","lastModifiedDate":"2023-10-16"},{"lineNumber":62,"author":{"gitId":"amber-le"},"content":"sort T","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"amber-le"},"content":"mark 12","lastModifiedDate":"2023-10-16"},{"lineNumber":64,"author":{"gitId":"amber-le"},"content":"mark 6","lastModifiedDate":"2023-10-16"},{"lineNumber":65,"author":{"gitId":"amber-le"},"content":"sort tr","lastModifiedDate":"2023-10-19"},{"lineNumber":66,"author":{"gitId":"amber-le"},"content":"delete                       2","lastModifiedDate":"2023-10-19"},{"lineNumber":67,"author":{"gitId":"amber-le"},"content":"LisT","lastModifiedDate":"2023-10-16"},{"lineNumber":68,"author":{"gitId":"amber-le"},"content":"TMA2031 - Final Exam /from 25/11/2023 0900 /to 25/11/2023 1100","lastModifiedDate":"2023-10-16"},{"lineNumber":69,"author":{"gitId":"amber-le"},"content":"Drink more water","lastModifiedDate":"2023-10-16"},{"lineNumber":70,"author":{"gitId":"amber-le"},"content":"sort datE","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"amber-le"},"content":"mark 99","lastModifiedDate":"2023-10-16"},{"lineNumber":72,"author":{"gitId":"amber-le"},"content":"LisT","lastModifiedDate":"2023-10-12"},{"lineNumber":73,"author":{"gitId":"amber-le"},"content":"check undo mark","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"amber-le"},"content":"check multiple undo","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"amber-le"},"content":"check undo add task","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"amber-le"},"content":"sort tr","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"amber-le"},"content":"mark 14","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"amber-le"},"content":"delete all","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"amber-le"},"content":"undo","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"amber-le"},"content":"list","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"amber-le"},"content":"     delete        all","lastModifiedDate":"2023-09-25"},{"lineNumber":90,"author":{"gitId":"amber-le"},"content":"     help","lastModifiedDate":"2023-11-08"},{"lineNumber":91,"author":{"gitId":"amber-le"},"content":"bye CrabY","lastModifiedDate":"2023-10-16"}],"authorContributionMap":{"amber-le":91}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2023-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"amber-le"},"content":"java -classpath ..\\bin craby.Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":1,"-":20}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"amber-le"},"content":"if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/craby/*.java","lastModifiedDate":"2023-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"amber-le"},"content":"java -classpath ../bin craby/Duke \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"amber-le":2,"-":36}}]
