[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"    String javaFxVersion \u003d \u002717.0.7\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":44,"author":{"gitId":"agqy98"},"content":"    mainClass.set(\"duke.Duke\")","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"agqy98"},"content":"    // mainClassName \u003d \u0027duke.Main\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":52,"author":{"gitId":"agqy98"},"content":"    archiveFileName \u003d \u0027duke.jar\u0027","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"agqy98":16,"-":41}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"E | 0 | project meeting | 2023-08-06T14:00 | 2023-08-06T16:00","lastModifiedDate":"2023-11-19"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"T | 0 | read book","lastModifiedDate":"2023-11-19"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"D | 0 | return book | 2023-06-06","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"agqy98":3}},{"path":"sources.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\Duke.java","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\command\\TaskType.java","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\error\\ErrorType.java","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\parser\\Parser.java","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\storage\\Storage.java","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\task\\Deadlines.java","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\task\\Events.java","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\task\\Task.java","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\task\\ToDos.java","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\tasklist\\TaskList.java","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"C:\\Users\\agqy-\\OneDrive\\Documents\\NUS_Code\\TIC2002\\duke\\src\\main\\java\\duke\\ui\\UI.java","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"agqy98":11}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import java.util.Iterator;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"import java.util.List;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"import duke.command.TaskType;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"import duke.error.ErrorType;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"import duke.task.Events;","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"import duke.task.ToDos;","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"/**","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":" * The main class for the Duke task management application.","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":" * Duke allows users to manage and organize their tasks through a command-line","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":" * interface.","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":" */","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"     * The user interface component for Duke.","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"    private UI ui;","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"     * The storage component for Duke, responsible for loading and saving tasks.","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"    private Storage storage;","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"     * The task list component for Duke, containing the user\u0027s tasks.","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"agqy98"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-09-14"},{"lineNumber":38,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"agqy98"},"content":"     * Constructs a Duke instance, initializing the UI, storage, and task list.","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"agqy98"},"content":"    public Duke() {","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"agqy98"},"content":"        this.ui \u003d new UI();","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"agqy98"},"content":"        this.storage \u003d new Storage();","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"agqy98"},"content":"        this.taskList \u003d new TaskList(storage.loadTasks());","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"agqy98"},"content":"     * Runs the Duke application, handling user input and processing commands.","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"agqy98"},"content":"     * Displays welcome and goodbye messages, and saves tasks to file after each","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"agqy98"},"content":"     * operation.","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"agqy98"},"content":"    public void run() {","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"agqy98"},"content":"        ui.printWelcomeMessage(storage.loadDuke());","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":55,"author":{"gitId":"agqy98"},"content":"        Scanner scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-09-13"},{"lineNumber":56,"author":{"gitId":"agqy98"},"content":"        String input;","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"agqy98"},"content":"        try {","lastModifiedDate":"2023-11-14"},{"lineNumber":59,"author":{"gitId":"agqy98"},"content":"            while (scanner.hasNextLine()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"agqy98"},"content":"                input \u003d scanner.nextLine().trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"agqy98"},"content":"                processInput(input);","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"agqy98"},"content":"                if (input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"agqy98"},"content":"                    break;","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"agqy98"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"agqy98"},"content":"        } finally {","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"agqy98"},"content":"            scanner.close();","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"agqy98"},"content":"        ui.printGoodbyeMessage();","lastModifiedDate":"2023-11-14"},{"lineNumber":70,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":71,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"agqy98"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"agqy98"},"content":"        new Duke().run();","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"agqy98"},"content":"     * Processes the user input and performs actions based on the recognized","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"agqy98"},"content":"     * commands.","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"agqy98"},"content":"     * 1. List","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"agqy98"},"content":"     * 2. Identify Task Type (Skip List)","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"agqy98"},"content":"     * 3. Confirm it is in a valid format","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"agqy98"},"content":"     * 4. Map input based on command","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"agqy98"},"content":"     * ","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"agqy98"},"content":"     * @param input The input provided by the user.","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"agqy98"},"content":"    public void processInput(String input) {","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"agqy98"},"content":"        if (input.toLowerCase().startsWith(ui.TASK_KEYWORDS.get(TaskType.LIST))) {","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"agqy98"},"content":"            ui.printTaskList(taskList.getList());","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"agqy98"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":90,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":91,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"agqy98"},"content":"        TaskType taskType \u003d anyTaskType(input, ui.TASK_KEYWORDS);","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"agqy98"},"content":"        if (taskType \u003d\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"agqy98"},"content":"            ui.printErrorMessage(ErrorType.ERR_SYSTEM_READ_FAIL, taskType, taskList.getListSize());","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"agqy98"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"agqy98"},"content":"        String command \u003d ui.TASK_KEYWORDS.get(taskType);","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"agqy98"},"content":"        ErrorType err \u003d anyError(input, command);","lastModifiedDate":"2023-11-19"},{"lineNumber":100,"author":{"gitId":"agqy98"},"content":"        if (err !\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"agqy98"},"content":"            ui.printErrorMessage(err, taskType, taskList.getListSize());","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"agqy98"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"agqy98"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"agqy98"},"content":"            String taskDescription \u003d input.substring(command.length() + 1).trim();","lastModifiedDate":"2023-11-19"},{"lineNumber":107,"author":{"gitId":"agqy98"},"content":"            // FIND","lastModifiedDate":"2023-11-19"},{"lineNumber":108,"author":{"gitId":"agqy98"},"content":"            if (taskType \u003d\u003d TaskType.FIND) {","lastModifiedDate":"2023-11-19"},{"lineNumber":109,"author":{"gitId":"agqy98"},"content":"                taskFind(taskDescription, taskType \u003d\u003d TaskType.TODO);","lastModifiedDate":"2023-11-19"},{"lineNumber":110,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":111,"author":{"gitId":"agqy98"},"content":"            // DELETE, MARK, UNMARK","lastModifiedDate":"2023-11-19"},{"lineNumber":112,"author":{"gitId":"agqy98"},"content":"            else if (taskType \u003d\u003d TaskType.DELETE ||","lastModifiedDate":"2023-11-19"},{"lineNumber":113,"author":{"gitId":"agqy98"},"content":"                    taskType \u003d\u003d TaskType.MARK ||","lastModifiedDate":"2023-11-19"},{"lineNumber":114,"author":{"gitId":"agqy98"},"content":"                    taskType \u003d\u003d TaskType.UNMARK) {","lastModifiedDate":"2023-11-19"},{"lineNumber":115,"author":{"gitId":"agqy98"},"content":"                try {","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"agqy98"},"content":"                    int intValue \u003d Integer.parseInt(taskDescription);","lastModifiedDate":"2023-10-29"},{"lineNumber":117,"author":{"gitId":"agqy98"},"content":"                    processIndexCommand(intValue, taskType);","lastModifiedDate":"2023-11-19"},{"lineNumber":118,"author":{"gitId":"agqy98"},"content":"                } catch (NumberFormatException e) {","lastModifiedDate":"2023-10-29"},{"lineNumber":119,"author":{"gitId":"agqy98"},"content":"                    ui.printErrorMessage(ErrorType.ERR_EXPECT_NUMBER, taskType, taskList.getListSize());","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"agqy98"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":121,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":122,"author":{"gitId":"agqy98"},"content":"            // OTHERS","lastModifiedDate":"2023-11-19"},{"lineNumber":123,"author":{"gitId":"agqy98"},"content":"            else {","lastModifiedDate":"2023-11-19"},{"lineNumber":124,"author":{"gitId":"agqy98"},"content":"                List\u003cTask\u003e duplicatedTasks \u003d anyDuplicate(taskDescription, taskType);","lastModifiedDate":"2023-11-19"},{"lineNumber":125,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":126,"author":{"gitId":"agqy98"},"content":"                if (!duplicatedTasks.isEmpty()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":127,"author":{"gitId":"agqy98"},"content":"                    ui.printSelectedTasks(taskList.getList(), duplicatedTasks, taskType);","lastModifiedDate":"2023-11-19"},{"lineNumber":128,"author":{"gitId":"agqy98"},"content":"                } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":129,"author":{"gitId":"agqy98"},"content":"                    taskAdd(taskDescription, taskType);","lastModifiedDate":"2023-11-19"},{"lineNumber":130,"author":{"gitId":"agqy98"},"content":"                }","lastModifiedDate":"2023-11-14"},{"lineNumber":131,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":132,"author":{"gitId":"agqy98"},"content":"        } catch (IllegalArgumentException e) {","lastModifiedDate":"2023-10-29"},{"lineNumber":133,"author":{"gitId":"agqy98"},"content":"            ui.printErrorMessage(ErrorType.ERR_INVALID_FORMAT, taskType, taskList.getListSize());","lastModifiedDate":"2023-10-30"},{"lineNumber":134,"author":{"gitId":"agqy98"},"content":"            return;","lastModifiedDate":"2023-10-29"},{"lineNumber":135,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":136,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-09-13"},{"lineNumber":137,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-09-13"},{"lineNumber":138,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":139,"author":{"gitId":"agqy98"},"content":"     * Adds a task to the task list based on the provided task description and task","lastModifiedDate":"2023-11-19"},{"lineNumber":140,"author":{"gitId":"agqy98"},"content":"     * type.","lastModifiedDate":"2023-11-19"},{"lineNumber":141,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":142,"author":{"gitId":"agqy98"},"content":"     * @param taskDescription The description of the task to be added.","lastModifiedDate":"2023-11-19"},{"lineNumber":143,"author":{"gitId":"agqy98"},"content":"     * @param taskType        The type of the task to be added.","lastModifiedDate":"2023-11-19"},{"lineNumber":144,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":145,"author":{"gitId":"agqy98"},"content":"    public void taskAdd(String taskDescription, TaskType taskType) {","lastModifiedDate":"2023-11-19"},{"lineNumber":146,"author":{"gitId":"agqy98"},"content":"        assert taskDescription !\u003d null : \"Task description is null in taskAdd method\";","lastModifiedDate":"2023-11-19"},{"lineNumber":147,"author":{"gitId":"agqy98"},"content":"        assert taskType !\u003d null : \"TaskType is null in taskAdd method\";","lastModifiedDate":"2023-11-19"},{"lineNumber":148,"author":{"gitId":"agqy98"},"content":"        Task t \u003d instantiateTask(taskType, taskDescription);","lastModifiedDate":"2023-11-19"},{"lineNumber":149,"author":{"gitId":"agqy98"},"content":"        taskList.addTask(t);","lastModifiedDate":"2023-11-19"},{"lineNumber":150,"author":{"gitId":"agqy98"},"content":"        storage.saveTasks(taskList.getList()); // Save tasks to file after each","lastModifiedDate":"2023-11-19"},{"lineNumber":151,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":152,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":153,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":154,"author":{"gitId":"agqy98"},"content":"     * Finds and prints tasks in the task list that match the provided task","lastModifiedDate":"2023-11-19"},{"lineNumber":155,"author":{"gitId":"agqy98"},"content":"     * description,","lastModifiedDate":"2023-11-19"},{"lineNumber":156,"author":{"gitId":"agqy98"},"content":"     * considering whether to skip slash check based on the specified flag.","lastModifiedDate":"2023-11-19"},{"lineNumber":157,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":158,"author":{"gitId":"agqy98"},"content":"     * @param taskDescription The description of the task to be found.","lastModifiedDate":"2023-11-19"},{"lineNumber":159,"author":{"gitId":"agqy98"},"content":"     * @param skipSlashCheck  A flag indicating whether to skip slash check during","lastModifiedDate":"2023-11-19"},{"lineNumber":160,"author":{"gitId":"agqy98"},"content":"     *                        the search.","lastModifiedDate":"2023-11-19"},{"lineNumber":161,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":162,"author":{"gitId":"agqy98"},"content":"    public void taskFind(String taskDescription, boolean skipSlashCheck) {","lastModifiedDate":"2023-11-19"},{"lineNumber":163,"author":{"gitId":"agqy98"},"content":"        assert taskDescription !\u003d null : \"Task description is null in taskFind method\";","lastModifiedDate":"2023-11-19"},{"lineNumber":164,"author":{"gitId":"agqy98"},"content":"        List\u003cTask\u003e resultTaskList \u003d taskList.searchList(taskDescription, false, skipSlashCheck);","lastModifiedDate":"2023-11-19"},{"lineNumber":165,"author":{"gitId":"agqy98"},"content":"        ui.printSelectedTasks(taskList.getList(), resultTaskList, TaskType.FIND);","lastModifiedDate":"2023-11-19"},{"lineNumber":166,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":167,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":168,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":169,"author":{"gitId":"agqy98"},"content":"     * Marks or unmarks a task at the specified index in the task list based on the","lastModifiedDate":"2023-11-19"},{"lineNumber":170,"author":{"gitId":"agqy98"},"content":"     * provided flag.","lastModifiedDate":"2023-11-19"},{"lineNumber":171,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":172,"author":{"gitId":"agqy98"},"content":"     * @param index  The index of the task to be marked or unmarked.","lastModifiedDate":"2023-11-19"},{"lineNumber":173,"author":{"gitId":"agqy98"},"content":"     * @param isDone A flag indicating whether to mark or unmark the task.","lastModifiedDate":"2023-11-19"},{"lineNumber":174,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":175,"author":{"gitId":"agqy98"},"content":"    public void taskMark(int index, boolean isDone) {","lastModifiedDate":"2023-11-19"},{"lineNumber":176,"author":{"gitId":"agqy98"},"content":"        assert index \u003e\u003d 0 : \"Index is negative in taskMark method\";","lastModifiedDate":"2023-11-19"},{"lineNumber":177,"author":{"gitId":"agqy98"},"content":"        taskList.markTask(index, isDone);","lastModifiedDate":"2023-11-19"},{"lineNumber":178,"author":{"gitId":"agqy98"},"content":"        storage.saveTasks(taskList.getList()); // Save tasks to file after each change","lastModifiedDate":"2023-11-19"},{"lineNumber":179,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":180,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":181,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":182,"author":{"gitId":"agqy98"},"content":"     * Deletes a task at the specified index in the task list.","lastModifiedDate":"2023-11-19"},{"lineNumber":183,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":184,"author":{"gitId":"agqy98"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-11-19"},{"lineNumber":185,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":186,"author":{"gitId":"agqy98"},"content":"    public void taskDelete(int index) {","lastModifiedDate":"2023-11-19"},{"lineNumber":187,"author":{"gitId":"agqy98"},"content":"        assert index \u003e\u003d 0 : \"Index is negative in taskDelete method\";","lastModifiedDate":"2023-11-19"},{"lineNumber":188,"author":{"gitId":"agqy98"},"content":"        taskList.deleteTask(index);","lastModifiedDate":"2023-11-19"},{"lineNumber":189,"author":{"gitId":"agqy98"},"content":"        storage.saveTasks(taskList.getList()); // Save tasks to file after each change","lastModifiedDate":"2023-11-19"},{"lineNumber":190,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":191,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":192,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":193,"author":{"gitId":"agqy98"},"content":"     * Processes the index-based commands such as DELETE, MARK, and UNMARK based on","lastModifiedDate":"2023-11-19"},{"lineNumber":194,"author":{"gitId":"agqy98"},"content":"     * the provided task description","lastModifiedDate":"2023-11-19"},{"lineNumber":195,"author":{"gitId":"agqy98"},"content":"     * and task type.","lastModifiedDate":"2023-11-19"},{"lineNumber":196,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":197,"author":{"gitId":"agqy98"},"content":"     * @param taskDescription The index of the task to be","lastModifiedDate":"2023-11-19"},{"lineNumber":198,"author":{"gitId":"agqy98"},"content":"     *                        processed.","lastModifiedDate":"2023-11-19"},{"lineNumber":199,"author":{"gitId":"agqy98"},"content":"     * @throws AssertionError If the assertion fails","lastModifiedDate":"2023-11-19"},{"lineNumber":200,"author":{"gitId":"agqy98"},"content":"     *                        (taskDescription is not greater than 0).","lastModifiedDate":"2023-11-19"},{"lineNumber":201,"author":{"gitId":"agqy98"},"content":"     * ","lastModifiedDate":"2023-11-19"},{"lineNumber":202,"author":{"gitId":"agqy98"},"content":"     * @param taskType The type of the task to be processed (DELETE, MARK, or","lastModifiedDate":"2023-11-19"},{"lineNumber":203,"author":{"gitId":"agqy98"},"content":"     *                 UNMARK).","lastModifiedDate":"2023-11-19"},{"lineNumber":204,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":205,"author":{"gitId":"agqy98"},"content":"    public void processIndexCommand(int taskDescription, TaskType taskType) {","lastModifiedDate":"2023-11-19"},{"lineNumber":206,"author":{"gitId":"agqy98"},"content":"        assert taskDescription \u003e 0 : \"selection should be greater than 0\";","lastModifiedDate":"2023-11-19"},{"lineNumber":207,"author":{"gitId":"agqy98"},"content":"        if (taskDescription \u003e 0 \u0026\u0026 taskDescription \u003c\u003d taskList.getListSize()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":208,"author":{"gitId":"agqy98"},"content":"            int index \u003d taskDescription - 1;","lastModifiedDate":"2023-11-19"},{"lineNumber":209,"author":{"gitId":"agqy98"},"content":"            // DELETE","lastModifiedDate":"2023-11-19"},{"lineNumber":210,"author":{"gitId":"agqy98"},"content":"            if (taskType \u003d\u003d TaskType.DELETE) {","lastModifiedDate":"2023-11-19"},{"lineNumber":211,"author":{"gitId":"agqy98"},"content":"                taskDelete(index);","lastModifiedDate":"2023-11-19"},{"lineNumber":212,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":213,"author":{"gitId":"agqy98"},"content":"            // MARK / UNMARK","lastModifiedDate":"2023-11-19"},{"lineNumber":214,"author":{"gitId":"agqy98"},"content":"            else if (taskType \u003d\u003d TaskType.MARK ||","lastModifiedDate":"2023-11-19"},{"lineNumber":215,"author":{"gitId":"agqy98"},"content":"                    taskType \u003d\u003d TaskType.UNMARK) {","lastModifiedDate":"2023-11-19"},{"lineNumber":216,"author":{"gitId":"agqy98"},"content":"                taskMark(index, taskType \u003d\u003d TaskType.MARK);","lastModifiedDate":"2023-11-19"},{"lineNumber":217,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":218,"author":{"gitId":"agqy98"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":219,"author":{"gitId":"agqy98"},"content":"            ui.printErrorMessage(ErrorType.ERR_EXCEED_LIMIT, taskType, taskList.getListSize());","lastModifiedDate":"2023-11-19"},{"lineNumber":220,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":221,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":222,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":223,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":224,"author":{"gitId":"agqy98"},"content":"     * Instantiates a new Task based on the provided task type and task description.","lastModifiedDate":"2023-11-19"},{"lineNumber":225,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":226,"author":{"gitId":"agqy98"},"content":"     * @param taskType        The type of the task (EVENT, DEADLINE, TODO, etc)","lastModifiedDate":"2023-11-19"},{"lineNumber":227,"author":{"gitId":"agqy98"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-11-19"},{"lineNumber":228,"author":{"gitId":"agqy98"},"content":"     * @return A new Task object corresponding to the given task type and","lastModifiedDate":"2023-11-19"},{"lineNumber":229,"author":{"gitId":"agqy98"},"content":"     *         description.","lastModifiedDate":"2023-11-19"},{"lineNumber":230,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":231,"author":{"gitId":"agqy98"},"content":"    public static Task instantiateTask(TaskType taskType, String taskDescription) {","lastModifiedDate":"2023-11-19"},{"lineNumber":232,"author":{"gitId":"agqy98"},"content":"        switch (taskType) {","lastModifiedDate":"2023-10-29"},{"lineNumber":233,"author":{"gitId":"agqy98"},"content":"            case EVENT:","lastModifiedDate":"2023-10-29"},{"lineNumber":234,"author":{"gitId":"agqy98"},"content":"                return new Events(taskDescription);","lastModifiedDate":"2023-10-29"},{"lineNumber":235,"author":{"gitId":"agqy98"},"content":"            case DEADLINE:","lastModifiedDate":"2023-10-29"},{"lineNumber":236,"author":{"gitId":"agqy98"},"content":"                return new Deadlines(taskDescription);","lastModifiedDate":"2023-10-29"},{"lineNumber":237,"author":{"gitId":"agqy98"},"content":"            default:","lastModifiedDate":"2023-10-29"},{"lineNumber":238,"author":{"gitId":"agqy98"},"content":"                return new ToDos(taskDescription);","lastModifiedDate":"2023-10-29"},{"lineNumber":239,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":240,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":241,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":242,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":243,"author":{"gitId":"agqy98"},"content":"     * Checks for any duplicate tasks in the task list based on the provided task","lastModifiedDate":"2023-11-19"},{"lineNumber":244,"author":{"gitId":"agqy98"},"content":"     * description and type.","lastModifiedDate":"2023-11-19"},{"lineNumber":245,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":246,"author":{"gitId":"agqy98"},"content":"     * @param taskDescription The description of the task.","lastModifiedDate":"2023-11-19"},{"lineNumber":247,"author":{"gitId":"agqy98"},"content":"     * @param taskType        The type of the task (EVENT, DEADLINE, TODO, etc)","lastModifiedDate":"2023-11-19"},{"lineNumber":248,"author":{"gitId":"agqy98"},"content":"     * @return A list of duplicate tasks from the task list, filtered by description","lastModifiedDate":"2023-11-19"},{"lineNumber":249,"author":{"gitId":"agqy98"},"content":"     *         and type.","lastModifiedDate":"2023-11-19"},{"lineNumber":250,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":251,"author":{"gitId":"agqy98"},"content":"    private List\u003cTask\u003e anyDuplicate(String taskDescription, TaskType taskType) {","lastModifiedDate":"2023-11-19"},{"lineNumber":252,"author":{"gitId":"agqy98"},"content":"        List\u003cTask\u003e resultTaskList \u003d taskList.searchList(taskDescription, true, taskType \u003d\u003d TaskType.TODO);","lastModifiedDate":"2023-11-19"},{"lineNumber":253,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":254,"author":{"gitId":"agqy98"},"content":"        // Create an iterator to safely remove elements while iterating","lastModifiedDate":"2023-11-19"},{"lineNumber":255,"author":{"gitId":"agqy98"},"content":"        Iterator\u003cTask\u003e iterator \u003d resultTaskList.iterator();","lastModifiedDate":"2023-11-19"},{"lineNumber":256,"author":{"gitId":"agqy98"},"content":"        while (iterator.hasNext()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":257,"author":{"gitId":"agqy98"},"content":"            Task task \u003d iterator.next();","lastModifiedDate":"2023-11-19"},{"lineNumber":258,"author":{"gitId":"agqy98"},"content":"            if (!task.getTaskType().equals(taskType)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":259,"author":{"gitId":"agqy98"},"content":"                iterator.remove();","lastModifiedDate":"2023-11-19"},{"lineNumber":260,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":261,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":262,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":263,"author":{"gitId":"agqy98"},"content":"        return resultTaskList;","lastModifiedDate":"2023-11-19"},{"lineNumber":264,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":265,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":266,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":267,"author":{"gitId":"agqy98"},"content":"     * Checks for any errors in the user input based on the provided input and","lastModifiedDate":"2023-11-19"},{"lineNumber":268,"author":{"gitId":"agqy98"},"content":"     * command.","lastModifiedDate":"2023-11-19"},{"lineNumber":269,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":270,"author":{"gitId":"agqy98"},"content":"     * @param input   The user input.","lastModifiedDate":"2023-11-19"},{"lineNumber":271,"author":{"gitId":"agqy98"},"content":"     * @param command The expected command.","lastModifiedDate":"2023-11-19"},{"lineNumber":272,"author":{"gitId":"agqy98"},"content":"     * @return The type of error encountered (ERR_EMPTY_DESCRIPTION,","lastModifiedDate":"2023-11-19"},{"lineNumber":273,"author":{"gitId":"agqy98"},"content":"     *         ERR_POSSIBLE_TYPO), or null if no error.","lastModifiedDate":"2023-11-19"},{"lineNumber":274,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":275,"author":{"gitId":"agqy98"},"content":"    private ErrorType anyError(String input, String command) {","lastModifiedDate":"2023-11-19"},{"lineNumber":276,"author":{"gitId":"agqy98"},"content":"        if (input.trim().equalsIgnoreCase(command)) {","lastModifiedDate":"2023-10-29"},{"lineNumber":277,"author":{"gitId":"agqy98"},"content":"            return ErrorType.ERR_EMPTY_DESCRIPTION;","lastModifiedDate":"2023-10-29"},{"lineNumber":278,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":279,"author":{"gitId":"agqy98"},"content":"        // A valid command should have a space afterward","lastModifiedDate":"2023-11-19"},{"lineNumber":280,"author":{"gitId":"agqy98"},"content":"        else if (!input.startsWith(command) || (input.trim().length() \u003e command.length() \u0026\u0026","lastModifiedDate":"2023-11-19"},{"lineNumber":281,"author":{"gitId":"agqy98"},"content":"                !input.substring(command.length(), command.length() + 1).equals(\" \"))) {","lastModifiedDate":"2023-11-19"},{"lineNumber":282,"author":{"gitId":"agqy98"},"content":"            return ErrorType.ERR_POSSIBLE_TYPO;","lastModifiedDate":"2023-10-29"},{"lineNumber":283,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-09-13"},{"lineNumber":284,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":285,"author":{"gitId":"agqy98"},"content":"        return null;","lastModifiedDate":"2023-11-19"},{"lineNumber":286,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":287,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-09-14"},{"lineNumber":288,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":289,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":290,"author":{"gitId":"agqy98"},"content":"     * Determines the task type based on the provided input and a map of task types","lastModifiedDate":"2023-11-19"},{"lineNumber":291,"author":{"gitId":"agqy98"},"content":"     * and their corresponding commands.","lastModifiedDate":"2023-11-19"},{"lineNumber":292,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":293,"author":{"gitId":"agqy98"},"content":"     * @param input The user input.","lastModifiedDate":"2023-11-19"},{"lineNumber":294,"author":{"gitId":"agqy98"},"content":"     * @param list  A map containing task types and their corresponding commands.","lastModifiedDate":"2023-11-19"},{"lineNumber":295,"author":{"gitId":"agqy98"},"content":"     * @return The identified task type or null if no match is found.","lastModifiedDate":"2023-11-19"},{"lineNumber":296,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":297,"author":{"gitId":"agqy98"},"content":"    private TaskType anyTaskType(String input, Map\u003cTaskType, String\u003e list) {","lastModifiedDate":"2023-11-19"},{"lineNumber":298,"author":{"gitId":"agqy98"},"content":"        for (Map.Entry\u003cTaskType, String\u003e entry : list.entrySet()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":299,"author":{"gitId":"agqy98"},"content":"            String value1 \u003d entry.getValue();","lastModifiedDate":"2023-11-19"},{"lineNumber":300,"author":{"gitId":"agqy98"},"content":"            if (input.length() \u003e\u003d value1.length()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":301,"author":{"gitId":"agqy98"},"content":"                String value2 \u003d input.toLowerCase().substring(0, value1.length());","lastModifiedDate":"2023-11-19"},{"lineNumber":302,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":303,"author":{"gitId":"agqy98"},"content":"                if (areStringsSimilar(value1, value2)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":304,"author":{"gitId":"agqy98"},"content":"                    return entry.getKey();","lastModifiedDate":"2023-10-29"},{"lineNumber":305,"author":{"gitId":"agqy98"},"content":"                }","lastModifiedDate":"2023-10-29"},{"lineNumber":306,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":307,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":308,"author":{"gitId":"agqy98"},"content":"        return null;","lastModifiedDate":"2023-10-29"},{"lineNumber":309,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":310,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":311,"author":{"gitId":"agqy98"},"content":"    /**","lastModifiedDate":"2023-11-19"},{"lineNumber":312,"author":{"gitId":"agqy98"},"content":"     * Checks if two strings are similar, allowing for a single character","lastModifiedDate":"2023-11-19"},{"lineNumber":313,"author":{"gitId":"agqy98"},"content":"     * difference.","lastModifiedDate":"2023-11-19"},{"lineNumber":314,"author":{"gitId":"agqy98"},"content":"     *","lastModifiedDate":"2023-11-19"},{"lineNumber":315,"author":{"gitId":"agqy98"},"content":"     * @param s1 The first string.","lastModifiedDate":"2023-11-19"},{"lineNumber":316,"author":{"gitId":"agqy98"},"content":"     * @param s2 The second string.","lastModifiedDate":"2023-11-19"},{"lineNumber":317,"author":{"gitId":"agqy98"},"content":"     * @return True if the strings are similar, false otherwise.","lastModifiedDate":"2023-11-19"},{"lineNumber":318,"author":{"gitId":"agqy98"},"content":"     */","lastModifiedDate":"2023-11-19"},{"lineNumber":319,"author":{"gitId":"agqy98"},"content":"    private static boolean areStringsSimilar(String s1, String s2) {","lastModifiedDate":"2023-11-19"},{"lineNumber":320,"author":{"gitId":"agqy98"},"content":"        if (s1.equals(s2)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":321,"author":{"gitId":"agqy98"},"content":"            return true;","lastModifiedDate":"2023-11-19"},{"lineNumber":322,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":323,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":324,"author":{"gitId":"agqy98"},"content":"        int differences \u003d 0;","lastModifiedDate":"2023-11-19"},{"lineNumber":325,"author":{"gitId":"agqy98"},"content":"        for (int i \u003d 0; i \u003c s1.length() \u0026\u0026 i \u003c s2.length(); i++) {","lastModifiedDate":"2023-11-19"},{"lineNumber":326,"author":{"gitId":"agqy98"},"content":"            if (s1.charAt(i) !\u003d s2.charAt(i)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":327,"author":{"gitId":"agqy98"},"content":"                differences++;","lastModifiedDate":"2023-11-19"},{"lineNumber":328,"author":{"gitId":"agqy98"},"content":"                if (differences \u003e 1) {","lastModifiedDate":"2023-11-19"},{"lineNumber":329,"author":{"gitId":"agqy98"},"content":"                    return false; // More than one difference, not similar","lastModifiedDate":"2023-11-19"},{"lineNumber":330,"author":{"gitId":"agqy98"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":331,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":332,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":333,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":334,"author":{"gitId":"agqy98"},"content":"        return differences \u003d\u003d 1; // Only one difference, strings are similar","lastModifiedDate":"2023-11-19"},{"lineNumber":335,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":336,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"agqy98":334,"-":2}},{"path":"src/main/java/duke/command/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.command;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"public enum TaskType {","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"    LIST,","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"    TODO, ","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"    DEADLINE, ","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"    EVENT,","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"    DELETE, ","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"    FIND,","lastModifiedDate":"2023-11-19"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"    MARK,","lastModifiedDate":"2023-11-19"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"    UNMARK,","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"agqy98":12}},{"path":"src/main/java/duke/error/ErrorType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.error;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"public enum ErrorType {","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"    ERR_EMPTY_DESCRIPTION, ","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"    ERR_POSSIBLE_TYPO,","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"    ERR_INVALID_FORMAT,","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"    ERR_SYSTEM_READ_FAIL, ","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"    ERR_EXPECT_NUMBER,","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"    ERR_EXCEED_LIMIT","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"};","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"}],"authorContributionMap":{"agqy98":11}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"import duke.command.TaskType;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"import duke.task.Events;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"import duke.task.ToDos;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"public class Parser {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"    public static Task createTask(TaskType taskType, String taskDescription) {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"        switch (taskType) {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"            case EVENT:","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"                return new Events(taskDescription);","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"            case DEADLINE:","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"                return new Deadlines(taskDescription);","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"            default:","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"                return new ToDos(taskDescription);","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"    public static Task createTaskFromLine(String line) {","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"        String[] parts \u003d line.split(\"\\\\s*\\\\|\\\\s*\");","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"        String type \u003d parts[0];","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"        boolean isDone \u003d parts[1].equals(\"1\");","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"        String description \u003d parts[2];","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"        switch (type) {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"            case \"T\":","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"                return new ToDos(description, isDone);","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"            case \"D\":","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"                String deadline \u003d parts[3];","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"                return new Deadlines(description, isDone, deadline);","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"            case \"E\":","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"agqy98"},"content":"                String fromStr \u003d parts[3];","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"agqy98"},"content":"                String toStr \u003d parts[4];","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"agqy98"},"content":"                LocalDateTime from \u003d LocalDateTime.parse(fromStr);","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"agqy98"},"content":"                LocalDateTime to \u003d LocalDateTime.parse(toStr);","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"agqy98"},"content":"                return new Events(description, isDone, from, to);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"agqy98"},"content":"            default:","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"agqy98"},"content":"                throw new IllegalArgumentException(\"Invalid task type: \" + type);","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"agqy98":45}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.storage;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import java.io.*;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"public class Storage {","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"    private static final String FOLDER_PATH \u003d \"./data\";","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"    private static final String FILE_PATH \u003d FOLDER_PATH + \"/duke.txt\";","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"    private static final String DUKE_PATH \u003d \"./text-ui-test/EXPECTED.TXT\";","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"    public List\u003cTask\u003e loadTasks() {","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"        File file \u003d new File(FILE_PATH);","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"        // Check if the file exists before attempting to load","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"        if (!file.exists()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"            // System.out.println(\"No saved tasks found. Starting with an empty task","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"            // list.\");","lastModifiedDate":"2023-11-19"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"            return list;","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"        try (BufferedReader reader \u003d new BufferedReader(new FileReader(FILE_PATH))) {","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"            String line;","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"            while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"                list.add(Parser.createTaskFromLine(line));","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"        return list;","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"agqy98"},"content":"    public void saveTasks(List\u003cTask\u003e list) {","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"agqy98"},"content":"        try {","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"agqy98"},"content":"            // Ensure the directory exists","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"agqy98"},"content":"            File directory \u003d new File(FOLDER_PATH);","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"agqy98"},"content":"            if (!directory.exists()) {","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"agqy98"},"content":"                directory.mkdirs();","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"agqy98"},"content":"            // Now, save the tasks to the file","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"agqy98"},"content":"            try (FileWriter writer \u003d new FileWriter(FILE_PATH)) {","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"agqy98"},"content":"                for (Task task : list) {","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"agqy98"},"content":"                    writer.write(task.toFileString() + System.lineSeparator());","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"agqy98"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"agqy98"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"agqy98"},"content":"            e.printStackTrace();","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"agqy98"},"content":"    public String loadDuke() {","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"agqy98"},"content":"        String result \u003d \"\";","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"agqy98"},"content":"        File file \u003d new File(DUKE_PATH);","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"agqy98"},"content":"        // Check if the file exists before attempting to load","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"agqy98"},"content":"        if (file.exists()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"agqy98"},"content":"            try (BufferedReader reader \u003d new BufferedReader(new FileReader(DUKE_PATH))) {","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"agqy98"},"content":"                String line;","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"agqy98"},"content":"                while ((line \u003d reader.readLine()) !\u003d null) {","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"agqy98"},"content":"                    result +\u003d line + \"\\n\";","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"agqy98"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"agqy98"},"content":"            } catch (IOException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"agqy98"},"content":"                e.printStackTrace();","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"agqy98"},"content":"        } ","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"agqy98"},"content":"        return result;","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"agqy98":74}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.task;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-19"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"import duke.command.TaskType;","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"    LocalDate deadline;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"    String INPUT_DATETIME_PATTERN \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"    String OUTPUT_DATETIME_PATTERN \u003d \"MMM d yyyy\";","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"    public Deadlines(String instruction) {","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"        super(\"\");","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"        String[] items \u003d derive(instruction);","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"        this.description \u003d items[0];","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"        this.deadline \u003d convertToDate(items[1]);","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"    public Deadlines(String description, boolean isDone, String deadline) {","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"        super(\"\", false);","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"        this.deadline \u003d convertToDate(deadline);","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"    private String[] derive(String instruction) {","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"        String[] result \u003d instruction.split(\"/\");","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"        if (result.length !\u003d 2) {","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"            throw new IllegalArgumentException(\"Invalid format\");","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"        } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"            String desc \u003d result[0].trim();","lastModifiedDate":"2023-11-19"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"            if (desc.isEmpty()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"agqy98"},"content":"                throw new IllegalArgumentException(\"Invalid format\");","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"agqy98"},"content":"            result[0] \u003d desc;","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"agqy98"},"content":"            result[1] \u003d result[1].replaceAll(\"by\", \"\").trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"agqy98"},"content":"            return result;","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":43,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":44,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"agqy98"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-11-14"},{"lineNumber":46,"author":{"gitId":"agqy98"},"content":"        return TaskType.DEADLINE;","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":48,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":49,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"agqy98"},"content":"    public String getType() {","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"agqy98"},"content":"        return \"D\";","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"agqy98"},"content":"    public String toFileString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"agqy98"},"content":"        return getType() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + deadline;","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"agqy98"},"content":"    public String getPrintStatus() {","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"agqy98"},"content":"        DateTimeFormatter patt \u003d DateTimeFormatter.ofPattern(OUTPUT_DATETIME_PATTERN);","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"agqy98"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (by: \"","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"agqy98"},"content":"        + deadline.format(patt) + \")\";","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"agqy98"},"content":"    private LocalDate convertToDate(String d) {","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"agqy98"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"agqy98"},"content":"            LocalDate date \u003d LocalDate.parse(d);","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"agqy98"},"content":"            return date;","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"agqy98"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"agqy98"},"content":"            throw new IllegalArgumentException(\"Invalid date format, use \" + INPUT_DATETIME_PATTERN, e);","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"agqy98":74}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.task;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"import java.time.LocalTime;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-19"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"import duke.command.TaskType;","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"public class Events extends Task {","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"    LocalDateTime from;","lastModifiedDate":"2023-11-19"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"    LocalDateTime to;","lastModifiedDate":"2023-11-19"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"    String INPUT_DATE_PATTERN \u003d \"yyyy-MM-dd\";","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"    String INPUT_DATETIME_PATTERN \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2023-11-19"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"    String OUTPUT_DATETIME_PATTERN \u003d \"MMM d yyyy, hh:mm a\";","lastModifiedDate":"2023-11-19"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"    String OUTPUT_DATE_PATTERN \u003d \"MMM d yyyy\";","lastModifiedDate":"2023-11-19"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"    String OUTPUT_TIME_PATTERN \u003d \"hh:mm a\";","lastModifiedDate":"2023-11-19"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"    public Events(String instruction) {","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"        super(\"\");","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"        String[] items \u003d derive(instruction);","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"        this.description \u003d items[0];","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"        this.from \u003d convertToDateTime(items[1]);","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"        this.to \u003d convertToDateTime(items[2]);","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"    public Events(String description, boolean isDone, LocalDateTime from, LocalDateTime to) {","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"        super(\"\", false);","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"        this.from \u003d from;","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"        this.to \u003d to;","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"agqy98"},"content":"    public Events(String description, boolean isDone, String from, String to) {","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"agqy98"},"content":"        super(\"\", false);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"agqy98"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"agqy98"},"content":"        this.from \u003d convertToDateTime(from);","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"agqy98"},"content":"        this.to \u003d convertToDateTime(to);","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"agqy98"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"agqy98"},"content":"    private String[] derive(String instruction) {","lastModifiedDate":"2023-10-29"},{"lineNumber":45,"author":{"gitId":"agqy98"},"content":"        String[] result \u003d instruction.split(\"/\");","lastModifiedDate":"2023-10-29"},{"lineNumber":46,"author":{"gitId":"agqy98"},"content":"        if (result.length !\u003d 3) {","lastModifiedDate":"2023-10-29"},{"lineNumber":47,"author":{"gitId":"agqy98"},"content":"            throw new IllegalArgumentException(\"Invalid format\");","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"agqy98"},"content":"        } else {","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"agqy98"},"content":"            String desc \u003d result[0].trim();","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"agqy98"},"content":"            if (desc.isEmpty()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"agqy98"},"content":"                throw new IllegalArgumentException(\"Invalid format\");","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"agqy98"},"content":"            result[0] \u003d desc;","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"agqy98"},"content":"            // We are not handling if they put invalid dates","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"agqy98"},"content":"            // We simply take the 2nd and 3rd values and store it as from and to for now.","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"agqy98"},"content":"            result[1] \u003d result[1].replaceAll(\"from\", \"\").trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"agqy98"},"content":"            result[2] \u003d result[2].replaceAll(\"to\", \"\").trim();","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"agqy98"},"content":"            return result;","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-11-14"},{"lineNumber":63,"author":{"gitId":"agqy98"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-11-14"},{"lineNumber":64,"author":{"gitId":"agqy98"},"content":"        return TaskType.EVENT;","lastModifiedDate":"2023-11-14"},{"lineNumber":65,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":66,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":67,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":68,"author":{"gitId":"agqy98"},"content":"    public String getType() {","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"agqy98"},"content":"        return \"E\";","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"agqy98"},"content":"    public String toFileString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"agqy98"},"content":"        return getType() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description + \" | \" + from + \" | \" + to;","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"agqy98"},"content":"    public String getPrintStatus() {","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"agqy98"},"content":"        // Display only the date if both events occur at midnight.","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"agqy98"},"content":"        // Show the date range if the events happen on the same date.","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"agqy98"},"content":"        // If both conditions above are met, display one date only.","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"agqy98"},"content":"        boolean isFallOnSameDate \u003d from.toLocalDate().equals(to.toLocalDate());","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"agqy98"},"content":"        boolean isHideTime \u003d from.toLocalTime().equals(LocalTime.MIDNIGHT)","lastModifiedDate":"2023-11-19"},{"lineNumber":86,"author":{"gitId":"agqy98"},"content":"                \u0026\u0026 to.toLocalTime().equals(LocalTime.MIDNIGHT);","lastModifiedDate":"2023-11-19"},{"lineNumber":87,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"agqy98"},"content":"        DateTimeFormatter dateFormatter \u003d DateTimeFormatter.ofPattern(OUTPUT_DATE_PATTERN);","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"agqy98"},"content":"        DateTimeFormatter timeFormatter \u003d DateTimeFormatter.ofPattern(OUTPUT_TIME_PATTERN);","lastModifiedDate":"2023-11-19"},{"lineNumber":90,"author":{"gitId":"agqy98"},"content":"        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(OUTPUT_DATETIME_PATTERN);","lastModifiedDate":"2023-11-19"},{"lineNumber":91,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":92,"author":{"gitId":"agqy98"},"content":"        String dateRange \u003d \"\";","lastModifiedDate":"2023-11-19"},{"lineNumber":93,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":94,"author":{"gitId":"agqy98"},"content":"        if (isFallOnSameDate \u0026\u0026 isHideTime) {","lastModifiedDate":"2023-11-19"},{"lineNumber":95,"author":{"gitId":"agqy98"},"content":"            dateRange \u003d \"on: \" + from.format(dateFormatter);","lastModifiedDate":"2023-11-19"},{"lineNumber":96,"author":{"gitId":"agqy98"},"content":"        } else if (isFallOnSameDate) {","lastModifiedDate":"2023-11-19"},{"lineNumber":97,"author":{"gitId":"agqy98"},"content":"            // But show time","lastModifiedDate":"2023-11-19"},{"lineNumber":98,"author":{"gitId":"agqy98"},"content":"            dateRange \u003d \"from: \" + from.format(dateTimeFormatter) + \" to: \" + to.format(timeFormatter);","lastModifiedDate":"2023-11-19"},{"lineNumber":99,"author":{"gitId":"agqy98"},"content":"        } else if (isHideTime) {","lastModifiedDate":"2023-11-19"},{"lineNumber":100,"author":{"gitId":"agqy98"},"content":"            dateRange \u003d \"from: \" + from.format(dateFormatter) + \" \" +","lastModifiedDate":"2023-11-19"},{"lineNumber":101,"author":{"gitId":"agqy98"},"content":"                    \"to: \" + to.format(dateFormatter);","lastModifiedDate":"2023-11-19"},{"lineNumber":102,"author":{"gitId":"agqy98"},"content":"        } else {","lastModifiedDate":"2023-11-19"},{"lineNumber":103,"author":{"gitId":"agqy98"},"content":"            dateRange \u003d \"from: \" + from.format(dateTimeFormatter) + \" \" +","lastModifiedDate":"2023-11-19"},{"lineNumber":104,"author":{"gitId":"agqy98"},"content":"                    \"to: \" + to.format(dateTimeFormatter);","lastModifiedDate":"2023-11-19"},{"lineNumber":105,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":106,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":107,"author":{"gitId":"agqy98"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description + \" (\" + dateRange + \")\";","lastModifiedDate":"2023-11-19"},{"lineNumber":108,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":109,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":110,"author":{"gitId":"agqy98"},"content":"    private LocalDateTime convertToDateTime(String dt) {","lastModifiedDate":"2023-11-19"},{"lineNumber":111,"author":{"gitId":"agqy98"},"content":"        DateTimeFormatter patt \u003d DateTimeFormatter.ofPattern(INPUT_DATETIME_PATTERN);","lastModifiedDate":"2023-11-19"},{"lineNumber":112,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":113,"author":{"gitId":"agqy98"},"content":"        if (dt.length() \u003d\u003d INPUT_DATE_PATTERN.length()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":114,"author":{"gitId":"agqy98"},"content":"            dt +\u003d \" \" + LocalTime.MIDNIGHT;","lastModifiedDate":"2023-11-19"},{"lineNumber":115,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":116,"author":{"gitId":"agqy98"},"content":"        try {","lastModifiedDate":"2023-11-19"},{"lineNumber":117,"author":{"gitId":"agqy98"},"content":"            LocalDateTime datetime \u003d LocalDateTime.parse(dt, patt);","lastModifiedDate":"2023-11-19"},{"lineNumber":118,"author":{"gitId":"agqy98"},"content":"            return datetime;","lastModifiedDate":"2023-11-19"},{"lineNumber":119,"author":{"gitId":"agqy98"},"content":"        } catch (DateTimeParseException e) {","lastModifiedDate":"2023-11-19"},{"lineNumber":120,"author":{"gitId":"agqy98"},"content":"            throw new IllegalArgumentException(\"Invalid date-time format, use yyyy-MM-dd hh:mm\", e);","lastModifiedDate":"2023-11-19"},{"lineNumber":121,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":122,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"agqy98":123}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.task;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"import duke.command.TaskType;","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"public abstract class Task {","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"    public String description;","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"    public Task(String description) {","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"    public Task(String description, boolean isDone) {","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"    public String getDescription() {","lastModifiedDate":"2023-11-14"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"        return this.description;","lastModifiedDate":"2023-11-14"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"    public void setIsDone(boolean isDone) {","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"    public abstract TaskType getTaskType();","lastModifiedDate":"2023-11-14"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"    public abstract String getType();","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"    public abstract String toFileString();","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"agqy98"},"content":"    public abstract String getPrintStatus();","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"agqy98"},"content":"    public void print() {","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"[\" + getType() + \"]\" + getPrintStatus());","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"agqy98":42}},{"path":"src/main/java/duke/task/ToDos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.task;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-11-19"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"import duke.command.TaskType;","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"public class ToDos extends Task {","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"    public ToDos(String description) {","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"        super(description);","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"    public ToDos(String description, boolean isDone) {","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"        super(description, isDone);","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"        return TaskType.TODO;","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"    public String getType() {","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"        return \"T\";","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"    public String toFileString() {","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"        return getType() + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" + description;","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"    @Override","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"    public String getPrintStatus() {","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"        return \"[\" + (isDone ? \"X\" : \" \") + \"] \" + description;","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"agqy98":35}},{"path":"src/main/java/duke/tasklist/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.tasklist;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"public class TaskList {","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"    private List\u003cTask\u003e list;","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"    public TaskList() {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"        this.list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"    public TaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"    public int getListSize() {","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"        return list.size();","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"    public List\u003cTask\u003e getList() {","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"        return list;","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"    public void setList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"        this.list \u003d list;","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"    public List\u003cTask\u003e searchList(String keyword, boolean isExactSearch, boolean skipSlashCheck) {","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"        List\u003cTask\u003e resultList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"        if (!list.isEmpty()) {","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":37,"author":{"gitId":"agqy98"},"content":"            if (!skipSlashCheck) {","lastModifiedDate":"2023-11-19"},{"lineNumber":38,"author":{"gitId":"agqy98"},"content":"                keyword \u003d keyword.indexOf(\"/\") !\u003d -1 ? keyword.split(\"/\")[0] : keyword;","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":40,"author":{"gitId":"agqy98"},"content":"            keyword \u003d keyword.toLowerCase().trim();","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"agqy98"},"content":"            for (Task task : list) {","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"agqy98"},"content":"                String taskDescription \u003d task.getDescription().toLowerCase();","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"agqy98"},"content":"                if (isExactSearch \u0026\u0026 taskDescription.equals(keyword)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"agqy98"},"content":"                    resultList.add(task);","lastModifiedDate":"2023-11-14"},{"lineNumber":47,"author":{"gitId":"agqy98"},"content":"                } else if (!isExactSearch \u0026\u0026 taskDescription.contains(keyword)) {","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"agqy98"},"content":"                    resultList.add(task);","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"agqy98"},"content":"                }","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-14"},{"lineNumber":51,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":52,"author":{"gitId":"agqy98"},"content":"        return resultList;","lastModifiedDate":"2023-11-14"},{"lineNumber":53,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":54,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":55,"author":{"gitId":"agqy98"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"agqy98"},"content":"        list.add(task);","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"agqy98"},"content":"        UI.printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"agqy98"},"content":"        task.print();","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list\");","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"agqy98"},"content":"        UI.printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"agqy98"},"content":"    public void deleteTask(int index) {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"agqy98"},"content":"        Task existing \u003d list.get(index);","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"agqy98"},"content":"        list.remove(index);","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"agqy98"},"content":"        UI.printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"agqy98"},"content":"        existing.print();","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"Now you have \" + list.size() + \" task(s) in the list\");","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"agqy98"},"content":"        UI.printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"agqy98"},"content":"    public void markTask(int index, boolean isDone) {","lastModifiedDate":"2023-11-19"},{"lineNumber":76,"author":{"gitId":"agqy98"},"content":"        Task task \u003d list.get(index);","lastModifiedDate":"2023-11-19"},{"lineNumber":77,"author":{"gitId":"agqy98"},"content":"        task.setIsDone(isDone);","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":79,"author":{"gitId":"agqy98"},"content":"        UI.printSeparator();","lastModifiedDate":"2023-11-19"},{"lineNumber":80,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"Got it. I\u0027ve mark this task as \" + (isDone ? \"done\" : \"undone\") + \":\");","lastModifiedDate":"2023-11-19"},{"lineNumber":81,"author":{"gitId":"agqy98"},"content":"        task.print();","lastModifiedDate":"2023-11-19"},{"lineNumber":82,"author":{"gitId":"agqy98"},"content":"        UI.printSeparator();","lastModifiedDate":"2023-11-19"},{"lineNumber":83,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":84,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"agqy98":84}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke.ui;","lastModifiedDate":"2023-10-30"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import java.util.HashMap;","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"import java.util.List;","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"import java.util.Map;","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"import duke.command.TaskType;","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"import duke.error.ErrorType;","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"public class UI {","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"    public final Map\u003cTaskType, String\u003e TASK_KEYWORDS \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"    {","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"        TASK_KEYWORDS.put(TaskType.LIST, \"list\");","lastModifiedDate":"2023-11-19"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"        TASK_KEYWORDS.put(TaskType.TODO, \"todo\");","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"        TASK_KEYWORDS.put(TaskType.DEADLINE, \"deadline\");","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"        TASK_KEYWORDS.put(TaskType.EVENT, \"event\");","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"        TASK_KEYWORDS.put(TaskType.DELETE, \"delete\");","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"        TASK_KEYWORDS.put(TaskType.FIND, \"find\");","lastModifiedDate":"2023-11-19"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"        TASK_KEYWORDS.put(TaskType.MARK, \"mark\");","lastModifiedDate":"2023-11-19"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"        TASK_KEYWORDS.put(TaskType.UNMARK, \"unmark\");","lastModifiedDate":"2023-11-19"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"    public void printTaskList(List\u003cTask\u003e list) {","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"Here are the tasks in your list:\");","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"        for (int i \u003d 0; i \u003c list.size(); i++) {","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"            System.out.print(i + 1 + \". \");","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"            list.get(i).print();","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"    public void printSelectedTasks(List\u003cTask\u003e originalList, List\u003cTask\u003e printList, TaskType t) {","lastModifiedDate":"2023-11-19"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"        if (t \u003d\u003d TaskType.FIND) {","lastModifiedDate":"2023-11-14"},{"lineNumber":36,"author":{"gitId":"agqy98"},"content":"            System.out.println(\"Here are the matching tasks in your list:\");","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"agqy98"},"content":"        } else if (t \u003d\u003d TaskType.TODO ||","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"agqy98"},"content":"                t \u003d\u003d TaskType.EVENT ||","lastModifiedDate":"2023-11-14"},{"lineNumber":39,"author":{"gitId":"agqy98"},"content":"                t \u003d\u003d TaskType.DEADLINE) {","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"agqy98"},"content":"            System.out.println(\"Unable to add due to a duplicate record.\");","lastModifiedDate":"2023-11-19"},{"lineNumber":41,"author":{"gitId":"agqy98"},"content":"            System.out.println(\"Please provide a unique description or delete the existing record to proceed:\\n\");","lastModifiedDate":"2023-11-19"},{"lineNumber":42,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"agqy98"},"content":"        for (int i \u003d 0; i \u003c originalList.size(); i++) {","lastModifiedDate":"2023-11-19"},{"lineNumber":44,"author":{"gitId":"agqy98"},"content":"            if (printList.size() \u003d\u003d 0){","lastModifiedDate":"2023-11-19"},{"lineNumber":45,"author":{"gitId":"agqy98"},"content":"                break;","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"agqy98"},"content":"            if (originalList.get(i).equals(printList.get(0))) {","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"agqy98"},"content":"                System.out.print(i + 1 + \". \");","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"agqy98"},"content":"                originalList.get(i).print();","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"agqy98"},"content":"                printList.remove(0);","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"agqy98"},"content":"            }","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"agqy98"},"content":"    public void printWelcomeMessage(String duke) {","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"agqy98"},"content":"        System.out.println(duke);","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"I\u0027m AngelBot!\");","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"What can I do for you?\");","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"agqy98"},"content":"    public void printGoodbyeMessage() {","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"agqy98"},"content":"    public void printErrorMessage(ErrorType e, TaskType t, int size) {","lastModifiedDate":"2023-10-30"},{"lineNumber":71,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":72,"author":{"gitId":"agqy98"},"content":"        switch (e) {","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"agqy98"},"content":"            case ERR_EMPTY_DESCRIPTION:","lastModifiedDate":"2023-10-30"},{"lineNumber":74,"author":{"gitId":"agqy98"},"content":"                System.out.println(\"OOPS!!! The description of a \" + TASK_KEYWORDS.get(t) + \" cannot be empty.\");","lastModifiedDate":"2023-10-30"},{"lineNumber":75,"author":{"gitId":"agqy98"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":76,"author":{"gitId":"agqy98"},"content":"            case ERR_INVALID_FORMAT:","lastModifiedDate":"2023-10-30"},{"lineNumber":77,"author":{"gitId":"agqy98"},"content":"                System.out.printf(","lastModifiedDate":"2023-10-30"},{"lineNumber":78,"author":{"gitId":"agqy98"},"content":"                        \"OOPS! It seems you didn\u0027t provide a valid %s format. To create a %s task, use the following format:\",","lastModifiedDate":"2023-10-30"},{"lineNumber":79,"author":{"gitId":"agqy98"},"content":"                        TASK_KEYWORDS.get(t), TASK_KEYWORDS.get(t));","lastModifiedDate":"2023-10-30"},{"lineNumber":80,"author":{"gitId":"agqy98"},"content":"                System.out.println(\"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":81,"author":{"gitId":"agqy98"},"content":"                switch (t) {","lastModifiedDate":"2023-10-30"},{"lineNumber":82,"author":{"gitId":"agqy98"},"content":"                    case DEADLINE:","lastModifiedDate":"2023-10-30"},{"lineNumber":83,"author":{"gitId":"agqy98"},"content":"                        System.out.println(\"deadline [description] /by [date]\");","lastModifiedDate":"2023-10-30"},{"lineNumber":84,"author":{"gitId":"agqy98"},"content":"                        System.out.println(\"Date Format: yyyy-MM-dd\");","lastModifiedDate":"2023-11-19"},{"lineNumber":85,"author":{"gitId":"agqy98"},"content":"                        break;","lastModifiedDate":"2023-10-30"},{"lineNumber":86,"author":{"gitId":"agqy98"},"content":"                        case EVENT:","lastModifiedDate":"2023-10-30"},{"lineNumber":87,"author":{"gitId":"agqy98"},"content":"                        System.out.println(\"event [description] /from [start date] /to [end date]\");","lastModifiedDate":"2023-11-19"},{"lineNumber":88,"author":{"gitId":"agqy98"},"content":"                        System.out.println(\"Date Format: yyyy-MM-dd OR yyyy-MM-dd HH:mm\");","lastModifiedDate":"2023-11-19"},{"lineNumber":89,"author":{"gitId":"agqy98"},"content":"                        break;","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"agqy98"},"content":"                    default:","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"agqy98"},"content":"                        System.out.println(\"todo [description]\"); // Not expecting any formatting error here","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"agqy98"},"content":"                        break;","lastModifiedDate":"2023-10-30"},{"lineNumber":93,"author":{"gitId":"agqy98"},"content":"                }","lastModifiedDate":"2023-10-30"},{"lineNumber":94,"author":{"gitId":"agqy98"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":95,"author":{"gitId":"agqy98"},"content":"            case ERR_POSSIBLE_TYPO:","lastModifiedDate":"2023-10-30"},{"lineNumber":96,"author":{"gitId":"agqy98"},"content":"                System.out.printf(\"OOPS! It appears there might be a typo. Did you mean to write \u0027%s\u0027?\",","lastModifiedDate":"2023-10-30"},{"lineNumber":97,"author":{"gitId":"agqy98"},"content":"                        TASK_KEYWORDS.get(t));","lastModifiedDate":"2023-10-30"},{"lineNumber":98,"author":{"gitId":"agqy98"},"content":"                System.out.println(\"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":99,"author":{"gitId":"agqy98"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":100,"author":{"gitId":"agqy98"},"content":"            case ERR_EXPECT_NUMBER:","lastModifiedDate":"2023-10-30"},{"lineNumber":101,"author":{"gitId":"agqy98"},"content":"                System.out.printf(\"Expect a number (1-%d) after %s\", size, TASK_KEYWORDS.get(t));","lastModifiedDate":"2023-10-30"},{"lineNumber":102,"author":{"gitId":"agqy98"},"content":"                System.out.println(\"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":103,"author":{"gitId":"agqy98"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":104,"author":{"gitId":"agqy98"},"content":"            case ERR_EXCEED_LIMIT:","lastModifiedDate":"2023-10-30"},{"lineNumber":105,"author":{"gitId":"agqy98"},"content":"                System.out.printf(\"The specified number exceeds the limit (1-%d)\", size);","lastModifiedDate":"2023-10-30"},{"lineNumber":106,"author":{"gitId":"agqy98"},"content":"                System.out.println(\"\");","lastModifiedDate":"2023-10-30"},{"lineNumber":107,"author":{"gitId":"agqy98"},"content":"                break;","lastModifiedDate":"2023-10-30"},{"lineNumber":108,"author":{"gitId":"agqy98"},"content":"            default:","lastModifiedDate":"2023-10-30"},{"lineNumber":109,"author":{"gitId":"agqy98"},"content":"                System.out.println(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-10-30"},{"lineNumber":110,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-10-30"},{"lineNumber":111,"author":{"gitId":"agqy98"},"content":"        printSeparator();","lastModifiedDate":"2023-10-30"},{"lineNumber":112,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":113,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":114,"author":{"gitId":"agqy98"},"content":"    public static void printSeparator() {","lastModifiedDate":"2023-10-30"},{"lineNumber":115,"author":{"gitId":"agqy98"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-10-30"},{"lineNumber":116,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"agqy98":118}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"agqy98"},"content":"package duke;","lastModifiedDate":"2023-11-14"},{"lineNumber":2,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":3,"author":{"gitId":"agqy98"},"content":"import duke.command.TaskType;","lastModifiedDate":"2023-11-14"},{"lineNumber":4,"author":{"gitId":"agqy98"},"content":"import duke.error.ErrorType;","lastModifiedDate":"2023-11-14"},{"lineNumber":5,"author":{"gitId":"agqy98"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-11-14"},{"lineNumber":6,"author":{"gitId":"agqy98"},"content":"import duke.tasklist.TaskList;","lastModifiedDate":"2023-11-14"},{"lineNumber":7,"author":{"gitId":"agqy98"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-11-14"},{"lineNumber":8,"author":{"gitId":"agqy98"},"content":"import duke.task.Task;","lastModifiedDate":"2023-11-14"},{"lineNumber":9,"author":{"gitId":"agqy98"},"content":"import duke.task.Events;","lastModifiedDate":"2023-11-14"},{"lineNumber":10,"author":{"gitId":"agqy98"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2023-11-14"},{"lineNumber":11,"author":{"gitId":"agqy98"},"content":"import duke.task.ToDos;","lastModifiedDate":"2023-11-14"},{"lineNumber":12,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":13,"author":{"gitId":"agqy98"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-14"},{"lineNumber":14,"author":{"gitId":"agqy98"},"content":"import static org.junit.jupiter.api.Assertions.*;","lastModifiedDate":"2023-11-14"},{"lineNumber":15,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":16,"author":{"gitId":"agqy98"},"content":"import java.io.ByteArrayInputStream;","lastModifiedDate":"2023-11-14"},{"lineNumber":17,"author":{"gitId":"agqy98"},"content":"import java.io.ByteArrayOutputStream;","lastModifiedDate":"2023-11-14"},{"lineNumber":18,"author":{"gitId":"agqy98"},"content":"import java.io.InputStream;","lastModifiedDate":"2023-11-14"},{"lineNumber":19,"author":{"gitId":"agqy98"},"content":"import java.io.PrintStream;","lastModifiedDate":"2023-11-14"},{"lineNumber":20,"author":{"gitId":"agqy98"},"content":"import java.util.List;","lastModifiedDate":"2023-11-14"},{"lineNumber":21,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":22,"author":{"gitId":"agqy98"},"content":"public class DukeTest {","lastModifiedDate":"2023-11-14"},{"lineNumber":23,"author":{"gitId":"agqy98"},"content":"    String END \u003d \"\\nbye\";","lastModifiedDate":"2023-11-19"},{"lineNumber":24,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":25,"author":{"gitId":"agqy98"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":26,"author":{"gitId":"agqy98"},"content":"    void testTypo() {","lastModifiedDate":"2023-11-19"},{"lineNumber":27,"author":{"gitId":"agqy98"},"content":"        String input \u003d \"lisy\" + END;","lastModifiedDate":"2023-11-19"},{"lineNumber":28,"author":{"gitId":"agqy98"},"content":"        String expectedOutput \u003d \"OOPS! It appears there might be a typo. Did you mean to write \u0027list\u0027?\";","lastModifiedDate":"2023-11-19"},{"lineNumber":29,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":30,"author":{"gitId":"agqy98"},"content":"        runAndAssertTask(input, expectedOutput);","lastModifiedDate":"2023-11-19"},{"lineNumber":31,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":32,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":33,"author":{"gitId":"agqy98"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":34,"author":{"gitId":"agqy98"},"content":"    void testTodo() {","lastModifiedDate":"2023-11-14"},{"lineNumber":35,"author":{"gitId":"agqy98"},"content":"        String input \u003d \"todo read book\" + END;","lastModifiedDate":"2023-11-19"},{"lineNumber":36,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":37,"author":{"gitId":"agqy98"},"content":"        // Assert","lastModifiedDate":"2023-11-14"},{"lineNumber":38,"author":{"gitId":"agqy98"},"content":"        String expectedOutput \u003d \"[T][ ] read book\";","lastModifiedDate":"2023-11-19"},{"lineNumber":39,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":40,"author":{"gitId":"agqy98"},"content":"        runAndAssertTask(input, expectedOutput);","lastModifiedDate":"2023-11-14"},{"lineNumber":41,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":42,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":43,"author":{"gitId":"agqy98"},"content":"    @Test","lastModifiedDate":"2023-11-14"},{"lineNumber":44,"author":{"gitId":"agqy98"},"content":"    void testDeadline() {","lastModifiedDate":"2023-11-14"},{"lineNumber":45,"author":{"gitId":"agqy98"},"content":"        String input \u003d \"deadline return book /by 2023-06-06\" + END;","lastModifiedDate":"2023-11-19"},{"lineNumber":46,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":47,"author":{"gitId":"agqy98"},"content":"        // Assert","lastModifiedDate":"2023-11-19"},{"lineNumber":48,"author":{"gitId":"agqy98"},"content":"        String expectedOutput \u003d \"[D][ ] return book (by: Jun 6 2023)\";","lastModifiedDate":"2023-11-19"},{"lineNumber":49,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":50,"author":{"gitId":"agqy98"},"content":"        runAndAssertTask(input, expectedOutput);","lastModifiedDate":"2023-11-19"},{"lineNumber":51,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":52,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":53,"author":{"gitId":"agqy98"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":54,"author":{"gitId":"agqy98"},"content":"    void testEvent() {","lastModifiedDate":"2023-11-19"},{"lineNumber":55,"author":{"gitId":"agqy98"},"content":"        String input \u003d \"event project meeting /from 2023-08-06 14:00 /to 2023-08-06 16:00\" + END;","lastModifiedDate":"2023-11-19"},{"lineNumber":56,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":57,"author":{"gitId":"agqy98"},"content":"        // Assert","lastModifiedDate":"2023-11-19"},{"lineNumber":58,"author":{"gitId":"agqy98"},"content":"        String expectedOutput \u003d \"[E][ ] project meeting (from: Aug 6 2023, 02:00 PM to: 04:00 PM)\";","lastModifiedDate":"2023-11-19"},{"lineNumber":59,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":60,"author":{"gitId":"agqy98"},"content":"        runAndAssertTask(input, expectedOutput);","lastModifiedDate":"2023-11-19"},{"lineNumber":61,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":62,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":63,"author":{"gitId":"agqy98"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":64,"author":{"gitId":"agqy98"},"content":"    void testMark() {","lastModifiedDate":"2023-11-19"},{"lineNumber":65,"author":{"gitId":"agqy98"},"content":"        String input \u003d \"mark 1\" + END;","lastModifiedDate":"2023-11-19"},{"lineNumber":66,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":67,"author":{"gitId":"agqy98"},"content":"        // Assert","lastModifiedDate":"2023-11-19"},{"lineNumber":68,"author":{"gitId":"agqy98"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve mark this task as done:\";","lastModifiedDate":"2023-11-19"},{"lineNumber":69,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-19"},{"lineNumber":70,"author":{"gitId":"agqy98"},"content":"        runAndAssertTask(input, expectedOutput);","lastModifiedDate":"2023-11-19"},{"lineNumber":71,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-19"},{"lineNumber":72,"author":{"gitId":"agqy98"},"content":"    @Test","lastModifiedDate":"2023-11-19"},{"lineNumber":73,"author":{"gitId":"agqy98"},"content":"    void testUnmark() {","lastModifiedDate":"2023-11-19"},{"lineNumber":74,"author":{"gitId":"agqy98"},"content":"        String input \u003d \"unmark 1\" + END;","lastModifiedDate":"2023-11-19"},{"lineNumber":75,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":76,"author":{"gitId":"agqy98"},"content":"        // Assert","lastModifiedDate":"2023-11-14"},{"lineNumber":77,"author":{"gitId":"agqy98"},"content":"        String expectedOutput \u003d \"Got it. I\u0027ve mark this task as undone:\";","lastModifiedDate":"2023-11-19"},{"lineNumber":78,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":79,"author":{"gitId":"agqy98"},"content":"        runAndAssertTask(input, expectedOutput);","lastModifiedDate":"2023-11-14"},{"lineNumber":80,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":81,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":82,"author":{"gitId":"agqy98"},"content":"    private void runAndAssertTask(String input, String expectedOutput) {","lastModifiedDate":"2023-11-14"},{"lineNumber":83,"author":{"gitId":"agqy98"},"content":"        // Save the original System.in and System.out","lastModifiedDate":"2023-11-14"},{"lineNumber":84,"author":{"gitId":"agqy98"},"content":"        InputStream originalIn \u003d System.in;","lastModifiedDate":"2023-11-14"},{"lineNumber":85,"author":{"gitId":"agqy98"},"content":"        PrintStream originalOut \u003d System.out;","lastModifiedDate":"2023-11-14"},{"lineNumber":86,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":87,"author":{"gitId":"agqy98"},"content":"        // Redirect System.out to capture the console output","lastModifiedDate":"2023-11-14"},{"lineNumber":88,"author":{"gitId":"agqy98"},"content":"        ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();","lastModifiedDate":"2023-11-14"},{"lineNumber":89,"author":{"gitId":"agqy98"},"content":"        System.setOut(new PrintStream(outContent));","lastModifiedDate":"2023-11-14"},{"lineNumber":90,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":91,"author":{"gitId":"agqy98"},"content":"        try {","lastModifiedDate":"2023-11-14"},{"lineNumber":92,"author":{"gitId":"agqy98"},"content":"            // Create a new ByteArrayInputStream for the input","lastModifiedDate":"2023-11-14"},{"lineNumber":93,"author":{"gitId":"agqy98"},"content":"            InputStream in \u003d new ByteArrayInputStream(input.getBytes());","lastModifiedDate":"2023-11-14"},{"lineNumber":94,"author":{"gitId":"agqy98"},"content":"            System.setIn(in); // Redirect System.in to provide input","lastModifiedDate":"2023-11-14"},{"lineNumber":95,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":96,"author":{"gitId":"agqy98"},"content":"            // Act","lastModifiedDate":"2023-11-14"},{"lineNumber":97,"author":{"gitId":"agqy98"},"content":"            Duke duke \u003d new Duke();","lastModifiedDate":"2023-11-14"},{"lineNumber":98,"author":{"gitId":"agqy98"},"content":"            duke.run();","lastModifiedDate":"2023-11-14"},{"lineNumber":99,"author":{"gitId":"agqy98"},"content":"        } finally {","lastModifiedDate":"2023-11-14"},{"lineNumber":100,"author":{"gitId":"agqy98"},"content":"            // Reset System.in and System.out to restore normal behavior","lastModifiedDate":"2023-11-14"},{"lineNumber":101,"author":{"gitId":"agqy98"},"content":"            System.setIn(originalIn);","lastModifiedDate":"2023-11-14"},{"lineNumber":102,"author":{"gitId":"agqy98"},"content":"            System.setOut(originalOut);","lastModifiedDate":"2023-11-14"},{"lineNumber":103,"author":{"gitId":"agqy98"},"content":"        }","lastModifiedDate":"2023-11-14"},{"lineNumber":104,"author":{"gitId":"agqy98"},"content":"","lastModifiedDate":"2023-11-14"},{"lineNumber":105,"author":{"gitId":"agqy98"},"content":"        // Assert","lastModifiedDate":"2023-11-14"},{"lineNumber":106,"author":{"gitId":"agqy98"},"content":"        assertTrue(outContent.toString().contains(expectedOutput.trim()));","lastModifiedDate":"2023-11-14"},{"lineNumber":107,"author":{"gitId":"agqy98"},"content":"    }","lastModifiedDate":"2023-11-14"},{"lineNumber":108,"author":{"gitId":"agqy98"},"content":"}","lastModifiedDate":"2023-11-14"}],"authorContributionMap":{"agqy98":108}}]
