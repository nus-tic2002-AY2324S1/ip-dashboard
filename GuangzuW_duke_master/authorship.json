[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"# archive.DukeOld project template","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it.","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"## Setting up in Intellij","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Prerequisites: JDK 11, update Intellij to the most recent version.","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project first)","lastModifiedDate":"2021-01-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"1. Open the project into Intellij as follows:","lastModifiedDate":"2021-01-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"   1. Click `Open`.","lastModifiedDate":"2021-01-17"},{"lineNumber":12,"author":{"gitId":"-"},"content":"   1. Select the project directory, and click `OK`.","lastModifiedDate":"2021-01-17"},{"lineNumber":13,"author":{"gitId":"-"},"content":"   1. If there are any further prompts, accept the defaults.","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"1. Configure the project to use **JDK 11** (not other versions) as explained in [here](https://www.jetbrains.com/help/idea/sdk.html#set-up-jdk).\u003cbr\u003e","lastModifiedDate":"2021-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"   In the same dialog, set the **Project language level** field to the `SDK default` option.","lastModifiedDate":"2021-07-29"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"3. After that, locate the `src/main/java/archive.DukeOld.java` file, right-click it, and choose `Run archive.DukeOld.main()` (if the code editor is showing compile errors, try restarting the IDE). If the setup is correct, you should see something like the below as the output:","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"   Hello from","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    ____        _        ","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"   |  _ \\ _   _| | _____ ","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"   | | | | | | | |/ / _ \\","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"   | |_| | |_| |   \u003c  __/","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"   |____/ \\__,_|_|\\_\\___|","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"## Feature","lastModifiedDate":"2023-09-10"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"### Level 0","lastModifiedDate":"2023-09-03"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"1, Fork and Clone repository, implement greeting and set name function.","lastModifiedDate":"2023-09-03"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"### Level 1","lastModifiedDate":"2023-09-03"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"1, Add printService, get command from terminal and print corresponding message.","lastModifiedDate":"2023-09-03"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"### Level 2","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"1, add \"add task\" and \"print task\" function","lastModifiedDate":"2023-09-03"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"### Level 3","lastModifiedDate":"2023-09-10"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"1, add Mark as Done and mark as not done function. ","lastModifiedDate":"2023-09-10"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"2, Use the input/output redirection technique to semi-automate the testing of archive.DukeOld. change the .gitignore file, include text-ui-test folder in the remote repo","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"### Level 4","lastModifiedDate":"2023-09-19"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"1, create archive.Todos, archive.Deadlines and archive.Events class, and Modify archive.DukeOld class to meet level 4 requirements","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"### Level 5","lastModifiedDate":"2023-09-25"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"1,Level 5. Handle Errors,deal with errors such as incorrect inputs entered by the user","lastModifiedDate":"2023-09-25"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"### Level 6","lastModifiedDate":"2023-10-10"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"1, Add support for deleting tasks from the list and Use Java enum to create a archive.TaskType Class","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"### Level 7","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"1, implement Level-7 Save, A-MoreOOP, A-Packages","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":29,"-":22}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"T | 1 | borrow  book","lastModifiedDate":"2023-10-18"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"D | 0 | return book (by:  Sunday)","lastModifiedDate":"2023-10-18"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"E | 0 | project meeting (from: Mon 2pm to: 4pm)","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"GuangzuW":3}},{"path":"data/dukeOut.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"T | 0 | todo borrow book","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"D | 1 | return book (by: Sunday)","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"E | 1 | orientation week (from: Oct 04 2019 to: Oct 11 2019)","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"D | 0 | return book (by: Dec 02 2019, 6pm)","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"E | 0 | orientation week (from: Oct 04 2019 to: Oct 11 2019)","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"D | 0 | return book (by: Dec 02 2019, 6pm)","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"D | 0 | return book (by: Sunday)","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"T | 0 | todo borrow book","lastModifiedDate":"2023-10-30"}],"authorContributionMap":{"GuangzuW":8}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"todo borrow book","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"deadline return book /by Sunday","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"event project meeting /from Mon 2pm /to 4pm","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"deadline do homework /by no idea :-p","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"event orientation week /from 4/10/2019 /to 11/10/2019","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"deadline return book /by 2/12/2019 1800","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"delete 3","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"mark 2","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":8}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"import duke.command.Command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-18"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":" * Duke is the main class for the Duke program. It manages the initialization of UI, Storage, and TaskList, and handles the core program execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Duke {","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"    private Storage storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"    private UI ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"     * Constructs a Duke instance with the specified file path. It initializes the user interface (UI), storage, and task list. If the file exists, it loads existing tasks; otherwise, it creates a new task list.","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"     * @param filePath The file path for storing and retrieving tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"    public Duke(String filePath) {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"        ui \u003d new UI();","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"        storage \u003d new Storage(filePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"        try {","lastModifiedDate":"2023-10-10"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"            taskList \u003d new TaskList(storage.load().getTaskList());","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"        } catch (DukeException e) {","lastModifiedDate":"2023-10-10"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"            UI.showLoadingError();","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"            taskList \u003d new TaskList();","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"     * The main run loop of the Duke program. It displays a welcome message and continues to accept and process user commands until the exit command is received.","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"    public void run() {","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"        UI.showWelcome();","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"        boolean isExit \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"        while (!isExit) {","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"            try {","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"                String fullCommand \u003d UI.readCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"                UI.showLine(); // show the divider line (\"_______\")","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"                Command c \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"                c.execute(taskList, ui, storage);","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"                isExit \u003d c.isExit();","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"            } catch (DukeException | IOException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"                UI.showError(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"            } finally {","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"                UI.showLine();","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"            }","lastModifiedDate":"2023-09-03"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-09-03"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"GuangzuW"},"content":"        new Duke(\"data/tasks.txt\").run();","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2023-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"},{"lineNumber":62,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":63,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-18"}],"authorContributionMap":{"GuangzuW":59,"-":4}},{"path":"src/main/java/duke/Utils.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke;","lastModifiedDate":"2023-10-29"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.task.Deadlines;","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.task.Events;","lastModifiedDate":"2023-10-29"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import duke.task.Todos;","lastModifiedDate":"2023-10-29"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2023-10-29"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"public class Utils {","lastModifiedDate":"2023-10-29"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"    public static final String todoPattern \u003d \"^todo (.+)$\";","lastModifiedDate":"2023-10-29"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"    public static final String deadlinePattern \u003d \"^deadline (.+) /by (.+)$\";","lastModifiedDate":"2023-10-29"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"    public static final String eventPattern \u003d  \"^event (.+) /from (.+) /to (.+)$\";","lastModifiedDate":"2023-10-29"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"    static Pattern todoRegex \u003d Pattern.compile(todoPattern);","lastModifiedDate":"2023-10-29"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"    static Pattern deadlineRegex \u003d Pattern.compile(deadlinePattern);","lastModifiedDate":"2023-10-29"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"    static Pattern eventRegex \u003d Pattern.compile(eventPattern);","lastModifiedDate":"2023-10-29"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"    public static final String TIME_OF_BEGINNING_OF_AN_DAY \u003d \" 0000\";","lastModifiedDate":"2023-10-29"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"     * Create a new Todo task base on the provided command.","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"     * @param fullCommand full user command for creating a Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"     * @return A new Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"     * @throws DukeException if the command format is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"    public static Todos newTodoTask(String fullCommand) throws DukeException {","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"        Matcher todoMatcher \u003d todoRegex.matcher(fullCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"        if(!todoMatcher.matches()){","lastModifiedDate":"2023-10-29"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"            throw new DukeException(\"Invalid command, Please follow todo task command format\");","lastModifiedDate":"2023-10-29"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"        return new Todos(todoMatcher.group(0));","lastModifiedDate":"2023-10-29"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"     * Create a new Deadline task base on the provided command.","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"     * @param fullCommand full user command for creating a Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"     * @return A new Deadline task.","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"     * @throws DukeException If the command format is invalid.","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"    public static Deadlines newDeadlineTask(String fullCommand) throws DukeException {","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"        Matcher deadlineMatcher \u003d deadlineRegex.matcher(fullCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"        if(!deadlineMatcher.matches()){","lastModifiedDate":"2023-10-29"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"            throw new DukeException(\"Invalid command, Please follow deadline task command format\");","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"        String desc \u003d deadlineMatcher.group(1) + \" (by: \" +deadlineMatcher.group(2) + \")\";","lastModifiedDate":"2023-10-29"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"        Deadlines newDeadlineTask \u003d new Deadlines(desc);","lastModifiedDate":"2023-10-29"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"        LocalDateTime deadline \u003d Utils.parseDateTime(deadlineMatcher.group(2).trim());","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"        if (deadline !\u003d null){","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"            String newDesc \u003d deadlineMatcher.group(1) + \" (by: \" + deadline.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy, ha\")) + \")\";","lastModifiedDate":"2023-10-29"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"            return new Deadlines(newDesc, deadline);","lastModifiedDate":"2023-10-29"},{"lineNumber":58,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":59,"author":{"gitId":"GuangzuW"},"content":"        return new Deadlines(desc);","lastModifiedDate":"2023-10-29"},{"lineNumber":60,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":61,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"GuangzuW"},"content":"     * Create a new Event task base on provided command.","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"GuangzuW"},"content":"     * @param fullCommand full user command for creating a Event task","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"GuangzuW"},"content":"     * @return A new Event task","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"GuangzuW"},"content":"     * @throws DukeException if the command format is invalid","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"GuangzuW"},"content":"    public static Events newEventTask(String fullCommand) throws DukeException {","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"GuangzuW"},"content":"        Matcher eventMatcher \u003d eventRegex.matcher(fullCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"GuangzuW"},"content":"        if(!eventMatcher.matches()){","lastModifiedDate":"2023-10-29"},{"lineNumber":71,"author":{"gitId":"GuangzuW"},"content":"            throw new DukeException(\"Invalid command, Please follow event task command format\");","lastModifiedDate":"2023-10-29"},{"lineNumber":72,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":73,"author":{"gitId":"GuangzuW"},"content":"        String desc \u003d eventMatcher.group(1) + \" (from: \" + eventMatcher.group(2) + \" to: \" + eventMatcher.group(3) + \")\";","lastModifiedDate":"2023-10-29"},{"lineNumber":74,"author":{"gitId":"GuangzuW"},"content":"        if (isDate(eventMatcher.group(2).trim()) \u0026\u0026 isDate(eventMatcher.group(3).trim())){","lastModifiedDate":"2023-10-29"},{"lineNumber":75,"author":{"gitId":"GuangzuW"},"content":"            String group2String \u003d eventMatcher.group(2).trim() + TIME_OF_BEGINNING_OF_AN_DAY;  //if the string is date format, append beginning time of a day to it","lastModifiedDate":"2023-10-29"},{"lineNumber":76,"author":{"gitId":"GuangzuW"},"content":"            String group3String \u003d eventMatcher.group(3).trim() + TIME_OF_BEGINNING_OF_AN_DAY;","lastModifiedDate":"2023-10-29"},{"lineNumber":77,"author":{"gitId":"GuangzuW"},"content":"            LocalDateTime start \u003d Utils.parseDateTime(group2String);","lastModifiedDate":"2023-10-29"},{"lineNumber":78,"author":{"gitId":"GuangzuW"},"content":"            LocalDateTime end \u003d Utils.parseDateTime(group3String);","lastModifiedDate":"2023-10-29"},{"lineNumber":79,"author":{"gitId":"GuangzuW"},"content":"            if (start !\u003d null \u0026\u0026 end !\u003d null ){","lastModifiedDate":"2023-10-29"},{"lineNumber":80,"author":{"gitId":"GuangzuW"},"content":"                String newDesc \u003d eventMatcher.group(1) + \" (from: \" + start.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \" + end.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";","lastModifiedDate":"2023-10-29"},{"lineNumber":81,"author":{"gitId":"GuangzuW"},"content":"                return new Events(newDesc, start, end);","lastModifiedDate":"2023-10-29"},{"lineNumber":82,"author":{"gitId":"GuangzuW"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":83,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":84,"author":{"gitId":"GuangzuW"},"content":"        return new Events(desc);","lastModifiedDate":"2023-10-29"},{"lineNumber":85,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":86,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":87,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":88,"author":{"gitId":"GuangzuW"},"content":"     * Parse a date and time string to a LocalDateTime object.","lastModifiedDate":"2023-10-30"},{"lineNumber":89,"author":{"gitId":"GuangzuW"},"content":"     * @param dateTimeString date and time string to be parsed.","lastModifiedDate":"2023-10-30"},{"lineNumber":90,"author":{"gitId":"GuangzuW"},"content":"     * @return A LocalDateTime object representing the parsed date and time.","lastModifiedDate":"2023-10-30"},{"lineNumber":91,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":92,"author":{"gitId":"GuangzuW"},"content":"    public static LocalDateTime parseDateTime(String dateTimeString) {","lastModifiedDate":"2023-10-29"},{"lineNumber":93,"author":{"gitId":"GuangzuW"},"content":"        String[]dateTimePatterns \u003d {","lastModifiedDate":"2023-10-29"},{"lineNumber":94,"author":{"gitId":"GuangzuW"},"content":"                \"dd/MM/yyyy HHmm\",","lastModifiedDate":"2023-10-29"},{"lineNumber":95,"author":{"gitId":"GuangzuW"},"content":"                \"d/MM/yyyy HHmm\",","lastModifiedDate":"2023-10-29"},{"lineNumber":96,"author":{"gitId":"GuangzuW"},"content":"                \"d/M/yyyy HHmm\",","lastModifiedDate":"2023-10-29"},{"lineNumber":97,"author":{"gitId":"GuangzuW"},"content":"        };","lastModifiedDate":"2023-10-29"},{"lineNumber":98,"author":{"gitId":"GuangzuW"},"content":"        for (String parttern : dateTimePatterns) {","lastModifiedDate":"2023-10-29"},{"lineNumber":99,"author":{"gitId":"GuangzuW"},"content":"            LocalDateTime dataTime \u003d dateTimeParser(dateTimeString, parttern);","lastModifiedDate":"2023-10-29"},{"lineNumber":100,"author":{"gitId":"GuangzuW"},"content":"            if (dataTime !\u003d null) {","lastModifiedDate":"2023-10-29"},{"lineNumber":101,"author":{"gitId":"GuangzuW"},"content":"                return dataTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":102,"author":{"gitId":"GuangzuW"},"content":"            }","lastModifiedDate":"2023-10-29"},{"lineNumber":103,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":104,"author":{"gitId":"GuangzuW"},"content":"        return null;","lastModifiedDate":"2023-10-29"},{"lineNumber":105,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":106,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":107,"author":{"gitId":"GuangzuW"},"content":"    public static LocalDateTime dateTimeParser(String dateTimeString, String parttern){","lastModifiedDate":"2023-10-29"},{"lineNumber":108,"author":{"gitId":"GuangzuW"},"content":"        try {","lastModifiedDate":"2023-10-29"},{"lineNumber":109,"author":{"gitId":"GuangzuW"},"content":"            DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(parttern);","lastModifiedDate":"2023-10-29"},{"lineNumber":110,"author":{"gitId":"GuangzuW"},"content":"            return LocalDateTime.parse(dateTimeString,dateTimeFormatter);","lastModifiedDate":"2023-10-29"},{"lineNumber":111,"author":{"gitId":"GuangzuW"},"content":"        }catch (DateTimeParseException e){","lastModifiedDate":"2023-10-29"},{"lineNumber":112,"author":{"gitId":"GuangzuW"},"content":"            return null;","lastModifiedDate":"2023-10-29"},{"lineNumber":113,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-29"},{"lineNumber":114,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":115,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":116,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":117,"author":{"gitId":"GuangzuW"},"content":"     * Checks if a string is a valid date format (dd/MM/yyyy).","lastModifiedDate":"2023-10-30"},{"lineNumber":118,"author":{"gitId":"GuangzuW"},"content":"     * @param dateString the string to be checked","lastModifiedDate":"2023-10-30"},{"lineNumber":119,"author":{"gitId":"GuangzuW"},"content":"     * @return true if the string is a valid date format; otherwise, false","lastModifiedDate":"2023-10-30"},{"lineNumber":120,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":121,"author":{"gitId":"GuangzuW"},"content":"    public static boolean isDate(String dateString){","lastModifiedDate":"2023-10-29"},{"lineNumber":122,"author":{"gitId":"GuangzuW"},"content":"        Pattern datePattern \u003d Pattern.compile(\"^\\\\d{1,2}/\\\\d{1,2}/\\\\d{4}$\");","lastModifiedDate":"2023-10-29"},{"lineNumber":123,"author":{"gitId":"GuangzuW"},"content":"        Matcher matcher \u003d datePattern.matcher(dateString);","lastModifiedDate":"2023-10-29"},{"lineNumber":124,"author":{"gitId":"GuangzuW"},"content":"        return matcher.matches();","lastModifiedDate":"2023-10-29"},{"lineNumber":125,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":126,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":127,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-29"}],"authorContributionMap":{"GuangzuW":127}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"public class ByeCommand extends Command{","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"        UI.showBye();","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"     * @return Always returns true, as bye a task to exit the application.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"        return true;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":22}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":" * An abstract class representing a command that can be executed.","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"public abstract class Command {","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"     * Execute the command with access to the tasklist, UI, and storage.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"     * @param ui The user interface for input and output.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"     * @param storage The storage to read and write data.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"     * @throws DukeException If an error occurs during command execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"     * @throws IOException If an IO error occurs during storage operation.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"    public abstract void execute(TaskList taskList, UI ui, Storage storage) throws DukeException, IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"     * Indicates the command should exit the application","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"     * @return true if the command should exit , false otherwise","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"    public abstract boolean isExit();","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":29}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":" * Represent a command to delete a task from the task list.","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"    private int index;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"     * Creates a new DeleteCommand with the specified task index.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"     * @param index The index of the task to be deleted.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"    public DeleteCommand(int index){","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"     * Executes the delete command, removing the task from the task list and displaying a message.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"     * @param taskList The task list to operate on.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"     * @param ui       The user interface for input and output.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"     * @param storage  The storage to read and write data.","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"        try{","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"            Task deletedTask \u003d taskList.deleteTask(index);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"            UI.showTaskDeleted(deletedTask, taskList);","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"            UI.showError(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"     * Indicates if this command should exit the application.","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"     * @return false, as this command does not trigger an application exit.","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"        return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":53}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":" * Represents a command to list all the  tasks from the task list.","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"public class ListCommand extends Command{","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"     * Executes the list command, displaying all tasks in the task list along with their statuses.","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"     * @param taskList The task list to retrieve tasks from.","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"     * @param ui       The user interface for input and output.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"     * @param storage  The storage to read and write data (not used in this command).","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"        if (!taskList.getTaskList().isEmpty()){","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"            int idx \u003d 1;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"            UI.showMessage(\"Here are the tasks in your list: \");","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"            for (Task task :taskList.getTaskList()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"                UI.showMessage(idx + \". \"  + task.getStatusIcon() + \" \" + task.getDescription());","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"                idx++;","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"        }else{","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"            UI.showMessage(\"list\");","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"     * Indicates if this command should exit the application.","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"     * @return false, as this command does not trigger an application exit.","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"        return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":43}},{"path":"src/main/java/duke/command/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":" * Represents a command to mark a task as done by its index.","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"    private int index;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"     * Constructs a MarkCommand with the given index.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"     * @param index The index of the task to mark as done.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"    public MarkCommand(int index){","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"     * Executes the mark command, marking a specified task as done and displaying a confirmation message.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"     * @param ui       The user interface for input and output.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"     * @param storage  The storage for reading and writing data (not used in this command).","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"        try{","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"            Task markAsDOneTask \u003d taskList.markTaskAsDone(index);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"            UI.showTaskMarkedAsDone(markAsDOneTask);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"            UI.showError(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"     * @return Always returns false, as marking a task as done does not exit the application.","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"        return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":53}},{"path":"src/main/java/duke/command/NewTaskCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.Utils;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import duke.task.*;","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":" * Represent a command to create and add a new task to the task list.","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"public class NewTaskCommand extends Command{","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"    String fullCommand;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"     * Constructs a NewTaskCommand with the given full command.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"     * @param fullCommand The full command input by the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"    public NewTaskCommand(String fullCommand) { this.fullCommand \u003dfullCommand; }","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"     * Executes the new task command, parsing the full command and creating a new task based on its type","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"     * (Todo, Deadline, or Event). The new task is then added to the task list and saved to storage.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"     * @param ui       The user interface for input and output.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"     * @param storage  The storage for reading and writing data.","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"     * @throws DukeException If there is an issue with the command or task creation.","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"     * @throws IOException    If there is an issue with saving the task list.","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) throws DukeException, IOException {","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"        Task newTask \u003d null;","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"        if(fullCommand.toLowerCase().contains(\"todo\")){","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"            newTask \u003d Utils.newTodoTask(fullCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"        } else if (fullCommand.toLowerCase().contains(\"deadline\")) {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"            newTask \u003d Utils.newDeadlineTask(fullCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"        } else if (fullCommand.toLowerCase().contains(\"event\")) {","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"            newTask \u003d Utils.newEventTask(fullCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"            UI.showError(\"Invalid command: \" + fullCommand);","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"            return;","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"        taskList.addTask(newTask);","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"        storage.save(taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"        UI.showNewTask(newTask, taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"     * @return Always returns false, as creating a new task does not exit the application.","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"GuangzuW"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"GuangzuW"},"content":"        return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":63}},{"path":"src/main/java/duke/command/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.command;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"     * Represents a command to unmark a task as not done in the task list.","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"public class UnmarkCommand extends Command{","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"    private int index;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"        /**","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"         * Constructs an UnmarkCommand with the given index.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"         *","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"         * @param index The index of the task to be unmarked.","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"         */","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"        public UnmarkCommand(int index){","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"        this.index \u003d index;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"     * Executes the unmark command, marking the specified task as not done in the task list and updating the storage.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"     * @param taskList The task list containing the tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"     * @param ui       The user interface for input and output.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"     * @param storage  The storage for reading and writing data.","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"    public void execute(TaskList taskList, UI ui, Storage storage) {","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"        try{","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"            Task unmarkedTask \u003d taskList.unmarkTaskAsNotDone(index);","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"            storage.save(taskList);","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"            UI.showTaskUnmarkedAsNotDone(unmarkedTask);","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"        } catch (DukeException | IOException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"           UI.showError(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"     * Indicates whether this command is an exit command.","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"     * @return Always returns false, as unmarking a task does not exit the application.","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"    public boolean isExit() {","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"        return false;","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":53}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.exception;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-10"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"public class DukeException extends Exception{","lastModifiedDate":"2023-09-25"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"    public DukeException() {","lastModifiedDate":"2023-09-25"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"        super();","lastModifiedDate":"2023-09-25"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"    public DukeException(String message) {","lastModifiedDate":"2023-09-25"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"        super(message);","lastModifiedDate":"2023-09-25"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-25"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"    public DukeException(String message, Throwable cause) {","lastModifiedDate":"2023-09-25"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"        super(message, cause);","lastModifiedDate":"2023-09-25"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-25"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-09-25"}],"authorContributionMap":{"GuangzuW":15}},{"path":"src/main/java/duke/parser/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.command.*;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":" * The `Parser` class is responsible for parsing user input and converting it into executable commands.","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":" * It determines the type of command and creates the appropriate `Command` object for execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"public class Parser {","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"     * Parses the user\u0027s input and returns the corresponding `Command` object.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"     * @param fullCommand The full command entered by the user.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"     * @return A concrete `Command` object based on the user\u0027s input.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"     * @throws DukeException If an error occurs during command parsing or execution.","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"    public static Command parse (String fullCommand) throws DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"        String[] parts \u003d fullCommand.split(\" \");","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"        String command \u003d parts[0].toLowerCase();","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"        switch (command){","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"            case \"list\":","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"                return new ListCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"            case \"bye\":","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"                return new ByeCommand();","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"            case \"delete\":","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"                try{","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"                    int index \u003d Integer.parseInt(parts[1])-1;","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"                    return new DeleteCommand(index);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"                } catch (Exception e){","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"                    throw new DukeException(\"OOPS!!! Please input item number you want to delete\");","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"            case \"mark\":","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"                try{","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"                    int index \u003d Integer.parseInt(parts[1])-1;","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"                    return new MarkCommand(index);","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"                } catch (Exception e){","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"                    throw new DukeException(\"OOPS!!! Please input item number you want to mark\");","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"            case \"unmark\":","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"                try{","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"                    int index \u003d Integer.parseInt(parts[1])-1;","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"                    return new UnmarkCommand(index);","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"                    throw new DukeException(\"OOPS!!! Please input item number you want to unmark\");","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"            case \"todo\":","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"            case \"deadline\":","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"            case \"event\":","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"                try{","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"                    return new NewTaskCommand(fullCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"                } catch (Exception e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"                    throw new DukeException(\"OOPS!!! Please input valid todo task command\");","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"GuangzuW"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"GuangzuW"},"content":"            default:","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"GuangzuW"},"content":"                throw new DukeException(\"OOPS!!! Please input valid  command\");","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":63}},{"path":"src/main/java/duke/storage/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.command.Command;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.parser.Parser;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"import duke.ui.UI;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"import java.io.File;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"import java.io.FileWriter;","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":" * The `Storage` class is responsible for loading and saving task data from/to a file.","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"public class Storage {","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"    private static Storage storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"    private TaskList taskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"    private static UI ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"    public static String filePath;","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"     * Constructs a `Storage` object with the specified file path.","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"     * @param filePath The file path for reading and writing task data.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"    public Storage(String filePath){","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"     * Loads tasks from the data file and populates a `TaskList` object.","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"     * @return A `TaskList` containing tasks loaded from the data file.","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"     * @throws DukeException If there is an issue loading task data.","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"    public static TaskList load() throws DukeException {","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"        TaskList taskList \u003d new TaskList();","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"        try{","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"            File file \u003d new File(filePath);","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"            Scanner s \u003d new Scanner(file);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"            while (s.hasNextLine()){","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"                UI.showLine();","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"                String fullCommand \u003d s.nextLine().trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"                UI.showMessage(fullCommand);","lastModifiedDate":"2023-10-29"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"                UI.showLine();","lastModifiedDate":"2023-10-29"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"                Command command \u003d Parser.parse(fullCommand);","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"                command.execute(taskList, ui, storage);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"            s.close();","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"            throw new DukeException(\"Task data file not found.\" + e.getMessage());","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"GuangzuW"},"content":"        return taskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"GuangzuW"},"content":"     * Saves tasks from a `TaskList` to the data file.","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"GuangzuW"},"content":"     * @param taskList The `TaskList` containing tasks to be saved.","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"GuangzuW"},"content":"     * @throws DukeException If there is an issue saving task data.","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"GuangzuW"},"content":"     * @throws IOException If an IO error occurs during the saving process.","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"GuangzuW"},"content":"    public static void save(TaskList taskList) throws DukeException, IOException {","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"GuangzuW"},"content":"        String dukeOutPath \u003d \"data/dukeOut.txt\";","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"GuangzuW"},"content":"        File file \u003d new File(dukeOutPath);","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"GuangzuW"},"content":"        //  if file not exist, create it and its parent folder.","lastModifiedDate":"2023-10-30"},{"lineNumber":73,"author":{"gitId":"GuangzuW"},"content":"        if (!file.exists()){","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"GuangzuW"},"content":"            try{","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"GuangzuW"},"content":"                String folderName\u003ddukeOutPath.split(\"/\")[0];","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"GuangzuW"},"content":"                File folder \u003d new File(folderName);","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"GuangzuW"},"content":"                if (!folder.exists()){","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"GuangzuW"},"content":"                    folder.mkdirs();","lastModifiedDate":"2023-10-24"},{"lineNumber":79,"author":{"gitId":"GuangzuW"},"content":"                }","lastModifiedDate":"2023-10-24"},{"lineNumber":80,"author":{"gitId":"GuangzuW"},"content":"                file.createNewFile();","lastModifiedDate":"2023-10-24"},{"lineNumber":81,"author":{"gitId":"GuangzuW"},"content":"            }catch (IOException e) {","lastModifiedDate":"2023-10-24"},{"lineNumber":82,"author":{"gitId":"GuangzuW"},"content":"                throw new DukeException(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":83,"author":{"gitId":"GuangzuW"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":84,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":85,"author":{"gitId":"GuangzuW"},"content":"        try{","lastModifiedDate":"2023-10-24"},{"lineNumber":86,"author":{"gitId":"GuangzuW"},"content":"            FileWriter fw \u003d new FileWriter(file,false);","lastModifiedDate":"2023-10-24"},{"lineNumber":87,"author":{"gitId":"GuangzuW"},"content":"            for(Task task : taskList.getTaskList()){","lastModifiedDate":"2023-10-24"},{"lineNumber":88,"author":{"gitId":"GuangzuW"},"content":"                String taskType \u003d String.valueOf(task.getTaskType());","lastModifiedDate":"2023-10-24"},{"lineNumber":89,"author":{"gitId":"GuangzuW"},"content":"                String status \u003d String.valueOf(task.getStatus()? 1:0);","lastModifiedDate":"2023-10-24"},{"lineNumber":90,"author":{"gitId":"GuangzuW"},"content":"                String description \u003d task.getDescription();","lastModifiedDate":"2023-10-24"},{"lineNumber":91,"author":{"gitId":"GuangzuW"},"content":"                String text \u003d taskType + \" | \" + status + \" | \"+description + \"\\n\";","lastModifiedDate":"2023-10-24"},{"lineNumber":92,"author":{"gitId":"GuangzuW"},"content":"                fw.write(text);","lastModifiedDate":"2023-10-24"},{"lineNumber":93,"author":{"gitId":"GuangzuW"},"content":"            }","lastModifiedDate":"2023-10-24"},{"lineNumber":94,"author":{"gitId":"GuangzuW"},"content":"            fw.flush();","lastModifiedDate":"2023-10-24"},{"lineNumber":95,"author":{"gitId":"GuangzuW"},"content":"            fw.close();","lastModifiedDate":"2023-10-24"},{"lineNumber":96,"author":{"gitId":"GuangzuW"},"content":"        }catch (IOException e){","lastModifiedDate":"2023-10-24"},{"lineNumber":97,"author":{"gitId":"GuangzuW"},"content":"            throw new DukeException(e.getMessage());","lastModifiedDate":"2023-10-24"},{"lineNumber":98,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":99,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":100,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":100}},{"path":"src/main/java/duke/task/Deadlines.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":" * The `Deadlines` class represents a task with a specific deadline.","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"public class Deadlines extends Task {","lastModifiedDate":"2023-09-19"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"    private final TaskType taskType \u003d TaskType.D;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"    private LocalDateTime deadline;","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"     * Constructs a `Deadlines` object with the specified description.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"    public Deadlines(String description) {","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"        super(description);","lastModifiedDate":"2023-09-19"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"     * Constructs a `Deadlines` object with the specified description and deadline.","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"     * @param description The description of the deadline task.","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"     * @param deadline    The deadline of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"    public Deadlines(String description, LocalDateTime deadline){","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"        super(description);","lastModifiedDate":"2023-10-29"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"     * Gets the type of the task, which is \u0027D\u0027 for Deadlines.","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"     * @return The task type.","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-10-10"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"        return taskType;","lastModifiedDate":"2023-10-10"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"     * Gets the deadline of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"     * @return The deadline of the task as a LocalDateTime.","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"    public LocalDateTime getDeadline(){ return deadline; }","lastModifiedDate":"2023-10-29"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"     * Sets the deadline of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"     * @param deadline The new deadline to set.","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"    public void setDeadline(LocalDateTime deadline){ this.deadline \u003d deadline; }","lastModifiedDate":"2023-10-29"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":59,"author":{"gitId":"GuangzuW"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-19"},{"lineNumber":60,"author":{"gitId":"GuangzuW"},"content":"        return \"[\"+ taskType +\"]\" + super.getStatusIcon();","lastModifiedDate":"2023-10-10"},{"lineNumber":61,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":62,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":63,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"GuangzuW":63}},{"path":"src/main/java/duke/task/Events.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2023-10-29"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":" * The `Events` class represents a task that has a starting and ending date and time.","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"public class Events extends Task {","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"    private final TaskType taskType \u003d TaskType.E;","lastModifiedDate":"2023-10-29"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"    private LocalDateTime eventStartAt;","lastModifiedDate":"2023-10-29"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"    private LocalDateTime eventEndAt;","lastModifiedDate":"2023-10-29"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"     * Constructs an `Events` object with the specified description.","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"     * @param description The description of the event task.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"    public Events(String description){","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"        super(description);","lastModifiedDate":"2023-09-19"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"     * Constructs an `Events` object with the specified description, start date and time, and end date and time.","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"     * @param description   The description of the event task.","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"     * @param start         The starting date and time of the event.","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"     * @param end           The ending date and time of the event.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"    public Events(String description, LocalDateTime start, LocalDateTime end){","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"        super(description);","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"        this.eventStartAt \u003d start;","lastModifiedDate":"2023-10-29"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"        this.eventEndAt \u003d end;","lastModifiedDate":"2023-10-29"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-29"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"     * Gets the type of the task, which is \u0027E\u0027 for Events.","lastModifiedDate":"2023-10-30"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"     * @return The task type.","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"    public TaskType getTaskType() { return taskType; }","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"     * Gets the starting date and time of the event.","lastModifiedDate":"2023-10-30"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"     * @return The starting date and time as a LocalDateTime.","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"    public LocalDateTime getEventStartAt(){ return eventStartAt; }","lastModifiedDate":"2023-10-29"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"     * Sets the starting date and time of the event.","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"     * @param start The new starting date and time to set.","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"    public void setEventStartAt(LocalDateTime start){ this.eventStartAt \u003d start; }","lastModifiedDate":"2023-10-29"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"     * Gets the ending date and time of the event.","lastModifiedDate":"2023-10-30"},{"lineNumber":58,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"GuangzuW"},"content":"     * @return The ending date and time as a LocalDateTime.","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"GuangzuW"},"content":"    public LocalDateTime getEventEndAt(){ return eventEndAt; }","lastModifiedDate":"2023-10-29"},{"lineNumber":62,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"GuangzuW"},"content":"     * Sets the ending date and time of the event.","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"GuangzuW"},"content":"     * @param end The new ending date and time to set.","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"GuangzuW"},"content":"    public void setEventEndAt(LocalDateTime end){ this.eventEndAt \u003d end; }","lastModifiedDate":"2023-10-29"},{"lineNumber":69,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":70,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":72,"author":{"gitId":"GuangzuW"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-19"},{"lineNumber":73,"author":{"gitId":"GuangzuW"},"content":"        return \"[\" + taskType + \"]\" + super.getStatusIcon();","lastModifiedDate":"2023-10-10"},{"lineNumber":74,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":75,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"GuangzuW":75}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":" * This abstract class represents a task and defines common properties and methods for all tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":" * Subclasses should implement specific task types like Todo, Deadline, and Event.","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"public abstract class Task {","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"    protected String description;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"    protected boolean isDone;","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"     * Constructs a task with the given description.","lastModifiedDate":"2023-10-30"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"     * @param description The description of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"    public Task(String description) {","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"        this.isDone \u003d false;","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"     * Sets the description of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"     * @param description The new description of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"    public void setDescription(String Desc){ this.description \u003d Desc; }","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"     * Gets the description of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"     * @return The description of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"    public String getDescription(){ return this.description; }","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"     * Checks if the task is marked as done.","lastModifiedDate":"2023-10-30"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"     * @return true if the task is done, false if it\u0027s not.","lastModifiedDate":"2023-10-30"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"    public boolean getStatus(){","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"        return isDone;","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"     * Marks the task as done.","lastModifiedDate":"2023-10-30"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"    public void markAsDone(){ this.isDone \u003d true; }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"     * Marks the task as not done.","lastModifiedDate":"2023-10-30"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"    public void unmarkDone(){ this.isDone \u003d false; }","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":59,"author":{"gitId":"GuangzuW"},"content":"     * Gets an icon representing the status of the task.","lastModifiedDate":"2023-10-30"},{"lineNumber":60,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":61,"author":{"gitId":"GuangzuW"},"content":"     * @return The status icon, which is \"[X]\" for done tasks and \"[ ]\" for undone tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":62,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":63,"author":{"gitId":"GuangzuW"},"content":"    public String getStatusIcon() {  return isDone? \"[X]\" : \"[ ]\"; }","lastModifiedDate":"2023-10-30"},{"lineNumber":64,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":65,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":66,"author":{"gitId":"GuangzuW"},"content":"     * Gets the type of the task, such as \u0027T\u0027 for Todo, \u0027D\u0027 for Deadline, or \u0027E\u0027 for Event.","lastModifiedDate":"2023-10-30"},{"lineNumber":67,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":68,"author":{"gitId":"GuangzuW"},"content":"     * @return The task type.","lastModifiedDate":"2023-10-30"},{"lineNumber":69,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":70,"author":{"gitId":"GuangzuW"},"content":"    public abstract TaskType getTaskType();","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":71}},{"path":"src/main/java/duke/task/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.exception.DukeException;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"public class TaskList {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"    private ArrayList\u003cTask\u003e taskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"    public TaskList(){","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"        taskList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"    public TaskList(ArrayList\u003cTask\u003e taskList){","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"        this.taskList \u003d taskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"    public ArrayList\u003cTask\u003e getTaskList(){","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"        return taskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"    public void addTask(Task task){","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"        taskList.add(task);","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-29"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"    public Task deleteTask(int index) throws DukeException, IOException {","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"        if(index\u003e\u003d0 \u0026\u0026 index\u003ctaskList.size()){","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"            Task deletedTask \u003d taskList.get(index);","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"            taskList.remove(index);","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"            return deletedTask;","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"        } else {","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"            throw new DukeException(\"Invalid index, Please enter a valid int number. \");","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"    public Task markTaskAsDone(int index) throws DukeException, IOException {","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"            throw new DukeException(\"Invalid task index. Please specify a valid task to mark as done.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"        taskList.get(index).markAsDone();","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"        return taskList.get(index);","lastModifiedDate":"2023-10-30"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"    public Task unmarkTaskAsNotDone(int index) throws DukeException, IOException {","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"            throw new DukeException(\"Invalid task index. Please specify a valid task to mark as done.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"        }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"        taskList.get(index).unmarkDone();","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"        Task task \u003d taskList.get(index);","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"        return task;","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":57}},{"path":"src/main/java/duke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"public enum TaskType {","lastModifiedDate":"2023-10-10"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"    E, // Event","lastModifiedDate":"2023-10-10"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"    T, // Todo","lastModifiedDate":"2023-10-10"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"    D  // Deadline","lastModifiedDate":"2023-10-10"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-10"}],"authorContributionMap":{"GuangzuW":7}},{"path":"src/main/java/duke/task/Todos.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.task;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"/**","lastModifiedDate":"2023-10-30"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":" * This class represents a Todo task, which is a type of task without a specific deadline.","lastModifiedDate":"2023-10-30"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":" * It extends the abstract Task class and provides specific methods and properties for Todo tasks.","lastModifiedDate":"2023-10-30"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":" */","lastModifiedDate":"2023-10-30"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"public class Todos extends Task {","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"    private final TaskType taskType \u003d TaskType.T;","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"     * Constructs a Todo task with the given description.","lastModifiedDate":"2023-10-30"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"     * @param description The description of the Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"    public Todos(String description) {","lastModifiedDate":"2023-09-19"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"        super(description);","lastModifiedDate":"2023-09-19"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"     * Gets the type of the task, which is \u0027T\u0027 for Todos.","lastModifiedDate":"2023-10-30"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"     * @return The task type.","lastModifiedDate":"2023-10-30"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"    public TaskType getTaskType() {","lastModifiedDate":"2023-10-10"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"        return taskType;","lastModifiedDate":"2023-10-10"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-10"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-30"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"    /**","lastModifiedDate":"2023-10-30"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"     * Gets an icon representing the status of the Todo task.","lastModifiedDate":"2023-10-30"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"     *","lastModifiedDate":"2023-10-30"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"     * @return The status icon, which is \"[T]\" for Todo tasks, and [X] if the task is done, [ ] if it\u0027s not.","lastModifiedDate":"2023-10-30"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"     */","lastModifiedDate":"2023-10-30"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"    public String getStatusIcon() {","lastModifiedDate":"2023-09-19"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"        return \"[\" + taskType + \"]\" + super.getStatusIcon();","lastModifiedDate":"2023-10-10"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"GuangzuW":39}},{"path":"src/main/java/duke/ui/UI.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"package duke.ui;","lastModifiedDate":"2023-10-24"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"import duke.storage.Storage;","lastModifiedDate":"2023-10-24"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"import duke.task.Task;","lastModifiedDate":"2023-10-24"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"import duke.task.TaskList;","lastModifiedDate":"2023-10-24"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-24"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"public class UI {","lastModifiedDate":"2023-10-24"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"    private static Scanner scanner;","lastModifiedDate":"2023-10-24"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"    public UI(){","lastModifiedDate":"2023-10-24"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"        scanner \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-24"},{"lineNumber":13,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":14,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":15,"author":{"gitId":"GuangzuW"},"content":"    public static void showLine(){","lastModifiedDate":"2023-10-24"},{"lineNumber":16,"author":{"gitId":"GuangzuW"},"content":"        System.out.println(\"----\".repeat(10));","lastModifiedDate":"2023-10-24"},{"lineNumber":17,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"GuangzuW"},"content":"    public static void showMessage(String message){","lastModifiedDate":"2023-10-24"},{"lineNumber":20,"author":{"gitId":"GuangzuW"},"content":"        System.out.println(message);","lastModifiedDate":"2023-10-24"},{"lineNumber":21,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":22,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":23,"author":{"gitId":"GuangzuW"},"content":"    public static String readCommand(){","lastModifiedDate":"2023-10-24"},{"lineNumber":24,"author":{"gitId":"GuangzuW"},"content":"        return scanner.nextLine().trim();","lastModifiedDate":"2023-10-24"},{"lineNumber":25,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":26,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":27,"author":{"gitId":"GuangzuW"},"content":"    public static void showWelcome(){","lastModifiedDate":"2023-10-24"},{"lineNumber":28,"author":{"gitId":"GuangzuW"},"content":"        String logo \u003d \" ____        _\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":29,"author":{"gitId":"GuangzuW"},"content":"                + \"|  _ \\\\ _   _| | _____\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":30,"author":{"gitId":"GuangzuW"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":31,"author":{"gitId":"GuangzuW"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\"","lastModifiedDate":"2023-10-24"},{"lineNumber":32,"author":{"gitId":"GuangzuW"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";","lastModifiedDate":"2023-10-24"},{"lineNumber":33,"author":{"gitId":"GuangzuW"},"content":"        showLine();","lastModifiedDate":"2023-10-24"},{"lineNumber":34,"author":{"gitId":"GuangzuW"},"content":"        showMessage(logo);","lastModifiedDate":"2023-10-24"},{"lineNumber":35,"author":{"gitId":"GuangzuW"},"content":"        showMessage(\"Hello! I am  BotGenius, your chatBot.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":36,"author":{"gitId":"GuangzuW"},"content":"        showMessage(\"What can I do for you?\");","lastModifiedDate":"2023-10-24"},{"lineNumber":37,"author":{"gitId":"GuangzuW"},"content":"        showLine();","lastModifiedDate":"2023-10-24"},{"lineNumber":38,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":39,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":40,"author":{"gitId":"GuangzuW"},"content":"    public static void showLoadingError(){","lastModifiedDate":"2023-10-24"},{"lineNumber":41,"author":{"gitId":"GuangzuW"},"content":"        showMessage(\"Error: Unable to load task data. Please check the data file.\");","lastModifiedDate":"2023-10-24"},{"lineNumber":42,"author":{"gitId":"GuangzuW"},"content":"        showLine();","lastModifiedDate":"2023-10-24"},{"lineNumber":43,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":44,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":45,"author":{"gitId":"GuangzuW"},"content":"    public static void showError(String errorMessage){","lastModifiedDate":"2023-10-24"},{"lineNumber":46,"author":{"gitId":"GuangzuW"},"content":"        showMessage(\"Error: \" + errorMessage);","lastModifiedDate":"2023-10-24"},{"lineNumber":47,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":48,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":49,"author":{"gitId":"GuangzuW"},"content":"    public static void showBye(){","lastModifiedDate":"2023-10-24"},{"lineNumber":50,"author":{"gitId":"GuangzuW"},"content":"        showMessage(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-24"},{"lineNumber":51,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":52,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":53,"author":{"gitId":"GuangzuW"},"content":"    public static void showOOPS(){","lastModifiedDate":"2023-10-24"},{"lineNumber":54,"author":{"gitId":"GuangzuW"},"content":"        showMessage(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");","lastModifiedDate":"2023-10-24"},{"lineNumber":55,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":56,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":57,"author":{"gitId":"GuangzuW"},"content":"    public static void showTaskDeleted(Task deletedTask, TaskList taskList){","lastModifiedDate":"2023-10-24"},{"lineNumber":58,"author":{"gitId":"GuangzuW"},"content":"        UI.showMessage(\"Noted. I\u0027ve removed this task:\");","lastModifiedDate":"2023-10-24"},{"lineNumber":59,"author":{"gitId":"GuangzuW"},"content":"        UI.showMessage(deletedTask.getStatusIcon() + deletedTask.getDescription());","lastModifiedDate":"2023-10-24"},{"lineNumber":60,"author":{"gitId":"GuangzuW"},"content":"        System.out.printf(\"Now you have %d tasks in the list.\\n\", taskList.getTaskList().size());","lastModifiedDate":"2023-10-24"},{"lineNumber":61,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":62,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":63,"author":{"gitId":"GuangzuW"},"content":"    public static void showTaskMarkedAsDone(Task task){","lastModifiedDate":"2023-10-24"},{"lineNumber":64,"author":{"gitId":"GuangzuW"},"content":"        UI.showMessage(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-10-24"},{"lineNumber":65,"author":{"gitId":"GuangzuW"},"content":"        UI.showMessage(task.getStatusIcon() + task.getDescription());","lastModifiedDate":"2023-10-24"},{"lineNumber":66,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":67,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":68,"author":{"gitId":"GuangzuW"},"content":"    public static void showTaskUnmarkedAsNotDone(Task task){","lastModifiedDate":"2023-10-24"},{"lineNumber":69,"author":{"gitId":"GuangzuW"},"content":"        UI.showMessage(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-10-24"},{"lineNumber":70,"author":{"gitId":"GuangzuW"},"content":"        UI.showMessage(task.getStatusIcon() + task.getDescription());","lastModifiedDate":"2023-10-24"},{"lineNumber":71,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":72,"author":{"gitId":"GuangzuW"},"content":"","lastModifiedDate":"2023-10-24"},{"lineNumber":73,"author":{"gitId":"GuangzuW"},"content":"    public static void showNewTask(Task task, TaskList taskList){","lastModifiedDate":"2023-10-24"},{"lineNumber":74,"author":{"gitId":"GuangzuW"},"content":"        UI.showMessage(\"Got it. I\u0027ve added this task:\");","lastModifiedDate":"2023-10-24"},{"lineNumber":75,"author":{"gitId":"GuangzuW"},"content":"        UI.showMessage(task.getStatusIcon()+\" \"+ task.getDescription());","lastModifiedDate":"2023-10-24"},{"lineNumber":76,"author":{"gitId":"GuangzuW"},"content":"        UI.showMessage(String.format(\"Now you have %d tasks in the list.\", taskList.getTaskList().size()) );","lastModifiedDate":"2023-10-24"},{"lineNumber":77,"author":{"gitId":"GuangzuW"},"content":"    }","lastModifiedDate":"2023-10-24"},{"lineNumber":78,"author":{"gitId":"GuangzuW"},"content":"}","lastModifiedDate":"2023-10-24"}],"authorContributionMap":{"GuangzuW":78}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"GuangzuW"},"content":"Genebot","lastModifiedDate":"2023-09-10"},{"lineNumber":2,"author":{"gitId":"GuangzuW"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":3,"author":{"gitId":"GuangzuW"},"content":"read book","lastModifiedDate":"2023-09-10"},{"lineNumber":4,"author":{"gitId":"GuangzuW"},"content":"return book","lastModifiedDate":"2023-09-10"},{"lineNumber":5,"author":{"gitId":"GuangzuW"},"content":"borrow book","lastModifiedDate":"2023-09-10"},{"lineNumber":6,"author":{"gitId":"GuangzuW"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":7,"author":{"gitId":"GuangzuW"},"content":"mark 1","lastModifiedDate":"2023-09-10"},{"lineNumber":8,"author":{"gitId":"GuangzuW"},"content":"mark 3","lastModifiedDate":"2023-09-10"},{"lineNumber":9,"author":{"gitId":"GuangzuW"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":10,"author":{"gitId":"GuangzuW"},"content":"unmark 3","lastModifiedDate":"2023-09-10"},{"lineNumber":11,"author":{"gitId":"GuangzuW"},"content":"list","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"GuangzuW"},"content":"bye","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"GuangzuW":12}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java","lastModifiedDate":"2020-08-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"GuangzuW"},"content":"java -classpath ..\\bin archive.DukeOld \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"GuangzuW":1,"-":20}}]
