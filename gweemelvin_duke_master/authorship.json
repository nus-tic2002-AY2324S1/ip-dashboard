[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"    mainClass.set(\"tim.body.Tim\")","lastModifiedDate":"2023-11-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\"","lastModifiedDate":"2020-05-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":41,"gweemelvin":1}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"### Feature- Task Tracker","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"User is able to tell Tim to keep track of a task.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"Tasks are stored in a list where users are able to add, mark, unmark ,delete any task.","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Todo","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"Adds a Todo event into task list. ( Todo is a task without time parameters.)","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"`Todo [task name]`","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"`Todo return school book`","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"Tim will add \"return school book\" Todo entry into the task list.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"|| todo ||","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"Gotcha! Added this task:","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"1. [T] [ ] return school book","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"now there is: 2 item(s)","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Deadline","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"Adds a Deadline into task list. ( Deadline is a task with a done-by date.)","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"`Deadline [task name] /by [done-by date]`","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"`Deadline quiz 6 /by 21-10-23`","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"Tim will add \"quiz 6\" deadline with \"21-10-23\" as the done-by date.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"|| deadline ||","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"Gotcha! Added this task:","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"1. [D] [ ] pay credit bill  (by: 15-10-2023)","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"now there is: 3 item(s)","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Event","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"Adds an Event into task list. ( Event is a time-range-bound task with start and end date.)","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"`Event [task name] /from [start date] /to [end date])`","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"gweemelvin"},"content":"`Event School Camp /from 15-10-23 /to 19-10-23`","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"gweemelvin"},"content":"Tim will add \"School Camp\" Event entry into the task list with time range \"from 15-10-23 to 19-10-23\".","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"gweemelvin"},"content":"|| event ||","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"gweemelvin"},"content":"Gotcha! Added this task:","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"gweemelvin"},"content":"1. [E] [ ] School Camp (from: 15-10-23  to: 19-10-23)","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"gweemelvin"},"content":"now there is: 1 item(s)","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Mark","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"gweemelvin"},"content":"Marks an existing undone task in the list as done.","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"gweemelvin"},"content":"`Mark [task index]`","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"gweemelvin"},"content":"`Mark 1`","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"gweemelvin"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"gweemelvin"},"content":"Tim will mark task 1 as done with a [x].","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"gweemelvin"},"content":"|| mark ||","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"gweemelvin"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"gweemelvin"},"content":"1. [E] [x] School Camp (from: 15-10-23  to: 19-10-23)","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Unmark","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"gweemelvin"},"content":"Unmark an existing completed task in the list as undone.","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"gweemelvin"},"content":"`Unmark [task index]`","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"gweemelvin"},"content":"`Unmark 1`","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"gweemelvin"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"gweemelvin"},"content":"Tim will mark task 1 as undone with a [ ].","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"gweemelvin"},"content":"|| unmark ||","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"gweemelvin"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"gweemelvin"},"content":"1. [E] [ ] School Camp (from: 15-10-23  to: 19-10-23)","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Delete","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"gweemelvin"},"content":"Delete an existing task from the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"gweemelvin"},"content":"`Delete [task index]`","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"gweemelvin"},"content":"`Delete 1`","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"gweemelvin"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"gweemelvin"},"content":"Tim will delete task 1, subsequent task will cascade down in index and print the updated list.","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"gweemelvin"},"content":"|| delete ||","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"gweemelvin"},"content":"Deleting: 1. [E] [x] School Camp (from: 15-10-23  to: 19-10-23)","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"gweemelvin"},"content":"1. [T] [ ] return school book","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"gweemelvin"},"content":"2. [D] [ ] pay credit bill  (by: 15-10-2023)","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":27,"gweemelvin":135}},{"path":"src/main/java/tim/UnmodifyingAction.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim;","lastModifiedDate":"2023-10-13"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"public enum UnmodifyingAction {","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"    list,date,bye","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"gweemelvin":5}},{"path":"src/main/java/tim/body/BlankInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.body;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"public class BlankInputException extends Exception{","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"    public BlankInputException(String statement){","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"        super (statement);","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"gweemelvin":8}},{"path":"src/main/java/tim/body/DateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.body;","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"public class DateException extends Exception{","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"    public DateException(String statement){","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"        super (statement);","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"gweemelvin":8}},{"path":"src/main/java/tim/body/FileManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.body;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"import java.io.File;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":" * Represents as a FileManager object.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":" * This class handles the saving and loading of the list of tasks.","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"public class FileManager {","lastModifiedDate":"2023-10-13"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     * Loads the list of tasks from the file.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"     * @location ./src/main/data/list.data","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"     * @throws IOException If the file is not found.","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"     * @throws ClassNotFoundException If the file is corrupted.","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    static ArrayList\u003cTask\u003e loadList () throws IOException, ClassNotFoundException{","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"        try{","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"            File f \u003d new File(\"./src/main/data/list.data\");","lastModifiedDate":"2023-10-13"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"            if(f.exists()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"                FileInputStream fin \u003d new FileInputStream(f);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fin);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"                list \u003d (ArrayList\u003cTask\u003e) ois.readObject();","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"                ois.close();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"no saved list\");","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"unable to read file\");","lastModifiedDate":"2023-10-13"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"        }catch (ClassNotFoundException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"file is corrupted\");","lastModifiedDate":"2023-10-13"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"        return list;","lastModifiedDate":"2023-10-13"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"     * Saves the list of tasks to the file.","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"     * @location ./src/main/data/list.data","lastModifiedDate":"2023-10-31"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"     * @param list list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"    static void saveList(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"        try{","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"            File f \u003d new File(\"./src/main/data/list.data\");","lastModifiedDate":"2023-10-13"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"            f.createNewFile();","lastModifiedDate":"2023-10-13"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"            FileOutputStream fos \u003d new FileOutputStream(f);","lastModifiedDate":"2023-10-13"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-10-13"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"            oos.writeObject(list);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"            oos.close();","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"unable to create file\");","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"gweemelvin":65}},{"path":"src/main/java/tim/body/ListManager.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.body;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.ToDo;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Event;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Deadline;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":" * Represents as a ListManager object.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":" * The object manages the list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"public class ListManager {","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * Adds a task to the back of the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     * @param inputEntry The input string from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"    static void addToDo (String inputEntry, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        list.add(new ToDo(inputEntry));","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Gotcha! Added this task:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"        Messenger.printSingle(list.size(),list);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"now there is: \"+ list.size() + \" item(s)\");","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        Messenger.printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"     * Adds a deadline to the back of the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"     * inputEntry is parsed into description and byDate.","lastModifiedDate":"2023-10-31"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"     * ","lastModifiedDate":"2023-10-31"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"     * @param inputEntry Input string from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"    static void addDeadline (String inputEntry, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"        String[] inputTokenized;","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"        String byDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"        try{","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"            inputTokenized \u003d inputEntry.split(\"/by \",2);","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"            byDate \u003d inputTokenized[1];","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"            String description \u003d inputTokenized[0];","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"            if(description.isBlank()){","lastModifiedDate":"2023-10-22"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"                throw new BlankInputException(\"missing description\");","lastModifiedDate":"2023-10-22"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"            list.add(new Deadline(description,byDate));","lastModifiedDate":"2023-10-31"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"Gotcha! Added this task:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"            Messenger.printSingle(list.size(),list);","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"now there is: \"+ list.size() + \" item(s)\");","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"            Messenger.printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-10-22"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"you\u0027ve missed out [/by] !\");","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"        } catch(DateTimeParseException DTPE ){","lastModifiedDate":"2023-10-22"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"that\u0027s not a valid date, please enter \u003c\u003c /by yyyy-mm-dd \u003e\u003e\");","lastModifiedDate":"2023-10-22"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"        } catch (BlankInputException BIE) {","lastModifiedDate":"2023-10-22"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"you\u0027ve missed out the description\");","lastModifiedDate":"2023-10-22"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"    ","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"    /** ","lastModifiedDate":"2023-10-31"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"     * Adds an event to the back of the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"     * inputEntry is parsed into description, fromDate and toDate.","lastModifiedDate":"2023-10-31"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"     * ","lastModifiedDate":"2023-10-31"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"     * @param inputEntry Input string from the user.","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"     * @param list list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"gweemelvin"},"content":"    static void addEvent (String inputEntry,ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"        String[] inputTokenized;","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"        String fromDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":71,"author":{"gitId":"gweemelvin"},"content":"        String toDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"gweemelvin"},"content":"            inputTokenized \u003d  inputEntry.split(\"/from \",2);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"gweemelvin"},"content":"            String description \u003d inputTokenized[0];","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"gweemelvin"},"content":"            if(description.isBlank()){","lastModifiedDate":"2023-10-22"},{"lineNumber":76,"author":{"gitId":"gweemelvin"},"content":"                throw new BlankInputException(\"missing description\");","lastModifiedDate":"2023-10-22"},{"lineNumber":77,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-22"},{"lineNumber":78,"author":{"gitId":"gweemelvin"},"content":"            toDate \u003d inputTokenized[1].split(\" /to \", 2)[1];","lastModifiedDate":"2023-10-31"},{"lineNumber":79,"author":{"gitId":"gweemelvin"},"content":"            fromDate \u003d inputTokenized[1].split(\" /to \", 2)[0];","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"gweemelvin"},"content":"            list.add(new Event(description,fromDate,toDate));","lastModifiedDate":"2023-10-31"},{"lineNumber":81,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"Gotcha! Added this task:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"gweemelvin"},"content":"            Messenger.printSingle(list.size(),list);","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"now there is: \"+ list.size() + \" item(s)\");","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"gweemelvin"},"content":"            Messenger.printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-10-22"},{"lineNumber":86,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"you\u0027ve missed out [/fromDate] or [/toDate] !\");","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"gweemelvin"},"content":"        } catch(DateTimeParseException DTPE ){","lastModifiedDate":"2023-10-22"},{"lineNumber":88,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"that\u0027s not a valid date, please enter \u003c\u003c /fromDate yyyy-mm-dd /toDate yyyy-mm-dd\u003e\u003e\");","lastModifiedDate":"2023-10-31"},{"lineNumber":89,"author":{"gitId":"gweemelvin"},"content":"        } catch (BlankInputException BIE) {","lastModifiedDate":"2023-10-22"},{"lineNumber":90,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"you\u0027ve missed out the description\");","lastModifiedDate":"2023-10-22"},{"lineNumber":91,"author":{"gitId":"gweemelvin"},"content":"        } catch (DateException DE){","lastModifiedDate":"2023-10-22"},{"lineNumber":92,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"/fromDate date shouldn\u0027t be later than /toDate date\");","lastModifiedDate":"2023-10-31"},{"lineNumber":93,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":98,"author":{"gitId":"gweemelvin"},"content":"     * Deletes the task at the given index from the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":99,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":100,"author":{"gitId":"gweemelvin"},"content":"     * @param deleteIndex Index of the task to be deleted.","lastModifiedDate":"2023-11-03"},{"lineNumber":101,"author":{"gitId":"gweemelvin"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":102,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":103,"author":{"gitId":"gweemelvin"},"content":"    static void deleteFromList (int deleteIndex,ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-10-17"},{"lineNumber":104,"author":{"gitId":"gweemelvin"},"content":"        System.out.print(\"Deleting: \");","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"gweemelvin"},"content":"        Messenger.printSingle(deleteIndex,list);","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"gweemelvin"},"content":"        Messenger.printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":107,"author":{"gitId":"gweemelvin"},"content":"        list.remove(deleteIndex-1);","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"gweemelvin"},"content":"        Messenger.printList(list);","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":112,"author":{"gitId":"gweemelvin"},"content":"     * Marks or unmarks the task at the given index from the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":113,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":114,"author":{"gitId":"gweemelvin"},"content":"     * @param index Index of the task to be marked or unmarked.","lastModifiedDate":"2023-11-03"},{"lineNumber":115,"author":{"gitId":"gweemelvin"},"content":"     * @param markUnmark True if the task is to be marked, false if the task is to be unmarked.","lastModifiedDate":"2023-11-03"},{"lineNumber":116,"author":{"gitId":"gweemelvin"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":117,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":118,"author":{"gitId":"gweemelvin"},"content":"    static void markUnmarkTask(int index, boolean markUnmark, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-10-17"},{"lineNumber":119,"author":{"gitId":"gweemelvin"},"content":"        Task target \u003d list.get(index-1);","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"gweemelvin"},"content":"        if((target.getIsDone().equals(\"x\")) !\u003d markUnmark){","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"gweemelvin"},"content":"            if(markUnmark){","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"gweemelvin"},"content":"            } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"gweemelvin"},"content":"            target.setIsDone(markUnmark);","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"gweemelvin"},"content":"            Messenger.printSingle(index,list);","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"gweemelvin"},"content":"        } else {","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"gweemelvin"},"content":"            System.out.print(\"Task is already \" + (markUnmark ? \"marked\" : \"unmarked\") + \".\");","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"gweemelvin"},"content":"        Messenger.printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":134,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"gweemelvin":136}},{"path":"src/main/java/tim/body/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.body;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":" * Represents as a Logic object.","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" * This class is the logic of the program.","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" * It executes the actions based on the parsed user input from the parser.","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"public class Logic {","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * Executes the action based on the parsed user input from the parser.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     * @param mode  Action to be executed.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * @param list  List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     * @param token User input split into an array of strings.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"    static void executeAction (String mode, ArrayList\u003cTask\u003e list, String[] token){","lastModifiedDate":"2023-10-31"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        int index;","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        String taskName;","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        switch (mode) {","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"        case \"bye\":","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"            Messenger.goodbyeGreet();","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        case \"list\":","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"            Messenger.printList(list);","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"        case \"date\":","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"            Messenger.printDate();","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"        case \"mark\":","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"            try {","lastModifiedDate":"2023-10-17"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"                index \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2023-10-17"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"                ListManager.markUnmarkTask(index, true, list);","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"            } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-10-17"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"                System.err.println(\"incorrect input for index!\");","lastModifiedDate":"2023-10-17"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"        case \"unmark\":","lastModifiedDate":"2023-10-17"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"            try {","lastModifiedDate":"2023-10-17"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"                index \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"                ListManager.markUnmarkTask(index, false, list);","lastModifiedDate":"2023-10-17"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"            } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-10-17"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"                System.err.println(\"incorrect input for index!\");","lastModifiedDate":"2023-10-17"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"        case \"todo\":","lastModifiedDate":"2023-10-17"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"            try {","lastModifiedDate":"2023-10-17"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"                taskName \u003d token[1];","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"                ListManager.addToDo(taskName, list);","lastModifiedDate":"2023-10-17"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"            } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-10-17"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"                System.err.println(\"what is the name of the task to complete?\");","lastModifiedDate":"2023-10-17"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"        case \"deadline\":","lastModifiedDate":"2023-10-17"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"            try {","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"                taskName \u003d token[1];","lastModifiedDate":"2023-10-17"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"                ListManager.addDeadline(taskName, list);","lastModifiedDate":"2023-10-17"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"            } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"                System.err.println(\"what is the name of the deadline agenda?\");","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"        case \"event\":","lastModifiedDate":"2023-10-17"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"            try {","lastModifiedDate":"2023-10-17"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"                taskName \u003d token[1];","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"gweemelvin"},"content":"                ListManager.addEvent(taskName, list);","lastModifiedDate":"2023-10-17"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"            } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-10-17"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"                System.err.println(\"what is the name of the event?\");","lastModifiedDate":"2023-10-17"},{"lineNumber":71,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":72,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"gweemelvin"},"content":"        case \"delete\":","lastModifiedDate":"2023-10-17"},{"lineNumber":74,"author":{"gitId":"gweemelvin"},"content":"            try {","lastModifiedDate":"2023-10-17"},{"lineNumber":75,"author":{"gitId":"gweemelvin"},"content":"                int deleteIndex \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2023-10-17"},{"lineNumber":76,"author":{"gitId":"gweemelvin"},"content":"                ListManager.deleteFromList(deleteIndex, list);","lastModifiedDate":"2023-10-17"},{"lineNumber":77,"author":{"gitId":"gweemelvin"},"content":"            } catch (Exception e) {","lastModifiedDate":"2023-10-17"},{"lineNumber":78,"author":{"gitId":"gweemelvin"},"content":"                System.err.println(\"please include valid index of task to delete\");","lastModifiedDate":"2023-10-17"},{"lineNumber":79,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":80,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"gweemelvin"},"content":"        default:","lastModifiedDate":"2023-10-17"},{"lineNumber":82,"author":{"gitId":"gweemelvin"},"content":"            System.err.println(\"I\u0027ve not learn to do this yet!!\");","lastModifiedDate":"2023-10-17"},{"lineNumber":83,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"gweemelvin"},"content":"        if (!(mode.equals(\"list\") || mode.equals(\"date\") || mode.equals(\"bye\"))) {","lastModifiedDate":"2023-10-17"},{"lineNumber":85,"author":{"gitId":"gweemelvin"},"content":"            FileManager.saveList(list);","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":87,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":88,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"gweemelvin":88}},{"path":"src/main/java/tim/body/Messenger.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.body;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import java.util.Date;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" * Represents as a Messenger object.","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" * This class is responsible for printing messages and task list to the user.","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"public class Messenger {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * Prints the current date.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"    static void printDate(){","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"|| Current Date: ||\");","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(currentDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"     * Prints the Tim\u0027s logo.","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    static void printLogo(){","lastModifiedDate":"2023-10-17"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        String logo \u003d","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"                \" _______                 \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"                        +   \"|__   __| [ ]  __  __    \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"                        +   \"   | |    | | |  \\\\/  |  \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"                        +   \"   | |    | | | |\\\\/| |  \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"                        +   \"   |_|    |_| |_|  |_|   \\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"     * Prints Tim\u0027s greeting.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"    static void greetings(){","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Hello I\u0027m Tim. \\nWhat can I do for you?\");","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"     * Prints a dash.","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"    static void printDash(){","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"        System.out.println();","lastModifiedDate":"2023-10-15"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-10-15"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"     * Prints the entire list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"    static void printList(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-10-17"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"        if (!list.isEmpty()){","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"            for(int i \u003d 1; i \u003c\u003d list.size() ; i++){","lastModifiedDate":"2023-10-15"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"                printSingle(i,list);","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"     * Prints the task at the given index of the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":68,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"     * @param index Index of the task in the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":71,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":72,"author":{"gitId":"gweemelvin"},"content":"    static void printSingle(int index, ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-10-17"},{"lineNumber":73,"author":{"gitId":"gweemelvin"},"content":"        Task current \u003d list.get(index-1);","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(index + \". [\" + current.getType()  + \"] [\" + current.getIsDone() + \"] \" + current.getDescription() );","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":78,"author":{"gitId":"gweemelvin"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":80,"author":{"gitId":"gweemelvin"},"content":"    static void goodbyeGreet(){","lastModifiedDate":"2023-10-17"},{"lineNumber":81,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"gweemelvin":84}},{"path":"src/main/java/tim/body/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.body;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" * Represents as a Parser object.","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" * This class is responsible for parsing the user input","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" * before passing it to the Logic class to execute the action.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"public class Parser {","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     * Parses the user input and passes it to the Logic class to execute the action.","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     static void inputParser(ArrayList\u003cTask\u003e list){","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        String input \u003d \"init\" ;","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        while(!input.equalsIgnoreCase(\"bye\")) {","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"            input \u003d in.nextLine().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"            input \u003d input.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"            String[] token \u003d input.split(\" \", 2);","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"            String mode \u003d token[0].toLowerCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"|| \" + mode + \" ||\");","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"            Logic.executeAction(mode,list, token);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"gweemelvin":30}},{"path":"src/main/java/tim/body/Tim.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.body;","lastModifiedDate":"2023-10-17"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-13"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"public class Tim {","lastModifiedDate":"2023-09-09"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"    public static void main(String[] args) throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-10-13"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"        ArrayList\u003cTask\u003e list;","lastModifiedDate":"2023-10-15"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"        Messenger.printLogo();","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"        Messenger.greetings();","lastModifiedDate":"2023-10-15"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"        list \u003d FileManager.loadList();","lastModifiedDate":"2023-10-13"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"        Parser.inputParser(list);","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gweemelvin":13,"-":2}},{"path":"src/main/java/tim/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.tasks;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":" * Represents as a Deadline object.","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" * This class is a subclass of Task.","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" * It has a description and a byDate.","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     * @param byDate the date of the deadline","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"    public Deadline(String description, String byDate){","lastModifiedDate":"2023-10-31"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        this.byDate \u003d LocalDate.parse(byDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"        this.setType(\u0027D\u0027);","lastModifiedDate":"2023-10-17"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"     * @return description of the task with the byDate.","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-10"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"        return (super.getDescription() + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\");","lastModifiedDate":"2023-10-31"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"gweemelvin":35}},{"path":"src/main/java/tim/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.tasks;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.body.DateException;","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" * Represents as an Event object.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" * This class is a subclass of Task.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":" * It has a description, a fromDate and a toDate.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     * Creates an Event object.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"     * @param fromDate the date of the event","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"     * @param toDate the date of the event","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"     * @throws DateException if the fromDate is after toDate","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"    public Event(String description, String fromDate, String toDate) throws DateException {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        this.setType(\u0027E\u0027);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"        this.fromDate \u003d LocalDate.parse(fromDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"        this.toDate \u003d LocalDate.parse(toDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"        if(this.fromDate.isAfter(this.toDate)){","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"            throw new DateException(\"improper date\");","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"     * @return description of the task with the fromDate and toDate.","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-10"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"        return (super.getDescription() + \"(from: \" + fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \" + toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +  \")\");","lastModifiedDate":"2023-10-31"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"gweemelvin":45}},{"path":"src/main/java/tim/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.tasks;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":" * Represents a Task object.","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":" * Task is an abstract class that is the parent class of ToDo, Deadline and Event.","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" * It contains the description of the task, boolean of whether it is done and the type of task.","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"    private String description;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"    private char type;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    private boolean isDone;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     * Creates a Task object","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     * @param description","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"    public Task(String description){","lastModifiedDate":"2023-09-09"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        type \u003d \u0027-\u0027;","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"     * @return description of the task","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"    public String getDescription() { return this.description;}","lastModifiedDate":"2023-10-17"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"     * Returns the status of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"     * @return status of the task","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"    public String getIsDone(){","lastModifiedDate":"2023-09-09"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"        return isDone ? \"x\" : \" \";","lastModifiedDate":"2023-09-09"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"     * Sets IsDone state as mark or unmarked based on input.","lastModifiedDate":"2023-11-03"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"     * @param markUnmark boolean of whether the task is done.","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"    public void setIsDone(boolean markUnmark){","lastModifiedDate":"2023-09-09"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"        isDone \u003d markUnmark;","lastModifiedDate":"2023-09-09"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"     * @return type of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"    public char getType (){","lastModifiedDate":"2023-09-10"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"        return type;","lastModifiedDate":"2023-09-10"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"     * Sets the type of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"     * @param type type of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"    public void setType (char type){ this.type \u003d type; }","lastModifiedDate":"2023-10-17"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"gweemelvin":65}},{"path":"src/main/java/tim/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.tasks;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":" * Represents as a ToDo object.","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":" * This class is a subclass of Task.","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":" * It has a description.","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"     * Creates a ToDo object.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * @param description the description of the task","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"    public ToDo (String description){","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"        this.setType(\u0027T\u0027);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"     * @return description of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"        return super.getDescription() ;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"gweemelvin":29}},{"path":"src/test/java/tim/TimTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.body.DateException;","lastModifiedDate":"2023-11-04"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Event;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.ToDo;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"public class TimTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"    public void timTestTodo() {","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"        ToDo todo \u003d new ToDo (\"test task name\");","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        assertEquals(\"test task name\", todo.getDescription());","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"    public void timTestEvent() throws DateException {","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"        Event testEvent \u003d new Event(\"test task name\", \"2020-10-10\", \"2021-10-11\");","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"        assertEquals(\"test task name(from: Oct 10 2020 to: Oct 11 2021)\", testEvent.getDescription());","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        assertEquals(\u0027E\u0027, testEvent.getType());","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"gweemelvin":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"event study math /from 2023-11-01 /to 2023-12-01","lastModifiedDate":"2023-10-22"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"todo pay school fee","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"todo return books","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"deadline pay credit bill /by 2023-12-01","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"list","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"mark 1","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"delete 2","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"bye","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"gweemelvin":8}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\tim\\body\\Tim.java","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"java -classpath ..\\bin tim.body.Tim \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-10-17"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"gweemelvin":2}}]
