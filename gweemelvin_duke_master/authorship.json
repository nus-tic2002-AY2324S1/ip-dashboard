[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00277.1.2\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2020-05-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.10.0\u0027","lastModifiedDate":"2023-08-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    testLogging {","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\"","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        showExceptions true","lastModifiedDate":"2020-05-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\"","lastModifiedDate":"2020-05-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        showCauses true","lastModifiedDate":"2020-05-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        showStackTraces true","lastModifiedDate":"2020-05-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false","lastModifiedDate":"2020-05-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"application {","lastModifiedDate":"2020-05-25"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"    mainClass.set(\"tim.Tim\")","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2020-05-25"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"    archiveFileName \u003d \u0027Tim.jar\u0027","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"    archiveBaseName \u003d \"Tim\"","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null","lastModifiedDate":"2020-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    dependsOn(\"distZip\", \"distTar\")","lastModifiedDate":"2023-08-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"run{","lastModifiedDate":"2020-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in","lastModifiedDate":"2020-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":40,"gweemelvin":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide","lastModifiedDate":"2019-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features ","lastModifiedDate":"2019-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"### Feature- Task Tracker","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"User is able to tell Tim to keep track of a task.","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"Tasks are stored in a list where users are able to add, mark, unmark ,delete any task.","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Usage","lastModifiedDate":"2019-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Todo","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"Adds a Todo event into task list. ( Todo is a task without time parameters.)","lastModifiedDate":"2023-10-15"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"`Todo [task name]`","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"`Todo return school book`","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"Tim will add \"return school book\" Todo entry into the task list.","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"|| todo ||","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"Gotcha! Added this task:","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"1. [T] [ ] return school book","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"now there is: 2 item(s)","lastModifiedDate":"2023-10-15"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Deadline","lastModifiedDate":"2023-10-15"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"Adds a Deadline into task list. ( Deadline is a task with a done-by date.)","lastModifiedDate":"2023-10-15"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"`Deadline [task name] /by [done-by date]`","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"Example of usage:","lastModifiedDate":"2019-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"`Deadline quiz 6 /by 21-10-23`","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2019-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-29"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"Tim will add \"quiz 6\" deadline with \"21-10-23\" as the done-by date.","lastModifiedDate":"2023-10-15"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"|| deadline ||","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"Gotcha! Added this task:","lastModifiedDate":"2023-10-15"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"1. [D] [ ] pay credit bill  (by: 15-10-2023)","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"now there is: 3 item(s)","lastModifiedDate":"2023-10-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-17"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Event","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"Adds an Event into task list. ( Event is a time-range-bound task with start and end date.)","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"`Event [task name] /from [start date] /to [end date])`","lastModifiedDate":"2023-10-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":71,"author":{"gitId":"gweemelvin"},"content":"`Event School Camp /from 15-10-23 /to 19-10-23`","lastModifiedDate":"2023-10-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"gweemelvin"},"content":"Tim will add \"School Camp\" Event entry into the task list with time range \"from 15-10-23 to 19-10-23\".","lastModifiedDate":"2023-10-15"},{"lineNumber":76,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":79,"author":{"gitId":"gweemelvin"},"content":"|| event ||","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"gweemelvin"},"content":"Gotcha! Added this task:","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"gweemelvin"},"content":"1. [E] [ ] School Camp (from: 15-10-23  to: 19-10-23)","lastModifiedDate":"2023-10-15"},{"lineNumber":82,"author":{"gitId":"gweemelvin"},"content":"now there is: 1 item(s)","lastModifiedDate":"2023-10-15"},{"lineNumber":83,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":84,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":86,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Mark","lastModifiedDate":"2023-10-15"},{"lineNumber":87,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":88,"author":{"gitId":"gweemelvin"},"content":"Marks an existing undone task in the list as done.","lastModifiedDate":"2023-10-15"},{"lineNumber":89,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":90,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":91,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":92,"author":{"gitId":"gweemelvin"},"content":"`Mark [task index]`","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":96,"author":{"gitId":"gweemelvin"},"content":"`Mark 1`","lastModifiedDate":"2023-10-15"},{"lineNumber":97,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":98,"author":{"gitId":"gweemelvin"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":99,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":100,"author":{"gitId":"gweemelvin"},"content":"Tim will mark task 1 as done with a [x].","lastModifiedDate":"2023-10-15"},{"lineNumber":101,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":102,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":103,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":104,"author":{"gitId":"gweemelvin"},"content":"|| mark ||","lastModifiedDate":"2023-10-15"},{"lineNumber":105,"author":{"gitId":"gweemelvin"},"content":"Nice! I\u0027ve marked this task as done:","lastModifiedDate":"2023-10-15"},{"lineNumber":106,"author":{"gitId":"gweemelvin"},"content":"1. [E] [x] School Camp (from: 15-10-23  to: 19-10-23)","lastModifiedDate":"2023-10-15"},{"lineNumber":107,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":108,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":109,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":110,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":111,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Unmark","lastModifiedDate":"2023-10-15"},{"lineNumber":112,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":113,"author":{"gitId":"gweemelvin"},"content":"Unmark an existing completed task in the list as undone.","lastModifiedDate":"2023-10-15"},{"lineNumber":114,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":115,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":116,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":117,"author":{"gitId":"gweemelvin"},"content":"`Unmark [task index]`","lastModifiedDate":"2023-10-15"},{"lineNumber":118,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":119,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":120,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":121,"author":{"gitId":"gweemelvin"},"content":"`Unmark 1`","lastModifiedDate":"2023-10-15"},{"lineNumber":122,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":123,"author":{"gitId":"gweemelvin"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":124,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":125,"author":{"gitId":"gweemelvin"},"content":"Tim will mark task 1 as undone with a [ ].","lastModifiedDate":"2023-10-15"},{"lineNumber":126,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":127,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":128,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":129,"author":{"gitId":"gweemelvin"},"content":"|| unmark ||","lastModifiedDate":"2023-10-15"},{"lineNumber":130,"author":{"gitId":"gweemelvin"},"content":"OK, I\u0027ve marked this task as not done yet:","lastModifiedDate":"2023-10-15"},{"lineNumber":131,"author":{"gitId":"gweemelvin"},"content":"1. [E] [ ] School Camp (from: 15-10-23  to: 19-10-23)","lastModifiedDate":"2023-10-15"},{"lineNumber":132,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":133,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":134,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":135,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":136,"author":{"gitId":"gweemelvin"},"content":"### `Keyword` - Delete","lastModifiedDate":"2023-10-15"},{"lineNumber":137,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":138,"author":{"gitId":"gweemelvin"},"content":"Delete an existing task from the list.","lastModifiedDate":"2023-10-15"},{"lineNumber":139,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":140,"author":{"gitId":"gweemelvin"},"content":"Format:","lastModifiedDate":"2023-10-15"},{"lineNumber":141,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":142,"author":{"gitId":"gweemelvin"},"content":"`Delete [task index]`","lastModifiedDate":"2023-10-15"},{"lineNumber":143,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":144,"author":{"gitId":"gweemelvin"},"content":"Example of usage:","lastModifiedDate":"2023-10-15"},{"lineNumber":145,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":146,"author":{"gitId":"gweemelvin"},"content":"`Delete 1`","lastModifiedDate":"2023-10-15"},{"lineNumber":147,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":148,"author":{"gitId":"gweemelvin"},"content":"Expected outcome:","lastModifiedDate":"2023-10-15"},{"lineNumber":149,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":150,"author":{"gitId":"gweemelvin"},"content":"Tim will delete task 1, subsequent task will cascade down in index and print the updated list.","lastModifiedDate":"2023-10-15"},{"lineNumber":151,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":152,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":153,"author":{"gitId":"gweemelvin"},"content":"```","lastModifiedDate":"2023-10-15"},{"lineNumber":154,"author":{"gitId":"gweemelvin"},"content":"|| delete ||","lastModifiedDate":"2023-10-15"},{"lineNumber":155,"author":{"gitId":"gweemelvin"},"content":"Deleting: 1. [E] [x] School Camp (from: 15-10-23  to: 19-10-23)","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":157,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"gweemelvin"},"content":"1. [T] [ ] return school book","lastModifiedDate":"2023-10-15"},{"lineNumber":159,"author":{"gitId":"gweemelvin"},"content":"2. [D] [ ] pay credit bill  (by: 15-10-2023)","lastModifiedDate":"2023-10-15"},{"lineNumber":160,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":161,"author":{"gitId":"gweemelvin"},"content":"____________________________________________________________","lastModifiedDate":"2023-10-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-17"}],"authorContributionMap":{"-":27,"gweemelvin":135}},{"path":"src/main/java/tim/Tim.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim;","lastModifiedDate":"2023-11-06"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Parser;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.Storage;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-13"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"public class Tim {","lastModifiedDate":"2023-09-09"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"     * Represents the Main method.","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * @param args Command line arguments.","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     * @throws IOException If the file is not found.","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     * @throws ClassNotFoundException If the file is corrupted.","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"    public static void main(String[] args) throws IOException, ClassNotFoundException {","lastModifiedDate":"2023-10-13"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"        TaskList list;","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        Display.printLogo();","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        Display.greetings();","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        list \u003d Storage.loadList();","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        Parser.inputParser(list);","lastModifiedDate":"2023-10-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-29"}],"authorContributionMap":{"gweemelvin":22,"-":2}},{"path":"src/main/java/tim/commands/ClearCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"    @Override","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks) {","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"            clearList(tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  \");","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"    private void clearList(TaskList tasks) {","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        System.out.print(\"List is now empty!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        for(int i \u003d tasks.size() - 1; i \u003e\u003d 0; i--) {","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"            tasks.remove(i);","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"        Display.printDash();","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"gweemelvin":25}},{"path":"src/main/java/tim/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"public abstract class Command {","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"    public abstract void execute(String[] token, TaskList tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":7}},{"path":"src/main/java/tim/commands/CountdownCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-12"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Deadline;","lastModifiedDate":"2023-11-12"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Event;","lastModifiedDate":"2023-11-12"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-12"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-12"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-11-12"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"import static java.time.temporal.ChronoUnit.DAYS;","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"public class CountdownCommand extends Command {","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * Identifies index of task and compares the date of the task to the current date.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     *      *","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        LocalDate nowDate \u003d LocalDate.now();","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        long daysApart \u003d 0;","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"            int index \u003d Integer.parseInt(token[1]) - 1;","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"            switch (tasks.get(index).getType()){","lastModifiedDate":"2023-11-12"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-11-12"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"                Deadline deadline \u003d (Deadline) tasks.get(index);","lastModifiedDate":"2023-11-12"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"                daysApart \u003d DAYS.between(nowDate, deadline.getByDate());","lastModifiedDate":"2023-11-12"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"                Display.printCountdown(daysApart);","lastModifiedDate":"2023-11-12"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-12"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"                Event event \u003d (Event) tasks.get(index);","lastModifiedDate":"2023-11-12"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"                daysApart \u003d DAYS.between(nowDate, event.getToDate());","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"                Display.printCountdown(daysApart);","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"oh no!  ToDo tasks has no end date!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-12"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"            default:","lastModifiedDate":"2023-11-12"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"oh no!  unhandled error\");","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-11-12"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  please provide a valid index of the task!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-12"}],"authorContributionMap":{"gweemelvin":46}},{"path":"src/main/java/tim/commands/DeadlineCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.exceptions.BlankInputException;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Deadline;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"public class DeadlineCommand extends Command{","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * Identifies Deadline\u0027s task name to be added.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     * Calls TaskList.addDeadline() to add Deadline task to task list.","lastModifiedDate":"2023-11-12"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"            String taskName \u003d token[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"            addDeadline(taskName, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  what is the name of the deadline agenda?\");","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"     * Adds a deadline to the back of the list.","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"     * inputEntry is parsed into description and byDate.","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"     * @param inputEntry Input string from the user.","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"    static void addDeadline(String inputEntry, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"        String[] inputTokenized;","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"        String byDate;","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"        try{","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"            inputTokenized \u003d inputEntry.split(\"/by \",2);","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"            byDate \u003d inputTokenized[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"            String description \u003d inputTokenized[0];","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"            if(description.isBlank()){","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"                throw new BlankInputException(\"missing description\");","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"            tasks.add(new Deadline(description,byDate));","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"Gotcha! Added this task:\");","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"            Display.printSingle(tasks.size(),tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"now there is: \"+ tasks.size() + \" item(s)\");","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"            Display.printDash();","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  you\u0027ve missed out [/by] !\");","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"        } catch(DateTimeParseException DTPE ){","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  that\u0027s not a valid date, please enter \u003c\u003c /by yyyy-mm-dd \u003e\u003e\");","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"        } catch (BlankInputException BIE) {","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  you\u0027ve missed out the description\");","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":59}},{"path":"src/main/java/tim/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"public class DeleteCommand extends Command{","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"     * Identifies index of task to be deleted.","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"     * Calls TaskList.deleteFromList() to delete task from task list.","lastModifiedDate":"2023-11-12"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"            int deleteIndex \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"            deleteFromList(deleteIndex, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  please include valid index of task to delete\");","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"     * Deletes the task at the given index from the list.","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"     * @param deleteIndex Index of the task to be deleted.","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"    static void deleteFromList(int deleteIndex, TaskList tasks){","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"        tasks.remove(deleteIndex-1);","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Deleting: \" + deleteIndex);","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Updated List: \");","lastModifiedDate":"2023-11-12"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"        Display.printList(tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":38}},{"path":"src/main/java/tim/commands/EventCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.exceptions.BlankInputException;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import tim.exceptions.DateException;","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Event;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"public class EventCommand extends Command{","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     * Identifies Event\u0027s task name to be added.","lastModifiedDate":"2023-11-12"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * Calls TaskList.addEvent() to add Event task to task list.","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"            String taskName \u003d token[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"            addEvent(taskName, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  what is the name of the event?\");","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"     * Adds an event to the back of the list.","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"     * inputEntry is parsed into description, fromDate and toDate.","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"     * @param inputEntry Input string from the user.","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"     * @param list list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"    public static void addEvent(String inputEntry, TaskList list){","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"        String[] inputTokenized;","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"        String fromDate;","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"        String toDate;","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"            inputTokenized \u003d  inputEntry.split(\"/from \",2);","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"            String description \u003d inputTokenized[0];","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"            if(description.isBlank()){","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"                throw new BlankInputException(\"missing description\");","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"            toDate \u003d inputTokenized[1].split(\" /to \", 2)[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"            fromDate \u003d inputTokenized[1].split(\" /to \", 2)[0];","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"            list.add(new Event(description,fromDate,toDate));","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"Gotcha! Added this task:\");","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"            Display.printSingle(list.size(),list);","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"now there is: \"+ list.size() + \" item(s)\");","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"            Display.printDash();","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  you\u0027ve missed out [/from] or [/to] !\");","lastModifiedDate":"2023-11-12"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"        } catch(DateTimeParseException DTPE ){","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  that\u0027s not a valid date, please enter \u003c\u003c /from yyyy-mm-dd /to yyyy-mm-dd\u003e\u003e\");","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"        } catch (BlankInputException BIE) {","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  you\u0027ve missed out the description\");","lastModifiedDate":"2023-11-08"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"        } catch (DateException DE){","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  /from date shouldn\u0027t be later than /to date\");","lastModifiedDate":"2023-11-12"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":66}},{"path":"src/main/java/tim/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.util.Search;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"public class FindCommand extends Command{","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"     * Identifies the keyword to be searched.","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"     * Calls Search.strictSearchTaskList() to search for tasks matching keyword.","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"            String keyword \u003d token[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"            Search.strictSearchTaskList(keyword, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  please include valid keyword to find\");","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":24}},{"path":"src/main/java/tim/commands/ListOfCommands.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"public enum ListOfCommands {","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"    BYE,","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"    LIST,","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"    DATE,","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"    MARK,","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"    UNMARK,","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"    TODO,","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"    DEADLINE,","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"    EVENT,","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    DELETE,","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"    FIND,","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"    SEARCH,","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"    SNOOZE,","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    CLEAR,","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"    COUNTDOWN,","lastModifiedDate":"2023-11-12"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"    HELP;","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":20}},{"path":"src/main/java/tim/commands/MarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"public class MarkCommand extends Command{","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"     * Identifies index of task to be marked.","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"     * Calls TaskList.markUnmarkTask() to mark task.","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"        int index;","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"            index \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"            markUnmarkTask(index, true, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  missing input for index!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"        } catch (IllegalArgumentException IAE){","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  please include valid index of task to mark\");","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"     * Marks or unmarks the task at the given index from the list.","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"     * @param index Index of the task to be marked or unmarked.","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"     * @param markUnmark True if the task is to be marked, false if the task is to be unmarked.","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"     * @param list List of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"    static void markUnmarkTask(int index, boolean markUnmark, TaskList list){","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"        try{","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"            Task target \u003d list.get(index-1);","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"            if((target.getIsDone().equals(\"x\")) !\u003d markUnmark){","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"                if(markUnmark){","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"                    System.out.println(\"Nice! I\u0027ve marked this task as done:\");","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"                } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"                    System.out.println(\"OK, I\u0027ve marked this task as not done yet:\");","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"                }","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"                target.setIsDone(markUnmark);","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"                Display.printSingle(index,list);","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"            } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"                System.out.print(\"Task is already \" + (markUnmark ? \"marked\" : \"unmarked\") + \".\");","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"            Display.printDash();","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"        } catch (IndexOutOfBoundsException IOOBE){","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  please include valid index of task to mark\");","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":58}},{"path":"src/main/java/tim/commands/SearchCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.util.Search;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"public class SearchCommand extends Command{","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"     * Identifies the keyword to be searched.","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"     * Calls Search.strictSearchTaskList() to search for tasks containing keyword.","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"            String keyword \u003d token[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"            Search.searchTaskList(keyword, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  please include valid keyword to find\");","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":24}},{"path":"src/main/java/tim/commands/SnoozeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.exceptions.DateException;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Deadline;","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Event;","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":" * Represents a SnoozeCommand object.","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":" * The object snoozes a task by one week or postpones a task to a specified date.","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"public class SnoozeCommand extends Command{","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * Identifies index of task to be snoozed.","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     * If no date is specified, snooze by one week.","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     * Else, snooze to the specified date.","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     * trueIndex is the user facing index of the task.","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"     * index is the array index of the task.","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"            String[] temp \u003d token[1].split(\" \",2);","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"            int trueIndex \u003d Integer.parseInt(temp[0]);","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"            if(tasks.get(trueIndex-1).getType() \u003d\u003d \u0027T\u0027){","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"oh no!  ToDo tasks cannot be snoozed!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"                throw new Exception();","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"            if(temp.length\u003e1 \u0026\u0026 !temp[1].isBlank()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"                postPoneTask(trueIndex, temp[1], tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"Snoozed task \" + trueIndex + \", new end date set.\");","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"            } else {","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"                snoozeTaskOneWeek(trueIndex, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"Snoozed task \" + trueIndex + \" by one week.\");","lastModifiedDate":"2023-11-06"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"Updated Details: \");","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"            Display.printSingle(trueIndex, tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"            Display.printDash();","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"        } catch (Exception e) {","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  please check index or date to postpone to!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"     * Postpones the task at the given index from the list to the specified date.","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"     * @param index Index of the task to be postponed.","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"     * @param newDate The date to postpone the task to.","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"     * @throws DateException","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"    static void postPoneTask(int index, String newDate, TaskList tasks) throws DateException {","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"        index--;","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"        assert tasks.get(index).getType() !\u003d \u0027T\u0027 : \"assert ToDo tasks cannot be snoozed!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"        switch (tasks.get(index).getType()){","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"        case \u0027D\u0027:","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"            Deadline deadline \u003d (Deadline) tasks.get(index);","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"            deadline.postponeByDate(newDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"        case \u0027E\u0027:","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"            Event event \u003d (Event) tasks.get(index);","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"            event.postponeToDate(newDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"            break;","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"gweemelvin"},"content":"        case \u0027T\u0027:","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  ToDo tasks cannot be snoozed!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"        default:","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  unhandled error\");","lastModifiedDate":"2023-11-08"},{"lineNumber":72,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":74,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":75,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":76,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":77,"author":{"gitId":"gweemelvin"},"content":"     * Snoozes the task at the given index from the list by one week.","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":79,"author":{"gitId":"gweemelvin"},"content":"     * @param index Index of the task to be postponed.","lastModifiedDate":"2023-11-06"},{"lineNumber":80,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":81,"author":{"gitId":"gweemelvin"},"content":"     * @throws DateException","lastModifiedDate":"2023-11-06"},{"lineNumber":82,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":83,"author":{"gitId":"gweemelvin"},"content":"    static void snoozeTaskOneWeek(int index, TaskList tasks) throws DateException {","lastModifiedDate":"2023-11-06"},{"lineNumber":84,"author":{"gitId":"gweemelvin"},"content":"        index--;","lastModifiedDate":"2023-11-06"},{"lineNumber":85,"author":{"gitId":"gweemelvin"},"content":"        assert tasks.get(index).getType() !\u003d \u0027T\u0027 : \"assert ToDo tasks cannot be snoozed!\";","lastModifiedDate":"2023-11-06"},{"lineNumber":86,"author":{"gitId":"gweemelvin"},"content":"        switch (tasks.get(index).getType()){","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"gweemelvin"},"content":"            case \u0027D\u0027:","lastModifiedDate":"2023-11-06"},{"lineNumber":88,"author":{"gitId":"gweemelvin"},"content":"                Deadline deadline \u003d (Deadline) tasks.get(index);","lastModifiedDate":"2023-11-06"},{"lineNumber":89,"author":{"gitId":"gweemelvin"},"content":"                deadline.snoozeByDateByOneWeek();","lastModifiedDate":"2023-11-06"},{"lineNumber":90,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-06"},{"lineNumber":91,"author":{"gitId":"gweemelvin"},"content":"            case \u0027E\u0027:","lastModifiedDate":"2023-11-06"},{"lineNumber":92,"author":{"gitId":"gweemelvin"},"content":"                Event event \u003d (Event) tasks.get(index);","lastModifiedDate":"2023-11-06"},{"lineNumber":93,"author":{"gitId":"gweemelvin"},"content":"                event.snoozeToDateByOneWeek();","lastModifiedDate":"2023-11-06"},{"lineNumber":94,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-06"},{"lineNumber":95,"author":{"gitId":"gweemelvin"},"content":"            case \u0027T\u0027:","lastModifiedDate":"2023-11-06"},{"lineNumber":96,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"oh no!  ToDo tasks cannot be snoozed!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":97,"author":{"gitId":"gweemelvin"},"content":"            default:","lastModifiedDate":"2023-11-06"},{"lineNumber":98,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"oh no!  unhandled error\");","lastModifiedDate":"2023-11-08"},{"lineNumber":99,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":100,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":101,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":102,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":102}},{"path":"src/main/java/tim/commands/ToDoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.ToDo;","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"public class ToDoCommand extends Command{","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"     * Identifies ToDo\u0027s task name to be added.","lastModifiedDate":"2023-11-12"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"     * Calls TaskList.addToDo() to add task.","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"            String taskName \u003d token[1];","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"            addToDo(taskName, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no! what is the name of the task to complete?\");","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"     * Adds a task to the back of the list.","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"     * @param inputEntry The input string from the user.","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"    static void addToDo (String inputEntry, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"        tasks.add(new ToDo(inputEntry));","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Gotcha! Added this task:\");","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"        Display.printSingle(tasks.size(),tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"now there is: \"+ tasks.size() + \" item(s)\");","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"        Display.printDash();","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":38}},{"path":"src/main/java/tim/commands/UnmarkCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.commands;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"public class UnmarkCommand extends MarkCommand{","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"     * Identifies index of task to be unmarked.","lastModifiedDate":"2023-11-12"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"     * Calls TaskList.markUnmarkTask() to unmark task.","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"     * @param token The user input.","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"    public void execute(String[] token, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"        int index;","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"            index \u003d Integer.parseInt(token[1]);","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"            markUnmarkTask(index, false, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        } catch (ArrayIndexOutOfBoundsException AIO) {","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  missing input for index!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        } catch (IllegalArgumentException IAE){","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"oh no!  please include valid index of task to mark\");","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":26}},{"path":"src/main/java/tim/exceptions/BlankInputException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.exceptions;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"public class BlankInputException extends Exception{","lastModifiedDate":"2023-09-19"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"    public BlankInputException(String statement){","lastModifiedDate":"2023-09-19"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"        super (statement);","lastModifiedDate":"2023-09-19"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-19"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-19"}],"authorContributionMap":{"gweemelvin":8}},{"path":"src/main/java/tim/exceptions/DateException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.exceptions;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"public class DateException extends Exception{","lastModifiedDate":"2023-10-22"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"    public DateException(String statement){","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"        super (statement);","lastModifiedDate":"2023-10-22"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-22"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-22"}],"authorContributionMap":{"gweemelvin":8}},{"path":"src/main/java/tim/tasks/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.tasks;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.exceptions.DateException;","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" * Represents as a Deadline object.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" * This class is a subclass of Task.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":" * It has a description and a byDate.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"public class Deadline extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"    private LocalDate byDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * Creates a Deadline object.","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     * @param byDate the date of the deadline.","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"    public Deadline(String description, String byDate){","lastModifiedDate":"2023-10-31"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"        this.byDate \u003d LocalDate.parse(byDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"        this.setType(\u0027D\u0027);","lastModifiedDate":"2023-10-17"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"     * Postpones the deadline to the specified date.","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"     * New date must be after the original deadline.","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"     * @param extendedByDate the new date of the deadline.","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"     * @throws DateException if the new date is before the original deadline.","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"    public void postponeByDate(String extendedByDate) throws DateException {","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"        LocalDate parsedExtendedByDate \u003d LocalDate.parse(extendedByDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(extendedByDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"        if(parsedExtendedByDate.isBefore(this.byDate)){","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  New date is before the original deadline!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"            throw new DateException(\"improper date\");","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"        assert  parsedExtendedByDate !\u003d null : \"assert parsedExtendedByDate is not null\";","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"        this.byDate \u003d LocalDate.parse(extendedByDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"     * Snoozes the deadline by one week.","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"     * @throws DateException if the new date is before the original deadline","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"    public void snoozeByDateByOneWeek() throws DateException {","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"        assert  this.byDate !\u003d null : \"assert parsedExtendedByDate is not null\";","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"        this.byDate \u003d this.byDate.plusDays(ONE_WEEK);","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"    public LocalDate getByDate () {","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"        return this.byDate;","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"     * @return description of the task with the byDate.","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"    @Override","lastModifiedDate":"2023-09-10"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-10"},{"lineNumber":68,"author":{"gitId":"gweemelvin"},"content":"        return (super.getDescription() + \" (by: \" + byDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\");","lastModifiedDate":"2023-10-31"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"gweemelvin":70}},{"path":"src/main/java/tim/tasks/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.tasks;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.exceptions.DateException;","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import java.time.LocalDate;","lastModifiedDate":"2023-10-22"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2023-10-22"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" * Represents as an Event object.","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" * This class is a subclass of Task.","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":" * It has a description, a fromDate and a toDate.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"public class Event extends Task {","lastModifiedDate":"2023-09-10"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"    private LocalDate fromDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"    private LocalDate toDate;","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     * Creates an Event object.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-11-12"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"     * @param fromDate the date of the event.","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"     * @param toDate the date of the event.","lastModifiedDate":"2023-11-12"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"     * @throws DateException if the fromDate is after toDate.","lastModifiedDate":"2023-11-12"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"    public Event(String description, String fromDate, String toDate) throws DateException {","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        this.setType(\u0027E\u0027);","lastModifiedDate":"2023-10-17"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"        this.fromDate \u003d LocalDate.parse(fromDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"        this.toDate \u003d LocalDate.parse(toDate);","lastModifiedDate":"2023-10-31"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"        if(this.fromDate.isAfter(this.toDate)){","lastModifiedDate":"2023-10-31"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"            throw new DateException(\"improper date\");","lastModifiedDate":"2023-10-22"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-22"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"     * Postpones the event\u0027s toDate to the specified date.","lastModifiedDate":"2023-11-06"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"     * New toDate must be after the original ToDate.","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"     * @param extendedToDate the new date of the event.","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"     * @throws DateException if the new date is before the original event period.","lastModifiedDate":"2023-11-12"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"    public void postponeToDate(String extendedToDate) throws DateException {","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"        LocalDate parsedExtendedToDate \u003d LocalDate.parse(extendedToDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"        if(parsedExtendedToDate.isBefore(this.fromDate)","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"                || parsedExtendedToDate.isBefore(this.toDate) ){","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  New date is before the original event period!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"            throw new DateException(\"improper date\");","lastModifiedDate":"2023-11-06"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"        this.toDate \u003d LocalDate.parse(extendedToDate);","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"     * Snoozes the event by one week.","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"     * @throws DateException if the new date is before the original event period.","lastModifiedDate":"2023-11-12"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"    public void snoozeToDateByOneWeek() throws DateException {","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"        assert  this.toDate !\u003d null : \"assert parsedExtendedByDate is not null\";","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"        this.toDate \u003d this.toDate.plusDays(ONE_WEEK);","lastModifiedDate":"2023-11-06"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"    public LocalDate getFromDate () {","lastModifiedDate":"2023-11-06"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"        return this.fromDate;","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"    public LocalDate getToDate () {","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"gweemelvin"},"content":"        return this.toDate;","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":72,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":73,"author":{"gitId":"gweemelvin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":74,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":75,"author":{"gitId":"gweemelvin"},"content":"     * @return description of the task with the fromDate and toDate.","lastModifiedDate":"2023-11-03"},{"lineNumber":76,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":77,"author":{"gitId":"gweemelvin"},"content":"    @Override","lastModifiedDate":"2023-10-13"},{"lineNumber":78,"author":{"gitId":"gweemelvin"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-10"},{"lineNumber":79,"author":{"gitId":"gweemelvin"},"content":"        return (super.getDescription() + \"(from: \" + fromDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \" to: \" + toDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) +  \")\");","lastModifiedDate":"2023-10-31"},{"lineNumber":80,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":81,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":82,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":83,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"gweemelvin":83}},{"path":"src/main/java/tim/tasks/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.tasks;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import java.io.Serializable;","lastModifiedDate":"2023-10-13"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":" * Represents a Task object.","lastModifiedDate":"2023-11-03"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":" * Task is an abstract class that is the parent class of ToDo, Deadline and Event.","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" * It contains the description of the task, boolean of whether it is done and the type of task.","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"public abstract class Task implements Serializable {","lastModifiedDate":"2023-10-13"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"    private String description;","lastModifiedDate":"2023-10-17"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"    private char type;","lastModifiedDate":"2023-10-17"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    private boolean isDone;","lastModifiedDate":"2023-10-17"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"    final int ONE_WEEK \u003d 7;","lastModifiedDate":"2023-11-06"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * Creates a Task object","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     * @param description name of the task.","lastModifiedDate":"2023-11-12"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"    public Task(String description){","lastModifiedDate":"2023-09-09"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        this.description \u003d description;","lastModifiedDate":"2023-09-09"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        isDone \u003d false;","lastModifiedDate":"2023-09-09"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"        type \u003d \u0027-\u0027;","lastModifiedDate":"2023-09-10"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"     * Returns the description of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"     * @return description of the task.","lastModifiedDate":"2023-11-12"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"    public String getDescription() {","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"        return this.description;","lastModifiedDate":"2023-11-12"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"     * Returns the status of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"     * @return status of the task.","lastModifiedDate":"2023-11-12"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"    public String getIsDone(){","lastModifiedDate":"2023-09-09"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"        return isDone ? \"x\" : \" \";","lastModifiedDate":"2023-09-09"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-09"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"     * Sets IsDone state as mark or unmarked based on input.","lastModifiedDate":"2023-11-03"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"     * @param markUnmark boolean of whether the task is done.","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"    public void setIsDone(boolean markUnmark){","lastModifiedDate":"2023-09-09"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"        isDone \u003d markUnmark;","lastModifiedDate":"2023-09-09"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-09"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-09-10"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"     * Returns the type of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"     * @return type of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"    public char getType (){","lastModifiedDate":"2023-09-10"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"        return type;","lastModifiedDate":"2023-09-10"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"     * Sets the type of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"     * @param type type of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"    public void setType (char type){ this.type \u003d type; }","lastModifiedDate":"2023-10-17"},{"lineNumber":68,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-09"}],"authorContributionMap":{"gweemelvin":68}},{"path":"src/main/java/tim/tasks/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.tasks;","lastModifiedDate":"2023-10-15"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":" * Represents as a ToDo object.","lastModifiedDate":"2023-11-03"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":" * This class is a subclass of Task.","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":" * It has a description.","lastModifiedDate":"2023-10-31"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-11-03"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"public class ToDo extends Task {","lastModifiedDate":"2023-11-03"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"     * Creates a ToDo object.","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * @param description the description of the task.","lastModifiedDate":"2023-11-12"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"    public ToDo (String description){","lastModifiedDate":"2023-09-10"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"        super(description);","lastModifiedDate":"2023-09-10"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"        this.setType(\u0027T\u0027);","lastModifiedDate":"2023-10-17"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-10"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"     * @inheritDoc","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"     * @return description of the task.","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    @Override","lastModifiedDate":"2023-09-19"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"    public String getDescription(){","lastModifiedDate":"2023-09-19"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"        return super.getDescription() ;","lastModifiedDate":"2023-10-17"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-09-19"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-09-10"}],"authorContributionMap":{"gweemelvin":29}},{"path":"src/main/java/tim/ui/Display.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.ui;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.commands.ListOfCommands;","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-10-17"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-10-15"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import java.util.Date;","lastModifiedDate":"2023-10-15"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" * Represents as a Display object.","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":" * This class is responsible for printing messages and task list to the user.","lastModifiedDate":"2023-10-31"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"public class Display {","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * Prints the help message with list of usable commands.","lastModifiedDate":"2023-11-06"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"    static synchronized void printHelp(){","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Here are the list of commands you can use:\");","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        for (ListOfCommands command : ListOfCommands.values()) {","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(command);","lastModifiedDate":"2023-11-06"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-06"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"     * Prints the current date.","lastModifiedDate":"2023-11-03"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"    static void printDate(){","lastModifiedDate":"2023-10-17"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"|| Current Date: ||\");","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"        Date currentDate \u003d new Date();","lastModifiedDate":"2023-10-15"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(currentDate);","lastModifiedDate":"2023-10-15"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"     * Prints the Tim\u0027s logo.","lastModifiedDate":"2023-11-03"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"    public static void printLogo(){","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"        String logo \u003d       \" _______                 \\n\"","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"                        +   \"|__   __| [ ]  __  __    \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"                        +   \"   | |    | | |  \\\\/  |  \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"                        +   \"   | |    | | | |\\\\/| |  \\n\"","lastModifiedDate":"2023-10-15"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"                        +   \"   |_|    |_| |_|  |_|   \\n\";","lastModifiedDate":"2023-10-15"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Hello from\\n\" + logo);","lastModifiedDate":"2023-10-15"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"     * Prints Tim\u0027s greeting.","lastModifiedDate":"2023-11-03"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"    public static void greetings(){","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Hello I\u0027m Tim. \\nWhat can I do for you?\");","lastModifiedDate":"2023-10-15"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"     * Prints a dash.","lastModifiedDate":"2023-11-03"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"    public static void printDash(){","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"        System.out.println();","lastModifiedDate":"2023-10-15"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"____________________________________________________________\");","lastModifiedDate":"2023-10-15"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"     * Prints the entire list of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":68,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-05"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"    public static void printList(TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"gweemelvin"},"content":"        if (!tasks.isEmpty()){","lastModifiedDate":"2023-11-05"},{"lineNumber":72,"author":{"gitId":"gweemelvin"},"content":"            for(int i \u003d 1; i \u003c\u003d tasks.size() ; i++){","lastModifiedDate":"2023-11-05"},{"lineNumber":73,"author":{"gitId":"gweemelvin"},"content":"                printSingle(i,tasks);","lastModifiedDate":"2023-11-05"},{"lineNumber":74,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-15"},{"lineNumber":75,"author":{"gitId":"gweemelvin"},"content":"        } else {","lastModifiedDate":"2023-11-05"},{"lineNumber":76,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"There is no task in the list!\");","lastModifiedDate":"2023-11-05"},{"lineNumber":77,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":78,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":79,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":80,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":81,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":82,"author":{"gitId":"gweemelvin"},"content":"     * Prints the task at the given index of the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":83,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":84,"author":{"gitId":"gweemelvin"},"content":"     * @param index Index of the task in the list.","lastModifiedDate":"2023-11-03"},{"lineNumber":85,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-05"},{"lineNumber":86,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":87,"author":{"gitId":"gweemelvin"},"content":"    public static void printSingle(int index, TaskList tasks){","lastModifiedDate":"2023-11-07"},{"lineNumber":88,"author":{"gitId":"gweemelvin"},"content":"        if(index\u003etasks.size()){","lastModifiedDate":"2023-11-05"},{"lineNumber":89,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"There is no task at index \" + index + \"!\");","lastModifiedDate":"2023-11-05"},{"lineNumber":90,"author":{"gitId":"gweemelvin"},"content":"        } else {","lastModifiedDate":"2023-11-05"},{"lineNumber":91,"author":{"gitId":"gweemelvin"},"content":"            Task current \u003d tasks.get(index-1);","lastModifiedDate":"2023-11-05"},{"lineNumber":92,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(index + \". [\" + current.getType()  + \"] [\" + current.getIsDone() + \"] \" + current.getDescription() );","lastModifiedDate":"2023-10-15"},{"lineNumber":93,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":94,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":95,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":96,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":97,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":98,"author":{"gitId":"gweemelvin"},"content":"     * Prints the result of the search.","lastModifiedDate":"2023-11-05"},{"lineNumber":99,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":100,"author":{"gitId":"gweemelvin"},"content":"     * @param listOfMatchedIndex List of indexes of the tasks that matches the keywords.","lastModifiedDate":"2023-11-05"},{"lineNumber":101,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-05"},{"lineNumber":102,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":103,"author":{"gitId":"gweemelvin"},"content":"    public static void printSearchResult(ArrayList\u003cInteger\u003e listOfMatchedIndex, TaskList tasks){","lastModifiedDate":"2023-11-07"},{"lineNumber":104,"author":{"gitId":"gweemelvin"},"content":"        if(listOfMatchedIndex.isEmpty()){","lastModifiedDate":"2023-11-05"},{"lineNumber":105,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"No task matches the keywords!\");","lastModifiedDate":"2023-11-05"},{"lineNumber":106,"author":{"gitId":"gweemelvin"},"content":"        } else {","lastModifiedDate":"2023-11-05"},{"lineNumber":107,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"I found task\"","lastModifiedDate":"2023-11-05"},{"lineNumber":108,"author":{"gitId":"gweemelvin"},"content":"                    + (listOfMatchedIndex.size() \u003e 1 ? \"s\" : \"\")","lastModifiedDate":"2023-11-05"},{"lineNumber":109,"author":{"gitId":"gweemelvin"},"content":"                    + \" that contain the keywords:\");","lastModifiedDate":"2023-11-05"},{"lineNumber":110,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":111,"author":{"gitId":"gweemelvin"},"content":"            for(int i \u003d 0; i \u003c listOfMatchedIndex.size(); i++){","lastModifiedDate":"2023-11-05"},{"lineNumber":112,"author":{"gitId":"gweemelvin"},"content":"                printSingle(listOfMatchedIndex.get(i),tasks);","lastModifiedDate":"2023-11-05"},{"lineNumber":113,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":114,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":115,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-05"},{"lineNumber":116,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":117,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":118,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":119,"author":{"gitId":"gweemelvin"},"content":"     * Prints the result of the strict search.","lastModifiedDate":"2023-11-05"},{"lineNumber":120,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":121,"author":{"gitId":"gweemelvin"},"content":"     * @param listOfMatchedIndex List of indexes of the tasks that matches the keywords.","lastModifiedDate":"2023-11-05"},{"lineNumber":122,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-05"},{"lineNumber":123,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":124,"author":{"gitId":"gweemelvin"},"content":"    public static void printStrictSearchResult(ArrayList\u003cInteger\u003e listOfMatchedIndex, TaskList tasks){","lastModifiedDate":"2023-11-07"},{"lineNumber":125,"author":{"gitId":"gweemelvin"},"content":"        if(listOfMatchedIndex.isEmpty()){","lastModifiedDate":"2023-11-05"},{"lineNumber":126,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"No task matches the keywords!\");","lastModifiedDate":"2023-11-05"},{"lineNumber":127,"author":{"gitId":"gweemelvin"},"content":"        } else {","lastModifiedDate":"2023-11-05"},{"lineNumber":128,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"I found task\"","lastModifiedDate":"2023-11-05"},{"lineNumber":129,"author":{"gitId":"gweemelvin"},"content":"                    + (listOfMatchedIndex.size() \u003e 1 ? \"s\" : \"\")","lastModifiedDate":"2023-11-05"},{"lineNumber":130,"author":{"gitId":"gweemelvin"},"content":"                    + \" that exactly matches the keywords:\");","lastModifiedDate":"2023-11-05"},{"lineNumber":131,"author":{"gitId":"gweemelvin"},"content":"            for(int i \u003d 0; i \u003c listOfMatchedIndex.size(); i++){","lastModifiedDate":"2023-11-05"},{"lineNumber":132,"author":{"gitId":"gweemelvin"},"content":"                printSingle(listOfMatchedIndex.get(i),tasks);","lastModifiedDate":"2023-11-05"},{"lineNumber":133,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":134,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":135,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-05"},{"lineNumber":136,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":137,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":138,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-12"},{"lineNumber":139,"author":{"gitId":"gweemelvin"},"content":"     * Prints the days overdue/left from now till end date of task.","lastModifiedDate":"2023-11-12"},{"lineNumber":140,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-12"},{"lineNumber":141,"author":{"gitId":"gweemelvin"},"content":"     * @param days Number of days left.","lastModifiedDate":"2023-11-12"},{"lineNumber":142,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-12"},{"lineNumber":143,"author":{"gitId":"gweemelvin"},"content":"    public static void printCountdown(long days){","lastModifiedDate":"2023-11-12"},{"lineNumber":144,"author":{"gitId":"gweemelvin"},"content":"        if(days \u003e\u003d 0){","lastModifiedDate":"2023-11-12"},{"lineNumber":145,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"You have \" + days + \" days left!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":146,"author":{"gitId":"gweemelvin"},"content":"        } else {","lastModifiedDate":"2023-11-12"},{"lineNumber":147,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"You are \" + Math.abs(days) + \" days overdue!\");","lastModifiedDate":"2023-11-12"},{"lineNumber":148,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-12"},{"lineNumber":149,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-12"},{"lineNumber":150,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":151,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":152,"author":{"gitId":"gweemelvin"},"content":"     * Prints the goodbye message.","lastModifiedDate":"2023-11-03"},{"lineNumber":153,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":154,"author":{"gitId":"gweemelvin"},"content":"    static void goodbyeGreet(){","lastModifiedDate":"2023-10-17"},{"lineNumber":155,"author":{"gitId":"gweemelvin"},"content":"        System.out.println(\"Bye. Hope to see you again soon!\");","lastModifiedDate":"2023-10-15"},{"lineNumber":156,"author":{"gitId":"gweemelvin"},"content":"        printDash();","lastModifiedDate":"2023-11-03"},{"lineNumber":157,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":158,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"gweemelvin":158}},{"path":"src/main/java/tim/ui/Logic.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.ui;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.commands.*;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.util.Storage;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":" * Represents as a Logic object.","lastModifiedDate":"2023-11-03"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":" * Executes the actions based on the parsed user input from the parser.","lastModifiedDate":"2023-11-06"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":" * Saves the list of tasks to storage if list is modified.","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"public class Logic {","lastModifiedDate":"2023-10-17"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-17"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     * Executes the action based on the parsed user input from the parser.","lastModifiedDate":"2023-11-03"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-10-31"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     * @param command  Action to be executed.","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks  List of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"     * @param token User input split into an array of strings.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"    static void executeAction(String command, TaskList tasks, String[] token) {","lastModifiedDate":"2023-11-06"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"        int index;","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"        String taskName;","lastModifiedDate":"2023-10-31"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        try {","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"            ListOfCommands verifiedCommands \u003d ListOfCommands.valueOf(command.toUpperCase());","lastModifiedDate":"2023-11-06"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"            switch (verifiedCommands) {","lastModifiedDate":"2023-11-06"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"            case BYE:","lastModifiedDate":"2023-11-06"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"                Display.goodbyeGreet();","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"                System.exit(0);","lastModifiedDate":"2023-11-12"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"            case LIST:","lastModifiedDate":"2023-11-06"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"                Display.printList(tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"            case DATE:","lastModifiedDate":"2023-11-06"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"                Display.printDate();","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"            case MARK:","lastModifiedDate":"2023-11-06"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"                new MarkCommand().execute(token, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"                Storage.saveList(tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"            case UNMARK:","lastModifiedDate":"2023-11-06"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"                new UnmarkCommand().execute(token, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"                Storage.saveList(tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"            case TODO:","lastModifiedDate":"2023-11-06"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"                new ToDoCommand().execute(token, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"                Storage.saveList(tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"            case DEADLINE:","lastModifiedDate":"2023-11-06"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"                new DeadlineCommand().execute(token, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"                Storage.saveList(tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"            case EVENT:","lastModifiedDate":"2023-11-06"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"                new EventCommand().execute(token, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"                Storage.saveList(tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"            case DELETE:","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"                new DeleteCommand().execute(token, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"                Storage.saveList(tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-10-17"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"            case FIND:","lastModifiedDate":"2023-11-06"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"                new FindCommand().execute(token, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-05"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"            case SEARCH:","lastModifiedDate":"2023-11-06"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"                new SearchCommand().execute(token, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":68,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-06"},{"lineNumber":69,"author":{"gitId":"gweemelvin"},"content":"            case SNOOZE:","lastModifiedDate":"2023-11-06"},{"lineNumber":70,"author":{"gitId":"gweemelvin"},"content":"                new SnoozeCommand().execute(token, tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":71,"author":{"gitId":"gweemelvin"},"content":"                Storage.saveList(tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":72,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-06"},{"lineNumber":73,"author":{"gitId":"gweemelvin"},"content":"            case CLEAR:","lastModifiedDate":"2023-11-08"},{"lineNumber":74,"author":{"gitId":"gweemelvin"},"content":"                new ClearCommand().execute(token, tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":75,"author":{"gitId":"gweemelvin"},"content":"                Storage.saveList(tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":76,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-08"},{"lineNumber":77,"author":{"gitId":"gweemelvin"},"content":"            case HELP:","lastModifiedDate":"2023-11-06"},{"lineNumber":78,"author":{"gitId":"gweemelvin"},"content":"                Display.printHelp();","lastModifiedDate":"2023-11-08"},{"lineNumber":79,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-05"},{"lineNumber":80,"author":{"gitId":"gweemelvin"},"content":"            case COUNTDOWN:","lastModifiedDate":"2023-11-12"},{"lineNumber":81,"author":{"gitId":"gweemelvin"},"content":"                new CountdownCommand().execute(token, tasks);","lastModifiedDate":"2023-11-12"},{"lineNumber":82,"author":{"gitId":"gweemelvin"},"content":"                break;","lastModifiedDate":"2023-11-12"},{"lineNumber":83,"author":{"gitId":"gweemelvin"},"content":"            default:","lastModifiedDate":"2023-10-17"},{"lineNumber":84,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"oh no!  this should not happen!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":85,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-17"},{"lineNumber":86,"author":{"gitId":"gweemelvin"},"content":"        } catch (IllegalArgumentException IAE) {","lastModifiedDate":"2023-11-06"},{"lineNumber":87,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  I\u0027ve not learn to do this yet!!\");","lastModifiedDate":"2023-11-08"},{"lineNumber":88,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-17"},{"lineNumber":89,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-17"},{"lineNumber":90,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-17"}],"authorContributionMap":{"gweemelvin":90}},{"path":"src/main/java/tim/ui/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.ui;","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import java.util.Scanner;","lastModifiedDate":"2023-10-15"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":" * Represents as a Parser object.","lastModifiedDate":"2023-11-03"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" * This class is responsible for parsing the user input","lastModifiedDate":"2023-10-31"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" * before passing it to the Logic class to execute the action.","lastModifiedDate":"2023-10-31"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"public class Parser {","lastModifiedDate":"2023-10-15"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-03"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-03"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * Parses the user input and passes it to the Logic class to execute the action.","lastModifiedDate":"2023-11-03"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks List of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-03"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     public static void inputParser(TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"        String input \u003d \"init\" ;","lastModifiedDate":"2023-10-15"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        Scanner in \u003d new Scanner(System.in);","lastModifiedDate":"2023-10-15"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        while(in.hasNext()) {","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"            input \u003d in.nextLine().replaceAll(\"\\\\s+\", \" \");","lastModifiedDate":"2023-10-17"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"            input \u003d input.trim();","lastModifiedDate":"2023-10-17"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"            String[] token \u003d input.split(\" \", 2);","lastModifiedDate":"2023-10-15"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"            String mode \u003d token[0].toLowerCase();","lastModifiedDate":"2023-10-15"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"|| \" + mode + \" ||\");","lastModifiedDate":"2023-10-15"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"            Logic.executeAction(mode,tasks, token);","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-15"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"        in.close();","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-15"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-15"}],"authorContributionMap":{"gweemelvin":31}},{"path":"src/main/java/tim/util/Search.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.util;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-07"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.ui.Display;","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-11-05"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-05"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-11-05"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":" * Represents a Search class.","lastModifiedDate":"2023-11-05"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-11-05"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"public class Search {","lastModifiedDate":"2023-11-05"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"     * Searches and prints tasks from task list that matches the keywords.","lastModifiedDate":"2023-11-05"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"     * Partial Match is allowed.","lastModifiedDate":"2023-11-05"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-11-05"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks to search from.","lastModifiedDate":"2023-11-05"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"    public static void searchTaskList(String keyword, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"        ArrayList\u003cInteger\u003e listOfMatchedIndex \u003d new ArrayList\u003cInteger\u003e();;","lastModifiedDate":"2023-11-05"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2023-11-05"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"            Task x \u003d tasks.get(i);","lastModifiedDate":"2023-11-05"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"            int trueIndex \u003d i + 1;     // user-facing index of task in list (from 1)","lastModifiedDate":"2023-11-05"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"            if(x.getDescription().contains(keyword)){","lastModifiedDate":"2023-11-05"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"                listOfMatchedIndex.add(trueIndex);","lastModifiedDate":"2023-11-05"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"        Display.printSearchResult(listOfMatchedIndex, tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-11-05"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"     * Searches and prints tasks from task list that matches the keywords exactly.","lastModifiedDate":"2023-11-05"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-05"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"     * @param keyword The keyword to search for.","lastModifiedDate":"2023-11-05"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks The list of tasks to search from.","lastModifiedDate":"2023-11-05"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-11-05"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"    public static void strictSearchTaskList(String keyword, TaskList tasks){","lastModifiedDate":"2023-11-06"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"        ArrayList\u003cInteger\u003e listOfMatchedIndex \u003d new ArrayList\u003cInteger\u003e();;","lastModifiedDate":"2023-11-05"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"        for(int i \u003d 0; i \u003c tasks.size(); i++){","lastModifiedDate":"2023-11-05"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"            Task x \u003d tasks.get(i);","lastModifiedDate":"2023-11-05"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"            int trueIndex \u003d i + 1;     // user-facing index of task in list (from 1)","lastModifiedDate":"2023-11-05"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"            if(x.getDescription().equals(keyword)){","lastModifiedDate":"2023-11-05"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"                listOfMatchedIndex.add(trueIndex);","lastModifiedDate":"2023-11-05"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-05"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-11-05"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"        Display.printStrictSearchResult(listOfMatchedIndex, tasks);","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-05"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-05"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-05"}],"authorContributionMap":{"gweemelvin":49}},{"path":"src/main/java/tim/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.util;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-15"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import tim.util.TaskList;","lastModifiedDate":"2023-11-07"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import java.io.FileOutputStream;","lastModifiedDate":"2023-10-17"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2023-10-17"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import java.io.ObjectOutputStream;","lastModifiedDate":"2023-10-17"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"import java.io.ObjectInputStream;","lastModifiedDate":"2023-10-17"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"import java.io.IOException;","lastModifiedDate":"2023-10-17"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"import java.io.File;","lastModifiedDate":"2023-10-17"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-10-31"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":" * Represents as a Storage object.","lastModifiedDate":"2023-11-06"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":" * This class handles the saving and loading of the list of tasks.","lastModifiedDate":"2023-10-31"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-10-31"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"public class Storage {","lastModifiedDate":"2023-11-06"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-12"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"     * Loads the list of tasks from the file.","lastModifiedDate":"2023-11-03"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"     * @location ./src/main/data/list.data .","lastModifiedDate":"2023-11-12"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"     * @return List of tasks.","lastModifiedDate":"2023-11-03"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"     * @throws IOException If the file is not found.","lastModifiedDate":"2023-11-03"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"     * @throws ClassNotFoundException If the file is corrupted.","lastModifiedDate":"2023-11-03"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"    public static TaskList loadList () throws IOException, ClassNotFoundException{","lastModifiedDate":"2023-11-06"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        TaskList tasks \u003d new TaskList();","lastModifiedDate":"2023-11-06"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"        try{","lastModifiedDate":"2023-10-13"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"            File f \u003d new File(\"./data/\", \"list.data\");","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"            if(f.exists()) {","lastModifiedDate":"2023-10-13"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"                FileInputStream fin \u003d new FileInputStream(f);","lastModifiedDate":"2023-10-13"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"                ObjectInputStream ois \u003d new ObjectInputStream(fin);","lastModifiedDate":"2023-10-13"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"                tasks \u003d (TaskList) ois.readObject();","lastModifiedDate":"2023-11-06"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"                ois.close();","lastModifiedDate":"2023-10-13"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"            } else {","lastModifiedDate":"2023-10-13"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"                System.out.println(\"no saved list\");","lastModifiedDate":"2023-10-13"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-10-13"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"        } catch (IOException e){","lastModifiedDate":"2023-10-13"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  unable to read file\");","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"        }catch (ClassNotFoundException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  file is corrupted\");","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"        return tasks;","lastModifiedDate":"2023-11-06"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"    /**","lastModifiedDate":"2023-10-31"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"     * Saves the list of tasks to the file.","lastModifiedDate":"2023-11-03"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"     *","lastModifiedDate":"2023-11-03"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"     * @location ./src/main/data/list.data .","lastModifiedDate":"2023-11-12"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"     * @param tasks list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"     */","lastModifiedDate":"2023-10-31"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"    public static void saveList(TaskList tasks){","lastModifiedDate":"2023-11-07"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"        try{","lastModifiedDate":"2023-10-13"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"            if(!new File(\"./data/\").exists()){","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"                new File(\"./data/\").mkdir();","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"            }","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"            File f \u003d new File(\"./data/\", \"list.data\");","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"            FileOutputStream fos \u003d new FileOutputStream(f);","lastModifiedDate":"2023-10-13"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(fos);","lastModifiedDate":"2023-10-13"},{"lineNumber":59,"author":{"gitId":"gweemelvin"},"content":"            oos.writeObject(tasks);","lastModifiedDate":"2023-11-06"},{"lineNumber":60,"author":{"gitId":"gweemelvin"},"content":"            oos.close();","lastModifiedDate":"2023-10-13"},{"lineNumber":61,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":62,"author":{"gitId":"gweemelvin"},"content":"        } catch (IOException e) {","lastModifiedDate":"2023-10-13"},{"lineNumber":63,"author":{"gitId":"gweemelvin"},"content":"            System.out.println(\"oh no!  unable to create file\");","lastModifiedDate":"2023-11-08"},{"lineNumber":64,"author":{"gitId":"gweemelvin"},"content":"        }","lastModifiedDate":"2023-10-13"},{"lineNumber":65,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-10-13"},{"lineNumber":66,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-10-13"},{"lineNumber":67,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-10-13"}],"authorContributionMap":{"gweemelvin":67}},{"path":"src/main/java/tim/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim.util;","lastModifiedDate":"2023-11-07"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Task;","lastModifiedDate":"2023-11-06"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import java.util.ArrayList;","lastModifiedDate":"2023-11-06"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"/**","lastModifiedDate":"2023-11-06"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":" * Represents as a TaskList object.","lastModifiedDate":"2023-11-06"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":" * The object manages the list of tasks.","lastModifiedDate":"2023-11-06"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":" */","lastModifiedDate":"2023-11-06"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"public class TaskList extends ArrayList\u003cTask\u003e{","lastModifiedDate":"2023-11-06"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-06"}],"authorContributionMap":{"gweemelvin":11}},{"path":"src/test/java/tim/TimTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"package tim;","lastModifiedDate":"2023-11-04"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2023-11-04"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"import tim.exceptions.DateException;","lastModifiedDate":"2023-11-07"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.Event;","lastModifiedDate":"2023-11-04"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"import tim.tasks.ToDo;","lastModifiedDate":"2023-11-04"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2023-11-04"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"public class TimTest {","lastModifiedDate":"2023-11-04"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"    public void dummyTest() {","lastModifiedDate":"2023-11-04"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"        assertEquals(2, 2);","lastModifiedDate":"2023-11-04"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"    public void timTestTodo() {","lastModifiedDate":"2023-11-04"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"        ToDo todo \u003d new ToDo (\"test task name\");","lastModifiedDate":"2023-11-04"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"        assertEquals(\"test task name\", todo.getDescription());","lastModifiedDate":"2023-11-04"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-04"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"    @Test","lastModifiedDate":"2023-11-04"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"    public void timTestEvent() throws DateException {","lastModifiedDate":"2023-11-04"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"        Event testEvent \u003d new Event(\"test task name\", \"2020-10-10\", \"2021-10-11\");","lastModifiedDate":"2023-11-04"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"        assertEquals(\"test task name(from: Oct 10 2020 to: Oct 11 2021)\", testEvent.getDescription());","lastModifiedDate":"2023-11-04"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"        assertEquals(\u0027E\u0027, testEvent.getType());","lastModifiedDate":"2023-11-04"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"    }","lastModifiedDate":"2023-11-04"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"}","lastModifiedDate":"2023-11-04"}],"authorContributionMap":{"gweemelvin":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"gweemelvin"},"content":"TODO todo1","lastModifiedDate":"2023-11-08"},{"lineNumber":2,"author":{"gitId":"gweemelvin"},"content":"TODO","lastModifiedDate":"2023-11-08"},{"lineNumber":3,"author":{"gitId":"gweemelvin"},"content":"TODO todo2 2022-02-02","lastModifiedDate":"2023-11-08"},{"lineNumber":4,"author":{"gitId":"gweemelvin"},"content":"LIST","lastModifiedDate":"2023-11-08"},{"lineNumber":5,"author":{"gitId":"gweemelvin"},"content":"EVENT event1 /from 2022-02-02 /to 2022-02-03","lastModifiedDate":"2023-11-08"},{"lineNumber":6,"author":{"gitId":"gweemelvin"},"content":"EVENT","lastModifiedDate":"2023-11-08"},{"lineNumber":7,"author":{"gitId":"gweemelvin"},"content":"EVENT /from 2022-02-03 /to 2022-02-04","lastModifiedDate":"2023-11-08"},{"lineNumber":8,"author":{"gitId":"gweemelvin"},"content":"EVENT event2 /to 2022-02-05","lastModifiedDate":"2023-11-08"},{"lineNumber":9,"author":{"gitId":"gweemelvin"},"content":"EVENT event3 /from 2022-02-06","lastModifiedDate":"2023-11-08"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"EVENT event4 /from 2022-02-07 /to 2022-02-06","lastModifiedDate":"2023-11-08"},{"lineNumber":11,"author":{"gitId":"gweemelvin"},"content":"LIST","lastModifiedDate":"2023-11-08"},{"lineNumber":12,"author":{"gitId":"gweemelvin"},"content":"DEADLINE deadline1 /by 2000-01-01","lastModifiedDate":"2023-11-08"},{"lineNumber":13,"author":{"gitId":"gweemelvin"},"content":"DEADLINE","lastModifiedDate":"2023-11-08"},{"lineNumber":14,"author":{"gitId":"gweemelvin"},"content":"DEADLINE /by 2023-01-07","lastModifiedDate":"2023-11-08"},{"lineNumber":15,"author":{"gitId":"gweemelvin"},"content":"DEADLINE deadline2","lastModifiedDate":"2023-11-08"},{"lineNumber":16,"author":{"gitId":"gweemelvin"},"content":"LIST","lastModifiedDate":"2023-11-08"},{"lineNumber":17,"author":{"gitId":"gweemelvin"},"content":"LIST BLAH","lastModifiedDate":"2023-11-08"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"LIST BLAH BLAH BLAH","lastModifiedDate":"2023-11-08"},{"lineNumber":19,"author":{"gitId":"gweemelvin"},"content":"MARK 1","lastModifiedDate":"2023-11-08"},{"lineNumber":20,"author":{"gitId":"gweemelvin"},"content":"MARK","lastModifiedDate":"2023-11-08"},{"lineNumber":21,"author":{"gitId":"gweemelvin"},"content":"MARK -1","lastModifiedDate":"2023-11-08"},{"lineNumber":22,"author":{"gitId":"gweemelvin"},"content":"MARK 9999","lastModifiedDate":"2023-11-08"},{"lineNumber":23,"author":{"gitId":"gweemelvin"},"content":"MARK non-integer value","lastModifiedDate":"2023-11-08"},{"lineNumber":24,"author":{"gitId":"gweemelvin"},"content":"MARK 1 2 3","lastModifiedDate":"2023-11-08"},{"lineNumber":25,"author":{"gitId":"gweemelvin"},"content":"LIST","lastModifiedDate":"2023-11-08"},{"lineNumber":26,"author":{"gitId":"gweemelvin"},"content":"UNMARK 1","lastModifiedDate":"2023-11-08"},{"lineNumber":27,"author":{"gitId":"gweemelvin"},"content":"UNMARK 1","lastModifiedDate":"2023-11-08"},{"lineNumber":28,"author":{"gitId":"gweemelvin"},"content":"UNMARK","lastModifiedDate":"2023-11-08"},{"lineNumber":29,"author":{"gitId":"gweemelvin"},"content":"UNMARK -1","lastModifiedDate":"2023-11-08"},{"lineNumber":30,"author":{"gitId":"gweemelvin"},"content":"UNMARK 9999","lastModifiedDate":"2023-11-08"},{"lineNumber":31,"author":{"gitId":"gweemelvin"},"content":"UNMARK non-integer value","lastModifiedDate":"2023-11-08"},{"lineNumber":32,"author":{"gitId":"gweemelvin"},"content":"UNMARK 2 3","lastModifiedDate":"2023-11-08"},{"lineNumber":33,"author":{"gitId":"gweemelvin"},"content":"DELETE 2","lastModifiedDate":"2023-11-08"},{"lineNumber":34,"author":{"gitId":"gweemelvin"},"content":"DELETE","lastModifiedDate":"2023-11-08"},{"lineNumber":35,"author":{"gitId":"gweemelvin"},"content":"DELETE -1","lastModifiedDate":"2023-11-08"},{"lineNumber":36,"author":{"gitId":"gweemelvin"},"content":"DELETE 9999","lastModifiedDate":"2023-11-08"},{"lineNumber":37,"author":{"gitId":"gweemelvin"},"content":"DELETE non-integer value","lastModifiedDate":"2023-11-08"},{"lineNumber":38,"author":{"gitId":"gweemelvin"},"content":"SNOOZE 2","lastModifiedDate":"2023-11-08"},{"lineNumber":39,"author":{"gitId":"gweemelvin"},"content":"SNOOZE 2 2300-01-01","lastModifiedDate":"2023-11-08"},{"lineNumber":40,"author":{"gitId":"gweemelvin"},"content":"SNOOZE 1","lastModifiedDate":"2023-11-08"},{"lineNumber":41,"author":{"gitId":"gweemelvin"},"content":"SNOOZE","lastModifiedDate":"2023-11-08"},{"lineNumber":42,"author":{"gitId":"gweemelvin"},"content":"SNOOZE -1","lastModifiedDate":"2023-11-08"},{"lineNumber":43,"author":{"gitId":"gweemelvin"},"content":"SNOOZE 9999","lastModifiedDate":"2023-11-08"},{"lineNumber":44,"author":{"gitId":"gweemelvin"},"content":"SNOOZE non-integer value","lastModifiedDate":"2023-11-08"},{"lineNumber":45,"author":{"gitId":"gweemelvin"},"content":"SNOOZE 1 2 3","lastModifiedDate":"2023-11-08"},{"lineNumber":46,"author":{"gitId":"gweemelvin"},"content":"SEARCH tod","lastModifiedDate":"2023-11-08"},{"lineNumber":47,"author":{"gitId":"gweemelvin"},"content":"SEARCH event1","lastModifiedDate":"2023-11-08"},{"lineNumber":48,"author":{"gitId":"gweemelvin"},"content":"SEARCH this doesn\u0027t exist","lastModifiedDate":"2023-11-08"},{"lineNumber":49,"author":{"gitId":"gweemelvin"},"content":"SEARCH 123","lastModifiedDate":"2023-11-08"},{"lineNumber":50,"author":{"gitId":"gweemelvin"},"content":"FIND tod","lastModifiedDate":"2023-11-08"},{"lineNumber":51,"author":{"gitId":"gweemelvin"},"content":"FIND todo1","lastModifiedDate":"2023-11-08"},{"lineNumber":52,"author":{"gitId":"gweemelvin"},"content":"FIND this doesn\u0027t exist","lastModifiedDate":"2023-11-08"},{"lineNumber":53,"author":{"gitId":"gweemelvin"},"content":"FIND 123","lastModifiedDate":"2023-11-08"},{"lineNumber":54,"author":{"gitId":"gweemelvin"},"content":"CLEAR","lastModifiedDate":"2023-11-08"},{"lineNumber":55,"author":{"gitId":"gweemelvin"},"content":"LIST","lastModifiedDate":"2023-11-08"},{"lineNumber":56,"author":{"gitId":"gweemelvin"},"content":"BYE","lastModifiedDate":"2023-11-08"},{"lineNumber":57,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"},{"lineNumber":58,"author":{"gitId":"gweemelvin"},"content":"","lastModifiedDate":"2023-11-08"}],"authorContributionMap":{"gweemelvin":58}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF","lastModifiedDate":"2020-05-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"REM create bin directory if it doesn\u0027t exist","lastModifiedDate":"2020-05-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin","lastModifiedDate":"2020-05-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"REM delete output from previous run","lastModifiedDate":"2020-05-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"if exist ACTUAL.TXT del ACTUAL.TXT","lastModifiedDate":"2020-08-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"REM compile the code into the bin folder","lastModifiedDate":"2020-05-25"},{"lineNumber":10,"author":{"gitId":"gweemelvin"},"content":"javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\tim\\Tim.java","lastModifiedDate":"2023-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 (","lastModifiedDate":"2020-05-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********","lastModifiedDate":"2020-05-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    exit /b 1","lastModifiedDate":"2020-05-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":")","lastModifiedDate":"2020-05-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"REM no error here, errorlevel \u003d\u003d 0","lastModifiedDate":"2020-05-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT","lastModifiedDate":"2020-05-25"},{"lineNumber":18,"author":{"gitId":"gweemelvin"},"content":"java -classpath ..\\bin tim.Tim \u003c input.txt \u003e ACTUAL.TXT","lastModifiedDate":"2023-11-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"REM compare the output to the expected output","lastModifiedDate":"2020-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT","lastModifiedDate":"2020-05-25"}],"authorContributionMap":{"-":19,"gweemelvin":2}}]
